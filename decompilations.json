{
    "FUN_00012620": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nundefined4 FUN_00012620(undefined4 param_1,undefined4 *param_2)\n\n{\n  longlong lVar1;\n  undefined2 uVar2;\n  FILE *__stream;\n  char *pcVar3;\n  size_t sVar4;\n  ushort **ppuVar5;\n  long lVar6;\n  void *pvVar7;\n  void *pvVar8;\n  uint uVar9;\n  int *piVar10;\n  uint *puVar11;\n  uint uVar12;\n  uint uVar13;\n  uint uVar14;\n  uint uVar15;\n  uint uVar16;\n  int iVar17;\n  pthread_mutex_t *__mutex;\n  uint *puVar18;\n  uint uVar19;\n  int iVar20;\n  int iVar21;\n  undefined4 uVar22;\n  int iVar23;\n  undefined4 *puVar24;\n  undefined4 uVar25;\n  bool bVar26;\n  double dVar27;\n  undefined8 uVar28;\n  longlong lVar29;\n  int iVar31;\n  longlong lVar30;\n  undefined4 uVar32;\n  char *pcVar33;\n  uint local_a68;\n  uint local_a64;\n  uint local_a40;\n  uint local_a3c [3];\n  undefined auStack_a30 [12];\n  uint local_a24 [10];\n  pthread_attr_t pStack_9fc;\n  sigaction local_9bc;\n  undefined4 local_930;\n  undefined4 local_92c;\n  undefined4 local_928;\n  undefined4 uStack_924;\n  undefined4 uStack_920;\n  undefined4 uStack_91c;\n  undefined4 local_918;\n  undefined4 uStack_914;\n  undefined4 uStack_910;\n  undefined4 uStack_90c;\n  undefined auStack_908 [12];\n  undefined auStack_8fc [204];\n  undefined4 local_830;\n  undefined4 local_82c;\n  undefined4 local_828;\n  undefined4 local_824;\n  undefined4 local_820;\n  uint local_81c;\n  undefined4 local_818;\n  undefined4 local_814;\n  \n  local_9bc.__sigaction_handler.sa_handler = (__sighandler_t)&LAB_00028878;\n  local_9bc.sa_flags = 0;\n  sigemptyset(&local_9bc.sa_mask);\n  sigaction(0xf,&local_9bc,(sigaction *)&DAT_00592464);\n  sigaction(2,&local_9bc,(sigaction *)&DAT_00594524);\n  sigaction(6,&local_9bc,(sigaction *)&DAT_0058e35c);\n  sem_init((sem_t *)&DAT_00080f40,0,0);\n  FUN_00029070(&DAT_00590408,&DAT_000635b4,0xad3);\n  uVar22 = *param_2;\n  memset(&local_930,0,0x100);\n  memset(&pStack_9fc,0,0x40);\n  snprintf(pStack_9fc.__size,0x40,\"pidof %s\",uVar22);\n  __stream = popen(pStack_9fc.__size,\"r\");\n  if (__stream != (FILE *)0x0) {\nLAB_00012730:\n    do {\n      pcVar3 = fgets((char *)&local_930,0x100,__stream);\n      if (pcVar3 == (char *)0x0) goto LAB_00012828;\n      if (DAT_00482a5d != '\\0') {\n        if (((DAT_00590404 == '\\0') && (DAT_00482a5c == '\\0')) && (DAT_0007eba0 < 7)) {\nLAB_000127d8:\n          if ((DAT_00482a5c == '\\0') && (DAT_0007eba0 < 7)) goto LAB_00012730;\n        }\n        else {\n          snprintf((char *)&local_830,0x800,\"pidof %s command result is: %s\\n\",uVar22,&local_930);\n          FUN_0002e584(7,&local_830);\n          if (DAT_00482a5d == '\\0') goto LAB_00012730;\n          if (DAT_00590404 == '\\0') goto LAB_000127d8;\n        }\n        sVar4 = strlen((char *)&local_930);\n        snprintf((char *)&local_830,0x800,\"strlen is: %d\\n\",sVar4);\n        FUN_0002e584(7,&local_830,0);\n      }\n    } while( true );\n  }\n  if ((DAT_00482a5d != '\\0') &&\n     (((DAT_00590404 != '\\0' || (DAT_00482a5c != '\\0')) || (6 < DAT_0007eba0)))) {\n    snprintf((char *)&local_830,0x800,\" app-service:%s Not Found!!!\",uVar22);\n    FUN_0002e584(7,&local_830,0);\n  }\nLAB_000129f0:\n  FUN_00052f1c(\"/etc/bitmain_category.conf\");\n  pvVar7 = calloc(1,0x1664);\n  DAT_00592460 = pvVar7;\n  pvVar8 = calloc(1,0x188);\n  DAT_0058e354 = pvVar8;\n  DAT_0058e34c = calloc(1,0x40);\n  *(void **)((int)DAT_0058e34c + 0x24) = pvVar8;\n  *(void **)((int)pvVar8 + 0x14) = pvVar7;\n  FUN_0002bc2c(param_1,param_2);\n  FUN_0002aef4();\n  iVar20 = FUN_0002823c();\n  if (iVar20 != 0) {\n    FUN_00031d58(4,\"socket init failed!\");\n  }\n  iVar20 = FUN_000339ec();\n  if (iVar20 != 0) {\n    FUN_00031d58(4,\"basic init failed!\");\n  }\n  DAT_00590400 = calloc(1,0x40);\n  pthread_attr_init(&pStack_9fc);\n  pthread_attr_setstacksize(&pStack_9fc,0x200000);\n  iVar20 = FUN_00030b10(DAT_00590400,&pStack_9fc,&DAT_000283e4);\n  if ((iVar20 != 0) && (((DAT_00590404 != '\\0' || (DAT_00482a5c != '\\0')) || (2 < DAT_0007eba0)))) {\n    snprintf((char *)&local_830,0x800,\"%s: create thread for get api status failed\\n\",&DAT_000635bc)\n    ;\n    FUN_0002e584(3,&local_830,0);\n  }\n  pthread_detach(*(pthread_t *)((int)DAT_00590400 + 0xc));\n  iVar17 = *(int *)(*(int *)((int)DAT_0058e34c + 0x24) + 0x14);\n  iVar20 = pthread_mutex_init((pthread_mutex_t *)(iVar17 + 0x70),(pthread_mutexattr_t *)0x0);\n  if (iVar20 != 0) {\n    FUN_00028fb8(\"bitmain_soc_prepare\",0x78d);\n  }\n  FUN_00029070(iVar17,\"bitmain_soc_prepare\",0x78e);\n  FUN_00029070(iVar17 + 0x180,\"bitmain_soc_prepare\",0x78f);\n  FUN_00029070(iVar17 + 0x8b8,\"bitmain_soc_prepare\",0x790);\n  FUN_00029070(iVar17 + 0xff0,\"bitmain_soc_prepare\",0x791);\n  memset(&local_830,0,0x20);\n  local_830 = CONCAT22(0x1a,(undefined2)local_830);\n  local_830._0_1_ = 'Q';\n  local_82c = CONCAT31((int3)(local_82c >> 8),\n                       ~((byte)~(byte)(((local_82c & 0xfd | (DAT_00080f64 & 1) << 1) << 0x1e) >>\n                                      0x18) >> 6)) | 0x700;\n  local_828._2_1_ = (char)DAT_00080f68;\n  local_828._0_2_ = 0x3609;\n  local_828._3_1_ = 'P';\n  local_820._0_2_ = 0xa0a;\n  local_818 = CONCAT22(400,(undefined2)local_818);\n  local_814 = CONCAT22(local_814._2_2_,600);\n  local_824._2_2_ = (short)DAT_0007eb50;\n  local_824._0_2_ = (short)DAT_0007eb4c;\n  local_818 = CONCAT31(local_818._1_3_,4);\n  uVar2 = FUN_00031590(&local_830,0x1e);\n  local_814 = CONCAT22(uVar2,(undefined2)local_814);\n  uVar22 = local_820;\n  uVar12 = local_81c;\n  iVar20 = FUN_00034828(local_830,local_82c,local_828,local_824,local_820,local_81c,local_818,\n                        local_814);\n  if (iVar20 == 0) {\n    FUN_00031d58(4,\"soc init failed!\");\n  }\n  FUN_00031d58(2,0);\n  pthread_mutex_lock((pthread_mutex_t *)&DAT_00080f20);\n  if (DAT_00080f38 != 0) {\n    if (3 < DAT_0007eb9c) {\n      local_830._0_1_ = 's';\n      local_830._1_1_ = 't';\n      local_830._2_1_ = 'a';\n      local_830._3_1_ = 'r';\n      local_82c._0_1_ = 't';\n      local_82c._1_1_ = ' ';\n      local_82c._2_1_ = 't';\n      local_82c._3_1_ = 'h';\n      local_828._0_1_ = 'e';\n      local_828._1_1_ = ' ';\n      local_828._2_1_ = 'c';\n      local_828._3_1_ = 'a';\n      local_824._0_1_ = 'c';\n      local_824._1_1_ = 'h';\n      local_824._2_1_ = 'e';\n      local_824._3_1_ = 'd';\n      local_820._0_1_ = ' ';\n      local_820._1_1_ = 'j';\n      local_820._2_1_ = 'o';\n      local_820._3_1_ = 'b';\n      local_81c = local_81c & 0xffffff00;\n      FUN_0002e584(3,&local_830,0);\n    }\n    FUN_0002b330(DAT_00080f3c,DAT_00080f38);\n  }\n  pthread_mutex_unlock((pthread_mutex_t *)&DAT_00080f20);\n  FUN_00032ca8();\n  lVar30 = CONCAT44(uVar12,uVar22);\n  do {\n    pvVar7 = DAT_0058e34c;\n    if (*(char *)((int)DAT_0058e354 + 0x16c) != '\\0') {\n      sem_destroy((sem_t *)&DAT_00080f40);\n      FUN_000194dc();\n      FUN_00053604();\n      return 0;\n    }\n    __mutex = *(pthread_mutex_t **)(*(int *)((int)DAT_0058e34c + 0x24) + 0x14);\n    pthread_mutex_lock((pthread_mutex_t *)&DAT_004fcad0);\n    iVar20 = pthread_mutex_lock(__mutex);\n    if (iVar20 != 0) {\n      piVar10 = __errno_location();\n      pcVar3 = \"bmminer.c\";\n      pcVar33 = \"bitmain_c5_scanhash\";\n      snprintf((char *)&local_830,0x800,\"WTF MUTEX ERROR ON LOCK! errno=%d in %s %s():%d\",*piVar10,\n               \"bmminer.c\",\"bitmain_c5_scanhash\",0x80f);\n      FUN_0002e584(3,&local_830,1);\n      lVar30 = CONCAT44(pcVar33,pcVar3);\n    }\n    iVar20 = pthread_rwlock_rdlock((pthread_rwlock_t *)(__mutex + 1));\n    if (iVar20 != 0) {\n      piVar10 = __errno_location();\n      pcVar3 = \"bmminer.c\";\n      pcVar33 = \"bitmain_c5_scanhash\";\n      snprintf((char *)&local_830,0x800,\"WTF RDLOCK ERROR ON LOCK! errno=%d in %s %s():%d\",*piVar10,\n               \"bmminer.c\",\"bitmain_c5_scanhash\",0x80f);\n      FUN_0002e584(3,&local_830,1);\n      lVar30 = CONCAT44(pcVar33,pcVar3);\n    }\n    iVar20 = pthread_mutex_unlock(__mutex);\n    if (iVar20 != 0) {\n      piVar10 = __errno_location();\n      pcVar3 = \"bmminer.c\";\n      pcVar33 = \"bitmain_c5_scanhash\";\n      snprintf((char *)&local_830,0x800,\"WTF MUTEX ERROR ON UNLOCK! errno=%d in %s %s():%d\",*piVar10\n               ,\"bmminer.c\",\"bitmain_c5_scanhash\",0x80f);\n      FUN_0002e584(3,&local_830,1);\n      lVar30 = CONCAT44(pcVar33,pcVar3);\n    }\n    local_a68 = 0;\n    local_a64 = 0;\nLAB_00012da8:\n    if (DAT_005955d0 != 0) {\n      while( true ) {\n        iVar20 = 0;\n        uVar16 = *(uint *)(&DAT_005955e8 + DAT_005955cc * 0x3c);\n        iVar21 = *(int *)(&DAT_005955d4 + DAT_005955cc * 0x3c);\n        uVar22 = *(undefined4 *)(&DAT_005955e0 + DAT_005955cc * 0x3c);\n        uVar25 = *(undefined4 *)(&DAT_005955e4 + DAT_005955cc * 0x3c);\n        iVar17 = *(int *)(&DAT_005955ec + DAT_005955cc * 0x3c);\n        iVar23 = *(int *)(&DAT_005955d8 + DAT_005955cc * 0x3c);\n        uVar12 = *(int *)(&DAT_005955dc + DAT_005955cc * 0x3c) << 0x18 |\n                 *(uint *)(&DAT_005955dc + DAT_005955cc * 0x3c) >> 0x18 |\n                 *(uint *)(&DAT_005955dc + DAT_005955cc * 0x3c) >> 8 & 0xff00 |\n                 (*(uint *)(&DAT_005955dc + DAT_005955cc * 0x3c) & 0xff00) << 8;\n        do {\n          iVar20 = iVar20 + 1;\n        } while (iVar20 != 0x20);\n        if ((DAT_00482a5d != '\\0') &&\n           (((DAT_00590404 != '\\0' || (DAT_00482a5c != '\\0')) || (6 < DAT_0007eba0)))) {\n          iVar20 = iVar21;\n          iVar31 = iVar23;\n          snprintf((char *)&local_830,0x800,\n                   \"%s: job_id:0x%x   work_id:0x%x   nonce2:0x%llx nonce3:0x%x   version:0x%x\\n\",\n                   \"bitmain_c5_scanhash\",iVar21,iVar23,uVar22,uVar25,uVar16,uVar12);\n          FUN_0002e584(7,&local_830,0);\n          lVar30 = CONCAT44(iVar31,iVar20);\n        }\n        uVar32 = (undefined4)((ulonglong)lVar30 >> 0x20);\n        uVar13 = DAT_005955cc;\n        if (0x1fd < DAT_005955cc) {\n          uVar13 = 0;\n        }\n        puVar18 = (uint *)((int)__mutex + 0xac);\n        if (DAT_005955cc < 0x1fe) {\n          uVar13 = uVar13 + 1;\n        }\n        DAT_005955d0 = DAT_005955d0 + -1;\n        DAT_005955cc = uVar13;\n        if ((uVar16 != DAT_00080f6c) || (iVar23 != DAT_00080f70)) break;\n        iVar20 = FUN_0001e29c(iVar17);\n        if (iVar20 != 1) goto LAB_00012da8;\n        if ((DAT_00482a5d != '\\0') &&\n           (((DAT_00590404 != '\\0' || (DAT_00482a5c != '\\0')) || (6 < DAT_0007eba0)))) {\n          local_830._0_1_ = 'r';\n          local_830._1_1_ = 'e';\n          local_830._2_1_ = 'e';\n          local_830._3_1_ = 'p';\n          local_82c._0_1_ = 'a';\n          local_82c._1_1_ = 't';\n          local_82c._2_1_ = ' ';\n          local_82c._3_1_ = 'n';\n          local_828._0_1_ = 'o';\n          local_828._1_1_ = 'n';\n          local_828._2_1_ = 'c';\n          local_828._3_1_ = 'e';\n          local_824._0_1_ = ' ';\n          local_824._1_1_ = 'e';\n          local_824._2_1_ = 'r';\n          local_824._3_1_ = 'r';\n                    /* WARNING: Ignoring partial resolution of indirect */\n          local_820._0_2_ = 0x726f;\n          FUN_0002e584(7,&local_830,0);\n        }\nLAB_00013038:\n        FUN_0002a3c4(pvVar7);\n        FUN_0001e6e0(iVar17);\n        if (DAT_005955d0 == 0) goto LAB_00013054;\n      }\n      DAT_00080f6c = uVar16;\n      DAT_00080f70 = iVar23;\n      if (DAT_00482a5d == '\\0') {\nLAB_00013208:\n        if (DAT_0007eab8 - iVar21 == 1) goto LAB_000136bc;\n        if (DAT_0007eab8 != iVar21) {\n          if (DAT_0007eab8 - iVar21 != 2) {\n            if ((DAT_00590404 == '\\0') && (DAT_00482a5c == '\\0')) {\nLAB_00012ff0:\n              if (2 < DAT_0007eba0) goto LAB_00012ffc;\n            }\n            else {\nLAB_00012ffc:\n              snprintf((char *)&local_830,0x800,\"%s: job_id non\\'t found ...\\n\",\n                       \"bitmain_c5_scanhash\",(int)lVar30,(int)((ulonglong)lVar30 >> 0x20));\n              FUN_0002e584(3,&local_830,0);\n            }\n            iVar20 = FUN_0001e29c(iVar17);\n            if (iVar20 == 1) goto LAB_00013038;\n            goto LAB_00012da8;\n          }\nLAB_00013228:\n          puVar18 = (uint *)((int)__mutex + 0xf1c);\n        }\n      }\n      else {\n        if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (6 < DAT_0007eba0)) {\n          iVar20 = iVar17 + 1;\n          snprintf((char *)&local_830,0x800,\"%s: Chain ID J%d ...\\n\",\"bitmain_c5_scanhash\",iVar20,\n                   uVar32);\n          FUN_0002e584(7,&local_830,0);\n          lVar30 = CONCAT44(uVar32,iVar20);\n          if (DAT_00482a5d != '\\0') {\n            iVar20 = DAT_0007eab8 - iVar21;\n            if (DAT_00590404 == '\\0') goto LAB_00012fbc;\n            goto LAB_000131d0;\n          }\n          goto LAB_00013208;\n        }\n        iVar20 = DAT_0007eab8 - iVar21;\nLAB_00012fbc:\n        if ((DAT_00482a5c != '\\0') || (6 < DAT_0007eba0)) {\nLAB_000131d0:\n          iVar23 = DAT_0007eab8;\n          iVar31 = iVar21;\n          snprintf((char *)&local_830,0x800,\"%s: given_id:%d job_id:%d switch:%d  ...\\n\",\n                   \"bitmain_c5_scanhash\",DAT_0007eab8,iVar21,iVar20);\n          FUN_0002e584(7,&local_830,0);\n          lVar30 = CONCAT44(iVar31,iVar23);\n          goto LAB_00013208;\n        }\n        if (iVar20 != 1) {\n          if (iVar20 != 0) {\n            if (iVar20 != 2) goto LAB_00012ff0;\n            goto LAB_00013228;\n          }\n          goto LAB_00013234;\n        }\nLAB_000136bc:\n        puVar18 = (uint *)((int)__mutex + 0x7e4);\n      }\nLAB_00013234:\n      FUN_0002a264(pvVar7,&local_a40,puVar18,puVar18,uVar22,uVar25,uVar12);\n      uVar12 = local_a40;\n      uVar13 = *puVar18;\n      uVar28 = *(undefined8 *)(local_a40 + 0x138);\n      lVar29 = FUN_00060180((int)uVar28,(int)((ulonglong)uVar28 >> 0x20));\n      lVar1 = CONCAT44(DAT_00080f7c,DAT_00080f78);\n      lVar30 = CONCAT44(uVar25,uVar22);\n      iVar21 = (int)((ulonglong)lVar29 >> 0x20);\n      iVar20 = (int)lVar29;\n      if (iVar21 != DAT_00080f7c || iVar20 != DAT_00080f78) {\n        uVar14 = 0;\n        uVar15 = 0;\n        lVar30 = lVar29;\n        if (lVar29 == 0) {\n          DAT_00080f84 = 0xffffffff;\n          DAT_00080f80 = DAT_00080f84;\n        }\n        else {\n          do {\n            DAT_00080f80 = uVar15;\n            DAT_00080f84 = uVar14;\n            uVar19 = (uint)((ulonglong)lVar30 >> 0x21);\n            uVar9 = (uint)((byte)((ulonglong)lVar30 >> 0x20) & 1) << 0x1f | (uint)lVar30 >> 1;\n            lVar30 = CONCAT44(uVar19,uVar9);\n            uVar14 = DAT_00080f84 + (0xfffffffe < DAT_00080f80);\n            uVar15 = DAT_00080f80 + 1;\n          } while ((uVar9 | uVar19) != 0);\n        }\n        lVar30 = CONCAT44(uVar25,uVar22);\n        lVar1 = lVar29;\n        if ((DAT_00482a5d != '\\0') &&\n           (((DAT_00590404 != '\\0' || (DAT_00482a5c != '\\0')) ||\n            (lVar30 = CONCAT44(uVar25,uVar22), 6 < DAT_0007eba0)))) {\n          DAT_00080f78 = iVar20;\n          DAT_00080f7c = iVar21;\n          snprintf((char *)&local_830,0x800,\n                   \"%s: pool_diff:%lld work_diff:%f pool_diff_bit:%lld ...\\n\",\"hashtest_submit\",\n                   iVar20,iVar21,uVar28,DAT_00080f80,DAT_00080f84);\n          FUN_0002e584(7,&local_830,0);\n          lVar1 = CONCAT44(DAT_00080f7c,DAT_00080f78);\n          lVar30 = lVar29;\n        }\n      }\n      uVar28 = _DAT_0007eab0;\n      DAT_00080f7c = (int)((ulonglong)lVar1 >> 0x20);\n      DAT_00080f78 = (int)lVar1;\n      lVar29 = FUN_00060180((int)_DAT_0007eab0,(int)((ulonglong)_DAT_0007eab0 >> 0x20));\n      iVar21 = (int)((ulonglong)lVar29 >> 0x20);\n      iVar20 = (int)lVar29;\n      lVar1 = CONCAT44(DAT_00080f8c,DAT_00080f88);\n      if (iVar21 != DAT_00080f8c || iVar20 != DAT_00080f88) {\n        uVar14 = 0;\n        uVar15 = 0;\n        lVar1 = lVar29;\n        if (lVar29 == 0) {\n          DAT_00080f94 = 0xffffffff;\n          DAT_00080f90 = DAT_00080f94;\n        }\n        else {\n          do {\n            DAT_00080f90 = uVar15;\n            DAT_00080f94 = uVar14;\n            uVar19 = (uint)((ulonglong)lVar1 >> 0x21);\n            uVar9 = (uint)((byte)((ulonglong)lVar1 >> 0x20) & 1) << 0x1f | (uint)lVar1 >> 1;\n            lVar1 = CONCAT44(uVar19,uVar9);\n            uVar14 = DAT_00080f94 + (0xfffffffe < DAT_00080f90);\n            uVar15 = DAT_00080f90 + 1;\n          } while ((uVar9 | uVar19) != 0);\n        }\n        lVar1 = lVar29;\n        if ((DAT_00482a5d != '\\0') &&\n           (((DAT_00590404 != '\\0' || (DAT_00482a5c != '\\0')) || (6 < DAT_0007eba0)))) {\n          DAT_00080f88 = iVar20;\n          DAT_00080f8c = iVar21;\n          snprintf((char *)&local_830,0x800,\n                   \"%s:net_diff:%lld current_diff:%f net_diff_bit %lld ...\\n\",\"hashtest_submit\",\n                   iVar20,iVar21,uVar28,DAT_00080f90,DAT_00080f94);\n          lVar30 = lVar29;\n          FUN_0002e584(7,&local_830,0);\n          lVar1 = CONCAT44(DAT_00080f8c,DAT_00080f88);\n        }\n      }\n      DAT_00080f8c = (int)((ulonglong)lVar1 >> 0x20);\n      DAT_00080f88 = (int)lVar1;\n      local_928 = *(undefined4 *)(uVar12 + 0x80);\n      uStack_924 = *(undefined4 *)(uVar12 + 0x84);\n      uStack_920 = *(undefined4 *)(uVar12 + 0x88);\n      uStack_91c = *(undefined4 *)(uVar12 + 0x8c);\n      local_918 = *(undefined4 *)(uVar12 + 0x90);\n      uStack_914 = *(undefined4 *)(uVar12 + 0x94);\n      uStack_910 = *(undefined4 *)(uVar12 + 0x98);\n      uStack_90c = *(undefined4 *)(uVar12 + 0x9c);\n      local_930 = 0x50;\n      local_92c = 0;\n      local_a3c[0] = *(uint *)(uVar12 + 0x40);\n      local_a3c[1] = *(undefined4 *)(uVar12 + 0x44);\n      local_a3c[2] = *(undefined4 *)(uVar12 + 0x48);\n      FUN_000316b0(auStack_908,local_a3c,0xc,auStack_a30);\n      local_a3c[0] = uVar16;\n      FUN_000316b0(auStack_8fc,local_a3c,4);\n      FUN_0002327c(&local_930,local_a3c);\n      memset(&local_930,0,0xe8);\n      FUN_00023430(local_a3c,0x20,local_a24 + 2);\n      puVar11 = local_a24 + 1;\n      puVar18 = &local_a40;\n      do {\n        puVar11 = puVar11 + 1;\n        uVar14 = *puVar11;\n        puVar18 = puVar18 + 1;\n        *puVar18 = uVar14 << 0x18 | (uVar14 >> 8 & 0xff) << 0x10 | (uVar14 >> 0x10 & 0xff) << 8 |\n                   uVar14 >> 0x18;\n      } while (local_a24 + 9 != puVar11);\n      if (local_a24[1] == 0) {\n        puVar18 = local_a24 + 1;\n        uVar14 = 0;\n        do {\n          puVar18 = puVar18 + -1;\n          if (*puVar18 != 0) {\n            uVar15 = (int)uVar14 >> 0x1f;\n            goto LAB_00013570;\n          }\n          uVar14 = uVar14 + 1;\n        } while (uVar14 != 7);\n        uVar14 = 7;\n        uVar15 = 0;\nLAB_00013570:\n        uVar19 = DAT_00080f84 >> 5;\n        uVar9 = DAT_00080f80 >> 5 | DAT_00080f84 << 0x1b;\n        bVar26 = uVar15 <= uVar19;\n        if (uVar19 == uVar15) {\n          bVar26 = uVar14 <= uVar9;\n        }\n        if (!bVar26 || uVar19 == uVar15 && uVar9 == uVar14) {\n          uVar22 = FUN_0001e160();\n          iVar20 = FUN_00051978(uVar16,uVar22);\n          uVar22 = FUN_00051970(uVar16);\n          if ((DAT_00482a5d != '\\0') &&\n             (((DAT_00590404 != '\\0' || (DAT_00482a5c != '\\0')) || (6 < DAT_0007eba0)))) {\n            iVar21 = iVar17;\n            iVar23 = iVar20;\n            snprintf((char *)&local_830,0x800,\"%s: chain %d which_asic_nonce %d which_core_nonce %d\"\n                     ,\"hashtest_submit\",iVar17,iVar20,uVar22);\n            FUN_0002e584(7,&local_830,0);\n            lVar30 = CONCAT44(iVar23,iVar21);\n          }\n          uVar14 = DAT_00080f80 & 0x1f;\n          iVar20 = iVar20 + iVar17 * 0x100;\n          uVar19 = (&DAT_0099cd98)[iVar20 * 2];\n          uVar15 = local_a24[-(DAT_00080f80 >> 5 | DAT_00080f84 << 0x1b)];\n          (&DAT_0099cd98)[iVar20 * 2] = uVar19 + 1;\n          (&DAT_0099cd9c)[iVar20 * 2] = (&DAT_0099cd9c)[iVar20 * 2] + (uint)(0xfffffffe < uVar19);\n          if ((uVar15 << 0x18 | (uVar15 >> 8 & 0xff) << 0x10 | (uVar15 >> 0x10 & 0xff) << 8 |\n              uVar15 >> 0x18) < 0xffffffffU >> uVar14) {\n            uVar14 = (&DAT_0099ed98)[iVar17 * 2];\n            (&DAT_0099ed98)[iVar17 * 2] = uVar14 + 0x100;\n            (&DAT_0099ed9c)[iVar17 * 2] = (&DAT_0099ed9c)[iVar17 * 2] + (uint)(0xfffffeff < uVar14);\n            FUN_0002acec(pvVar7,uVar12,uVar16,uVar13 & 0xff);\n            bVar26 = 0xfffffeff < local_a68;\n            local_a68 = local_a68 + 0x100;\n            local_a64 = local_a64 + bVar26;\n          }\n          else if ((local_a24[0] << 0x18 | (local_a24[0] >> 8 & 0xff) << 0x10 |\n                    (local_a24[0] >> 0x10 & 0xff) << 8 | local_a24[0] >> 0x18) < 0xffffff) {\n            uVar12 = (&DAT_0099ed98)[iVar17 * 2];\n            bVar26 = 0xfffffeff < local_a68;\n            local_a68 = local_a68 + 0x100;\n            (&DAT_0099ed98)[iVar17 * 2] = uVar12 + 0x100;\n            (&DAT_0099ed9c)[iVar17 * 2] = (&DAT_0099ed9c)[iVar17 * 2] + (uint)(0xfffffeff < uVar12);\n            local_a64 = local_a64 + bVar26;\n          }\n        }\n      }\n      else {\n        iVar20 = FUN_0001e29c(iVar17);\n        if (iVar20 == 1) {\n          if ((DAT_00482a5d != '\\0') &&\n             (((DAT_00590404 != '\\0' || (DAT_00482a5c != '\\0')) || (6 < DAT_0007eba0)))) {\n            local_830._0_1_ = 'h';\n            local_830._1_1_ = 'a';\n            local_830._2_1_ = 's';\n            local_830._3_1_ = 'h';\n            local_82c._0_1_ = '2';\n            local_82c._1_1_ = '_';\n            local_82c._2_1_ = '3';\n            local_82c._3_1_ = '2';\n            local_828._0_1_ = ' ';\n            local_828._1_1_ = 'e';\n            local_828._2_1_ = 'r';\n            local_828._3_1_ = 'r';\n                    /* WARNING: Ignoring partial resolution of indirect */\n            local_824._0_2_ = 0x726f;\n            FUN_0002e584(7,&local_830,0);\n          }\n          FUN_0002a3c4(pvVar7);\n          FUN_0001e6e0(iVar17);\n        }\n        if ((DAT_00482a5d != '\\0') &&\n           (((DAT_00590404 != '\\0' || (DAT_00482a5c != '\\0')) || (6 < DAT_0007eba0)))) {\n          snprintf((char *)&local_830,0x800,\"%s: HASH2_32[7] != 0\",\"hashtest_submit\");\n          FUN_0002e584(7,&local_830,0);\n        }\n      }\n      FUN_0002a1e0(&local_a40,\"bmminer.c\",\"bitmain_c5_scanhash\",0x869);\n      goto LAB_00012da8;\n    }\nLAB_00013054:\n    bVar26 = CARRY4(DAT_0099ee08,local_a68);\n    DAT_0099ee08 = DAT_0099ee08 + local_a68;\n    DAT_0099ee0c = DAT_0099ee0c + local_a64 + (uint)bVar26;\n    iVar20 = pthread_rwlock_unlock((pthread_rwlock_t *)(__mutex + 1));\n    if (iVar20 != 0) {\n      piVar10 = __errno_location();\n      pcVar3 = \"bmminer.c\";\n      pcVar33 = \"bitmain_c5_scanhash\";\n      snprintf((char *)&local_830,0x800,\"WTF RWLOCK ERROR ON UNLOCK! errno=%d in %s %s():%d\",\n               *piVar10,\"bmminer.c\",\"bitmain_c5_scanhash\",0x86c);\n      FUN_0002e584(3,&local_830,1);\n      lVar30 = CONCAT44(pcVar33,pcVar3);\n    }\n    (*DAT_0007ecc4)();\n    pthread_mutex_unlock((pthread_mutex_t *)&DAT_004fcad0);\n    FUN_000304d4(1);\n    if ((local_a68 | local_a64) != 0) {\n      uVar12 = -local_a68;\n      uVar16 = local_a68 + ((uint)(local_a68 != 0) * -2 - local_a64) +\n               (uint)CARRY4(local_a68 * 0x7fffffff,local_a68 * 0x7fffffff) +\n               (uint)CARRY4(local_a68 * -2,local_a68);\n      if ((DAT_00482a5d != '\\0') &&\n         (((DAT_00590404 != '\\0' || (DAT_00482a5c != '\\0')) || (6 < DAT_0007eba0)))) {\n        uVar13 = uVar12;\n        uVar14 = uVar16;\n        snprintf((char *)&local_830,0x800,\"%s: hashes %llu ...\\n\",\"bitmain_c5_scanhash\",uVar12,\n                 uVar16);\n        FUN_0002e584(7,&local_830,0);\n        lVar30 = CONCAT44(uVar14,uVar13);\n      }\n      if ((uVar12 | uVar16) != 0) {\n        dVar27 = (double)FUN_000600c4(uVar12,uVar16);\n        _DAT_00080f50 = dVar27 / 1000000000.0 + _DAT_00080f50;\n      }\n    }\n  } while( true );\nLAB_00012828:\n  pclose(__stream);\n  uVar16 = 1;\n  uVar12 = 0;\n  iVar20 = 0;\n  puVar24 = &local_930;\n  while( true ) {\n    sVar4 = strlen((char *)&local_930);\n    if (sVar4 < uVar16) break;\n    memset(local_a24 + 2,0,0x20);\n    ppuVar5 = __ctype_b_loc();\n    if (((*ppuVar5)[*(byte *)puVar24] & 0x2000) != 0) {\n      strncpy((char *)(local_a24 + 2),(char *)((int)&local_930 + uVar12),(uVar16 - uVar12) - 1);\n      lVar6 = strtol((char *)(local_a24 + 2),(char **)0x0,10);\n      uVar12 = uVar16;\n      if (((0 < lVar6) && (iVar20 = iVar20 + 1, DAT_00482a5d != '\\0')) &&\n         ((DAT_00590404 != '\\0' || ((DAT_00482a5c != '\\0' || (6 < DAT_0007eba0)))))) {\n        snprintf((char *)&local_830,0x800,\"Parsed proc id is: %d\\n\");\n        FUN_0002e584(7,&local_830,0);\n      }\n    }\n    uVar16 = uVar16 + 1;\n    puVar24 = (undefined4 *)((int)puVar24 + 1);\n  }\n  if (iVar20 != 0) {\n    if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (2 < DAT_0007eba0)) {\n      snprintf((char *)&local_830,0x800,\" %d instance of %s is  already Running on this machine\",\n               iVar20,uVar22);\n      FUN_0002e584(3,&local_830,0);\n    }\n    if (iVar20 != 1) {\n      snprintf((char *)&local_830,0x800,\"%s is forbidden to start twice, will exit immediately!\",\n               *param_2);\n      FUN_0002e584(3,&local_830,1);\n    }\n  }\n  goto LAB_000129f0;\n}\n\n",
    "FUN_00013c50": "\n/* WARNING: Removing unreachable block (ram,0x00013c64) */\n\nvoid FUN_00013c50(void)\n\n{\n  __gmon_start__();\n  return;\n}\n\n",
    "FUN_00013c74": "\n/* WARNING: Removing unreachable block (ram,0x00013c88) */\n/* WARNING: Removing unreachable block (ram,0x00013c92) */\n\nvoid FUN_00013c74(void)\n\n{\n  return;\n}\n\n",
    "FUN_00013c98": "\n/* WARNING: Removing unreachable block (ram,0x00013cb4) */\n/* WARNING: Removing unreachable block (ram,0x00013cbe) */\n\nvoid FUN_00013c98(void)\n\n{\n  return;\n}\n\n",
    "FUN_00013ce0": "\nvoid FUN_00013ce0(uint param_1)\n\n{\n  uint uVar1;\n  undefined4 uVar2;\n  uint uVar3;\n  uint uVar4;\n  char acStack_820 [2048];\n  \n  uVar3 = 0;\n  while( true ) {\n    uVar1 = FUN_0001e2fc();\n    uVar4 = uVar3 & 0xff;\n    if (uVar1 <= uVar3) break;\n    uVar1 = FUN_0003ff08(uVar4);\n    if (-1 < (int)uVar1) {\n      if (4 < DAT_0007eb9c) {\n        snprintf(acStack_820,0x800,\"fan[%u] speed[%u]\\n\",uVar4,uVar1);\n        FUN_0002e584(4,acStack_820,0);\n      }\n      FUN_0001e3d4(uVar4,uVar1);\n      if ((9999 < (int)uVar1) || (uVar2 = 1, uVar1 < param_1)) {\n        uVar2 = 0;\n      }\n      FUN_0001e350(uVar4,uVar2);\n    }\n    uVar3 = uVar3 + 1;\n  }\n  return;\n}\n\n",
    "FUN_00013da4": "\nundefined4 FUN_00013da4(undefined4 param_1,int param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  int iVar5;\n  uint uVar6;\n  uint uVar7;\n  uint uVar8;\n  char acStack_820 [2052];\n  \n  if (param_2 == 0) {\n    FUN_00013ce0();\n    iVar5 = FUN_0001e30c();\n    iVar1 = FUN_0001e2fc();\n    if (iVar5 < iVar1) {\n      uRam0007f7a4 = uRam0007f7a4 + 1;\n      uVar6 = 0;\n      while( true ) {\n        uVar7 = uVar6 & 0xff;\n        uVar6 = uVar6 + 1;\n        iVar5 = FUN_0001e2fc();\n        uVar8 = uRam0007f7a4;\n        if (iVar5 <= (int)uVar7) break;\n        if (3 < DAT_0007eb9c) {\n          uVar3 = FUN_0001e43c(uVar7);\n          snprintf(acStack_820,0x800,\"conti_check_count:%d, fan_id = %d, fan_speed = %d\\n\",uVar8,\n                   uVar7,uVar3);\n          FUN_0002e584(3,acStack_820,0);\n        }\n      }\n    }\n    else {\n      uRam0007f7a4 = 0;\n    }\n    iVar5 = FUN_0001e30c();\n    iVar1 = FUN_0001e2fc();\n    if ((iVar5 < iVar1) && (9 < uRam0007f7a4)) goto LAB_00013ed8;\n  }\n  else {\n    iVar5 = 10;\n    do {\n      FUN_00013ce0(param_1);\n      iVar1 = FUN_0001e30c();\n      iVar2 = FUN_0001e2fc();\n      if (iVar2 <= iVar1) break;\n      FUN_000304d4(2000);\n      iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    iVar5 = FUN_0001e30c();\n    iVar1 = FUN_0001e2fc();\n    if (iVar5 < iVar1) {\nLAB_00013ed8:\n      if (1 < DAT_0007eb9c) {\n        uVar3 = FUN_0001e30c();\n        uVar4 = FUN_0001e2fc();\n        snprintf(acStack_820,0x800,\"Error, fan lost, only find %d (< %d)\\n\",uVar3,uVar4);\n        FUN_0002e584(1,acStack_820,0);\n      }\n      uVar6 = 0;\n      while( true ) {\n        uVar8 = uVar6 & 0xff;\n        uVar6 = uVar6 + 1;\n        iVar5 = FUN_0001e2fc();\n        if (iVar5 <= (int)uVar8) break;\n        if (3 < DAT_0007eb9c) {\n          uVar3 = FUN_0001e43c(uVar8);\n          snprintf(acStack_820,0x800,\"fan_id = %d, fan_speed = %d\\n\",uVar8,uVar3);\n          FUN_0002e584(3,acStack_820,0);\n        }\n      }\n      FUN_000356c4(10,0xff);\n      FUN_00020a08(1);\n      FUN_00031d58(7,\"fan lost\");\n      return 0xffffffff;\n    }\n  }\n  FUN_00020a08(0);\n  return 0;\n}\n\n",
    "FUN_00013fb0": "\nvoid FUN_00013fb0(int param_1)\n\n{\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined2 uStack_7fc;\n  undefined local_7fa;\n  \n  if (DAT_0007f7a8 == 0) {\n    DAT_0007f7a8 = FUN_0004101c(0,100000);\n  }\n  if (DAT_0007f7a8 < 0) {\n    if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (2 < DAT_0007eba0)) {\n      local_810._0_1_ = 'p';\n      local_810._1_1_ = 'w';\n      local_810._2_1_ = 'm';\n      local_810._3_1_ = ' ';\n      uStack_80c._0_1_ = 'f';\n      uStack_80c._1_1_ = 'o';\n      uStack_80c._2_1_ = 'r';\n      uStack_80c._3_1_ = ' ';\n      uStack_808._0_1_ = 'f';\n      uStack_808._1_1_ = 'a';\n      uStack_808._2_1_ = 'n';\n      uStack_808._3_1_ = ' ';\n      uStack_804._0_1_ = 'i';\n      uStack_804._1_1_ = 'n';\n      uStack_804._2_1_ = 'i';\n      uStack_804._3_1_ = 't';\n      uStack_800._0_1_ = ' ';\n      uStack_800._1_1_ = 'e';\n      uStack_800._2_1_ = 'r';\n      uStack_800._3_1_ = 'r';\n      uStack_7fc = 0x726f;\n      local_7fa = 0;\n      FUN_0002e584(3,&local_810,0);\n      return;\n    }\n  }\n  else if (param_1 != DAT_0007f7ac) {\n    if (4 < DAT_0007eb9c) {\n      snprintf((char *)&local_810,0x800,\"set pwm = %d\",param_1);\n      FUN_0002e584(4,&local_810,0);\n    }\n    FUN_0004110c(DAT_0007f7a8,param_1);\n    FUN_0001e49c(param_1);\n    DAT_0007f7ac = param_1;\n  }\n  return;\n}\n\n",
    "FUN_000140e4": "\nvoid FUN_000140e4(void)\n\n{\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined4 uStack_7fc;\n  undefined4 local_7f8;\n  undefined4 uStack_7f4;\n  undefined4 uStack_7f0;\n  undefined2 local_7ec;\n  \n  if (3 < DAT_0007eb9c) {\n    local_808._0_1_ = 'N';\n    local_808._1_1_ = 'o';\n    local_808._2_1_ = 't';\n    local_808._3_1_ = 'e';\n    uStack_804._0_1_ = ':';\n    uStack_804._1_1_ = ' ';\n    uStack_804._2_1_ = 'f';\n    uStack_804._3_1_ = 'r';\n    uStack_800._0_1_ = 'o';\n    uStack_800._1_1_ = 'n';\n    uStack_800._2_1_ = 't';\n    uStack_800._3_1_ = ' ';\n    uStack_7fc._0_1_ = 'f';\n    uStack_7fc._1_1_ = 'a';\n    uStack_7fc._2_1_ = 'n';\n    uStack_7fc._3_1_ = ' ';\n    local_7f8._0_1_ = 'i';\n    local_7f8._1_1_ = 's';\n    local_7f8._2_1_ = ' ';\n    local_7f8._3_1_ = 'p';\n    uStack_7f4._0_1_ = 'o';\n    uStack_7f4._1_1_ = 'w';\n    uStack_7f4._2_1_ = 'e';\n    uStack_7f4._3_1_ = 'r';\n    uStack_7f0._0_1_ = ' ';\n    uStack_7f0._1_1_ = 'o';\n    uStack_7f0._2_1_ = 'n';\n    uStack_7f0._3_1_ = '!';\n    local_7ec = 10;\n    FUN_0002e584(3,&local_808,0);\n  }\n  FUN_0003ffa0(0);\n  return;\n}\n\n",
    "FUN_000141b4": "\nvoid FUN_000141b4(void)\n\n{\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined4 uStack_7fc;\n  undefined4 local_7f8;\n  undefined4 uStack_7f4;\n  undefined4 uStack_7f0;\n  undefined local_7ec;\n  \n  if (3 < DAT_0007eb9c) {\n    local_808._0_1_ = 'N';\n    local_808._1_1_ = 'o';\n    local_808._2_1_ = 't';\n    local_808._3_1_ = 'e';\n    uStack_804._0_1_ = ':';\n    uStack_804._1_1_ = ' ';\n    uStack_804._2_1_ = 'r';\n    uStack_804._3_1_ = 'e';\n    uStack_800._0_1_ = 'a';\n    uStack_800._1_1_ = 'r';\n    uStack_800._2_1_ = ' ';\n    uStack_800._3_1_ = 'f';\n    uStack_7fc._0_1_ = 'a';\n    uStack_7fc._1_1_ = 'n';\n    uStack_7fc._2_1_ = ' ';\n    uStack_7fc._3_1_ = 'i';\n    local_7f8._0_1_ = 's';\n    local_7f8._1_1_ = ' ';\n    local_7f8._2_1_ = 'p';\n    local_7f8._3_1_ = 'o';\n    uStack_7f4._0_1_ = 'w';\n    uStack_7f4._1_1_ = 'e';\n    uStack_7f4._2_1_ = 'r';\n    uStack_7f4._3_1_ = ' ';\n    uStack_7f0._0_1_ = 'o';\n    uStack_7f0._1_1_ = 'n';\n    uStack_7f0._2_1_ = '!';\n    uStack_7f0._3_1_ = '\\n';\n    local_7ec = 0;\n    FUN_0002e584(3,&local_808,0);\n  }\n  FUN_0003ffa0(1);\n  return;\n}\n\n",
    "FUN_0001427c": "\nint FUN_0001427c(undefined4 param_1,undefined4 param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  \n  iVar2 = 8;\n  do {\n    iVar1 = FUN_0002c06c(0x1c,param_1,param_2);\n    if (iVar1 != 0) {\n      return iVar1;\n    }\n    usleep(1000);\n    iVar2 = iVar2 + -1;\n  } while (iVar2 != 0);\n  return 0;\n}\n\n",
    "FUN_000142bc": "\nint FUN_000142bc(undefined4 param_1,undefined4 param_2,uint param_3,int param_4,byte *param_5)\n\n{\n  uint uVar1;\n  int iVar2;\n  int iVar3;\n  bool bVar4;\n  \n  if (param_4 == 0) {\n    iVar2 = 0;\n    iVar3 = 2;\n    do {\n      FUN_0001427c(param_2,param_1);\n      FUN_0001ecdc(0x98,param_3,0,0,param_2,param_1);\n      usleep(1000);\n      uVar1 = FUN_0001427c(param_2,param_1);\n      usleep(1000);\n      if ((uVar1 << 0x10) >> 0x18 == param_3) {\n        if (iVar2 != 0) {\n          return 0;\n        }\n        if ((uVar1 & 0xff) == 0) {\n          return 0;\n        }\n        *param_5 = (byte)uVar1;\n        return 1;\n      }\n      bVar4 = iVar3 != 1;\n      iVar2 = 1;\n      iVar3 = iVar2;\n    } while (bVar4);\n  }\n  else {\n    iVar3 = 0;\n    iVar2 = 2;\n    do {\n      FUN_0001427c(param_2,param_1);\n      FUN_0001ecdc(0x98,param_3,*param_5,1,param_2,param_1);\n      FUN_0001427c(param_2,param_1);\n      usleep(1000);\n      FUN_0001427c(param_2,param_1);\n      FUN_0001ecdc(0x98,param_3,0,0,param_2,param_1);\n      uVar1 = FUN_0001427c(param_2,param_1);\n      usleep(1000);\n      if (((uVar1 << 0x10) >> 0x18 == param_3) || ((uVar1 & 0xff) == (uint)*param_5)) {\n        if (iVar3 != 0) {\n          return 0;\n        }\n        return param_4;\n      }\n      bVar4 = iVar2 != 1;\n      iVar3 = 1;\n      iVar2 = iVar3;\n    } while (bVar4);\n  }\n  return 0;\n}\n\n",
    "FUN_00014434": "\nvoid FUN_00014434(void)\n\n{\n  int iVar1;\n  \n  iVar1 = FUN_0001e170();\n  if (iVar1 != 0) {\n    FUN_0001e170();\n    return;\n  }\n  FUN_0001e19c();\n  return;\n}\n\n",
    "FUN_00014454": "\nint FUN_00014454(undefined4 param_1,int param_2,uint param_3,int param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  byte local_821;\n  undefined4 local_820;\n  undefined4 uStack_81c;\n  undefined4 uStack_818;\n  undefined4 uStack_814;\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined4 uStack_804;\n  undefined4 local_800;\n  undefined4 uStack_7fc;\n  undefined4 uStack_7f8;\n  undefined local_7f4;\n  \n  if (DAT_0007f7b0 == 0) {\n    if (3 < DAT_0007eb9c) {\n      local_820._0_1_ = 'c';\n      local_820._1_1_ = 'a';\n      local_820._2_1_ = 'n';\n      local_820._3_1_ = ' ';\n      uStack_81c._0_1_ = 'n';\n      uStack_81c._1_1_ = 'o';\n      uStack_81c._2_1_ = 't';\n      uStack_81c._3_1_ = ' ';\n      uStack_818._0_1_ = 'r';\n      uStack_818._1_1_ = 'e';\n      uStack_818._2_1_ = 'a';\n      uStack_818._3_1_ = 'd';\n      uStack_814._0_1_ = ' ';\n      uStack_814._1_1_ = 't';\n      uStack_814._2_1_ = 'e';\n      uStack_814._3_1_ = 'm';\n      local_810._0_1_ = 'p';\n      local_810._1_1_ = ' ';\n      local_810._2_1_ = 'b';\n      local_810._3_1_ = 'y';\n      uStack_80c._0_1_ = ' ';\n      uStack_80c._1_1_ = 'a';\n      uStack_80c._2_1_ = 's';\n      uStack_80c._3_1_ = 'i';\n      uStack_808._0_1_ = 'c';\n      uStack_808._1_1_ = ' ';\n      uStack_808._2_1_ = 'b';\n      uStack_808._3_1_ = 'e';\n      uStack_804._0_1_ = 'f';\n      uStack_804._1_1_ = 'o';\n      uStack_804._2_1_ = 'r';\n      uStack_804._3_1_ = 'e';\n      local_800._0_1_ = ' ';\n      local_800._1_1_ = 'c';\n      local_800._2_1_ = 'a';\n      local_800._3_1_ = 'l';\n      uStack_7fc._0_1_ = 'i';\n      uStack_7fc._1_1_ = 'b';\n      uStack_7fc._2_1_ = 'r';\n      uStack_7fc._3_1_ = 'a';\n      uStack_7f8._0_1_ = 't';\n      uStack_7f8._1_1_ = 'i';\n      uStack_7f8._2_1_ = 'o';\n      uStack_7f8._3_1_ = 'n';\n      local_7f4 = 0;\n      FUN_0002e584(3,&local_820,0);\n      return 0xff;\n    }\n  }\n  else {\n    iVar1 = FUN_0001e29c();\n    if (iVar1 == 0) {\n      if (4 < DAT_0007eb9c) {\n        snprintf((char *)&local_820,0x800,\"%s chain %d not pluged\",\"read_sensor_on_asic\",param_1);\n        FUN_0002e584(4,&local_820,0);\n        return 0xff;\n      }\n    }\n    else {\n      uVar2 = FUN_0001e170();\n      if (uVar2 == 0) {\n        if (3 < DAT_0007eb9c) {\n          snprintf((char *)&local_820,0x800,\"%s chain %d ,index %d not connected\",\n                   \"read_sensor_on_asic\",param_1,param_2);\n          FUN_0002e584(3,&local_820,0);\n          return 0xff;\n        }\n      }\n      else {\n        iVar1 = FUN_00014434();\n        if ((param_2 < iVar1) && (param_3 < 2)) {\n          local_821 = 0xff;\n          if (param_4 == 0) {\n            uVar2 = (uint)(byte)(&UNK_000604a1)[param_3 * 0x10];\n          }\n          if (param_4 != 0) {\n            uVar2 = (uint)(byte)(&UNK_000604a2)[param_3 * 0x10];\n          }\n          iVar1 = FUN_000142bc(param_1,(int)(short)*(undefined4 *)(DAT_0007f7b4 + param_2 * 4) *\n                                       (int)(short)DAT_0007f7b0 & 0xff,uVar2,0,&local_821);\n          if (iVar1 != 0) {\n            return local_821 - 0x40;\n          }\n          if (3 < DAT_0007eb9c) {\n            iVar1 = *(int *)(DAT_0007f7b4 + param_2 * 4);\n            snprintf((char *)&local_820,0x800,\n                     \"read temp sensor failed: chain = %d, sensor pos = %d, address = %d, reg = %d\\n\"\n                     ,param_1,iVar1,DAT_0007f7b0 * iVar1,uVar2);\n            FUN_0002e584(3,&local_820,0);\n          }\n        }\n        else if (3 < DAT_0007eb9c) {\n          snprintf((char *)&local_820,0x800,\n                   \"%s invalid param. index = %d, type = %d, model = %d on chain %d\",\n                   \"read_sensor_on_asic\",param_2,param_4,param_3,param_1);\n          FUN_0002e584(3,&local_820,0);\n          return 0xff;\n        }\n      }\n    }\n  }\n  return 0xff;\n}\n\n",
    "FUN_000146c8": "\nundefined4 FUN_000146c8(uint param_1)\n\n{\n  char cVar1;\n  char cVar2;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  char *__format;\n  char cVar6;\n  char *pcVar7;\n  byte bVar8;\n  int iVar9;\n  uint uVar10;\n  int iVar11;\n  char *local_840;\n  char *local_834;\n  undefined local_82a;\n  byte local_829;\n  undefined4 local_828;\n  undefined4 uStack_824;\n  undefined4 uStack_820;\n  undefined4 uStack_81c;\n  undefined4 local_818;\n  undefined4 uStack_814;\n  undefined4 uStack_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined4 uStack_804;\n  \n  iVar11 = 0;\n  local_834 = (char *)0x0;\nLAB_000146f0:\n  do {\n    iVar3 = FUN_00014434();\n    if (iVar3 <= iVar11) {\nLAB_000149cc:\n      if (3 < DAT_0007eb9c) {\n        snprintf((char *)&local_828,0x800,\"chain %d temp sensor %s\\n\",param_1,local_834);\n        FUN_0002e584(3,&local_828,0);\n      }\n      return 0;\n    }\n    iVar3 = iVar11 * 4;\n    iVar9 = 4;\n    uVar10 = (int)(short)*(undefined4 *)(DAT_0007f7b4 + iVar11 * 4) * (int)(short)DAT_0007f7b0 &\n             0xff;\n    FUN_00050874(param_1 & 0xff,uVar10);\n    usleep(10000);\n    do {\n      local_828 = local_828 & 0xffffff00;\n      FUN_000142bc(param_1,uVar10,0xfe,0,&local_828);\n      if ((char)local_828 == '\\x1a') {\n        iVar9 = 0;\n        local_834 = \"NCT218\";\n        goto LAB_000147d8;\n      }\n      iVar9 = iVar9 + -1;\n    } while (iVar9 != 0);\n    iVar9 = 4;\n    while( true ) {\n      local_828 = local_828 & 0xffffff00;\n      FUN_000142bc(param_1,uVar10,0xfe,0,&local_828);\n      if ((char)local_828 == 'U') break;\n      iVar9 = iVar9 + -1;\n      if (iVar9 == 0) {\n        if (3 < DAT_0007eb9c) {\n          snprintf((char *)&local_828,0x800,\"sensor %d @ chain %d manufacture id unknown\",\n                   *(undefined4 *)(DAT_0007f7b4 + iVar3),param_1);\n          FUN_0002e584(3,&local_828,0);\n          return 0xffffffff;\n        }\n        return 0xffffffff;\n      }\n    }\n    iVar9 = 1;\n    local_834 = \"TMP451\";\nLAB_000147d8:\n    if (3 < DAT_0007eb9c) {\n      snprintf((char *)&local_828,0x800,\"sensor %d @ chain %d is %s\",\n               *(undefined4 *)(DAT_0007f7b4 + iVar3),param_1,local_834);\n      FUN_0002e584(3,&local_828,0);\n    }\n    local_82a = 4;\n    if (DAT_0007f7b0 == 0) {\n      if (DAT_0007eb9c < 4) {\n        return 0;\n      }\n      local_828._0_1_ = 'c';\n      local_828._1_1_ = 'a';\n      local_828._2_1_ = 'n';\n      local_828._3_1_ = ' ';\n      uStack_824._0_1_ = 'n';\n      uStack_824._1_1_ = 'o';\n      uStack_824._2_1_ = 't';\n      uStack_824._3_1_ = ' ';\n      uStack_820._0_1_ = 's';\n      uStack_820._1_1_ = 'e';\n      uStack_820._2_1_ = 't';\n      uStack_820._3_1_ = ' ';\n      uStack_81c._0_1_ = 'e';\n      uStack_81c._1_1_ = 'x';\n      uStack_81c._2_1_ = 't';\n      uStack_81c._3_1_ = ' ';\n      local_818._0_1_ = 'm';\n      local_818._1_1_ = 'o';\n      local_818._2_1_ = 'd';\n      local_818._3_1_ = 'e';\n      uStack_814._0_1_ = ' ';\n      uStack_814._1_1_ = 'b';\n      uStack_814._2_1_ = 'e';\n      uStack_814._3_1_ = 'f';\n      uStack_810._0_1_ = 'o';\n      uStack_810._1_1_ = 'r';\n      uStack_810._2_1_ = 'e';\n      uStack_810._3_1_ = ' ';\n      uStack_80c._0_1_ = 'c';\n      uStack_80c._1_1_ = 'a';\n      uStack_80c._2_1_ = 'l';\n      uStack_80c._3_1_ = 'i';\n      uStack_808._0_1_ = 'b';\n      uStack_808._1_1_ = 'r';\n      uStack_808._2_1_ = 'a';\n      uStack_808._3_1_ = 't';\n      uStack_804._0_1_ = 'i';\n      uStack_804._1_1_ = 'o';\n      uStack_804._2_1_ = 'n';\n      uStack_804._3_1_ = '\\0';\n      FUN_0002e584(3,&local_828,0);\nLAB_000148d4:\n      if (DAT_0007eb9c < 4) {\n        return 0;\n      }\n      snprintf((char *)&local_828,0x800,\"sensor %d @ chain %d fail to set to ext mode\",\n               *(undefined4 *)(DAT_0007f7b4 + iVar3),param_1);\n      FUN_0002e584(3,&local_828,0);\n      goto LAB_000149cc;\n    }\n    iVar4 = FUN_0001e170();\n    if (iVar4 == 0) {\n      if (DAT_0007eb9c < 4) {\n        return 0;\n      }\n      snprintf((char *)&local_828,0x800,\"%s chain %d ,index %d not connected\",\"set_ext_mode\",param_1\n               ,iVar11);\n      FUN_0002e584(3,&local_828,0);\n      goto LAB_000148d4;\n    }\n    iVar4 = FUN_000142bc(param_1,(int)(short)*(undefined4 *)(DAT_0007f7b4 + iVar3) *\n                                 (int)(short)DAT_0007f7b0 & 0xff,(&UNK_000604a3)[iVar9 * 0x10],1,\n                         &local_82a);\n    if (iVar4 == 0) {\n      if (DAT_0007eb9c < 4) {\n        return 0;\n      }\n      snprintf((char *)&local_828,0x800,\"set ext mode failed for senser %d @ chain %d\",\n               *(undefined4 *)(DAT_0007f7b4 + iVar3),param_1);\n      FUN_0002e584(3,&local_828,0);\n      goto LAB_000148d4;\n    }\n    local_840 = \"sensor %d @ chain %d, offset = %d\";\n    cVar6 = '\\v';\n    while( true ) {\n      cVar1 = FUN_00014454(param_1,iVar11,iVar9,0);\n      *(short *)(*(int *)(*(int *)(DAT_0007f7b8 + param_1 * 4) + 4) + iVar11 * 6 + 2) = (short)cVar1\n      ;\n      cVar2 = FUN_00014454(param_1,iVar11,iVar9,1);\n      bVar8 = cVar1 - cVar2;\n      iVar4 = (int)(char)bVar8;\n      *(short *)(*(int *)(*(int *)(DAT_0007f7b8 + param_1 * 4) + 8) + iVar11 * 6 + 2) = (short)cVar2\n      ;\n      if ((byte)(bVar8 + 2) < 5) break;\n      local_829 = bVar8;\n      if (DAT_0007f7b0 == 0) {\n        if (3 < DAT_0007eb9c) {\n          local_828._0_1_ = 'c';\n          local_828._1_1_ = 'a';\n          local_828._2_1_ = 'n';\n          local_828._3_1_ = ' ';\n          uStack_824._0_1_ = 'n';\n          uStack_824._1_1_ = 'o';\n          uStack_824._2_1_ = 't';\n          uStack_824._3_1_ = ' ';\n          uStack_820._0_1_ = 's';\n          uStack_820._1_1_ = 'e';\n          uStack_820._2_1_ = 't';\n          uStack_820._3_1_ = ' ';\n          uStack_81c._0_1_ = 'e';\n          uStack_81c._1_1_ = 'x';\n          uStack_81c._2_1_ = 't';\n          uStack_81c._3_1_ = ' ';\n          local_818._0_1_ = 'm';\n          local_818._1_1_ = 'o';\n          local_818._2_1_ = 'd';\n          local_818._3_1_ = 'e';\n          uStack_814._0_1_ = ' ';\n          uStack_814._1_1_ = 'b';\n          uStack_814._2_1_ = 'e';\n          uStack_814._3_1_ = 'f';\n          uStack_810._0_1_ = 'o';\n          uStack_810._1_1_ = 'r';\n          uStack_810._2_1_ = 'e';\n          uStack_810._3_1_ = ' ';\n          uStack_80c._0_1_ = 'c';\n          uStack_80c._1_1_ = 'a';\n          uStack_80c._2_1_ = 'l';\n          uStack_80c._3_1_ = 'i';\n          uStack_808._0_1_ = 'b';\n          uStack_808._1_1_ = 'r';\n          uStack_808._2_1_ = 'a';\n          uStack_808._3_1_ = 't';\n          uStack_804._0_1_ = 'i';\n          uStack_804._1_1_ = 'o';\n          uStack_804._2_1_ = 'n';\n          uStack_804._3_1_ = '\\0';\n          FUN_0002e584(3,&local_828,0);\n        }\nLAB_00014a78:\n        if (iVar4 < 0) {\n          iVar4 = -iVar4;\n        }\n      }\n      else {\n        iVar5 = FUN_0001e170();\n        if (iVar5 != 0) {\n          iVar5 = FUN_000142bc(param_1,(int)(short)*(undefined4 *)(DAT_0007f7b4 + iVar3) *\n                                       (int)(short)DAT_0007f7b0 & 0xff,(&UNK_000604a4)[iVar9 * 0x10]\n                               ,1,&local_829);\n          if (iVar5 == 0) {\n            if (3 < DAT_0007eb9c) {\n              snprintf((char *)&local_828,0x800,\"set offset failed for senser %d @ chain %d\",\n                       *(undefined4 *)(DAT_0007f7b4 + iVar3),param_1);\n              FUN_0002e584(3,&local_828,0);\n            }\n          }\n          else if (3 < DAT_0007eb9c) {\n            pcVar7 = *(char **)(DAT_0007f7b4 + iVar3);\n            __format = local_840;\n            iVar5 = iVar4;\n            goto LAB_00014b5c;\n          }\n          goto LAB_00014a78;\n        }\n        if (DAT_0007eb9c < 4) goto LAB_00014a78;\n        pcVar7 = \"set_sensor_offset\";\n        __format = \"%s chain %d ,index %d not connected\";\n        iVar5 = iVar11;\nLAB_00014b5c:\n        snprintf((char *)&local_828,0x800,__format,pcVar7,param_1,iVar5);\n        FUN_0002e584(3,&local_828,0);\n        if (iVar4 < 0) {\n          iVar4 = -iVar4;\n        }\n      }\n      if ((iVar4 < 3) || (cVar6 = cVar6 + -1, cVar6 == '\\0')) goto LAB_00014b80;\n    }\n    if (4 < DAT_0007eb9c) {\n      iVar11 = iVar11 + 1;\n      snprintf((char *)&local_828,0x800,\n               \"sensor %d @ chain %d chip_temp_offset less than 2, no need to set offset\",\n               *(undefined4 *)(DAT_0007f7b4 + iVar3),param_1);\n      FUN_0002e584(4,&local_828,0);\n      goto LAB_000146f0;\n    }\nLAB_00014b80:\n    iVar11 = iVar11 + 1;\n  } while( true );\n}\n\n",
    "FUN_00014dd8": "\nint FUN_00014dd8(int param_1,int param_2,uint param_3)\n\n{\n  short sVar1;\n  int iVar2;\n  uint uVar3;\n  \n  iVar2 = FUN_0001e29c();\n  if (iVar2 == 0) {\n    uVar3 = 1;\n  }\n  else {\n    uVar3 = param_3 >> 0x1f;\n  }\n  if (uVar3 == 0) {\n    if (param_2 == 1) {\n      iVar2 = FUN_00014434();\n    }\n    else {\n      if (param_2 == 2) {\n        iVar2 = FUN_00014434();\n        if (iVar2 <= (int)param_3) {\n          return 0xff;\n        }\n        iVar2 = FUN_0001e170();\n        if (iVar2 == 0) {\n          return 0xff;\n        }\n        goto LAB_00014e24;\n      }\n      if (param_2 != 0) goto LAB_00014e24;\n      iVar2 = FUN_0001e19c();\n    }\n    if ((int)param_3 < iVar2) {\nLAB_00014e24:\n      pthread_mutex_lock((pthread_mutex_t *)&DAT_0007f7c0);\n      sVar1 = *(short *)(*(int *)(*(int *)(DAT_0007f7b8 + param_1 * 4) + param_2 * 4) + param_3 * 6\n                        + 2);\n      pthread_mutex_unlock((pthread_mutex_t *)&DAT_0007f7c0);\n      return (int)sVar1;\n    }\n  }\n  return 0xff;\n}\n\n",
    "FUN_00014ed0": "\nundefined4 FUN_00014ed0(int param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  \n  iVar2 = 0;\n  do {\n    iVar1 = FUN_00014434();\n    if (iVar1 <= iVar2) {\n      return 0;\n    }\n    iVar1 = iVar2 * 4;\n    iVar2 = iVar2 + 1;\n  } while ((*(int *)(DAT_0007f7b4 + iVar1) != param_1) || (iVar1 = FUN_0001e170(), iVar1 == 0));\n  return 1;\n}\n\n",
    "FUN_00014f20": "\nundefined4 FUN_00014f20(void)\n\n{\n  uint uVar1;\n  int iVar2;\n  int iVar3;\n  uint uVar4;\n  \n  uVar4 = 0;\n  do {\n    uVar1 = FUN_0001e29c(uVar4);\n    if (uVar1 != 0) {\n      for (iVar3 = 0; iVar2 = FUN_00014434(uVar1), iVar3 < iVar2; iVar3 = iVar3 + 1) {\n        iVar2 = FUN_0001e170();\n        uVar1 = uVar4 & 0xff;\n        if (iVar2 != 0) {\n          FUN_00051164(uVar4 & 0xff,\n                       (int)(short)*(undefined4 *)(DAT_0007f7b4 + iVar3 * 4) *\n                       (int)(short)DAT_0007f7b0 & 0xff);\n          uVar1 = usleep(10000);\n        }\n      }\n    }\n    uVar4 = uVar4 + 1;\n  } while (uVar4 != 4);\n  return 0;\n}\n\n",
    "FUN_00014fa4": "\nvoid FUN_00014fa4(void)\n\n{\n  undefined uVar1;\n  int iVar2;\n  int iVar3;\n  void *pvVar4;\n  void **ppvVar5;\n  void *pvVar6;\n  undefined4 uVar7;\n  size_t __size;\n  void **ppvVar8;\n  void **ppvVar9;\n  void *pvVar10;\n  pthread_attr_t apStack_820 [57];\n  \n  iVar2 = FUN_00014434();\n  iVar3 = FUN_0001e19c();\n  if (iVar3 < iVar2) {\n    iVar2 = FUN_00014434();\n  }\n  else {\n    iVar2 = FUN_0001e19c();\n  }\n  if (3 < DAT_0007eb9c) {\n    snprintf(apStack_820[0].__size,0x800,\"max sensor num = %d\",iVar2);\n    FUN_0002e584(3,apStack_820,0);\n  }\n  pvVar4 = malloc(0x10);\n  DAT_0007f7b8 = pvVar4;\n  ppvVar5 = (void **)malloc(0x30);\n  pvVar6 = calloc(iVar2 * 0x48,1);\n  iVar3 = iVar2 * 6;\n  ppvVar8 = (void **)((int)pvVar4 + -4);\n  ppvVar9 = ppvVar5 + 0xc;\n  pvVar4 = pvVar6;\n  do {\n    ppvVar8 = ppvVar8 + 1;\n    *ppvVar8 = ppvVar5;\n    pvVar10 = (void *)(iVar3 + (int)(void *)(iVar3 + (int)pvVar4));\n    *ppvVar5 = pvVar4;\n    ppvVar5[1] = (void *)(iVar3 + (int)pvVar4);\n    ppvVar5[2] = pvVar10;\n    ppvVar5 = ppvVar5 + 3;\n    pvVar4 = (void *)(iVar3 + (int)pvVar10);\n  } while (ppvVar9 != ppvVar5);\n  DAT_0007f7d8 = (void *)((int)pvVar6 + iVar2 * 0x48);\n  iVar2 = FUN_00014434();\n  DAT_0007f7b4 = malloc(iVar2 << 2);\n  for (iVar2 = 0; iVar3 = FUN_00014434(), pvVar4 = DAT_0007f7b4, iVar2 < iVar3; iVar2 = iVar2 + 1) {\n    uVar7 = FUN_0001e180(iVar2);\n    *(undefined4 *)((int)pvVar4 + iVar2 * 4) = uVar7;\n  }\n  __size = FUN_0001e19c();\n  DAT_0007f7dc = malloc(__size);\n  for (iVar2 = 0; iVar3 = FUN_0001e19c(), iVar2 < iVar3; iVar2 = iVar2 + 1) {\n    uVar1 = FUN_0001e1ac(iVar2);\n    *(undefined *)((int)DAT_0007f7dc + iVar2) = uVar1;\n  }\n  pthread_attr_init(apStack_820);\n  pthread_attr_setstacksize(apStack_820,0x100000);\n  DAT_0007f7e0 = 1;\n  pthread_create(&DAT_0007f7e4,apStack_820,(__start_routine *)&DAT_0001585c,(void *)0x0);\n  pthread_detach(DAT_0007f7e4);\n  return;\n}\n\n",
    "FUN_00015150": "\nvoid FUN_00015150(void)\n\n{\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined4 uStack_804;\n  undefined4 local_800;\n  undefined4 uStack_7fc;\n  undefined4 uStack_7f8;\n  \n  if (DAT_0007f7e0 != 0) {\n    if (DAT_0007eb9c < 4) {\n      DAT_0007f7e0 = 0;\n    }\n    else {\n      local_810._0_1_ = 'u';\n      local_810._1_1_ = 'n';\n      local_810._2_1_ = 'i';\n      local_810._3_1_ = 'n';\n      uStack_80c._0_1_ = 'i';\n      uStack_80c._1_1_ = 't';\n      uStack_80c._2_1_ = '_';\n      uStack_80c._3_1_ = 't';\n      uStack_808._0_1_ = 'e';\n      uStack_808._1_1_ = 'm';\n      uStack_808._2_1_ = 'p';\n      uStack_808._3_1_ = '_';\n      uStack_804._0_1_ = 'i';\n      uStack_804._1_1_ = 'n';\n      uStack_804._2_1_ = 'f';\n      uStack_804._3_1_ = 'o';\n      local_800 = local_800 & 0xffffff00;\n      FUN_0002e584(3,&local_810,0);\n      DAT_0007f7e0 = 0;\n      if (3 < DAT_0007eb9c) {\n        local_810._0_1_ = 'd';\n        local_810._1_1_ = 'o';\n        local_810._2_1_ = ' ';\n        local_810._3_1_ = 'n';\n        uStack_80c._0_1_ = 'o';\n        uStack_80c._1_1_ = 't';\n        uStack_80c._2_1_ = ' ';\n        uStack_80c._3_1_ = 'r';\n        uStack_808._0_1_ = 'e';\n        uStack_808._1_1_ = 'a';\n        uStack_808._2_1_ = 'd';\n        uStack_808._3_1_ = ' ';\n        uStack_804._0_1_ = 't';\n        uStack_804._1_1_ = 'e';\n        uStack_804._2_1_ = 'm';\n        uStack_804._3_1_ = 'p';\n        local_800._0_1_ = ' ';\n        local_800._1_1_ = 'a';\n        local_800._2_1_ = 'n';\n        local_800._3_1_ = 'y';\n        uStack_7fc._0_1_ = 'm';\n        uStack_7fc._1_1_ = 'o';\n        uStack_7fc._2_1_ = 'r';\n        uStack_7fc._3_1_ = 'e';\n        uStack_7f8._0_1_ = '.';\n        uStack_7f8._1_1_ = '.';\n        uStack_7f8._2_1_ = '.';\n        uStack_7f8._3_1_ = '\\0';\n        FUN_0002e584(3,&local_810,0);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
    "FUN_00015210": "\nint FUN_00015210(undefined4 param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  char acStack_810 [2048];\n  \n  iVar1 = FUN_0001e170();\n  if (iVar1 != 0) {\n    iVar1 = 0;\n    pthread_mutex_lock((pthread_mutex_t *)&DAT_0007f7c0);\n    DAT_0007f7b0 = param_1;\n    FUN_00014f20();\n    while ((iVar2 = FUN_0001e29c(iVar1), iVar2 == 0 || (iVar2 = FUN_000146c8(iVar1), iVar2 == 0))) {\n      iVar1 = iVar1 + 1;\n      if (iVar1 == 4) {\n        DAT_0007f7bc = 1;\n        pthread_mutex_unlock((pthread_mutex_t *)&DAT_0007f7c0);\n        return 0;\n      }\n    }\n    if (3 < DAT_0007eb9c) {\n      snprintf(acStack_810,0x800,\"calibration sensor on chain %d failed\",iVar1);\n      FUN_0002e584(3,acStack_810,0);\n    }\n    DAT_0007f7bc = 1;\n    pthread_mutex_unlock((pthread_mutex_t *)&DAT_0007f7c0);\n    iVar1 = -1;\n  }\n  return iVar1;\n}\n\n",
    "FUN_000152f0": "\nint FUN_000152f0(int param_1,int param_2)\n\n{\n  short sVar1;\n  int iVar2;\n  char *pcVar3;\n  int iVar4;\n  \n  pcVar3 = (char *)FUN_0001e0c0();\n  iVar4 = strcmp(pcVar3,\"BHB28601\");\n  if (iVar4 != 0) {\n    pcVar3 = (char *)FUN_0001e0c0();\n    iVar4 = strcmp(pcVar3,\"BHB28501\");\n    if (iVar4 != 0) {\n      iVar4 = 0;\n      goto LAB_00014cc0;\n    }\n  }\n  iVar4 = 1;\nLAB_00014cc0:\n  if (iVar4 == 0) {\n    iVar2 = FUN_0001e19c();\n    if (iVar2 <= param_2) {\n      return 0xff;\n    }\n  }\n  else {\n    iVar2 = FUN_0001e170();\n    if (iVar2 == 0) {\n      return 0xff;\n    }\n    iVar2 = FUN_00014434();\n    if (iVar2 <= param_2) {\n      return 0xff;\n    }\n    if (DAT_0007f7bc == 0) {\n      return 0xff;\n    }\n  }\n  if (DAT_0007f7b8 == 0) {\n    return 0xff;\n  }\n  pthread_mutex_lock((pthread_mutex_t *)&DAT_0007f7c0);\n  sVar1 = *(short *)(*(int *)(*(int *)(DAT_0007f7b8 + param_1 * 4) + iVar4 * 4) + param_2 * 6 + 2);\n  pthread_mutex_unlock((pthread_mutex_t *)&DAT_0007f7c0);\n  return (int)sVar1;\n}\n\n",
    "FUN_00015354": "\n/* WARNING: Removing unreachable block (ram,0x00014d0c) */\n/* WARNING: Removing unreachable block (ram,0x00014d18) */\n\nint FUN_00015354(int param_1,int param_2)\n\n{\n  short sVar1;\n  int iVar2;\n  \n  iVar2 = FUN_0001e170();\n  if (iVar2 == 0) {\n    iVar2 = FUN_000152f0(param_1,param_2);\n    if (iVar2 != 0xff) {\n      return (int)(short)((short)iVar2 + 10);\n    }\n    return 0xff;\n  }\n  iVar2 = FUN_0001e170();\n  if ((((iVar2 != 0) && (iVar2 = FUN_00014434(), param_2 < iVar2)) && (DAT_0007f7bc != 0)) &&\n     (DAT_0007f7b8 != 0)) {\n    pthread_mutex_lock((pthread_mutex_t *)&DAT_0007f7c0);\n    sVar1 = *(short *)(*(int *)(*(int *)(DAT_0007f7b8 + param_1 * 4) + 4) + param_2 * 6 + 2);\n    pthread_mutex_unlock((pthread_mutex_t *)&DAT_0007f7c0);\n    return (int)sVar1;\n  }\n  return 0xff;\n}\n\n",
    "FUN_000153a0": "\n/* WARNING: Removing unreachable block (ram,0x00014d0c) */\n/* WARNING: Removing unreachable block (ram,0x00014d18) */\n\nint FUN_000153a0(int param_1,int param_2)\n\n{\n  short sVar1;\n  int iVar2;\n  \n  iVar2 = FUN_0001e170();\n  if (iVar2 == 0) {\n    iVar2 = FUN_000152f0(param_1,param_2);\n    if (iVar2 != 0xff) {\n      return (int)(short)((short)iVar2 + 0xf);\n    }\n    return 0xff;\n  }\n  iVar2 = FUN_0001e170();\n  if ((((iVar2 != 0) && (iVar2 = FUN_00014434(), param_2 < iVar2)) && (DAT_0007f7bc != 0)) &&\n     (DAT_0007f7b8 != 0)) {\n    pthread_mutex_lock((pthread_mutex_t *)&DAT_0007f7c0);\n    sVar1 = *(short *)(*(int *)(*(int *)(DAT_0007f7b8 + param_1 * 4) + 8) + param_2 * 6 + 2);\n    pthread_mutex_unlock((pthread_mutex_t *)&DAT_0007f7c0);\n    return (int)sVar1;\n  }\n  return 0xff;\n}\n\n",
    "FUN_000153ec": "\nint FUN_000153ec(undefined4 param_1,uint param_2)\n\n{\n  int iVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  int iVar5;\n  \n  iVar1 = FUN_0001e29c();\n  if (param_2 < 3 && iVar1 != 0) {\n    if (param_2 == 0) {\n      uVar2 = FUN_0001e19c();\n    }\n    else {\n      uVar2 = FUN_00014434();\n    }\n    if (0 < (int)uVar2) {\n      uVar4 = 0;\n      iVar1 = 0xff;\n      do {\n        if (param_2 == 0) {\n          iVar3 = FUN_000152f0();\n        }\n        else if (param_2 == 1) {\n          iVar3 = FUN_00015354(param_1,uVar4 & 0xff);\n        }\n        else {\n          iVar3 = FUN_000153a0();\n        }\n        iVar5 = iVar1;\n        if (((iVar3 != 0xff) && (iVar5 = iVar3, iVar1 != 0xff)) && (iVar5 = iVar1, iVar1 < iVar3)) {\n          iVar5 = iVar3;\n        }\n        uVar4 = uVar4 + 1;\n        iVar1 = iVar5;\n      } while (uVar4 != uVar2);\n      return iVar5;\n    }\n  }\n  return 0xff;\n}\n\n",
    "FUN_000154a8": "\nint FUN_000154a8(undefined4 param_1)\n\n{\n  short sVar1;\n  char *pcVar2;\n  int iVar3;\n  \n  pcVar2 = (char *)FUN_0001e0c0();\n  iVar3 = strcmp(pcVar2,\"BHB28601\");\n  if (iVar3 != 0) {\n    pcVar2 = (char *)FUN_0001e0c0();\n    iVar3 = strcmp(pcVar2,\"BHB28501\");\n    if (iVar3 != 0) {\n      sVar1 = FUN_000153ec(param_1,0);\n      return (int)sVar1;\n    }\n  }\n  sVar1 = FUN_000153ec(param_1,1);\n  return (int)sVar1;\n}\n\n",
    "FUN_00015508": "\nint FUN_00015508(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  \n  iVar2 = 0;\n  iVar3 = 0xff;\n  do {\n    iVar1 = FUN_000154a8(iVar2);\n    iVar4 = iVar3;\n    if ((iVar1 != 0xff) && (iVar4 = iVar1, iVar3 != 0xff)) {\n      if (iVar3 <= iVar1) {\n        iVar3 = iVar1;\n      }\n      iVar4 = (int)(short)iVar3;\n    }\n    iVar2 = iVar2 + 1;\n    iVar3 = iVar4;\n  } while (iVar2 != 4);\n  return iVar4;\n}\n\n",
    "FUN_00015550": "\nint FUN_00015550(undefined4 param_1)\n\n{\n  short sVar1;\n  \n  sVar1 = FUN_000153ec(param_1,1);\n  return (int)sVar1;\n}\n\n",
    "FUN_00015564": "\nint FUN_00015564(void)\n\n{\n  short sVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  \n  iVar3 = 0;\n  iVar4 = 0xff;\n  do {\n    sVar1 = FUN_000153ec(iVar3,1);\n    iVar2 = (int)sVar1;\n    iVar5 = iVar4;\n    if (((iVar2 != 0xff) && (iVar5 = iVar2, iVar4 != 0xff)) && (iVar5 = iVar4, iVar4 <= iVar2)) {\n      iVar5 = iVar2;\n    }\n    iVar3 = iVar3 + 1;\n    iVar4 = iVar5;\n  } while (iVar3 != 4);\n  return iVar5;\n}\n\n",
    "FUN_000155b0": "\nint FUN_000155b0(undefined4 param_1)\n\n{\n  short sVar1;\n  \n  sVar1 = FUN_000153ec(param_1,2);\n  return (int)sVar1;\n}\n\n",
    "FUN_000155c4": "\nint FUN_000155c4(void)\n\n{\n  short sVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  \n  iVar3 = 0;\n  iVar4 = 0xff;\n  do {\n    sVar1 = FUN_000153ec(iVar3,2);\n    iVar2 = (int)sVar1;\n    iVar5 = iVar4;\n    if (((iVar2 != 0xff) && (iVar5 = iVar2, iVar4 != 0xff)) && (iVar5 = iVar4, iVar4 <= iVar2)) {\n      iVar5 = iVar2;\n    }\n    iVar3 = iVar3 + 1;\n    iVar4 = iVar5;\n  } while (iVar3 != 4);\n  return iVar5;\n}\n\n",
    "FUN_00015610": "\nint FUN_00015610(undefined4 param_1,uint param_2)\n\n{\n  int iVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  int iVar5;\n  \n  iVar1 = FUN_0001e29c();\n  if (param_2 < 3 && iVar1 != 0) {\n    if (param_2 == 0) {\n      uVar2 = FUN_0001e19c();\n    }\n    else {\n      uVar2 = FUN_00014434();\n    }\n    if (0 < (int)uVar2) {\n      uVar4 = 0;\n      iVar1 = 0xff;\n      do {\n        if (param_2 == 0) {\n          iVar3 = FUN_000152f0();\n        }\n        else if (param_2 == 1) {\n          iVar3 = FUN_00015354(param_1,uVar4 & 0xff);\n        }\n        else {\n          iVar3 = FUN_000153a0();\n        }\n        iVar5 = iVar1;\n        if (((iVar3 != 0xff) && (iVar5 = iVar3, iVar1 != 0xff)) && (iVar5 = iVar1, iVar3 <= iVar1))\n        {\n          iVar5 = iVar3;\n        }\n        uVar4 = uVar4 + 1;\n        iVar1 = iVar5;\n      } while (uVar4 != uVar2);\n      return iVar5;\n    }\n  }\n  return 0xff;\n}\n\n",
    "FUN_000156cc": "\nint FUN_000156cc(undefined4 param_1)\n\n{\n  short sVar1;\n  char *pcVar2;\n  int iVar3;\n  \n  pcVar2 = (char *)FUN_0001e0c0();\n  iVar3 = strcmp(pcVar2,\"BHB28601\");\n  if (iVar3 != 0) {\n    pcVar2 = (char *)FUN_0001e0c0();\n    iVar3 = strcmp(pcVar2,\"BHB28501\");\n    if (iVar3 != 0) {\n      sVar1 = FUN_00015610(param_1,0);\n      return (int)sVar1;\n    }\n  }\n  sVar1 = FUN_00015610(param_1,1);\n  return (int)sVar1;\n}\n\n",
    "FUN_0001572c": "\nint FUN_0001572c(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  \n  iVar2 = 0xff;\n  iVar1 = 0;\n  do {\n    iVar3 = iVar1 + 1;\n    iVar1 = FUN_000156cc(iVar1);\n    if (iVar1 < iVar2) {\n      iVar2 = iVar1;\n    }\n    iVar2 = (int)(short)iVar2;\n    iVar1 = iVar3;\n  } while (iVar3 != 4);\n  return iVar2;\n}\n\n",
    "FUN_00015760": "\nint FUN_00015760(undefined4 param_1)\n\n{\n  short sVar1;\n  \n  sVar1 = FUN_00015610(param_1,1);\n  return (int)sVar1;\n}\n\n",
    "FUN_00015774": "\nint FUN_00015774(void)\n\n{\n  short sVar1;\n  int iVar2;\n  int iVar3;\n  \n  iVar2 = 0;\n  iVar3 = 0xff;\n  do {\n    sVar1 = FUN_00015610(iVar2,1);\n    iVar2 = iVar2 + 1;\n    if (sVar1 < iVar3) {\n      iVar3 = (int)sVar1;\n    }\n  } while (iVar2 != 4);\n  return iVar3;\n}\n\n",
    "FUN_000157ac": "\nint FUN_000157ac(undefined4 param_1)\n\n{\n  short sVar1;\n  \n  sVar1 = FUN_00015610(param_1,2);\n  return (int)sVar1;\n}\n\n",
    "FUN_000157c0": "\nint FUN_000157c0(void)\n\n{\n  short sVar1;\n  int iVar2;\n  int iVar3;\n  \n  iVar2 = 0;\n  iVar3 = 0xff;\n  do {\n    sVar1 = FUN_00015610(iVar2,2);\n    iVar2 = iVar2 + 1;\n    if (sVar1 < iVar3) {\n      iVar3 = (int)sVar1;\n    }\n  } while (iVar2 != 4);\n  return iVar3;\n}\n\n",
    "FUN_000157f8": "\nint FUN_000157f8(int param_1,int param_2)\n\n{\n  int iVar1;\n  char *pcVar2;\n  int iVar3;\n  \n  pcVar2 = (char *)FUN_0001e0c0();\n  iVar3 = strcmp(pcVar2,\"BHB28601\");\n  if (iVar3 != 0) {\n    pcVar2 = (char *)FUN_0001e0c0();\n    iVar3 = strcmp(pcVar2,\"BHB28501\");\n    if (iVar3 != 0) {\n      iVar3 = 0;\n      goto LAB_00014d60;\n    }\n  }\n  iVar3 = 1;\nLAB_00014d60:\n  pthread_mutex_lock((pthread_mutex_t *)&DAT_0007f7c0);\n  if (iVar3 == 0) {\n    iVar1 = FUN_0001e19c();\n  }\n  else {\n    iVar1 = FUN_00014434();\n  }\n  if ((param_1 < 4) && (param_2 < iVar1)) {\n    iVar3 = (int)*(short *)(*(int *)(*(int *)(DAT_0007f7b8 + param_1 * 4) + iVar3 * 4) + param_2 * 6\n                           + 4);\n  }\n  else {\n    iVar3 = 0;\n  }\n  pthread_mutex_unlock((pthread_mutex_t *)&DAT_0007f7c0);\n  return iVar3;\n}\n\n",
    "FUN_0001629c": "\nvoid FUN_0001629c(void)\n\n{\n  DAT_0007f7e8 = 1;\n  return;\n}\n\n",
    "FUN_000162b0": "\nvoid FUN_000162b0(void)\n\n{\n  DAT_0007f7e8 = 0;\n  return;\n}\n\n",
    "FUN_000162c4": "\nvoid FUN_000162c4(undefined4 param_1,int param_2)\n\n{\n  char cVar1;\n  char cVar2;\n  int iVar3;\n  int iVar4;\n  undefined local_19 [5];\n  \n  if (param_2 == 0) {\n    local_19[0] = 4;\n  }\n  else {\n    local_19[0] = 0x44;\n  }\n  iVar4 = 0;\n  while( true ) {\n    iVar3 = FUN_00014434();\n    if (iVar3 <= iVar4) break;\n    cVar1 = FUN_0001e180(iVar4);\n    cVar2 = FUN_0001e160();\n    FUN_000142bc(param_1,cVar1 * cVar2,9,1,local_19);\n    iVar4 = iVar4 + 1;\n  }\n  return;\n}\n\n",
    "FUN_00016330": "\nvoid FUN_00016330(undefined4 param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  \n  iVar2 = 0;\n  iVar1 = FUN_0001e29c(0);\n  while( true ) {\n    if (iVar1 != 0) {\n      FUN_000162c4(iVar2,param_1);\n    }\n    iVar2 = iVar2 + 1;\n    if (iVar2 == 4) break;\n    iVar1 = FUN_0001e29c(iVar2);\n  }\n  return;\n}\n\n",
    "FUN_00016378": "\nundefined4 FUN_00016378(void)\n\n{\n  int iVar1;\n  void *pvVar2;\n  size_t __nmemb;\n  int iVar3;\n  void **ppvVar4;\n  void *__ptr;\n  undefined4 local_818;\n  undefined4 uStack_814;\n  undefined4 uStack_810;\n  undefined4 uStack_80c;\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined local_7fc;\n  \n  if ((DAT_0007f814 == (void *)0x0) && (DAT_0007f814 = calloc(1,0x20), DAT_0007f814 == (void *)0x0))\n  {\n    if (3 < DAT_0007eb9c) {\n      local_818._0_1_ = 'N';\n      local_818._1_1_ = 'o';\n      local_818._2_1_ = ' ';\n      local_818._3_1_ = 'm';\n      uStack_814._0_1_ = 'e';\n      uStack_814._1_1_ = 'm';\n      uStack_814._2_1_ = 'o';\n      uStack_814._3_1_ = 'r';\n      uStack_810._0_1_ = 'y';\n      uStack_810._1_1_ = ' ';\n      uStack_810._2_1_ = 'f';\n      uStack_810._3_1_ = 'o';\n      uStack_80c._0_1_ = 'r';\n      uStack_80c._1_1_ = ' ';\n      uStack_80c._2_1_ = 'c';\n      uStack_80c._3_1_ = 'o';\n      local_808._0_1_ = 'n';\n      local_808._1_1_ = 'f';\n      local_808._2_1_ = 'i';\n      local_808._3_1_ = 'g';\n      uStack_804._0_1_ = 'u';\n      uStack_804._1_1_ = 'r';\n      uStack_804._2_1_ = 'a';\n      uStack_804._3_1_ = 'i';\n      uStack_800._0_1_ = 'o';\n      uStack_800._1_1_ = 'n';\n      uStack_800._2_1_ = '.';\n      uStack_800._3_1_ = '\\n';\n      local_7fc = 0;\n      FUN_0002e584(3,&local_818,0);\n      __ptr = DAT_0007f814;\nLAB_00016458:\n      if (__ptr != (void *)0x0) {\n        ppvVar4 = (void **)((int)__ptr + -4);\n        do {\n          ppvVar4 = ppvVar4 + 1;\n          pvVar2 = *ppvVar4;\n          if (pvVar2 != (void *)0x0) {\n            if (*(void **)((int)pvVar2 + 0x3f) != (void *)0x0) {\n              free(*(void **)((int)pvVar2 + 0x3f));\n              pvVar2 = *ppvVar4;\n              *(undefined *)((int)pvVar2 + 0x3f) = 0;\n              *(undefined *)((int)pvVar2 + 0x40) = 0;\n              *(undefined *)((int)pvVar2 + 0x41) = 0;\n              *(undefined *)((int)pvVar2 + 0x42) = 0;\n              pvVar2 = *ppvVar4;\n            }\n            free(pvVar2);\n            *ppvVar4 = (void *)0x0;\n          }\n        } while (ppvVar4 != (void **)((int)__ptr + 0xc));\n        free(__ptr);\n        DAT_0007f814 = (void *)0x0;\n        return 0xffffffff;\n      }\n    }\n    return 0xffffffff;\n  }\n  iVar3 = 0;\n  do {\n    iVar1 = FUN_0001e29c(iVar3);\n    __ptr = DAT_0007f814;\n    if ((iVar1 != 0) && (*(int *)((int)DAT_0007f814 + iVar3 * 4) == 0)) {\n      pvVar2 = calloc(1,0x48);\n      *(void **)((int)__ptr + iVar3 * 4) = pvVar2;\n      if (pvVar2 == (void *)0x0) {\n        if (3 < DAT_0007eb9c) {\n          snprintf((char *)&local_818,0x800,\"No memory for configuraion for chain %d.\\n\",iVar3);\n          FUN_0002e584(3,&local_818,0);\n          __ptr = DAT_0007f814;\n        }\n        goto LAB_00016458;\n      }\n      __nmemb = FUN_0001e0f0();\n      __ptr = DAT_0007f814;\n      iVar1 = *(int *)((int)DAT_0007f814 + iVar3 * 4);\n      pvVar2 = calloc(__nmemb,1);\n      *(void **)(iVar1 + 0x3f) = pvVar2;\n      if (*(int *)(*(int *)((int)__ptr + iVar3 * 4) + 0x3f) == 0) {\n        if (3 < DAT_0007eb9c) {\n          snprintf((char *)&local_818,0x800,\"No memory for configuraion for chain %d.\\n\",iVar3);\n          FUN_0002e584(3,&local_818,0);\n          __ptr = DAT_0007f814;\n        }\n        goto LAB_00016458;\n      }\n    }\n    iVar3 = iVar3 + 1;\n    if (iVar3 == 4) {\n      return 0;\n    }\n  } while( true );\n}\n\n",
    "FUN_00016580": "\nundefined4 FUN_00016580(void)\n\n{\n  bool bVar1;\n  int iVar2;\n  int *piVar3;\n  int *piVar4;\n  char *__s2;\n  uint uVar5;\n  undefined4 uVar6;\n  char *pcVar7;\n  int iVar8;\n  undefined4 uVar9;\n  uint uVar10;\n  uint uVar11;\n  undefined8 uVar12;\n  undefined auStack_924 [252];\n  undefined4 local_828;\n  undefined4 uStack_824;\n  undefined4 uStack_820;\n  undefined4 uStack_81c;\n  undefined4 uStack_818;\n  undefined local_814;\n  \n  iVar8 = 0;\n  do {\n    iVar2 = FUN_0001e29c(iVar8);\n    if (iVar2 != 0) {\n      FUN_000440e8(iVar8);\n      FUN_000304d4(10);\n    }\n    iVar8 = iVar8 + 1;\n  } while (iVar8 != 4);\n  memset(&DAT_0007f818,0,0xa0);\n  piVar3 = (int *)FUN_0004d6e4(\"/etc/levels.json\",0,auStack_924);\n  if ((piVar3 == (int *)0x0) || (*piVar3 != 0)) {\n    if (DAT_0007eb9c < 4) {\n      return 0xffffffff;\n    }\n    snprintf((char *)&local_828,0x800,\"load vol-freq config file %s failed\\n\",\"/etc/levels.json\");\n    FUN_0002e584(3,&local_828,0);\n    return 0xffffffff;\n  }\n  piVar4 = (int *)FUN_0004e234(piVar3,\"miner\");\n  if ((piVar4 == (int *)0x0) || (*piVar4 != 2)) {\n    if (DAT_0007eb9c < 5) {\n      return 0xfffffffe;\n    }\n    pcVar7 = \"failed to get miner type in %s\\n\";\nLAB_000166cc:\n    uVar9 = 0xfffffffe;\n    snprintf((char *)&local_828,0x800,pcVar7,\"/etc/levels.json\");\n    FUN_0002e584(4,&local_828,0);\n  }\n  else {\n    if (4 < DAT_0007eb9c) {\n      uVar9 = FUN_0004e768();\n      snprintf((char *)&local_828,0x800,\"miner type in %s is %s\",\"/etc/levels.json\",uVar9);\n      FUN_0002e584(4,&local_828,0);\n    }\n    pcVar7 = (char *)FUN_0004e768(piVar4);\n    pcVar7 = strstr(&DAT_00080ca0,pcVar7);\n    if (pcVar7 != (char *)0x0) {\n      __s2 = (char *)FUN_0004e768(piVar4);\n      iVar8 = strcasecmp(pcVar7,__s2);\n      if (iVar8 == 0) {\n        uVar12 = FUN_0004e234(piVar3,\"levels\");\n        piVar4 = (int *)uVar12;\n        if ((piVar4 != (int *)0x0) && (*piVar4 == 1)) {\n          pcVar7 = (char *)((ulonglong)uVar12 >> 0x20);\n          uVar10 = 0;\n          iVar8 = 0;\n          while( true ) {\n            uVar5 = FUN_0004e5a0(piVar4,pcVar7);\n            uVar11 = uVar10 + 1;\n            if (0x13 < iVar8 || uVar5 <= uVar10) break;\n            uVar9 = FUN_0004e5bc(piVar4,uVar10);\n            pcVar7 = \"frequency\";\n            uVar10 = uVar11;\n            if (*piVar3 == 0) {\n              uVar12 = FUN_0004e234();\n              pcVar7 = (char *)((ulonglong)uVar12 >> 0x20);\n              if (((int *)uVar12 != (int *)0x0) && (*(int *)uVar12 == 3)) {\n                uVar6 = FUN_0004e9c4();\n                (&DAT_0007f81c)[iVar8 * 2] = uVar6;\n                uVar12 = FUN_0004e234(uVar9,\"voltage\");\n                pcVar7 = (char *)((ulonglong)uVar12 >> 0x20);\n                if (((int *)uVar12 != (int *)0x0) && (*(int *)uVar12 == 3)) {\n                  uVar12 = FUN_0004e9c4();\n                  pcVar7 = (char *)((ulonglong)uVar12 >> 0x20);\n                  (&DAT_0007f818)[iVar8 * 2] = (int)uVar12;\n                  iVar8 = iVar8 + 1;\n                }\n              }\n            }\n          }\n          iVar8 = 0;\n          do {\n            iVar2 = iVar8 + 1;\n            if ((((&DAT_0007f818)[iVar8 * 2] != 0) && ((&DAT_0007f81c)[iVar8 * 2] != 0)) &&\n               (4 < DAT_0007eb9c)) {\n              snprintf((char *)&local_828,0x800,\"level %d, voltage = %d frequency = %d\",iVar2,\n                       (&DAT_0007f818)[iVar8 * 2],(&DAT_0007f81c)[iVar8 * 2]);\n              FUN_0002e584(4,&local_828,0);\n            }\n            iVar8 = iVar2;\n          } while (iVar2 != 0x14);\n          if (piVar3[1] == -1) {\n            return 0;\n          }\n          piVar4 = piVar3 + 1;\n          DataMemoryBarrier(0xb);\n          do {\n            iVar8 = *piVar4;\n            bVar1 = (bool)hasExclusiveAccess(piVar4);\n          } while (!bVar1);\n          *piVar4 = iVar8 + -1;\n          if (iVar8 + -1 != 0) {\n            return 0;\n          }\n          FUN_0004eb6c(piVar3);\n          return 0;\n        }\n        if (DAT_0007eb9c < 5) {\n          return 0xfffffffe;\n        }\n        pcVar7 = \"failed to get levels in %s\\n\";\n        goto LAB_000166cc;\n      }\n    }\n    if (DAT_0007eb9c < 4) {\n      uVar9 = 0xfffffffd;\n    }\n    else {\n      uVar9 = 0xfffffffd;\n      local_828._0_1_ = 'm';\n      local_828._1_1_ = 'i';\n      local_828._2_1_ = 'n';\n      local_828._3_1_ = 'e';\n      uStack_824._0_1_ = 'r';\n      uStack_824._1_1_ = ' ';\n      uStack_824._2_1_ = 't';\n      uStack_824._3_1_ = 'y';\n      uStack_820._0_1_ = 'p';\n      uStack_820._1_1_ = 'e';\n      uStack_820._2_1_ = ' ';\n      uStack_820._3_1_ = 'n';\n      uStack_81c._0_1_ = 'o';\n      uStack_81c._1_1_ = 't';\n      uStack_81c._2_1_ = ' ';\n      uStack_81c._3_1_ = 'm';\n      uStack_818._0_1_ = 'a';\n      uStack_818._1_1_ = 't';\n      uStack_818._2_1_ = 'c';\n      uStack_818._3_1_ = 'h';\n      local_814 = 0;\n      FUN_0002e584(3,&local_828,0);\n    }\n  }\n  return uVar9;\n}\n\n",
    "FUN_00016a04": "\nundefined4 FUN_00016a04(void)\n\n{\n  byte bVar1;\n  int iVar2;\n  uint uVar3;\n  int iVar4;\n  int iVar5;\n  uint uVar6;\n  uint uVar7;\n  undefined4 uVar8;\n  undefined auStack_928 [57];\n  undefined auStack_8ef [199];\n  undefined4 local_828;\n  undefined4 uStack_824;\n  undefined4 uStack_820;\n  undefined4 uStack_81c;\n  undefined4 local_818;\n  undefined4 uStack_814;\n  undefined4 uStack_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined local_804;\n  \n  if ((DAT_0007f814 == 0) || (*(char *)(DAT_0007f814 + 0x1c) == '\\0')) {\n    if (3 < DAT_0007eb9c) {\n      local_828._0_1_ = 'N';\n      local_828._1_1_ = 'o';\n      local_828._2_1_ = ' ';\n      local_828._3_1_ = 'f';\n      uStack_824._0_1_ = 'i';\n      uStack_824._1_1_ = 'x';\n      uStack_824._2_1_ = 't';\n      uStack_824._3_1_ = 'u';\n      uStack_820._0_1_ = 'r';\n      uStack_820._1_1_ = 'e';\n      uStack_820._2_1_ = ' ';\n      uStack_820._3_1_ = 'c';\n      uStack_81c._0_1_ = 'o';\n      uStack_81c._1_1_ = 'n';\n      uStack_81c._2_1_ = 'f';\n      uStack_81c._3_1_ = 'i';\n      local_818._0_1_ = 'g';\n      local_818._1_1_ = 'u';\n      local_818._2_1_ = 'r';\n      local_818._3_1_ = 'a';\n      uStack_814._0_1_ = 't';\n      uStack_814._1_1_ = 'i';\n      uStack_814._2_1_ = 'o';\n      uStack_814._3_1_ = 'n';\n      uStack_810._0_1_ = ' ';\n      uStack_810._1_1_ = 'f';\n      uStack_810._2_1_ = 'o';\n      uStack_810._3_1_ = 'r';\n      uStack_80c._0_1_ = ' ';\n      uStack_80c._1_1_ = 'f';\n      uStack_80c._2_1_ = 'l';\n      uStack_80c._3_1_ = 'u';\n      uStack_808._0_1_ = 's';\n      uStack_808._1_1_ = 'h';\n      uStack_808._2_1_ = '.';\n      uStack_808._3_1_ = '\\n';\n      local_804 = 0;\n      FUN_0002e584(3,&local_828,0);\n      return 0xffffffff;\n    }\n    uVar8 = 0xffffffff;\n  }\n  else {\n    iVar4 = 0;\n    uVar8 = 0;\n    do {\n      iVar2 = FUN_0001e29c(iVar4);\n      iVar5 = DAT_0007f814;\n      if (iVar2 != 0) {\n        memset(auStack_928,0,0x100);\n        iVar5 = *(int *)(iVar5 + iVar4 * 4);\n        if (3 < DAT_0007eb9c) {\n          snprintf((char *)&local_828,0x800,\"[chain %d] Update miner info in eeprom.\\n\",iVar4);\n          FUN_0002e584(3,&local_828,0);\n        }\n        uVar3 = (uint)*(byte *)(iVar5 + 1);\n        bVar1 = *(byte *)(iVar5 + 0x38);\n        iVar2 = -uVar3 + 0x39;\n        memcpy(auStack_928,(void *)(iVar5 + uVar3),(uint)bVar1);\n        uVar6 = ((uint)bVar1 - iVar2) + 7 & 0xfffffff8;\n        uVar7 = (uVar3 + 5 & 0xfffffff8) + 2;\n        FUN_00018e48(auStack_8ef + -uVar3,uVar6,1);\n        iVar2 = iVar2 + uVar6;\n        if ((int)(0x100 - uVar7) < iVar2) {\n          uVar8 = 0xffffffff;\n          if (3 < DAT_0007eb9c) {\n            snprintf((char *)&local_828,0x800,\n                     \"[chain %d] Update miner info Failed, EEPROM does not have enough space.\\n\",\n                     iVar4);\n            FUN_0002e584(3,&local_828,0);\n          }\n        }\n        else {\n          FUN_00044200(iVar4,uVar7 & 0xfe,auStack_928,iVar2);\n        }\n      }\n      iVar4 = iVar4 + 1;\n    } while (iVar4 != 4);\n  }\n  return uVar8;\n}\n\n",
    "FUN_00016bd8": "\nvoid FUN_00016bd8(byte *param_1)\n\n{\n  byte *pbVar1;\n  undefined2 local_810 [1026];\n  \n  if (DAT_0007eb9c < 4) {\n    return;\n  }\n  snprintf((char *)local_810,0x800,\"%-30s : 0x%04x\\n\",\"key_version\",*param_1 & 0xf);\n  FUN_0002e584(3,local_810,0);\n  if (DAT_0007eb9c < 4) {\nLAB_00016d44:\n    if (3 < DAT_0007eb9c) {\n      snprintf((char *)local_810,0x800,\"%-30s : %s\\n\",\"chip_technology\",\n               *(undefined4 *)(param_1 + 0x1f));\n      FUN_0002e584(3,local_810,0);\n      if (DAT_0007eb9c < 4) {\n        return;\n      }\n      snprintf((char *)local_810,0x800,\"%-30s : 0x%02x\\n\",\"fixture_fmt_version\",(uint)param_1[2]);\n      FUN_0002e584(3,local_810,0);\n      goto LAB_00016dc4;\n    }\nLAB_00016e4c:\n    if (3 < DAT_0007eb9c) {\n      snprintf((char *)local_810,0x800,\"%-30s : 0x%02x-%02x\\n\",&DAT_00060cb8,(uint)param_1[0x1d],\n               (uint)param_1[0x1e]);\n      FUN_0002e584(3,local_810,0);\n      if (DAT_0007eb9c < 4) {\n        return;\n      }\n      snprintf((char *)local_810,0x800,\"%-30s : %u\\n\",\"hash_board_voltage\",\n               (uint)*(ushort *)(param_1 + 0x23));\n      FUN_0002e584(3,local_810,0);\n      goto LAB_00016ed4;\n    }\nLAB_00016f5c:\n    if (3 < DAT_0007eb9c) {\n      snprintf((char *)local_810,0x800,\"%-30s : %u\\n\",\"inlet_temperature\",(uint)param_1[0x2b]);\n      FUN_0002e584(3,local_810,0);\n      if (DAT_0007eb9c < 4) {\n        return;\n      }\n      snprintf((char *)local_810,0x800,\"%-30s : %u\\n\",\"outlet_temperature\",(uint)param_1[0x2c]);\n      FUN_0002e584(3,local_810,0);\n      goto LAB_00016fdc;\n    }\nLAB_00017084:\n    if (3 < DAT_0007eb9c) {\n      snprintf((char *)local_810,0x800,\"%-30s : 0x%02x-%02x\\n\",\"pic sensor\",\n               (uint)(param_1[0x19] >> 7),param_1[0x19] & 0x7f);\n      FUN_0002e584(3,local_810,0);\n      if (DAT_0007eb9c < 4) {\n        return;\n      }\n      snprintf((char *)local_810,0x800,\"%-30s : 0x%02x\\n\",\"pic sensor addr\",(uint)param_1[0x1a]);\n      FUN_0002e584(3,local_810,0);\n      goto LAB_00017110;\n    }\n  }\n  else {\n    snprintf((char *)local_810,0x800,\"%-30s : 0x%04x\\n\",\"algorithm_code\",(uint)(*param_1 >> 4));\n    FUN_0002e584(3,local_810,0);\n    if (DAT_0007eb9c < 4) {\n      return;\n    }\n    snprintf((char *)local_810,0x800,\"%-30s : 0x%04x\\n\",\"fixture_info_len\",(uint)param_1[1]);\n    FUN_0002e584(3,local_810,0);\n    if (3 < DAT_0007eb9c) {\n      snprintf((char *)local_810,0x800,\"%-30s : 0x%04x\\n\",\"fixture_standard\",(uint)param_1[0x2d]);\n      FUN_0002e584(3,local_810,0);\n      if (DAT_0007eb9c < 4) {\n        return;\n      }\n      snprintf((char *)local_810,0x800,\"%-30s : 0x%04x\\n\",\"test_standard\",(uint)param_1[0x2e]);\n      FUN_0002e584(3,local_810,0);\n      goto LAB_00016d44;\n    }\nLAB_00016dc4:\n    if (3 < DAT_0007eb9c) {\n      snprintf((char *)local_810,0x800,\"%-30s : %s\\n\",&DAT_00060c9c,*(undefined4 *)(param_1 + 3));\n      FUN_0002e584(3,local_810,0);\n      if (DAT_0007eb9c < 4) {\n        return;\n      }\n      snprintf((char *)local_810,0x800,\"%-30s : 0x%02x-%02x\\n\",&DAT_00060830,(uint)param_1[0x1b],\n               (uint)param_1[0x1c]);\n      FUN_0002e584(3,local_810,0);\n      goto LAB_00016e4c;\n    }\nLAB_00016ed4:\n    if (3 < DAT_0007eb9c) {\n      snprintf((char *)local_810,0x800,\"%-30s : %u\\n\",\"hash_board_freq\",\n               (uint)*(ushort *)(param_1 + 0x25));\n      FUN_0002e584(3,local_810,0);\n      if (DAT_0007eb9c < 4) {\n        return;\n      }\n      snprintf((char *)local_810,0x800,\"%-30s : %.2f\\n\",\"nonce_response_rate\",\n               (double)*(float *)(param_1 + 0x27));\n      FUN_0002e584(3,local_810,0);\n      goto LAB_00016f5c;\n    }\nLAB_00016fdc:\n    if (3 < DAT_0007eb9c) {\n      snprintf((char *)local_810,0x800,\"%-30s : 0x%02x-%02x\\n\",\"asic sensor\",\n               (uint)(param_1[0x14] >> 7),param_1[0x14] & 0x7f);\n      FUN_0002e584(3,local_810,0);\n      if (DAT_0007eb9c < 4) {\n        return;\n      }\n      pbVar1 = *(byte **)(param_1 + 0x15);\n      snprintf((char *)local_810,0x800,\"%-30s : 0x%02x-%02x-%02x-%02x\\n\",\"asic sensor addr\",\n               (uint)*pbVar1,(uint)pbVar1[1],(uint)pbVar1[2],(uint)pbVar1[3]);\n      FUN_0002e584(3,local_810,0);\n      goto LAB_00017084;\n    }\nLAB_00017110:\n    if (DAT_0007eb9c < 4) goto LAB_00017210;\n    snprintf((char *)local_810,0x800,\"%-30s : bin%d\\n\",\"chip_bin\",(uint)param_1[0xf]);\n    FUN_0002e584(3,local_810,0);\n    if (DAT_0007eb9c < 4) {\n      return;\n    }\n    snprintf((char *)local_810,0x800,\"%-30s : %s\\n\",&DAT_00060db0,*(undefined4 *)(param_1 + 0x10));\n    FUN_0002e584(3,local_810,0);\n  }\n  if (DAT_0007eb9c < 4) {\n    return;\n  }\n  snprintf((char *)local_810,0x800,\"%-30s : %s\\n\",\"chip_die\",*(undefined4 *)(param_1 + 7));\n  FUN_0002e584(3,local_810,0);\n  if (DAT_0007eb9c < 4) {\n    return;\n  }\n  snprintf((char *)local_810,0x800,\"%-30s : %s\\n\",\"chip_marking\",*(undefined4 *)(param_1 + 0xb));\n  FUN_0002e584(3,local_810,0);\nLAB_00017210:\n  if (DAT_0007eb9c < 4) {\n    return;\n  }\n  local_810[0] = 10;\n  FUN_0002e584(3,local_810,0);\n  return;\n}\n\n",
    "FUN_00017244": "\n/* WARNING: Removing unreachable block (ram,0x000173a8) */\n\nvoid FUN_00017244(undefined4 param_1,int param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  undefined2 local_828;\n  undefined local_826;\n  \n  if (DAT_0007eb9c < 4) {\n    if (param_3 == 0) {\n      return;\n    }\n  }\n  else {\n    snprintf((char *)&local_828,0x800,\"[chain %d]\\n\",param_1);\n    FUN_0002e584(3,&local_828,0);\n    uVar1 = DAT_0007eb9c;\n    if (param_3 == 0) goto LAB_00017360;\n  }\n  uVar2 = 0;\n  uVar1 = DAT_0007eb9c;\nLAB_000172b4:\n  do {\n    uVar3 = uVar2 & 0xf;\n    if (uVar3 == 0) {\n      if (3 < uVar1) {\n        snprintf((char *)&local_828,0x800,\"0x%04X \",uVar2);\n        FUN_0002ea54(3,&local_828,0);\n        uVar1 = DAT_0007eb9c;\n      }\njoined_r0x000172f8:\n      if (3 < uVar1) {\n        snprintf((char *)&local_828,0x800,\"%02X \",(uint)*(byte *)(param_2 + uVar2));\n        FUN_0002ea54(3,&local_828,0);\n        uVar1 = DAT_0007eb9c;\n        if ((uVar3 == 0xf) && (3 < DAT_0007eb9c)) {\n          uVar2 = uVar2 + 1;\n          local_828 = 10;\n          FUN_0002ea54(3,&local_828,0);\n          uVar1 = DAT_0007eb9c;\n          if (param_3 <= uVar2) break;\n          goto LAB_000172b4;\n        }\n      }\n    }\n    else {\n      if (uVar3 != 8) goto joined_r0x000172f8;\n      if (3 < uVar1) {\n        local_828 = 0x2020;\n        local_826 = 0;\n        FUN_0002ea54(3,&local_828,0);\n        uVar1 = DAT_0007eb9c;\n        goto joined_r0x000172f8;\n      }\n    }\n    uVar2 = uVar2 + 1;\n  } while (uVar2 < param_3);\nLAB_00017360:\n  if (uVar1 < 4) {\n    return;\n  }\n  local_828 = 10;\n  FUN_0002ea54(3,&local_828,0);\n  return;\n}\n\n",
    "FUN_0001740c": "\nint FUN_0001740c(int param_1,int param_2)\n\n{\n  byte bVar1;\n  int iVar2;\n  undefined4 *puVar3;\n  undefined2 *puVar4;\n  void *__dest;\n  char *__s;\n  uint uVar5;\n  uint __n;\n  uint *puVar6;\n  int iVar7;\n  byte *pbVar8;\n  size_t __n_00;\n  bool bVar9;\n  int local_b6c;\n  int local_b68;\n  int local_b64;\n  int local_b60;\n  int local_b5c;\n  int local_b58;\n  int local_b54;\n  int local_b50;\n  int local_b4c;\n  int local_b48;\n  int local_b44;\n  int local_b40;\n  int local_b3c;\n  int local_b38;\n  int local_b34;\n  int local_b30;\n  undefined2 local_b28;\n  undefined auStack_b26 [254];\n  undefined local_a28 [7];\n  undefined4 local_a21;\n  undefined4 local_a1d;\n  undefined4 local_a19;\n  undefined local_a15;\n  undefined2 local_a14;\n  undefined4 local_a12;\n  undefined4 local_a0e;\n  undefined4 local_a0a;\n  undefined local_a06;\n  byte local_a05;\n  undefined auStack_a04 [4];\n  byte abStack_a00 [28];\n  undefined4 local_9e4;\n  undefined4 uStack_9e0;\n  uint local_928;\n  undefined4 local_924;\n  undefined4 local_920;\n  undefined4 local_91c;\n  undefined4 local_828;\n  undefined4 uStack_824;\n  undefined4 uStack_820;\n  undefined4 uStack_81c;\n  undefined4 local_818;\n  undefined4 local_814;\n  undefined4 local_810;\n  undefined4 local_80c;\n  undefined4 local_808;\n  \n  memset(&local_b28,0,0x100);\n  memset(local_a28,0,0x100);\n  pbVar8 = *(byte **)(param_2 + param_1 * 4);\n  iVar7 = 3;\n  do {\n    iVar2 = FUN_00044358(param_1,0,&local_b28,0x100);\n    if (iVar2 != 0) {\n      if (3 < DAT_0007eb9c) {\n        snprintf((char *)&local_828,0x800,\"Read configuration fail for chain %d.\\n\",param_1);\n        FUN_0002e584(3,&local_828,0);\n        return iVar2;\n      }\n      return iVar2;\n    }\n    FUN_00017244(param_1,&local_b28,0x100);\n    memset(&local_928,0,0x100);\n    __n = local_b28._1_1_ - 2;\n    uVar5 = local_b28._1_1_ + 5 & 0xfffffff8;\n    if ((__n & 0xff) < 0xfe && uVar5 < 0xff) {\n      if ((byte)local_b28 >> 4 == 1 && ((byte)local_b28 & 0xf) == 1) {\n        memcpy(&local_928,auStack_b26,uVar5);\n        FUN_00018e48(&local_928,uVar5,0);\n        local_a28._0_2_ = local_b28;\n        memcpy(local_a28 + 2,&local_928,__n);\n        bVar1 = (byte)((((uint)local_b28 << 0x18) >> 0x1c) << 4);\n        *pbVar8 = *pbVar8 & 0xf | bVar1;\n        *pbVar8 = bVar1 | local_a28[0] & 0xf;\n        pbVar8[1] = local_a28[1];\n        uVar5 = (uint)local_a28[2];\n        pbVar8[2] = local_a28[2];\n        if (uVar5 - 1 < 2) {\n          local_b48 = 0x3d;\n          local_b44 = 0x3e;\n          local_b50 = 0x3b;\n          local_b4c = 0x3c;\n          __n_00 = 4;\n          local_b58 = 0x37;\n          local_b54 = 0x39;\n          iVar7 = 0x28;\n          local_b60 = 0x33;\n          local_b5c = 0x35;\n          local_b68 = 0x31;\n          local_b64 = 0x32;\n          local_b30 = 0x41;\n          local_b40 = 0x2f;\n          local_b3c = 0x2e;\n          local_b6c = 0x30;\n          local_b38 = 0x29;\n          local_b34 = 0x2d;\n        }\n        else {\n          if (uVar5 == 3) {\n            local_b30 = 0x49;\n          }\n          else {\n            if (uVar5 != 4) {\n              if (DAT_0007eb9c < 4) {\n                return -1;\n              }\n              local_828._0_1_ = 'T';\n              local_828._1_1_ = 'h';\n              local_828._2_1_ = 'i';\n              local_828._3_1_ = 's';\n              uStack_824._0_1_ = ' ';\n              uStack_824._1_1_ = 'F';\n              uStack_824._2_1_ = 'M';\n              uStack_824._3_1_ = 'T';\n              uStack_820._0_1_ = ' ';\n              uStack_820._1_1_ = 'i';\n              uStack_820._2_1_ = 's';\n              uStack_820._3_1_ = ' ';\n              uStack_81c._0_1_ = 'n';\n              uStack_81c._1_1_ = 'o';\n              uStack_81c._2_1_ = 't';\n              uStack_81c._3_1_ = ' ';\n              local_818._0_1_ = 's';\n              local_818._1_1_ = 'u';\n              local_818._2_1_ = 'p';\n              local_818._3_1_ = 'p';\n              local_814._0_1_ = 'o';\n              local_814._1_1_ = 'r';\n              local_814._2_1_ = 't';\n              local_814._3_1_ = 'e';\n              local_810 = CONCAT13(local_810._3_1_,0xa64);\n              FUN_0002e584(3,&local_828,0);\n              uVar5 = DAT_0007eb9c;\n              break;\n            }\n            local_b30 = 0x51;\n          }\n          __n_00 = 9;\n          local_b48 = 0x42;\n          local_b44 = 0x43;\n          local_b50 = 0x40;\n          local_b4c = 0x41;\n          local_b58 = 0x3c;\n          local_b54 = 0x3e;\n          local_b6c = 0x35;\n          local_b60 = 0x38;\n          local_b5c = 0x3a;\n          iVar7 = 0x2d;\n          local_b68 = 0x36;\n          local_b64 = 0x37;\n          local_b40 = 0x34;\n          local_b3c = 0x33;\n          local_b38 = 0x2e;\n          local_b34 = 0x32;\n        }\n        puVar6 = (uint *)0x1;\n        puVar3 = (undefined4 *)calloc(0x12,1);\n        *(undefined4 **)(pbVar8 + 3) = puVar3;\n        if (puVar3 == (undefined4 *)0x0) {\n          if (DAT_0007eb9c < 4) {\n            puVar6 = (uint *)0x0;\n          }\n          else {\n            puVar6 = (uint *)0x0;\n            local_828._0_1_ = 'D';\n            local_828._1_1_ = 'e';\n            local_828._2_1_ = 'c';\n            local_828._3_1_ = 'o';\n            uStack_824._0_1_ = 'd';\n            uStack_824._1_1_ = 'e';\n            uStack_824._2_1_ = ' ';\n            uStack_824._3_1_ = 'S';\n            uStack_820._0_1_ = 'N';\n            uStack_820._1_1_ = ' ';\n            uStack_820._2_1_ = 'O';\n            uStack_820._3_1_ = 'O';\n            uStack_81c._0_3_ = 0xa4d;\n            FUN_0002e584(3,&local_828,0);\n            puVar3 = *(undefined4 **)(pbVar8 + 3);\n          }\n        }\n        *puVar3 = local_a28._3_4_;\n        puVar3[1] = local_a21;\n        puVar3[2] = local_a1d;\n        puVar3[3] = local_a19;\n        *(undefined *)(puVar3 + 4) = local_a15;\n        puVar4 = (undefined2 *)calloc(3,1);\n        *(undefined2 **)(pbVar8 + 7) = puVar4;\n        if (puVar4 == (undefined2 *)0x0) {\n          if (DAT_0007eb9c < 4) {\n            puVar6 = (uint *)0x0;\n          }\n          else {\n            puVar6 = (uint *)0x0;\n            local_828._0_1_ = 'D';\n            local_828._1_1_ = 'e';\n            local_828._2_1_ = 'c';\n            local_828._3_1_ = 'o';\n            uStack_824._0_1_ = 'd';\n            uStack_824._1_1_ = 'e';\n            uStack_824._2_1_ = ' ';\n            uStack_824._3_1_ = 'C';\n            uStack_820._0_1_ = 'h';\n            uStack_820._1_1_ = 'i';\n            uStack_820._2_1_ = 'p';\n            uStack_820._3_1_ = ' ';\n            uStack_81c._0_1_ = 'D';\n            uStack_81c._1_1_ = 'i';\n            uStack_81c._2_1_ = 'e';\n            uStack_81c._3_1_ = ' ';\n            local_818._0_1_ = 'O';\n            local_818._1_1_ = 'O';\n            local_818._2_1_ = 'M';\n            local_818._3_1_ = '\\n';\n            local_814 = local_814 & 0xffffff00;\n            FUN_0002e584(3,&local_828,0);\n            puVar4 = *(undefined2 **)(pbVar8 + 7);\n          }\n        }\n        *puVar4 = local_a14;\n        puVar3 = (undefined4 *)calloc(0xe,1);\n        *(undefined4 **)(pbVar8 + 0xb) = puVar3;\n        if (puVar3 == (undefined4 *)0x0) {\n          if (DAT_0007eb9c < 4) {\n            puVar6 = (uint *)0x0;\n          }\n          else {\n            puVar6 = (uint *)0x0;\n            local_828._0_1_ = 'D';\n            local_828._1_1_ = 'e';\n            local_828._2_1_ = 'c';\n            local_828._3_1_ = 'o';\n            uStack_824._0_1_ = 'd';\n            uStack_824._1_1_ = 'e';\n            uStack_824._2_1_ = ' ';\n            uStack_824._3_1_ = 'C';\n            uStack_820._0_1_ = 'h';\n            uStack_820._1_1_ = 'i';\n            uStack_820._2_1_ = 'p';\n            uStack_820._3_1_ = ' ';\n            uStack_81c._0_1_ = 'M';\n            uStack_81c._1_1_ = 'a';\n            uStack_81c._2_1_ = 'r';\n            uStack_81c._3_1_ = 'k';\n            local_818._0_1_ = 'i';\n            local_818._1_1_ = 'n';\n            local_818._2_1_ = 'g';\n            local_818._3_1_ = ' ';\n            local_814._0_1_ = 'O';\n            local_814._1_1_ = 'O';\n            local_814._2_1_ = 'M';\n            local_814._3_1_ = '\\n';\n            local_810 = local_810 & 0xffffff00;\n            FUN_0002e584(3,&local_828,0);\n            puVar3 = *(undefined4 **)(pbVar8 + 0xb);\n          }\n        }\n        *puVar3 = local_a12;\n        puVar3[2] = local_a0a;\n        puVar3[1] = local_a0e;\n        *(undefined *)(puVar3 + 3) = local_a06;\n        pbVar8[0xf] = local_a05;\n        if (pbVar8[2] - 1 < 2) {\n          local_928 = 0;\n          local_924 = 0;\n          local_920 = 0;\n          local_91c = 0;\n          __s = (char *)calloc(__n_00 + 6,1);\n          *(char **)(pbVar8 + 0x10) = __s;\n          if (__s == (char *)0x0) {\n            if (DAT_0007eb9c < 4) {\n              puVar6 = (uint *)0x0;\n            }\n            else {\n              local_828._0_1_ = 'D';\n              local_828._1_1_ = 'e';\n              local_828._2_1_ = 'c';\n              local_828._3_1_ = 'o';\n              uStack_824._0_1_ = 'd';\n              uStack_824._1_1_ = 'e';\n              uStack_824._2_1_ = ' ';\n              uStack_824._3_1_ = 'C';\n              uStack_820._0_1_ = 'h';\n              uStack_820._1_1_ = 'i';\n              uStack_820._2_1_ = 'p';\n              uStack_820._3_1_ = ' ';\n              uStack_81c._0_1_ = 'F';\n              uStack_81c._1_1_ = 'T';\n              uStack_81c._2_1_ = ' ';\n              uStack_81c._3_1_ = 'P';\n              local_818._0_1_ = 'r';\n              local_818._1_1_ = 'o';\n              local_818._2_1_ = 'g';\n              local_818._3_1_ = 'r';\n              local_814._0_1_ = 'a';\n              local_814._1_1_ = 'm';\n              local_814._2_1_ = ' ';\n              local_814._3_1_ = 'V';\n              local_810._0_1_ = 'e';\n              local_810._1_1_ = 'r';\n              local_810._2_1_ = 's';\n              local_810._3_1_ = 'i';\n              local_80c._0_1_ = 'o';\n              local_80c._1_1_ = 'n';\n              local_80c._2_1_ = ' ';\n              local_80c._3_1_ = 'O';\n              local_808._0_1_ = 'O';\n              local_808._1_1_ = 'M';\n              local_808._2_1_ = '\\n';\n              local_808._3_1_ = '\\0';\n              FUN_0002e584(3,&local_828,0);\n              __s = *(char **)(pbVar8 + 0x10);\n              puVar6 = (uint *)0x0;\n            }\n          }\n          memcpy(&local_928,auStack_a04,__n_00);\n          snprintf(__s,__n_00 + 6,\"F%dV%02dB%dC%d\",local_928 & 0xff,local_928 >> 8 & 0xff,\n                   local_928 >> 0x10 & 0xff,local_928 >> 0x18);\n        }\n        else {\n          __dest = calloc(__n_00 + 1,1);\n          *(void **)(pbVar8 + 0x10) = __dest;\n          if (__dest == (void *)0x0) {\n            if (DAT_0007eb9c < 4) {\n              puVar6 = (uint *)0x0;\n            }\n            else {\n              puVar6 = (uint *)0x0;\n              local_828._0_1_ = 'D';\n              local_828._1_1_ = 'e';\n              local_828._2_1_ = 'c';\n              local_828._3_1_ = 'o';\n              uStack_824._0_1_ = 'd';\n              uStack_824._1_1_ = 'e';\n              uStack_824._2_1_ = ' ';\n              uStack_824._3_1_ = 'C';\n              uStack_820._0_1_ = 'h';\n              uStack_820._1_1_ = 'i';\n              uStack_820._2_1_ = 'p';\n              uStack_820._3_1_ = ' ';\n              uStack_81c._0_1_ = 'F';\n              uStack_81c._1_1_ = 'T';\n              uStack_81c._2_1_ = ' ';\n              uStack_81c._3_1_ = 'P';\n              local_818._0_1_ = 'r';\n              local_818._1_1_ = 'o';\n              local_818._2_1_ = 'g';\n              local_818._3_1_ = 'r';\n              local_814._0_1_ = 'a';\n              local_814._1_1_ = 'm';\n              local_814._2_1_ = ' ';\n              local_814._3_1_ = 'V';\n              local_810._0_1_ = 'e';\n              local_810._1_1_ = 'r';\n              local_810._2_1_ = 's';\n              local_810._3_1_ = 'i';\n              local_80c._0_1_ = 'o';\n              local_80c._1_1_ = 'n';\n              local_80c._2_1_ = ' ';\n              local_80c._3_1_ = 'O';\n              local_808._0_1_ = 'O';\n              local_808._1_1_ = 'M';\n              local_808._2_1_ = '\\n';\n              local_808._3_1_ = '\\0';\n              FUN_0002e584(3,&local_828,0);\n              __dest = *(void **)(pbVar8 + 0x10);\n            }\n          }\n          memcpy(__dest,auStack_a04,__n_00);\n        }\n        pbVar8[0x14] = pbVar8[0x14] & 0x80 | local_a28[iVar7] & 0x7f;\n        pbVar8[0x14] = pbVar8[0x14] & 0x7f | local_a28[iVar7] & 0x80;\n        puVar3 = (undefined4 *)calloc(5,1);\n        *(undefined4 **)(pbVar8 + 0x15) = puVar3;\n        if (puVar3 == (undefined4 *)0x0) {\n          if (DAT_0007eb9c < 4) {\n            puVar6 = (uint *)0x0;\n          }\n          else {\n            puVar6 = (uint *)0x0;\n            local_828._0_1_ = 'D';\n            local_828._1_1_ = 'e';\n            local_828._2_1_ = 'c';\n            local_828._3_1_ = 'o';\n            uStack_824._0_1_ = 'd';\n            uStack_824._1_1_ = 'e';\n            uStack_824._2_1_ = ' ';\n            uStack_824._3_1_ = 'a';\n            uStack_820._0_1_ = 's';\n            uStack_820._1_1_ = 'i';\n            uStack_820._2_1_ = 'c';\n            uStack_820._3_1_ = ' ';\n            uStack_81c._0_1_ = 's';\n            uStack_81c._1_1_ = 'e';\n            uStack_81c._2_1_ = 'n';\n            uStack_81c._3_1_ = 'd';\n            local_818._0_1_ = 'o';\n            local_818._1_1_ = 'r';\n            local_818._2_1_ = ' ';\n            local_818._3_1_ = 'a';\n            local_814._0_1_ = 'd';\n            local_814._1_1_ = 'd';\n            local_814._2_1_ = 'r';\n            local_814._3_1_ = ' ';\n            local_810._0_1_ = 'O';\n            local_810._1_1_ = 'O';\n            local_810._2_1_ = 'M';\n            local_810._3_1_ = '\\n';\n            local_80c = local_80c & 0xffffff00;\n            FUN_0002e584(3,&local_828,0);\n            puVar3 = *(undefined4 **)(pbVar8 + 0x15);\n          }\n        }\n        *puVar3 = *(undefined4 *)(local_a28 + local_b38);\n        pbVar8[0x19] = pbVar8[0x19] & 0x80 | local_a28[local_b34] & 0x7f;\n        pbVar8[0x19] = pbVar8[0x19] & 0x7f | local_a28[local_b34] & 0x80;\n        pbVar8[0x1a] = local_a28[local_b3c];\n        pbVar8[0x1b] = local_a28[local_b40];\n        pbVar8[0x1c] = local_a28[local_b6c];\n        pbVar8[0x1d] = local_a28[local_b68];\n        pbVar8[0x1e] = local_a28[local_b64];\n        puVar4 = (undefined2 *)calloc(3,1);\n        *(undefined2 **)(pbVar8 + 0x1f) = puVar4;\n        if (puVar4 == (undefined2 *)0x0) {\n          if (DAT_0007eb9c < 4) {\n            puVar6 = (uint *)0x0;\n          }\n          else {\n            puVar6 = (uint *)0x0;\n            local_828._0_1_ = 'D';\n            local_828._1_1_ = 'e';\n            local_828._2_1_ = 'c';\n            local_828._3_1_ = 'o';\n            uStack_824._0_1_ = 'd';\n            uStack_824._1_1_ = 'e';\n            uStack_824._2_1_ = ' ';\n            uStack_824._3_1_ = 'C';\n            uStack_820._0_1_ = 'h';\n            uStack_820._1_1_ = 'i';\n            uStack_820._2_1_ = 'p';\n            uStack_820._3_1_ = ' ';\n            uStack_81c._0_1_ = 'T';\n            uStack_81c._1_1_ = 'e';\n            uStack_81c._2_1_ = 'c';\n            uStack_81c._3_1_ = 'h';\n            local_818._0_1_ = 'n';\n            local_818._1_1_ = 'o';\n            local_818._2_1_ = 'l';\n            local_818._3_1_ = 'o';\n            local_814._0_1_ = 'g';\n            local_814._1_1_ = 'y';\n            local_814._2_1_ = ' ';\n            local_814._3_1_ = 'O';\n            local_810._0_1_ = 'O';\n            local_810._1_1_ = 'M';\n            local_810._2_1_ = '\\n';\n            local_810._3_1_ = '\\0';\n            FUN_0002e584(3,&local_828,0);\n            puVar4 = *(undefined2 **)(pbVar8 + 0x1f);\n          }\n        }\n        *puVar4 = *(undefined2 *)(local_a28 + local_b60);\n        *(ushort *)(pbVar8 + 0x23) =\n             (ushort)((*(ushort *)(local_a28 + local_b5c) & 0xff) << 8) |\n             *(ushort *)(local_a28 + local_b5c) >> 8;\n        *(ushort *)(pbVar8 + 0x25) =\n             (ushort)((*(ushort *)(local_a28 + local_b58) & 0xff) << 8) |\n             *(ushort *)(local_a28 + local_b58) >> 8;\n        *(float *)(pbVar8 + 0x27) =\n             (float)(longlong)\n                    (int)((*(ushort *)(local_a28 + local_b54) & 0xff) << 8 |\n                         (uint)(*(ushort *)(local_a28 + local_b54) >> 8)) / 100.0;\n        pbVar8[0x2b] = local_a28[local_b50];\n        pbVar8[0x2c] = local_a28[local_b4c];\n        pbVar8[0x2d] = local_a28[local_b48];\n        pbVar8[0x2e] = local_a28[local_b44];\n        puVar3 = (undefined4 *)calloc(9,1);\n        *(undefined4 **)(pbVar8 + 0x2f) = puVar3;\n        if (puVar3 == (undefined4 *)0x0) {\n          puVar6 = &DAT_0007eb9c;\n          puVar3 = (undefined4 *)0x0;\n          if (3 < DAT_0007eb9c) {\n            local_828._0_1_ = 'D';\n            local_828._1_1_ = 'e';\n            local_828._2_1_ = 'c';\n            local_828._3_1_ = 'o';\n            uStack_824._0_1_ = 'd';\n            uStack_824._1_1_ = 'e';\n            uStack_824._2_1_ = ' ';\n            uStack_824._3_1_ = 'm';\n            uStack_820._0_1_ = 'i';\n            uStack_820._1_1_ = 'n';\n            uStack_820._2_1_ = 'e';\n            uStack_820._3_1_ = 'r';\n            uStack_81c._0_1_ = ' ';\n            uStack_81c._1_1_ = 't';\n            uStack_81c._2_1_ = 'y';\n            uStack_81c._3_1_ = 'p';\n            local_818._0_1_ = 'e';\n            local_818._1_1_ = ' ';\n            local_818._2_1_ = 'O';\n            local_818._3_1_ = 'O';\n            local_814 = CONCAT13(local_814._3_1_,0xa4d);\n            FUN_0002e584(3,&local_828,0);\n            puVar3 = *(undefined4 **)(pbVar8 + 0x2f);\n          }\n          *puVar3 = local_9e4;\n          puVar3[1] = uStack_9e0;\n          pbVar8[0x37] = local_a28[local_b30];\n        }\n        else {\n          bVar9 = puVar6 == (uint *)0x0;\n          if (bVar9) {\n            puVar6 = &DAT_0007eb9c;\n          }\n          bVar1 = local_a28[local_b30];\n          *puVar3 = local_9e4;\n          puVar3[1] = uStack_9e0;\n          pbVar8[0x37] = bVar1;\n          if (!bVar9) {\n            uVar5 = FUN_000315ec(local_a28,(pbVar8[1] - 1) * 8);\n            if (uVar5 == pbVar8[0x37]) {\n              *(undefined *)(param_2 + param_1 + 0x10) = 1;\n              return 0;\n            }\n            puVar6 = &DAT_0007eb9c;\n            if (DAT_0007eb9c < 4) {\n              return -1;\n            }\n            snprintf((char *)&local_828,0x800,\n                     \"Fixture CRC check fail.fixture_crc = 0x%x, len = 0x%x, crc = 0x%x\\n\",\n                     (uint)pbVar8[0x37],(uint)pbVar8[1],uVar5);\n            FUN_0002e584(3,&local_828,0);\n          }\n        }\n        uVar5 = *puVar6;\n        break;\n      }\n      if (3 < DAT_0007eb9c) {\n        local_828._0_1_ = 'E';\n        local_828._1_1_ = 'E';\n        local_828._2_1_ = 'P';\n        local_828._3_1_ = 'R';\n        uStack_824._0_1_ = 'O';\n        uStack_824._1_1_ = 'M';\n        uStack_824._2_1_ = ' ';\n        uStack_824._3_1_ = 'i';\n        uStack_820._0_1_ = 'n';\n        uStack_820._1_1_ = 'f';\n        uStack_820._2_1_ = 'o';\n        uStack_820._3_1_ = ' ';\n        uStack_81c._0_1_ = 'e';\n        uStack_81c._1_1_ = 'r';\n        uStack_81c._2_1_ = 'r';\n        uStack_81c._3_1_ = 'o';\n        local_818._0_1_ = 'r';\n        local_818._1_1_ = '!';\n        local_818._2_1_ = ',';\n        local_818._3_1_ = ' ';\n        local_814 = CONCAT13(local_814._3_1_,0x322d);\n        FUN_0002e584(3,&local_828,0);\n        goto LAB_000175b4;\n      }\n    }\n    else if (3 < DAT_0007eb9c) {\n      local_828._0_1_ = 'E';\n      local_828._1_1_ = 'E';\n      local_828._2_1_ = 'P';\n      local_828._3_1_ = 'R';\n      uStack_824._0_1_ = 'O';\n      uStack_824._1_1_ = 'M';\n      uStack_824._2_1_ = ' ';\n      uStack_824._3_1_ = 'i';\n      uStack_820._0_1_ = 'n';\n      uStack_820._1_1_ = 'f';\n      uStack_820._2_1_ = 'o';\n      uStack_820._3_1_ = ' ';\n      uStack_81c._0_1_ = 'e';\n      uStack_81c._1_1_ = 'r';\n      uStack_81c._2_1_ = 'r';\n      uStack_81c._3_1_ = 'o';\n      local_818._0_1_ = 'r';\n      local_818._1_1_ = '!';\n      local_818._2_1_ = ',';\n      local_818._3_1_ = ' ';\n      local_814 = CONCAT13(local_814._3_1_,0x312d);\n      FUN_0002e584(3,&local_828,0);\nLAB_000175b4:\n      if (3 < DAT_0007eb9c) {\n        snprintf((char *)&local_828,0x800,\"Data decode fail for chain %d.\\n\",param_1);\n        FUN_0002e584(3,&local_828,0);\n      }\n    }\n    usleep(500000);\n    iVar7 = iVar7 + -1;\n    uVar5 = DAT_0007eb9c;\n  } while (iVar7 != 0);\n  if (uVar5 < 4) {\n    return -1;\n  }\n  snprintf((char *)&local_828,0x800,\"Data load fail for chain %d.\\n\",param_1);\n  FUN_0002e584(3,&local_828,0);\n  return -1;\n}\n\n",
    "FUN_00017ef8": "\nvoid FUN_00017ef8(void)\n\n{\n  int iVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  \n  if (DAT_0007f814 == 0) {\n    iVar3 = FUN_00016378();\n    if (iVar3 != 0) {\n      return;\n    }\n  }\n  else if (*(char *)(DAT_0007f814 + 0x1c) != '\\0') {\n    return;\n  }\n  iVar3 = 0;\n  uVar4 = 0;\n  FUN_00016580();\n  do {\n    iVar1 = FUN_0001e29c(iVar3);\n    if (iVar1 != 0) {\n      uVar2 = FUN_0001740c(iVar3,DAT_0007f814);\n      uVar4 = uVar4 | uVar2;\n    }\n    iVar3 = iVar3 + 1;\n  } while (iVar3 != 4);\n  if (uVar4 == 0) {\n    *(undefined *)(DAT_0007f814 + 0x1c) = 1;\n  }\n  return;\n}\n\n",
    "FUN_00017f7c": "\nundefined FUN_00017f7c(void)\n\n{\n  return *(undefined *)(DAT_0007f814 + 0x1c);\n}\n\n",
    "FUN_00017f90": "\nundefined4 FUN_00017f90(void)\n\n{\n  int iVar1;\n  int iVar2;\n  \n  iVar2 = 0;\n  while ((iVar1 = FUN_0001e29c(iVar2), iVar1 == 0 ||\n         (*(char *)(DAT_0007f814 + iVar2 + 0x14) != '\\0'))) {\n    iVar2 = iVar2 + 1;\n    if (iVar2 == 4) {\n      return 1;\n    }\n  }\n  return 0;\n}\n\n",
    "FUN_00017fd8": "\nvoid FUN_00017fd8(int param_1,char *param_2,uint param_3)\n\n{\n  size_t sVar1;\n  char *__s;\n  char acStack_810 [2048];\n  \n  if ((DAT_0007f814 == 0) || (*(char *)(DAT_0007f814 + 0x1c) == '\\0')) {\n    if (3 < DAT_0007eb9c) {\n      snprintf(acStack_810,0x800,\"No hash board sn, chain = %d.\\n\",param_1);\n      FUN_0002e584(3,acStack_810,0);\n      return;\n    }\n  }\n  else if (param_2 != (char *)0x0) {\n    __s = *(char **)(*(int *)(DAT_0007f814 + param_1 * 4) + 3);\n    sVar1 = strlen(__s);\n    if (sVar1 + 1 <= param_3) {\n      snprintf(param_2,param_3,\"%s\",__s);\n    }\n  }\n  return;\n}\n\n",
    "FUN_00018094": "\nundefined2 FUN_00018094(int param_1)\n\n{\n  int iVar1;\n  char acStack_808 [2056];\n  \n  if ((DAT_0007f814 != 0) && (*(char *)(DAT_0007f814 + 0x1c) != '\\0')) {\n    iVar1 = *(int *)(DAT_0007f814 + param_1 * 4);\n    return CONCAT11(*(undefined *)(iVar1 + 0x1b),*(undefined *)(iVar1 + 0x1c));\n  }\n  if (DAT_0007eb9c < 4) {\n    return 0xffff;\n  }\n  snprintf(acStack_808,0x800,\"No pcb version, chain = %d.\\n\",param_1);\n  FUN_0002e584(3,acStack_808,0);\n  return 0xffff;\n}\n\n",
    "FUN_00018128": "\nundefined2 FUN_00018128(int param_1)\n\n{\n  int iVar1;\n  char acStack_808 [2056];\n  \n  if ((DAT_0007f814 != 0) && (*(char *)(DAT_0007f814 + 0x1c) != '\\0')) {\n    iVar1 = *(int *)(DAT_0007f814 + param_1 * 4);\n    return CONCAT11(*(undefined *)(iVar1 + 0x1d),*(undefined *)(iVar1 + 0x1e));\n  }\n  if (DAT_0007eb9c < 4) {\n    return 0xffff;\n  }\n  snprintf(acStack_808,0x800,\"No bom version, chain = %d.\\n\",param_1);\n  FUN_0002e584(3,acStack_808,0);\n  return 0xffff;\n}\n\n",
    "FUN_00018214": "\nundefined4 FUN_00018214(undefined4 param_1)\n\n{\n  char acStack_808 [2056];\n  \n  snprintf(acStack_808,0x800,\"No temp, chain = %d.\\n\",param_1);\n  FUN_0002e584(4,acStack_808,0);\n  return 0xffffffff;\n}\n\n",
    "FUN_00018258": "\nundefined4 FUN_00018258(int param_1,uint *param_2)\n\n{\n  char acStack_808 [2056];\n  \n  if ((DAT_0007f814 != 0) && (*(char *)(DAT_0007f814 + 0x1c) != '\\0')) {\n    if (param_2 != (uint *)0x0) {\n      *param_2 = (uint)*(byte *)(*(int *)(DAT_0007f814 + param_1 * 4) + 0x2e);\n      return 0;\n    }\n    return 0xfffffffe;\n  }\n  if (DAT_0007eb9c < 4) {\n    return 0xffffffff;\n  }\n  snprintf(acStack_808,0x800,\"No test standard, chain = %d.\\n\",param_1);\n  FUN_0002e584(3,acStack_808,0);\n  return 0xffffffff;\n}\n\n",
    "FUN_000182fc": "\nundefined4 FUN_000182fc(int param_1,uint *param_2)\n\n{\n  char acStack_808 [2056];\n  \n  if ((DAT_0007f814 != 0) && (*(char *)(DAT_0007f814 + 0x1c) != '\\0')) {\n    if (param_2 != (uint *)0x0) {\n      *param_2 = (uint)*(byte *)(*(int *)(DAT_0007f814 + param_1 * 4) + 0xf);\n      return 0;\n    }\n    return 0xfffffffe;\n  }\n  if (DAT_0007eb9c < 4) {\n    return 0xffffffff;\n  }\n  snprintf(acStack_808,0x800,\"No chip bin, chain = %d\\n\",param_1);\n  FUN_0002e584(3,acStack_808,0);\n  return 0xffffffff;\n}\n\n",
    "FUN_00018360": "\nundefined4 FUN_00018360(int param_1,char *param_2,uint param_3)\n\n{\n  size_t sVar1;\n  char *__s;\n  char acStack_808 [2040];\n  \n  if ((DAT_0007f814 == 0) || (*(char *)(DAT_0007f814 + 0x1c) == '\\0')) {\n    if (DAT_0007eb9c < 4) {\n      return 0xffffffff;\n    }\n    snprintf(acStack_808,0x800,\"No ft ver, chain = %d\\n\",param_1);\n    FUN_0002e584(3,acStack_808,0);\n    return 0xffffffff;\n  }\n  if (param_2 == (char *)0x0) {\n    return 0xfffffffe;\n  }\n  __s = *(char **)(*(int *)(DAT_0007f814 + param_1 * 4) + 0x10);\n  sVar1 = strlen(__s);\n  if (sVar1 < param_3) {\n    snprintf(param_2,param_3,\"%s\",__s);\n    return 0;\n  }\n  return 0xfffffffe;\n}\n\n",
    "FUN_000183fc": "\nundefined4 FUN_000183fc(int param_1,undefined4 param_2,uint *param_3)\n\n{\n  undefined4 uVar1;\n  char *__s1;\n  int iVar2;\n  uint uVar3;\n  uint *puVar4;\n  uint uVar5;\n  uint uVar6;\n  int local_82c;\n  undefined4 local_828;\n  undefined4 local_824;\n  undefined4 local_820;\n  undefined4 local_81c;\n  undefined4 uStack_818;\n  undefined local_814;\n  \n  if ((DAT_0007f814 == 0) || (*(char *)(DAT_0007f814 + 0x1c) == '\\0')) {\n    if (4 < DAT_0007eb9c) {\n      snprintf((char *)&local_828,0x800,\"No work mode freq, chain = %d, mode = %d.\\n\",param_1,\n               param_2);\n      FUN_0002e584(4,&local_828,0);\n      return 0xffffffff;\n    }\n    uVar1 = 0xffffffff;\n  }\n  else {\n    iVar2 = *(int *)(DAT_0007f814 + param_1 * 4);\n    puVar4 = &DAT_0007f81c;\n    uVar6 = (uint)*(ushort *)(iVar2 + 0x23);\n    uVar5 = (uint)*(ushort *)(iVar2 + 0x25);\n    do {\n      if ((puVar4[-1] != 0) && (*puVar4 == uVar5 && (*puVar4 != 0 && puVar4[-1] == uVar6))) {\n        __s1 = (char *)FUN_0001e0c0();\n        iVar2 = strcmp(__s1,\"NBS2003\");\n        uVar3 = uVar5;\n        if (iVar2 == 0) {\n          local_82c = iVar2;\n          local_828 = iVar2;\n          local_824 = iVar2;\n          local_820 = iVar2;\n          local_81c = iVar2;\n          FUN_00018360(param_1,&local_828,0x10);\n          FUN_000182fc(param_1,&local_82c);\n          if ((((local_828 == 0x30563146) && (local_824 == 0x43314235)) && ((char)local_820 == '1'))\n             && (local_82c - 3U < 2)) {\n            if (uVar5 == 0x28a && uVar6 == 0x500) {\n              uVar3 = 600;\n            }\n            else {\n              uVar3 = 0x271;\n              if (uVar6 == 0x514 && uVar5 == 0x271) {\n                uVar3 = 0x23f;\n              }\n              if (((uVar6 != 0x514 || uVar5 != 0x271) &&\n                  (uVar3 = uVar5, uVar6 == 0x500 && uVar5 == 0x271)) &&\n                 (uVar3 = 0x23f, uVar5 == 0x28a)) {\n                uVar3 = 600;\n              }\n            }\n          }\n        }\n        if (param_3 != (uint *)0x0) {\n          *param_3 = uVar3;\n          return 0;\n        }\n      }\n      puVar4 = puVar4 + 2;\n    } while (puVar4 != &DAT_0007f8bc);\n    if (4 < DAT_0007eb9c) {\n      local_828._0_1_ = 'f';\n      local_828._1_1_ = 'r';\n      local_828._2_1_ = 'e';\n      local_828._3_1_ = 'q';\n      local_824._0_1_ = ' ';\n      local_824._1_1_ = 'l';\n      local_824._2_1_ = 'e';\n      local_824._3_1_ = 'v';\n      local_820._0_1_ = 'e';\n      local_820._1_1_ = 'l';\n      local_820._2_1_ = ' ';\n      local_820._3_1_ = 'n';\n      local_81c._0_1_ = 'o';\n      local_81c._1_1_ = 't';\n      local_81c._2_1_ = ' ';\n      local_81c._3_1_ = 'm';\n      uStack_818._0_1_ = 'a';\n      uStack_818._1_1_ = 't';\n      uStack_818._2_1_ = 'c';\n      uStack_818._3_1_ = 'h';\n      local_814 = 0;\n      FUN_0002e584(4,&local_828,0);\n      return 0xfffffffe;\n    }\n    uVar1 = 0xfffffffe;\n  }\n  return uVar1;\n}\n\n",
    "FUN_00018654": "\nundefined4 FUN_00018654(int param_1,undefined4 param_2,uint *param_3)\n\n{\n  undefined4 uVar1;\n  char *__s1;\n  int iVar2;\n  uint uVar3;\n  uint *puVar4;\n  uint uVar5;\n  uint uVar6;\n  int local_82c;\n  undefined4 local_828;\n  undefined4 local_824;\n  undefined4 local_820;\n  undefined4 local_81c;\n  undefined4 uStack_818;\n  undefined4 uStack_814;\n  \n  if ((DAT_0007f814 == 0) || (*(char *)(DAT_0007f814 + 0x1c) == '\\0')) {\n    if (4 < DAT_0007eb9c) {\n      snprintf((char *)&local_828,0x800,\"No work mode voltage, chain = %d, mode = %d.\\n\",param_1,\n               param_2);\n      FUN_0002e584(4,&local_828,0);\n      return 0xffffffff;\n    }\n    uVar1 = 0xffffffff;\n  }\n  else {\n    iVar2 = *(int *)(DAT_0007f814 + param_1 * 4);\n    puVar4 = &DAT_0007f81c;\n    uVar5 = (uint)*(ushort *)(iVar2 + 0x23);\n    uVar6 = (uint)*(ushort *)(iVar2 + 0x25);\n    do {\n      if ((puVar4[-1] != 0) && (*puVar4 == uVar6 && (*puVar4 != 0 && puVar4[-1] == uVar5))) {\n        __s1 = (char *)FUN_0001e0c0();\n        iVar2 = strcmp(__s1,\"NBS2003\");\n        uVar3 = uVar5;\n        if (iVar2 == 0) {\n          local_82c = iVar2;\n          local_828 = iVar2;\n          local_824 = iVar2;\n          local_820 = iVar2;\n          local_81c = iVar2;\n          FUN_00018360(param_1,&local_828,0x10);\n          FUN_000182fc(param_1,&local_82c);\n          if (((((local_828 == 0x30563146) && (local_824 == 0x43314235)) && ((char)local_820 == '1')\n               ) && ((local_82c - 3U < 2 &&\n                     ((uVar6 == 0x28a && uVar5 == 0x500 ||\n                      (uVar6 == 0x271 && (uVar5 == 0x514 || uVar5 == 0x500))))))) &&\n             (uVar3 = 0x4ec, local_82c != 3)) {\n            uVar3 = 0x4d8;\n          }\n        }\n        if (param_3 != (uint *)0x0) {\n          *param_3 = uVar3;\n          return 0;\n        }\n      }\n      puVar4 = puVar4 + 2;\n    } while (puVar4 != &DAT_0007f8bc);\n    if (4 < DAT_0007eb9c) {\n      local_828._0_1_ = 'v';\n      local_828._1_1_ = 'o';\n      local_828._2_1_ = 'l';\n      local_828._3_1_ = 't';\n      local_824._0_1_ = 'a';\n      local_824._1_1_ = 'g';\n      local_824._2_1_ = 'e';\n      local_824._3_1_ = ' ';\n      local_820._0_1_ = 'l';\n      local_820._1_1_ = 'e';\n      local_820._2_1_ = 'v';\n      local_820._3_1_ = 'e';\n      local_81c._0_1_ = 'l';\n      local_81c._1_1_ = ' ';\n      local_81c._2_1_ = 'n';\n      local_81c._3_1_ = 'o';\n      uStack_818._0_1_ = 't';\n      uStack_818._1_1_ = ' ';\n      uStack_818._2_1_ = 'm';\n      uStack_818._3_1_ = 'a';\n      uStack_814._0_1_ = 't';\n      uStack_814._1_1_ = 'c';\n      uStack_814._2_1_ = 'h';\n      uStack_814._3_1_ = '\\0';\n      FUN_0002e584(4,&local_828,0);\n      return 0xfffffffe;\n    }\n    uVar1 = 0xfffffffe;\n  }\n  return uVar1;\n}\n\n",
    "FUN_000188a0": "\nundefined4 FUN_000188a0(int param_1,undefined4 param_2,uint *param_3)\n\n{\n  char acStack_808 [2056];\n  \n  if ((DAT_0007f814 != 0) && (*(char *)(DAT_0007f814 + 0x1c) != '\\0')) {\n    if (param_3 != (uint *)0x0) {\n      *param_3 = (uint)*(ushort *)(*(int *)(DAT_0007f814 + param_1 * 4) + 0x3c);\n      return 0;\n    }\n    return 0;\n  }\n  if (DAT_0007eb9c < 4) {\n    return 0xffff;\n  }\n  snprintf(acStack_808,0x800,\"No work mode hash rate, chain = %d, mode = %d.\\n\",param_1,param_2);\n  FUN_0002e584(3,acStack_808,0);\n  return 0xffff;\n}\n\n",
    "FUN_00018a14": "\nvoid FUN_00018a14(void)\n\n{\n  int iVar1;\n  uint __n;\n  int iVar2;\n  uint uVar3;\n  int iVar4;\n  undefined uStack_958;\n  byte local_957;\n  byte local_920;\n  undefined auStack_910 [2];\n  undefined auStack_90e [254];\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined4 uStack_804;\n  undefined4 local_800;\n  undefined4 uStack_7fc;\n  undefined4 uStack_7f8;\n  undefined4 uStack_7f4;\n  undefined2 uStack_7f0;\n  undefined local_7ee;\n  \n  memset(auStack_910,0,0x100);\n  __n = (uint)local_957;\n  uVar3 = __n + 5 & 0xfffffff8;\n  iVar4 = uVar3 + 2;\n  if ((int)((((uint)local_920 - (0x39 - __n)) + 7 & 0xfffffff8) + (0x39 - __n) + iVar4) < 0x101) {\n    memcpy(auStack_910,&uStack_958,__n);\n    iVar2 = 0;\n    FUN_00018e48(auStack_90e,uVar3,1);\n    do {\n      iVar1 = FUN_0001e29c(iVar2);\n      if (iVar1 != 0) {\n        FUN_00044200(iVar2,0,auStack_910,iVar4);\n      }\n      iVar2 = iVar2 + 1;\n    } while (iVar2 != 4);\n    FUN_00017ef8();\n    return;\n  }\n  if (DAT_0007eb9c < 4) {\n    return;\n  }\n  local_810._0_1_ = 'E';\n  local_810._1_1_ = 'E';\n  local_810._2_1_ = 'P';\n  local_810._3_1_ = 'R';\n  uStack_80c._0_1_ = 'O';\n  uStack_80c._1_1_ = 'M';\n  uStack_80c._2_1_ = ' ';\n  uStack_80c._3_1_ = 'd';\n  uStack_808._0_1_ = 'o';\n  uStack_808._1_1_ = 'e';\n  uStack_808._2_1_ = 's';\n  uStack_808._3_1_ = ' ';\n  uStack_804._0_1_ = 'n';\n  uStack_804._1_1_ = 'o';\n  uStack_804._2_1_ = 't';\n  uStack_804._3_1_ = ' ';\n  local_800._0_1_ = 'h';\n  local_800._1_1_ = 'a';\n  local_800._2_1_ = 'v';\n  local_800._3_1_ = 'e';\n  uStack_7fc._0_1_ = ' ';\n  uStack_7fc._1_1_ = 'e';\n  uStack_7fc._2_1_ = 'n';\n  uStack_7fc._3_1_ = 'o';\n  uStack_7f8._0_1_ = 'u';\n  uStack_7f8._1_1_ = 'g';\n  uStack_7f8._2_1_ = 'h';\n  uStack_7f8._3_1_ = ' ';\n  uStack_7f4._0_1_ = 's';\n  uStack_7f4._1_1_ = 'p';\n  uStack_7f4._2_1_ = 'a';\n  uStack_7f4._3_1_ = 'c';\n  uStack_7f0 = 0xa65;\n  local_7ee = 0;\n  FUN_0002e584(3,&local_810,0);\n  return;\n}\n\n",
    "FUN_00018b30": "\nchar FUN_00018b30(uint param_1)\n\n{\n  char cVar1;\n  \n  if ((DAT_0007f814 != 0) && (param_1 < 5)) {\n    cVar1 = *(char *)(DAT_0007f814 + param_1 + 0x10);\n    if (cVar1 != '\\0') {\n      cVar1 = '\\x01';\n    }\n    return cVar1;\n  }\n  return '\\0';\n}\n\n",
    "FUN_00018c40": "\nint FUN_00018c40(int param_1)\n\n{\n  int iVar1;\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined4 uStack_7fc;\n  undefined4 local_7f8;\n  undefined4 uStack_7f4;\n  undefined4 uStack_7f0;\n  undefined4 uStack_7ec;\n  undefined4 local_7e8;\n  undefined4 uStack_7e4;\n  undefined4 uStack_7e0;\n  undefined2 uStack_7dc;\n  undefined local_7da;\n  \n  if ((param_1 == 3) && (3 < DAT_0007eb9c)) {\n    local_808._0_1_ = 'e';\n    local_808._1_1_ = 'n';\n    local_808._2_1_ = 'c';\n    local_808._3_1_ = '/';\n    uStack_804._0_1_ = 'd';\n    uStack_804._1_1_ = 'e';\n    uStack_804._2_1_ = 'c';\n    uStack_804._3_1_ = ' ';\n    uStack_800._0_1_ = 'u';\n    uStack_800._1_1_ = 'n';\n    uStack_800._2_1_ = 'd';\n    uStack_800._3_1_ = 'e';\n    uStack_7fc._0_1_ = 'f';\n    uStack_7fc._1_1_ = 'i';\n    uStack_7fc._2_1_ = 'n';\n    uStack_7fc._3_1_ = 'e';\n    local_7f8._0_1_ = 'd';\n    local_7f8._1_1_ = ' ';\n    local_7f8._2_1_ = 'd';\n    local_7f8._3_1_ = 'a';\n    uStack_7f4._0_1_ = 't';\n    uStack_7f4._1_1_ = 'a';\n    uStack_7f4._2_1_ = ' ';\n    uStack_7f4._3_1_ = 't';\n    uStack_7f0._0_1_ = 'y';\n    uStack_7f0._1_1_ = 'p';\n    uStack_7f0._2_1_ = 'e';\n    uStack_7f0._3_1_ = ',';\n    uStack_7ec._0_1_ = ' ';\n    uStack_7ec._1_1_ = 'u';\n    uStack_7ec._2_1_ = 's';\n    uStack_7ec._3_1_ = 'e';\n    local_7e8._0_1_ = ' ';\n    local_7e8._1_1_ = 'd';\n    local_7e8._2_1_ = 'e';\n    local_7e8._3_1_ = 'f';\n    uStack_7e4._0_1_ = 'a';\n    uStack_7e4._1_1_ = 'u';\n    uStack_7e4._2_1_ = 'l';\n    uStack_7e4._3_1_ = 't';\n    uStack_7e0._0_1_ = ' ';\n    uStack_7e0._1_1_ = 'k';\n    uStack_7e0._2_1_ = 'e';\n    uStack_7e0._3_1_ = 'y';\n    uStack_7dc = 0xa21;\n    local_7da = 0;\n    FUN_0002e584(3,&local_808,0);\n  }\n  if (DAT_0007e298 == 2) {\n    return param_1 * 0x10 + 0x7e2ac;\n  }\n  if (DAT_0007e298 == 3) {\n    iVar1 = param_1 * 4 + 0x7e29c;\n  }\n  else {\n    iVar1 = 0;\n  }\n  return iVar1;\n}\n\n",
    "FUN_00018ce8": "\nvoid FUN_00018ce8(uint *param_1,uint param_2,undefined4 param_3)\n\n{\n  int iVar1;\n  uint *puVar2;\n  int iVar3;\n  uint uVar4;\n  uint *puVar5;\n  uint *puVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  uint uVar10;\n  undefined4 local_828;\n  undefined4 uStack_824;\n  undefined4 uStack_820;\n  undefined4 uStack_81c;\n  undefined4 local_818;\n  undefined4 uStack_814;\n  undefined4 uStack_810;\n  undefined4 uStack_80c;\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined4 uStack_7fc;\n  undefined4 local_7f8;\n  undefined4 uStack_7f4;\n  undefined4 uStack_7f0;\n  undefined4 uStack_7ec;\n  undefined4 local_7e8;\n  undefined4 uStack_7e4;\n  undefined4 uStack_7e0;\n  undefined4 uStack_7dc;\n  undefined4 local_7d8;\n  undefined4 uStack_7d4;\n  undefined4 uStack_7d0;\n  undefined local_7cc;\n  \n  puVar2 = (uint *)FUN_00018c40(param_3);\n  if (DAT_0007e298 == 2) {\n    if ((param_2 & 7) == 0) {\n      uVar8 = param_2 + 3;\n      if (-1 < (int)param_2) {\n        uVar8 = param_2;\n      }\n      iVar1 = (int)uVar8 >> 2;\n      if (iVar1 < 2) {\n        if (3 < DAT_0007eb9c) {\n          local_828._0_1_ = 'X';\n          local_828._1_1_ = 'X';\n          local_828._2_1_ = 'T';\n          local_828._3_1_ = 'E';\n          uStack_824._0_1_ = 'A';\n          uStack_824._1_1_ = ' ';\n          uStack_824._2_1_ = 'e';\n          uStack_824._3_1_ = 'n';\n          uStack_820._0_1_ = 'c';\n          uStack_820._1_1_ = 'o';\n          uStack_820._2_1_ = 'd';\n          uStack_820._3_1_ = 'e';\n          uStack_81c._0_1_ = ' ';\n          uStack_81c._1_1_ = 'f';\n          uStack_81c._2_1_ = 'a';\n          uStack_81c._3_1_ = 'i';\n          local_818._0_1_ = 'l';\n          local_818._1_1_ = 'e';\n          local_818._2_1_ = 's';\n          local_818._3_1_ = ',';\n          uStack_814._0_1_ = ' ';\n          uStack_814._1_1_ = 'N';\n          uStack_814._2_1_ = ' ';\n          uStack_814._3_1_ = '<';\n          uStack_810._0_1_ = '=';\n          uStack_810._1_1_ = ' ';\n          uStack_810._2_1_ = '1';\n          uStack_810._3_1_ = ' ';\n          uStack_80c._0_1_ = 'f';\n          uStack_80c._1_1_ = 'o';\n          uStack_80c._2_1_ = 'u';\n          uStack_80c._3_1_ = 'n';\n          local_808._0_1_ = 'd';\n          local_808._1_1_ = '.';\n          local_808._2_1_ = '\\n';\n          local_808._3_1_ = '\\0';\n          FUN_0002e584(3,&local_828,0);\n          return;\n        }\n      }\n      else {\n        uVar8 = param_1[iVar1 + 0x3fffffff];\n        iVar3 = FUN_0005faf8(0x34);\n        uVar9 = 0;\n        do {\n          uVar10 = 0;\n          uVar9 = uVar9 + 0x9e3779b9;\n          puVar5 = param_1;\n          do {\n            uVar4 = puVar5[1];\n            uVar7 = uVar9 >> 2 ^ uVar10;\n            uVar10 = uVar10 + 1;\n            uVar8 = ((puVar2[uVar7 & 3] ^ uVar8) + (uVar9 ^ uVar4) ^\n                    (uVar4 << 2 ^ uVar8 >> 5) + (uVar8 << 4 ^ uVar4 >> 3)) + *puVar5;\n            *puVar5 = uVar8;\n            puVar5 = puVar5 + 1;\n          } while (uVar10 != iVar1 - 1U);\n          uVar10 = *param_1;\n          uVar8 = ((uVar8 ^ puVar2[(uVar9 >> 2 ^ iVar1 - 1U) & 3]) + (uVar9 ^ uVar10) ^\n                  (uVar10 << 2 ^ uVar8 >> 5) + (uVar8 * 0x10 ^ uVar10 >> 3)) +\n                  param_1[iVar1 + 0x3fffffff];\n          param_1[iVar1 + 0x3fffffff] = uVar8;\n        } while (uVar9 != iVar3 * -0x61c88647 + 0xb54cda56U);\n      }\n      return;\n    }\n    if (DAT_0007eb9c < 4) {\n      return;\n    }\n    local_808._0_1_ = 'X';\n    local_808._1_1_ = 'X';\n    local_808._2_1_ = 'T';\n    local_808._3_1_ = 'E';\n    uStack_804._0_1_ = 'A';\n    uStack_804._1_1_ = ' ';\n    uStack_804._2_1_ = 'r';\n    uStack_804._3_1_ = 'e';\n    uStack_800._0_1_ = 'q';\n    uStack_800._1_1_ = 'u';\n    uStack_800._2_1_ = 'i';\n    uStack_800._3_1_ = 'r';\n    uStack_7fc._0_1_ = 'e';\n    uStack_7fc._1_1_ = 's';\n    uStack_7fc._2_1_ = ' ';\n    uStack_7fc._3_1_ = 't';\n    local_7f8._0_1_ = 'h';\n    local_7f8._1_1_ = 'e';\n    local_7f8._2_1_ = ' ';\n    local_7f8._3_1_ = 'i';\n    uStack_7f4._0_1_ = 'n';\n    uStack_7f4._1_1_ = 'p';\n    uStack_7f4._2_1_ = 'u';\n    uStack_7f4._3_1_ = 't';\n    uStack_7f0._0_1_ = ' ';\n    uStack_7f0._1_1_ = 'a';\n    uStack_7f0._2_1_ = 's';\n    uStack_7f0._3_1_ = ' ';\n    uStack_7ec._0_1_ = '6';\n    uStack_7ec._1_1_ = '4';\n    uStack_7ec._2_1_ = '-';\n    uStack_7ec._3_1_ = 'b';\n    local_7e8._0_1_ = 'i';\n    local_7e8._1_1_ = 't';\n    local_7e8._2_1_ = ' ';\n    local_7e8._3_1_ = 'a';\n    uStack_7e4._0_1_ = 'l';\n    uStack_7e4._1_1_ = 'i';\n    uStack_7e4._2_1_ = 'g';\n    uStack_7e4._3_1_ = 'n';\n    uStack_7e0._0_1_ = 'e';\n    uStack_7e0._1_1_ = 'd';\n    uStack_7e0._2_1_ = ',';\n    uStack_7e0._3_1_ = ' ';\n    uStack_7dc._0_1_ = 'f';\n    uStack_7dc._1_1_ = 'a';\n    uStack_7dc._2_1_ = 'i';\n    uStack_7dc._3_1_ = 'l';\n    local_7d8._0_1_ = ' ';\n    local_7d8._1_1_ = 't';\n    local_7d8._2_1_ = 'o';\n    local_7d8._3_1_ = ' ';\n    uStack_7d4._0_1_ = 'e';\n    uStack_7d4._1_1_ = 'n';\n    uStack_7d4._2_1_ = 'c';\n    uStack_7d4._3_1_ = 'o';\n    uStack_7d0._0_1_ = 'd';\n    uStack_7d0._1_1_ = 'e';\n    uStack_7d0._2_1_ = '!';\n    uStack_7d0._3_1_ = '\\n';\n    local_7cc = 0;\n    FUN_0002e584(3,&local_808,0);\n    return;\n  }\n  if (DAT_0007e298 != 3) {\n    return;\n  }\n  if ((int)param_2 < 0) {\n    param_2 = param_2 + 3;\n  }\n  if ((int)param_2 >> 2 < 1) {\n    return;\n  }\n  puVar5 = param_1;\n  do {\n    puVar6 = puVar5 + 1;\n    *puVar5 = *puVar2 ^ *puVar5;\n    puVar5 = puVar6;\n  } while (puVar6 != param_1 + ((int)param_2 >> 2));\n  return;\n}\n\n",
    "FUN_00018d98": "\nvoid FUN_00018d98(uint *param_1,uint param_2,undefined4 param_3)\n\n{\n  uint uVar1;\n  int iVar2;\n  uint *puVar3;\n  int iVar4;\n  uint uVar5;\n  uint uVar6;\n  uint *puVar7;\n  uint *puVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  undefined4 local_828;\n  undefined4 uStack_824;\n  undefined4 uStack_820;\n  undefined4 uStack_81c;\n  undefined4 local_818;\n  undefined4 uStack_814;\n  undefined4 uStack_810;\n  undefined4 uStack_80c;\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined4 uStack_7fc;\n  undefined4 local_7f8;\n  undefined4 uStack_7f4;\n  undefined4 uStack_7f0;\n  undefined4 uStack_7ec;\n  undefined4 local_7e8;\n  undefined4 uStack_7e4;\n  undefined4 uStack_7e0;\n  undefined4 uStack_7dc;\n  undefined4 local_7d8;\n  undefined4 uStack_7d4;\n  undefined4 uStack_7d0;\n  undefined local_7cc;\n  \n  puVar3 = (uint *)FUN_00018c40(param_3);\n  if (DAT_0007e298 == 2) {\n    if ((param_2 & 7) == 0) {\n      uVar6 = param_2 + 3;\n      if (-1 < (int)param_2) {\n        uVar6 = param_2;\n      }\n      iVar2 = (int)uVar6 >> 2;\n      if (iVar2 < 2) {\n        if (3 < DAT_0007eb9c) {\n          local_828._0_1_ = 'X';\n          local_828._1_1_ = 'X';\n          local_828._2_1_ = 'T';\n          local_828._3_1_ = 'E';\n          uStack_824._0_1_ = 'A';\n          uStack_824._1_1_ = ' ';\n          uStack_824._2_1_ = 'd';\n          uStack_824._3_1_ = 'e';\n          uStack_820._0_1_ = 'c';\n          uStack_820._1_1_ = 'o';\n          uStack_820._2_1_ = 'd';\n          uStack_820._3_1_ = 'e';\n          uStack_81c._0_1_ = ' ';\n          uStack_81c._1_1_ = 'f';\n          uStack_81c._2_1_ = 'a';\n          uStack_81c._3_1_ = 'i';\n          local_818._0_1_ = 'l';\n          local_818._1_1_ = 'e';\n          local_818._2_1_ = 's';\n          local_818._3_1_ = ',';\n          uStack_814._0_1_ = ' ';\n          uStack_814._1_1_ = 'N';\n          uStack_814._2_1_ = ' ';\n          uStack_814._3_1_ = '<';\n          uStack_810._0_1_ = '=';\n          uStack_810._1_1_ = ' ';\n          uStack_810._2_1_ = '1';\n          uStack_810._3_1_ = ' ';\n          uStack_80c._0_1_ = 'f';\n          uStack_80c._1_1_ = 'o';\n          uStack_80c._2_1_ = 'u';\n          uStack_80c._3_1_ = 'n';\n          local_808._0_1_ = 'd';\n          local_808._1_1_ = '.';\n          local_808._2_1_ = '\\n';\n          local_808._3_1_ = '\\0';\n          FUN_0002e584(3,&local_828,0);\n          return;\n        }\n      }\n      else {\n        iVar4 = FUN_0005faf8(0x34);\n        uVar6 = (iVar4 + 6) * -0x61c88647;\n        uVar9 = *param_1;\n        iVar4 = iVar4 * 0x61c88647 + uVar6;\n        do {\n          uVar1 = uVar6 >> 2;\n          uVar10 = iVar2 - 1;\n          puVar7 = param_1 + iVar2 + 0x3fffffff;\n          do {\n            uVar5 = puVar7[-1];\n            uVar11 = uVar1 ^ uVar10;\n            uVar10 = uVar10 - 1;\n            uVar9 = *puVar7 - ((uVar5 ^ puVar3[uVar11 & 3]) + (uVar6 ^ uVar9) ^\n                              (uVar9 << 2 ^ uVar5 >> 5) + (uVar5 << 4 ^ uVar9 >> 3));\n            *puVar7 = uVar9;\n            puVar7 = puVar7 + -1;\n          } while (uVar10 != 0);\n          uVar10 = param_1[iVar2 + 0x3fffffff];\n          uVar5 = uVar9 ^ uVar6;\n          uVar6 = uVar6 + 0x61c88647;\n          uVar9 = *param_1 -\n                  ((uVar9 * 4 ^ uVar10 >> 5) + (uVar10 << 4 ^ uVar9 >> 3) ^\n                  (uVar10 ^ puVar3[uVar1 & 3]) + uVar5);\n          *param_1 = uVar9;\n        } while (uVar6 != iVar4 + 0x4ab325aaU);\n      }\n      return;\n    }\n    if (DAT_0007eb9c < 4) {\n      return;\n    }\n    local_808._0_1_ = 'X';\n    local_808._1_1_ = 'X';\n    local_808._2_1_ = 'T';\n    local_808._3_1_ = 'E';\n    uStack_804._0_1_ = 'A';\n    uStack_804._1_1_ = ' ';\n    uStack_804._2_1_ = 'r';\n    uStack_804._3_1_ = 'e';\n    uStack_800._0_1_ = 'q';\n    uStack_800._1_1_ = 'u';\n    uStack_800._2_1_ = 'i';\n    uStack_800._3_1_ = 'r';\n    uStack_7fc._0_1_ = 'e';\n    uStack_7fc._1_1_ = 's';\n    uStack_7fc._2_1_ = ' ';\n    uStack_7fc._3_1_ = 't';\n    local_7f8._0_1_ = 'h';\n    local_7f8._1_1_ = 'e';\n    local_7f8._2_1_ = ' ';\n    local_7f8._3_1_ = 'i';\n    uStack_7f4._0_1_ = 'n';\n    uStack_7f4._1_1_ = 'p';\n    uStack_7f4._2_1_ = 'u';\n    uStack_7f4._3_1_ = 't';\n    uStack_7f0._0_1_ = ' ';\n    uStack_7f0._1_1_ = 'a';\n    uStack_7f0._2_1_ = 's';\n    uStack_7f0._3_1_ = ' ';\n    uStack_7ec._0_1_ = '6';\n    uStack_7ec._1_1_ = '4';\n    uStack_7ec._2_1_ = '-';\n    uStack_7ec._3_1_ = 'b';\n    local_7e8._0_1_ = 'i';\n    local_7e8._1_1_ = 't';\n    local_7e8._2_1_ = ' ';\n    local_7e8._3_1_ = 'a';\n    uStack_7e4._0_1_ = 'l';\n    uStack_7e4._1_1_ = 'i';\n    uStack_7e4._2_1_ = 'g';\n    uStack_7e4._3_1_ = 'n';\n    uStack_7e0._0_1_ = 'e';\n    uStack_7e0._1_1_ = 'd';\n    uStack_7e0._2_1_ = ',';\n    uStack_7e0._3_1_ = ' ';\n    uStack_7dc._0_1_ = 'f';\n    uStack_7dc._1_1_ = 'a';\n    uStack_7dc._2_1_ = 'i';\n    uStack_7dc._3_1_ = 'l';\n    local_7d8._0_1_ = ' ';\n    local_7d8._1_1_ = 't';\n    local_7d8._2_1_ = 'o';\n    local_7d8._3_1_ = ' ';\n    uStack_7d4._0_1_ = 'd';\n    uStack_7d4._1_1_ = 'e';\n    uStack_7d4._2_1_ = 'c';\n    uStack_7d4._3_1_ = 'o';\n    uStack_7d0._0_1_ = 'd';\n    uStack_7d0._1_1_ = 'e';\n    uStack_7d0._2_1_ = '!';\n    uStack_7d0._3_1_ = '\\n';\n    local_7cc = 0;\n    FUN_0002e584(3,&local_808,0);\n    return;\n  }\n  if (DAT_0007e298 != 3) {\n    return;\n  }\n  if ((int)param_2 < 0) {\n    param_2 = param_2 + 3;\n  }\n  if ((int)param_2 >> 2 < 1) {\n    return;\n  }\n  puVar7 = param_1;\n  do {\n    puVar8 = puVar7 + 1;\n    *puVar7 = *puVar3 ^ *puVar7;\n    puVar7 = puVar8;\n  } while (puVar8 != param_1 + ((int)param_2 >> 2));\n  return;\n}\n\n",
    "FUN_00018e48": "\nvoid FUN_00018e48(undefined4 param_1,uint param_2,int param_3)\n\n{\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined4 uStack_7fc;\n  undefined4 local_7f8;\n  undefined4 uStack_7f4;\n  undefined4 uStack_7f0;\n  undefined4 uStack_7ec;\n  undefined4 local_7e8;\n  undefined4 uStack_7e4;\n  undefined4 uStack_7e0;\n  undefined4 uStack_7dc;\n  undefined4 uStack_7d8;\n  undefined4 uStack_7d4;\n  \n  if ((param_2 & 3) == 0) {\n    if (param_3 == 0) {\n      FUN_00018d98();\n      return;\n    }\n    FUN_00018ce8(param_1,param_2,1);\n    return;\n  }\n  if (DAT_0007eb9c < 4) {\n    return;\n  }\n  local_808._0_1_ = 'E';\n  local_808._1_1_ = 'E';\n  local_808._2_1_ = 'P';\n  local_808._3_1_ = 'R';\n  uStack_804._0_1_ = 'O';\n  uStack_804._1_1_ = 'M';\n  uStack_804._2_1_ = ' ';\n  uStack_804._3_1_ = 'w';\n  uStack_800._0_1_ = 'r';\n  uStack_800._1_1_ = 'i';\n  uStack_800._2_1_ = 't';\n  uStack_800._3_1_ = 'e';\n  uStack_7fc._0_1_ = ' ';\n  uStack_7fc._1_1_ = 'd';\n  uStack_7fc._2_1_ = 'a';\n  uStack_7fc._3_1_ = 't';\n  local_7f8._0_1_ = 'a';\n  local_7f8._1_1_ = ' ';\n  local_7f8._2_1_ = 'i';\n  local_7f8._3_1_ = 's';\n  uStack_7f4._0_1_ = ' ';\n  uStack_7f4._1_1_ = 'n';\n  uStack_7f4._2_1_ = 'o';\n  uStack_7f4._3_1_ = 't';\n  uStack_7f0._0_1_ = ' ';\n  uStack_7f0._1_1_ = '3';\n  uStack_7f0._2_1_ = '2';\n  uStack_7f0._3_1_ = '-';\n  uStack_7ec._0_1_ = 'b';\n  uStack_7ec._1_1_ = 'i';\n  uStack_7ec._2_1_ = 't';\n  uStack_7ec._3_1_ = ' ';\n  local_7e8._0_1_ = 'a';\n  local_7e8._1_1_ = 'l';\n  local_7e8._2_1_ = 'i';\n  local_7e8._3_1_ = 'g';\n  uStack_7e4._0_1_ = 'n';\n  uStack_7e4._1_1_ = 'e';\n  uStack_7e4._2_1_ = 'd';\n  uStack_7e4._3_1_ = ',';\n  uStack_7e0._0_1_ = ' ';\n  uStack_7e0._1_1_ = 'F';\n  uStack_7e0._2_1_ = 'A';\n  uStack_7e0._3_1_ = 'I';\n  uStack_7dc._0_1_ = 'L';\n  uStack_7dc._1_1_ = ' ';\n  uStack_7dc._2_1_ = 'E';\n  uStack_7dc._3_1_ = 'N';\n  uStack_7d8._0_1_ = 'C';\n  uStack_7d8._1_1_ = '/';\n  uStack_7d8._2_1_ = 'D';\n  uStack_7d8._3_1_ = 'E';\n  uStack_7d4._0_1_ = 'C';\n  uStack_7d4._1_1_ = '!';\n  uStack_7d4._2_1_ = '\\n';\n  uStack_7d4._3_1_ = '\\0';\n  FUN_0002e584(3,&local_808,0);\n  return;\n}\n\n",
    "FUN_000191dc": "\nbool FUN_000191dc(void)\n\n{\n  char cVar1;\n  \n  cVar1 = FUN_0004637c();\n  return cVar1 == '\\0';\n}\n\n",
    "FUN_000191fc": "\nbool FUN_000191fc(void)\n\n{\n  char cVar1;\n  \n  cVar1 = FUN_00046acc();\n  return cVar1 == '\\0';\n}\n\n",
    "FUN_00019214": "\nvoid FUN_00019214(uint param_1)\n\n{\n  undefined4 uVar1;\n  char acStack_810 [2048];\n  \n  if (3 < DAT_0007eb9c) {\n    snprintf(acStack_810,0x800,\"chain[%d] PIC jump to app\\n\",param_1);\n    FUN_0002e584(3,acStack_810,0);\n  }\n  FUN_00046554(param_1 & 0xff);\n  usleep(500000);\n  uVar1 = FUN_00046178(param_1 & 0xff);\n  if (3 < DAT_0007eb9c) {\n    snprintf(acStack_810,0x800,\"Check chain[%d] PIC fw version=0x%02x\\n\",param_1,uVar1);\n    FUN_0002e584(3,acStack_810,0);\n  }\n  return;\n}\n\n",
    "FUN_000192c8": "\ndouble FUN_000192c8(uint param_1)\n\n{\n  char cVar1;\n  double dVar2;\n  int local_83c;\n  undefined4 local_838;\n  undefined4 local_834;\n  char acStack_830 [2048];\n  \n  local_838 = 0;\n  local_834 = 0;\n  local_83c = 0;\n  cVar1 = FUN_00047158(param_1 & 0xff,&local_83c,1);\n  if (cVar1 == '\\0') {\n    dVar2 = 0.0;\n  }\n  else {\n    dVar2 = (double)(longlong)local_83c * 3.3 * 0.0009765625 * 7.6;\n    if (5 < DAT_0007eb9c) {\n      snprintf(acStack_830,0x800,\"an0 = %f.\\n\");\n      FUN_0002e584(5,acStack_830,0);\n      dVar2 = (double)(longlong)local_83c * 3.3 * 0.0009765625 * 7.6;\n    }\n  }\n  if (4 < DAT_0007eb9c) {\n    snprintf(acStack_830,0x800,\"chain = %d, voltage = %f\\n\",param_1,dVar2);\n    FUN_0002e584(4,acStack_830,0);\n  }\n  return dVar2;\n}\n\n",
    "FUN_000193f8": "\ndouble FUN_000193f8(void)\n\n{\n  int iVar1;\n  int iVar2;\n  double dVar3;\n  double dVar4;\n  double dVar5;\n  char acStack_818 [2048];\n  \n  iVar2 = 0;\n  dVar4 = 0.0;\n  do {\n    iVar1 = FUN_0001e29c(iVar2);\n    dVar5 = dVar4;\n    if ((((iVar1 != 0) &&\n         (dVar3 = (double)FUN_000192c8(iVar2), dVar3 != 0.1 && dVar3 < 0.1 == NAN(dVar3))) &&\n        (dVar5 = dVar3, dVar4 <= dVar3)) && (dVar5 = dVar4, dVar4 < 0.1)) {\n      dVar5 = dVar3;\n    }\n    iVar2 = iVar2 + 1;\n    dVar4 = dVar5;\n  } while (iVar2 != 4);\n  if (4 < DAT_0007eb9c) {\n    snprintf(acStack_818,0x800,\"the minimal voltage = %.2f\",DAT_0007eb9c,dVar5);\n    FUN_0002e584(4,acStack_818,0);\n  }\n  return dVar5;\n}\n\n",
    "FUN_000194dc": "\nvoid FUN_000194dc(void)\n\n{\n  FUN_00042138();\n  sleep(1);\n  return;\n}\n\n",
    "FUN_000194f0": "\nvoid FUN_000194f0(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  char acStack_810 [2052];\n  \n  iVar3 = 1;\n  sleep(1);\n  do {\n    do {\n      iVar3 = iVar3 + 1;\n      sleep(1);\n    } while (iVar3 < 0x1e);\n    iVar1 = FUN_00015508();\n    iVar2 = FUN_0001572c();\n    iVar1 = iVar1 - iVar2;\n    if (iVar1 < 0) {\n      iVar1 = -iVar1;\n    }\n  } while ((5 < iVar1) && (iVar3 != 0xb4));\n  if (3 < DAT_0007eb9c) {\n    iVar1 = FUN_00015508();\n    iVar2 = FUN_0001572c();\n    iVar1 = iVar1 - iVar2;\n    if (iVar1 < 0) {\n      iVar1 = -iVar1;\n    }\n    snprintf(acStack_810,0x800,\"Slept %d seconds, diff = %d.\\n\",iVar3,iVar1);\n    FUN_0002e584(3,acStack_810,0);\n  }\n  return;\n}\n\n",
    "FUN_000195a8": "\nundefined4 FUN_000195a8(int param_1)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined4 uStack_804;\n  undefined4 local_800;\n  undefined4 uStack_7fc;\n  undefined2 uStack_7f8;\n  undefined local_7f6;\n  \n  if (3 < DAT_0007eb9c) {\n    snprintf((char *)&local_810,0x800,\"%s to %d.\\n\",\"set_voltage_by_steps\",param_1);\n    FUN_0002e584(3,&local_810,0);\n  }\n  iVar1 = FUN_00048f00(SUB84((double)(longlong)param_1 / 100.0,0));\n  if (iVar1 < 0) {\n    if (3 < DAT_0007eb9c) {\n      local_810._0_1_ = 'b';\n      local_810._1_1_ = 'i';\n      local_810._2_1_ = 't';\n      local_810._3_1_ = 'm';\n      uStack_80c._0_1_ = 'a';\n      uStack_80c._1_1_ = 'i';\n      uStack_80c._2_1_ = 'n';\n      uStack_80c._3_1_ = '_';\n      uStack_808._0_1_ = 's';\n      uStack_808._1_1_ = 'e';\n      uStack_808._2_1_ = 't';\n      uStack_808._3_1_ = '_';\n      uStack_804._0_1_ = 'v';\n      uStack_804._1_1_ = 'o';\n      uStack_804._2_1_ = 'l';\n      uStack_804._3_1_ = 't';\n      local_800._0_1_ = 'a';\n      local_800._1_1_ = 'g';\n      local_800._2_1_ = 'e';\n      local_800._3_1_ = ' ';\n      uStack_7fc._0_1_ = 'f';\n      uStack_7fc._1_1_ = 'a';\n      uStack_7fc._2_1_ = 'i';\n      uStack_7fc._3_1_ = 'l';\n      uStack_7f8 = 0x6465;\n      local_7f6 = 0;\n      FUN_0002e584(3,&local_810,0);\n      return 0xffffffff;\n    }\n    uVar2 = 0xffffffff;\n  }\n  else {\n    uVar2 = 0;\n    DAT_0007f8bc = param_1;\n    DAT_0007f8c0 = param_1;\n  }\n  return uVar2;\n}\n\n",
    "FUN_00019698": "\nint FUN_00019698(int param_1)\n\n{\n  uint uVar1;\n  int iVar2;\n  int iVar3;\n  undefined *puVar4;\n  double dVar5;\n  double dVar6;\n  double dVar7;\n  undefined4 local_830;\n  undefined4 uStack_82c;\n  undefined4 uStack_828;\n  undefined4 uStack_824;\n  undefined4 local_820;\n  undefined4 uStack_81c;\n  undefined4 local_818;\n  undefined4 local_814;\n  undefined4 local_810;\n  undefined4 local_80c;\n  undefined4 uStack_808;\n  undefined4 uStack_804;\n  \n  uVar1 = FUN_00048910();\n  if ((undefined *)0x3 < DAT_0007eb9c) {\n    snprintf((char *)&local_830,0x800,\"power type version: 0x%04x\\n\",uVar1);\n    FUN_0002e584(3,&local_830,0);\n  }\n  iVar2 = FUN_0001e91c(uVar1 & 0xffff);\n  if (iVar2 == 0) {\n    if ((undefined *)0x3 < DAT_0007eb9c) {\n      local_830._0_1_ = 'p';\n      local_830._1_1_ = 'o';\n      local_830._2_1_ = 'w';\n      local_830._3_1_ = 'e';\n      uStack_82c._0_1_ = 'r';\n      uStack_82c._1_1_ = ' ';\n      uStack_82c._2_1_ = 't';\n      uStack_82c._3_1_ = 'y';\n      uStack_828._0_1_ = 'p';\n      uStack_828._1_1_ = 'e';\n      uStack_828._2_1_ = ' ';\n      uStack_828._3_1_ = 'v';\n      uStack_824._0_1_ = 'e';\n      uStack_824._1_1_ = 'r';\n      uStack_824._2_1_ = 's';\n      uStack_824._3_1_ = 'i';\n      local_820._0_1_ = 'o';\n      local_820._1_1_ = 'n';\n      local_820._2_1_ = ' ';\n      local_820._3_1_ = 'e';\n      uStack_81c._0_1_ = 'r';\n      uStack_81c._1_1_ = 'r';\n      uStack_81c._2_1_ = 'o';\n      uStack_81c._3_1_ = 'r';\n      local_818 = CONCAT22(local_818._2_2_,10);\n      FUN_0002e584(3,&local_830,0);\n      return -1;\n    }\n  }\n  else {\n    if ((undefined *)0x3 < DAT_0007eb9c) {\n      local_830._0_1_ = 'E';\n      local_830._1_1_ = 'n';\n      local_830._2_1_ = 't';\n      local_830._3_1_ = 'e';\n      uStack_82c._0_1_ = 'r';\n      uStack_82c._1_1_ = ' ';\n      uStack_82c._2_1_ = 's';\n      uStack_82c._3_1_ = 'l';\n      uStack_828._0_1_ = 'e';\n      uStack_828._1_1_ = 'e';\n      uStack_828._2_1_ = 'p';\n      uStack_828._3_1_ = ' ';\n      uStack_824._0_1_ = 't';\n      uStack_824._1_1_ = 'o';\n      uStack_824._2_1_ = ' ';\n      uStack_824._3_1_ = 'm';\n      local_820._0_1_ = 'a';\n      local_820._1_1_ = 'k';\n      local_820._2_1_ = 'e';\n      local_820._3_1_ = ' ';\n      uStack_81c._0_1_ = 's';\n      uStack_81c._1_1_ = 'u';\n      uStack_81c._2_1_ = 'r';\n      uStack_81c._3_1_ = 'e';\n      local_818._0_1_ = ' ';\n      local_818._1_1_ = 'p';\n      local_818._2_1_ = 'o';\n      local_818._3_1_ = 'w';\n      local_814._0_1_ = 'e';\n      local_814._1_1_ = 'r';\n      local_814._2_1_ = ' ';\n      local_814._3_1_ = 'r';\n      local_810._0_1_ = 'e';\n      local_810._1_1_ = 'l';\n      local_810._2_1_ = 'e';\n      local_810._3_1_ = 'a';\n      local_80c._0_1_ = 's';\n      local_80c._1_1_ = 'e';\n      local_80c._2_1_ = ' ';\n      local_80c._3_1_ = 'f';\n      uStack_808._0_1_ = 'i';\n      uStack_808._1_1_ = 'n';\n      uStack_808._2_1_ = 'i';\n      uStack_808._3_1_ = 's';\n      uStack_804._0_1_ = 'h';\n      uStack_804._1_1_ = '.';\n      uStack_804._2_1_ = '\\n';\n      uStack_804._3_1_ = '\\0';\n      FUN_0002e584(3,&local_830,0);\n    }\n    FUN_00042138();\n    sleep(1);\n    FUN_000194f0();\n    iVar2 = FUN_000195a8(param_1);\n    if (iVar2 < 0) {\n      if (DAT_0007eb9c < (undefined *)0x4) {\n        return iVar2;\n      }\n      snprintf((char *)&local_830,0x800,\"%s power iic error.\\n\",\"power_init\");\n      FUN_0002e584(3,&local_830,0);\n      return iVar2;\n    }\n    FUN_00042100();\n    sleep(1);\n    if (uVar1 - 0x75 < 4) {\n      iVar2 = 3;\n      do {\n        sleep(1);\n        dVar5 = (double)FUN_000192c8(0);\n        if (dVar5 < 0.0) {\n          if ((undefined *)0x3 < DAT_0007eb9c) {\n            local_830._0_1_ = 'r';\n            local_830._1_1_ = 'e';\n            local_830._2_1_ = 'a';\n            local_830._3_1_ = 'd';\n            uStack_82c._0_1_ = '_';\n            uStack_82c._1_1_ = 'f';\n            uStack_82c._2_1_ = 'e';\n            uStack_82c._3_1_ = 'e';\n            uStack_828._0_1_ = 'd';\n            uStack_828._1_1_ = 'b';\n            uStack_828._2_1_ = 'a';\n            uStack_828._3_1_ = 'c';\n            uStack_824._0_1_ = 'k';\n            uStack_824._1_1_ = '_';\n            uStack_824._2_1_ = 'v';\n            uStack_824._3_1_ = 'o';\n            local_820._0_1_ = 'l';\n            local_820._1_1_ = 't';\n            local_820._2_1_ = 'a';\n            local_820._3_1_ = 'g';\n            uStack_81c._0_1_ = 'e';\n            uStack_81c._1_1_ = ' ';\n            uStack_81c._2_1_ = 'f';\n            uStack_81c._3_1_ = 'a';\n            local_818._0_1_ = 'i';\n            local_818._1_1_ = 'l';\n            local_818._2_1_ = 'e';\n            local_818._3_1_ = 'd';\n            local_814._0_2_ = 0x21;\n            FUN_0002e584(3,&local_830,0);\n          }\n          iVar2 = 0;\n          FUN_00031d58(9,\"power voltage read failed, pls check!\");\n          goto LAB_000197d8;\n        }\n        dVar5 = dVar5 * 100.0;\n        dVar7 = (double)(longlong)param_1;\n        dVar6 = dVar7 * 1.1;\n        if ((dVar5 == dVar6 || dVar5 < dVar6 != (NAN(dVar5) || NAN(dVar6))) &&\n           (dVar7 * 0.9 <= dVar5)) {\n          iVar2 = 0;\n          goto LAB_000197d8;\n        }\n        if ((undefined *)0x3 < DAT_0007eb9c) {\n          dVar5 = dVar5 - dVar7;\n          puVar4 = DAT_0007eb9c;\n          if (dVar5 != 0.0 && dVar5 < 0.0 == NAN(dVar5)) {\n            puVar4 = &UNK_000613b4;\n          }\n          if (dVar5 == 0.0 || dVar5 < 0.0 != NAN(dVar5)) {\n            puVar4 = &UNK_000613bc;\n          }\n          snprintf((char *)&local_830,0x800,\"chain avg vol %s from %d to %.2f\",puVar4,param_1);\n          FUN_0002e584(3,&local_830,0);\n          if ((undefined *)0x3 < DAT_0007eb9c) {\n            local_830._0_1_ = 'p';\n            local_830._1_1_ = 'o';\n            local_830._2_1_ = 'w';\n            local_830._3_1_ = 'e';\n            uStack_82c._0_1_ = 'r';\n            uStack_82c._1_1_ = ' ';\n            uStack_82c._2_1_ = 'v';\n            uStack_82c._3_1_ = 'o';\n            uStack_828._0_1_ = 'l';\n            uStack_828._1_1_ = 't';\n            uStack_828._2_1_ = 'a';\n            uStack_828._3_1_ = 'g';\n            uStack_824._0_1_ = 'e';\n            uStack_824._1_1_ = ' ';\n            uStack_824._2_1_ = 'c';\n            uStack_824._3_1_ = 'a';\n            local_820._0_1_ = 'n';\n            local_820._1_1_ = ' ';\n            local_820._2_1_ = 'n';\n            local_820._3_1_ = 'o';\n            uStack_81c._0_1_ = 't';\n            uStack_81c._1_1_ = ' ';\n            uStack_81c._2_1_ = 'm';\n            uStack_81c._3_1_ = 'e';\n            local_818._0_1_ = 'e';\n            local_818._1_1_ = 't';\n            local_818._2_1_ = ' ';\n            local_818._3_1_ = 't';\n            local_814._0_1_ = 'h';\n            local_814._1_1_ = 'e';\n            local_814._2_1_ = ' ';\n            local_814._3_1_ = 't';\n            local_810._0_1_ = 'a';\n            local_810._1_1_ = 'r';\n            local_810._2_1_ = 'g';\n            local_810._3_1_ = 'e';\n            local_80c._0_2_ = 0x74;\n            FUN_0002e584(3,&local_830,0);\n          }\n        }\n        iVar2 = iVar2 + -1;\n      } while (iVar2 != 0);\n      iVar2 = -1;\nLAB_000197d8:\n      uVar1 = 0;\n      do {\n        iVar3 = FUN_00048b7c();\n        uVar1 = uVar1 + 1;\n        if (iVar3 == 0) {\n          return iVar2;\n        }\n        if ((uVar1 % 5 == 0) && ((undefined *)0x3 < DAT_0007eb9c)) {\n          local_830._0_1_ = 'b';\n          local_830._1_1_ = 'i';\n          local_830._2_1_ = 't';\n          local_830._3_1_ = 'm';\n          uStack_82c._0_1_ = 'a';\n          uStack_82c._1_1_ = 'i';\n          uStack_82c._2_1_ = 'n';\n          uStack_82c._3_1_ = '_';\n          uStack_828._0_1_ = 'g';\n          uStack_828._1_1_ = 'e';\n          uStack_828._2_1_ = 't';\n          uStack_828._3_1_ = '_';\n          uStack_824._0_1_ = 'p';\n          uStack_824._1_1_ = 'o';\n          uStack_824._2_1_ = 'w';\n          uStack_824._3_1_ = 'e';\n          local_820._0_1_ = 'r';\n          local_820._1_1_ = '_';\n          local_820._2_1_ = 's';\n          local_820._3_1_ = 't';\n          uStack_81c._0_1_ = 'a';\n          uStack_81c._1_1_ = 't';\n          uStack_81c._2_1_ = 'u';\n          uStack_81c._3_1_ = 's';\n          local_818._0_1_ = ' ';\n          local_818._1_1_ = 'f';\n          local_818._2_1_ = 'a';\n          local_818._3_1_ = 'i';\n          local_814._0_1_ = 'l';\n          local_814._1_1_ = 'e';\n          local_814._2_1_ = 'd';\n          local_814._3_1_ = '!';\n          local_810 = local_810 & 0xffffff00;\n          FUN_0002e584(3,&local_830,0);\n        }\n        sleep(3);\n      } while (uVar1 != 0x14);\n    }\n    else {\n      iVar2 = 3;\n      do {\n        sleep(1);\n        dVar5 = (double)FUN_000193f8();\n        if (((double)(longlong)param_1 * 0.75) / 100.0 <= dVar5) {\n          return 0;\n        }\n        if ((undefined *)0x3 < DAT_0007eb9c) {\n          local_830._0_1_ = 'p';\n          local_830._1_1_ = 'o';\n          local_830._2_1_ = 'w';\n          local_830._3_1_ = 'e';\n          uStack_82c._0_1_ = 'r';\n          uStack_82c._1_1_ = ' ';\n          uStack_82c._2_1_ = 'v';\n          uStack_82c._3_1_ = 'o';\n          uStack_828._0_1_ = 'l';\n          uStack_828._1_1_ = 't';\n          uStack_828._2_1_ = 'a';\n          uStack_828._3_1_ = 'g';\n          uStack_824._0_1_ = 'e';\n          uStack_824._1_1_ = ' ';\n          uStack_824._2_1_ = 'c';\n          uStack_824._3_1_ = 'a';\n          local_820._0_1_ = 'n';\n          local_820._1_1_ = ' ';\n          local_820._2_1_ = 'n';\n          local_820._3_1_ = 'o';\n          uStack_81c._0_1_ = 't';\n          uStack_81c._1_1_ = ' ';\n          uStack_81c._2_1_ = 'm';\n          uStack_81c._3_1_ = 'e';\n          local_818._0_1_ = 'e';\n          local_818._1_1_ = 't';\n          local_818._2_1_ = ' ';\n          local_818._3_1_ = 't';\n          local_814._0_1_ = 'h';\n          local_814._1_1_ = 'e';\n          local_814._2_1_ = ' ';\n          local_814._3_1_ = 't';\n          local_810._0_1_ = 'a';\n          local_810._1_1_ = 'r';\n          local_810._2_1_ = 'g';\n          local_810._3_1_ = 'e';\n          local_80c._0_2_ = 0x74;\n          FUN_0002e584(3,&local_830,0);\n        }\n        iVar2 = iVar2 + -1;\n      } while (iVar2 != 0);\n    }\n  }\n  return -1;\n}\n\n",
    "FUN_00019ab4": "\nundefined4 FUN_00019ab4(void)\n\n{\n  return DAT_0007f8bc;\n}\n\n",
    "FUN_00019ac4": "\nundefined4 FUN_00019ac4(void)\n\n{\n  double dVar1;\n  \n  dVar1 = (double)FUN_00048f9c(0);\n  return (int)(longlong)(dVar1 * 100.0);\n}\n\n",
    "FUN_00019af0": "\nundefined4 FUN_00019af0(undefined4 param_1,undefined4 param_2)\n\n{\n  bool bVar1;\n  int iVar2;\n  void *__ptr;\n  int iVar3;\n  undefined4 uVar4;\n  int *piVar5;\n  undefined auStack_9b4 [32];\n  char acStack_994 [128];\n  undefined4 local_914 [23];\n  undefined auStack_8b8 [160];\n  undefined4 local_818;\n  undefined4 uStack_814;\n  undefined4 uStack_810;\n  undefined4 uStack_80c;\n  undefined4 local_808;\n  undefined4 local_804;\n  undefined4 uStack_800;\n  undefined local_7fc;\n  \n  memset(acStack_994,0,0x80);\n  memset(auStack_9b4,0,0x20);\n  iVar2 = FUN_000258c8(auStack_9b4);\n  if (iVar2 == 0) {\n    sprintf(acStack_994,\"http://%s:%d/power/%s\",param_1,param_2,auStack_9b4);\n    __ptr = (void *)FUN_000253a0(acStack_994);\n    if (__ptr != (void *)0x0) {\n      iVar2 = FUN_0004d38c(__ptr,0,local_914);\n      if (iVar2 == 0) {\n        if (DAT_0007eb9c < 4) {\n          uVar4 = 0xffffffff;\n        }\n        else {\n          uVar4 = 0xffffffff;\n          snprintf((char *)&local_818,0x800,\"JSON decode failed(%d): %s\",local_914[0],auStack_8b8);\n          FUN_0002e584(3,&local_818,0);\n        }\n      }\n      else {\n        iVar3 = FUN_0004e234(iVar2,\"power\");\n        if (iVar3 == 0) {\n          if (DAT_0007eb9c < 4) {\n            uVar4 = 0xffffffff;\n          }\n          else {\n            uVar4 = 0xffffffff;\n            local_818._0_1_ = 'n';\n            local_818._1_1_ = 'o';\n            local_818._2_1_ = ' ';\n            local_818._3_1_ = 'j';\n            uStack_814._0_1_ = 's';\n            uStack_814._1_1_ = 'o';\n            uStack_814._2_1_ = 'n';\n            uStack_814._3_1_ = ' ';\n            uStack_810._0_1_ = 'o';\n            uStack_810._1_1_ = 'b';\n            uStack_810._2_1_ = 'j';\n            uStack_810._3_1_ = 'e';\n            uStack_80c._0_1_ = 'c';\n            uStack_80c._1_1_ = 't';\n            uStack_80c._2_1_ = '[';\n            uStack_80c._3_1_ = 'p';\n            local_808._0_1_ = 'o';\n            local_808._1_1_ = 'w';\n            local_808._2_1_ = 'e';\n            local_808._3_1_ = 'r';\n            local_804._0_1_ = ']';\n            local_804._1_1_ = ' ';\n            local_804._2_1_ = 'f';\n            local_804._3_1_ = 'o';\n            uStack_800._0_1_ = 'u';\n            uStack_800._1_1_ = 'n';\n            uStack_800._2_1_ = 'd';\n            uStack_800._3_1_ = '\\n';\n            local_7fc = 0;\n            FUN_0002e584(3,&local_818,0);\n          }\n        }\n        else {\n          uVar4 = FUN_0004e9c4();\n        }\n        if (*(int *)(iVar2 + 4) != -1) {\n          piVar5 = (int *)(iVar2 + 4);\n          DataMemoryBarrier(0xb);\n          do {\n            iVar3 = *piVar5;\n            bVar1 = (bool)hasExclusiveAccess(piVar5);\n          } while (!bVar1);\n          *piVar5 = iVar3 + -1;\n          if (iVar3 + -1 == 0) {\n            FUN_0004eb6c(iVar2);\n          }\n        }\n      }\n      free(__ptr);\n      return uVar4;\n    }\n    if (3 < DAT_0007eb9c) {\n      local_818._0_1_ = 'h';\n      local_818._1_1_ = 't';\n      local_818._2_1_ = 't';\n      local_818._3_1_ = 'p';\n      uStack_814._0_1_ = ' ';\n      uStack_814._1_1_ = 'g';\n      uStack_814._2_1_ = 'e';\n      uStack_814._3_1_ = 't';\n      uStack_810._0_1_ = ' ';\n      uStack_810._1_1_ = 'f';\n      uStack_810._2_1_ = 'a';\n      uStack_810._3_1_ = 'i';\n      uStack_80c._0_1_ = 'l';\n      uStack_80c._1_1_ = 'e';\n      uStack_80c._2_1_ = 'd';\n      uStack_80c._3_1_ = '\\n';\n      local_808 = local_808 & 0xffffff00;\n      FUN_0002e584(3,&local_818,0);\n    }\n  }\n  else if (3 < DAT_0007eb9c) {\n    local_818._0_1_ = 'g';\n    local_818._1_1_ = 'e';\n    local_818._2_1_ = 't';\n    local_818._3_1_ = ' ';\n    uStack_814._0_1_ = 'l';\n    uStack_814._1_1_ = 'o';\n    uStack_814._2_1_ = 'c';\n    uStack_814._3_1_ = 'a';\n    uStack_810._0_1_ = 'l';\n    uStack_810._1_1_ = ' ';\n    uStack_810._2_1_ = 'i';\n    uStack_810._3_1_ = 'p';\n    uStack_80c._0_1_ = ' ';\n    uStack_80c._1_1_ = 'f';\n    uStack_80c._2_1_ = 'a';\n    uStack_80c._3_1_ = 'i';\n    local_808._0_1_ = 'l';\n    local_808._1_1_ = 'e';\n    local_808._2_1_ = 'd';\n    local_808._3_1_ = '\\n';\n    local_804 = local_804 & 0xffffff00;\n    FUN_0002e584(3,&local_818,0);\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n",
    "FUN_00019d70": "\nvoid FUN_00019d70(uint *param_1,uint *param_2,uint *param_3,uint *param_4)\n\n{\n  int iVar1;\n  uint *puVar2;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  uint *puVar3;\n  \n  iVar1 = FUN_0001e0f0();\n  if (iVar1 < 1) {\n    uVar5 = 0;\n    uVar4 = 0xffffff;\n    uVar7 = uVar5;\n  }\n  else {\n    uVar5 = 0;\n    uVar7 = 0;\n    uVar4 = 0xffffff;\n    puVar2 = param_1;\n    do {\n      puVar3 = puVar2 + 1;\n      uVar6 = *puVar2;\n      uVar5 = uVar5 + uVar6;\n      if (uVar7 < uVar6) {\n        uVar7 = uVar6;\n      }\n      if (uVar6 <= uVar4) {\n        uVar4 = uVar6;\n      }\n      puVar2 = puVar3;\n    } while (puVar3 != param_1 + iVar1);\n  }\n  *param_2 = uVar4;\n  *param_3 = uVar7;\n  *param_4 = uVar5;\n  return;\n}\n\n",
    "FUN_00019de4": "\nint FUN_00019de4(int param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  int local_c;\n  \n  local_c = 0;\n  if (DAT_0007edc8 != 2) {\n    FUN_000188a0(param_1,(undefined)DAT_00080fb4,&local_c);\n    return local_c;\n  }\n  iVar3 = (&DAT_0007f8c4)[param_1];\n  iVar1 = FUN_0001e0f0();\n  iVar2 = FUN_0001e130();\n  return (iVar2 * iVar1 * iVar3) / 1000 + local_c;\n}\n\n",
    "FUN_00019e68": "\nint FUN_00019e68(void)\n\n{\n  size_t __nmemb;\n  int *__ptr;\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  int *piVar5;\n  int iVar7;\n  undefined4 local_820;\n  undefined4 uStack_81c;\n  undefined4 uStack_818;\n  undefined4 uStack_814;\n  undefined4 local_810;\n  int *piVar6;\n  \n  __nmemb = FUN_0001e0f0();\n  __ptr = (int *)calloc(__nmemb,4);\n  if (__ptr == (int *)0x0) {\n    iVar3 = 0;\n    if (3 < DAT_0007eb9c) {\n      local_820._0_1_ = 'm';\n      local_820._1_1_ = 'a';\n      local_820._2_1_ = 'l';\n      local_820._3_1_ = 'l';\n      uStack_81c._0_1_ = 'o';\n      uStack_81c._1_1_ = 'c';\n      uStack_81c._2_1_ = ' ';\n      uStack_81c._3_1_ = 'b';\n      uStack_818._0_1_ = 'u';\n      uStack_818._1_1_ = 'f';\n      uStack_818._2_1_ = ' ';\n      uStack_818._3_1_ = 'f';\n      uStack_814._0_1_ = 'a';\n      uStack_814._1_1_ = 'i';\n      uStack_814._2_1_ = 'l';\n      uStack_814._3_1_ = 'e';\n      local_810._0_1_ = 'd';\n      local_810._1_1_ = '!';\n      local_810._2_1_ = '\\n';\n      local_810._3_1_ = '\\0';\n      FUN_0002e584(3,&local_820,0);\n    }\n  }\n  else {\n    iVar3 = 0;\n    if (DAT_0007edc8 == 2) {\n      iVar4 = 0;\n      iVar1 = FUN_0001e29c(0);\n      while( true ) {\n        if (iVar1 != 0) {\n          iVar7 = (&DAT_0007f8c4)[iVar4];\n          iVar1 = FUN_0001e0f0();\n          iVar2 = FUN_0001e130();\n          iVar3 = iVar2 * iVar1 * iVar7 + iVar3;\n        }\n        iVar4 = iVar4 + 1;\n        if (iVar4 == 4) break;\n        iVar1 = FUN_0001e29c(iVar4);\n      }\n    }\n    else {\n      iVar4 = 0;\n      do {\n        iVar1 = FUN_0001e29c(iVar4);\n        if (iVar1 != 0) {\n          FUN_000183fc(iVar4,(undefined)DAT_00080fb4,__ptr);\n          iVar1 = FUN_0001e0f0();\n          if (0 < iVar1) {\n            piVar5 = __ptr;\n            do {\n              piVar6 = piVar5 + 1;\n              iVar7 = *piVar5;\n              iVar2 = FUN_0001e130();\n              iVar3 = iVar7 * iVar2 + iVar3;\n              piVar5 = piVar6;\n            } while (piVar6 != __ptr + iVar1);\n          }\n        }\n        iVar4 = iVar4 + 1;\n      } while (iVar4 != 4);\n    }\n    DAT_0007f8d4 = iVar3 / 1000;\n    if (4 < DAT_0007eb9c) {\n      snprintf((char *)&local_820,0x800,\"max_hash_rate = %d\\n\",DAT_0007f8d4);\n      FUN_0002e584(4,&local_820,0);\n    }\n    iVar3 = DAT_0007f8d4;\n    free(__ptr);\n  }\n  return iVar3;\n}\n\n",
    "FUN_0001a014": "\nint FUN_0001a014(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  uint uVar5;\n  uint uVar6;\n  int iVar7;\n  uint local_824;\n  char acStack_820 [2052];\n  \n  if (DAT_0007edc8 == 2) {\n    iVar3 = 0;\n    iVar1 = 0;\n    iVar4 = FUN_0001e29c(0);\n    while( true ) {\n      if (iVar4 != 0) {\n        iVar7 = (&DAT_0007f8c4)[iVar1];\n        iVar4 = FUN_0001e0f0();\n        iVar2 = FUN_0001e130();\n        iVar3 = iVar2 * iVar4 * iVar7 + iVar3;\n      }\n      iVar1 = iVar1 + 1;\n      if (iVar1 == 4) break;\n      iVar4 = FUN_0001e29c(iVar1);\n    }\n  }\n  else {\n    iVar3 = 0;\n    uVar5 = 0;\n    do {\n      iVar1 = FUN_0001e29c(iVar3);\n      uVar6 = uVar5;\n      if ((((iVar1 != 0) &&\n           (iVar1 = FUN_000183fc(iVar3,(undefined)DAT_00080fb4,&local_824), iVar1 == 0)) &&\n          (uVar6 = local_824, uVar5 != 0)) && (uVar6 = uVar5, local_824 <= uVar5)) {\n        uVar6 = local_824;\n      }\n      iVar3 = iVar3 + 1;\n      uVar5 = uVar6;\n    } while (iVar3 != 4);\n    iVar3 = 0;\n    iVar1 = 0;\n    do {\n      iVar4 = iVar1 + 1;\n      iVar1 = FUN_0001e29c(iVar1);\n      if (iVar1 != 0) {\n        iVar1 = FUN_0001e0f0();\n        iVar2 = FUN_0001e130();\n        iVar3 = iVar2 * uVar6 * iVar1 + iVar3;\n      }\n      iVar1 = iVar4;\n    } while (iVar4 != 4);\n  }\n  DAT_0007f8d8 = iVar3 / 1000;\n  if (4 < DAT_0007eb9c) {\n    snprintf(acStack_820,0x800,\"ideal_hash_rate = %d\\n\",DAT_0007f8d8);\n    FUN_0002e584(4,acStack_820,0);\n  }\n  return DAT_0007f8d8;\n}\n\n",
    "FUN_0001a18c": "\nint FUN_0001a18c(void)\n\n{\n  undefined4 uVar1;\n  int iVar2;\n  int iVar3;\n  int *piVar4;\n  undefined4 uStack_818;\n  int aiStack_814 [2];\n  undefined *puStack_80c;\n  code *pcStack_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined4 uStack_7fc;\n  int aiStack_7f8 [505];\n  int *piVar5;\n  \n  uVar1 = FUN_0001a014();\n  iVar2 = 110000;\n  uStack_818 = 110000;\n  aiStack_814[0] = 0x19a28;\n  aiStack_814[1] = 95000;\n  puStack_80c = &LAB_00015f90;\n  pcStack_808 = FUN_000157c0;\n  uStack_804 = 84000;\n  uStack_800 = 81000;\n  uStack_7fc = 77000;\n  iVar3 = FUN_0005faf8(uVar1,110000);\n  if (iVar3 == 0) {\n    piVar4 = aiStack_814;\n    do {\n      piVar5 = piVar4 + 1;\n      iVar2 = *piVar4;\n      iVar3 = FUN_0005faf8(uVar1,iVar2);\n      if (iVar3 != 0) goto LAB_0001a234;\n      piVar4 = piVar5;\n    } while (piVar5 != aiStack_7f8);\n    iVar3 = FUN_0001a014();\n  }\n  else {\nLAB_0001a234:\n    DAT_0007f8dc = iVar2;\n    iVar3 = FUN_0001a014();\n    if (iVar2 != 0) goto LAB_0001a258;\n  }\n  if (DAT_0007eb9c < 5) {\n    DAT_0007f8dc = iVar3;\n    return iVar3;\n  }\n  snprintf((char *)&uStack_818,0x800,\"format sale hash failed %d\\n\",iVar3);\n  FUN_0002e584(4,&uStack_818,0);\n  iVar2 = iVar3;\nLAB_0001a258:\n  if (DAT_0007eb9c < 5) {\n    DAT_0007f8dc = iVar2;\n    return iVar2;\n  }\n  DAT_0007f8dc = iVar2;\n  snprintf((char *)&uStack_818,0x800,\"sale_hash_rate = %d\\n\",iVar2);\n  FUN_0002e584(4,&uStack_818,0);\n  return DAT_0007f8dc;\n}\n\n",
    "FUN_0001a2e0": "\nundefined4 FUN_0001a2e0(int param_1)\n\n{\n  undefined4 uVar1;\n  \n  if (DAT_0007edc8 == 2) {\n    uVar1 = (&DAT_0007f8c4)[param_1];\n  }\n  else {\n    uVar1 = (&DAT_0007f8e0)[param_1];\n  }\n  return uVar1;\n}\n\n",
    "FUN_0001a308": "\nundefined4 FUN_0001a308(void)\n\n{\n  char cVar1;\n  int iVar2;\n  int iVar3;\n  undefined4 uVar4;\n  uint *puVar5;\n  uint uVar6;\n  uint local_824;\n  char acStack_820 [2052];\n  \n  iVar2 = FUN_00036538(&local_824);\n  if (iVar2 == 0) {\n    iVar2 = 0;\n    do {\n      iVar3 = FUN_0001e29c(iVar2);\n      if (iVar3 != 0) {\n        memset(&DAT_004fbaa0 + iVar2 * 0x100,0,0x400);\n        iVar3 = FUN_000183fc(iVar2,(undefined)DAT_00080fb4,&DAT_004fbaa0 + iVar2 * 0x100);\n        if (iVar3 != 0) {\nLAB_0001a394:\n          FUN_000356c4(3,0xff);\n          FUN_00031d58(0xc,\"Get frequency failed!\");\n          return 0xffffffff;\n        }\n        cVar1 = FUN_0001e0f0();\n        if (cVar1 != '\\0') {\n          uVar6 = (&DAT_004fbaa0)[iVar2 * 0x100];\n          if (local_824 < uVar6) {\nLAB_0001a408:\n            if (3 < DAT_0007eb9c) {\n              snprintf(acStack_820,0x800,\"Freq(%d) > Max_freq(%d), invalid!\\n\",uVar6,local_824);\n              FUN_0002e584(3,acStack_820,0);\n            }\n            goto LAB_0001a394;\n          }\n          puVar5 = &DAT_004fbaa4 + iVar2 * 0x100;\n          while (&DAT_004fbaa4 + iVar2 * 0x100 + (uint)(byte)(cVar1 - 1) != puVar5) {\n            uVar6 = *puVar5;\n            puVar5 = puVar5 + 1;\n            if (local_824 < uVar6) goto LAB_0001a408;\n          }\n        }\n      }\n      iVar2 = iVar2 + 1;\n    } while (iVar2 != 4);\n    uVar4 = 0;\n  }\n  else {\n    FUN_000356c4(3,0xff);\n    FUN_00031d58(0xc,\"Get max freq failed!\");\n    uVar4 = 0xffffffff;\n  }\n  return uVar4;\n}\n\n",
    "FUN_0001a46c": "\nvoid FUN_0001a46c(void)\n\n{\n  return;\n}\n\n",
    "FUN_0001a470": "\nvoid FUN_0001a470(float param_1,undefined4 param_2,undefined4 param_3,int param_4)\n\n{\n  undefined4 *puVar1;\n  undefined2 *puVar2;\n  byte *pbVar3;\n  byte bVar4;\n  uint uVar5;\n  uint uVar6;\n  size_t sVar7;\n  uint uVar8;\n  uint uVar9;\n  char *pcVar10;\n  undefined2 *puVar11;\n  uint uVar12;\n  size_t sVar13;\n  int iVar14;\n  uint uVar15;\n  uint uVar16;\n  size_t local_9e4;\n  uint local_9e0;\n  byte local_9c4 [4];\n  undefined4 local_9c0;\n  undefined4 local_9bc;\n  undefined2 local_9b8;\n  undefined local_9b6 [2];\n  undefined4 local_9b4 [97];\n  undefined4 local_830;\n  undefined4 uStack_82c;\n  \n  if (3 < DAT_0007eb9c) {\n    pcVar10 = \"false\";\n    if (param_4 != 0) {\n      pcVar10 = \"true\";\n    }\n    snprintf((char *)&local_830,0x800,\"chain = %d, freq = %g, is_higher_voltage = %s\\n\",param_2,\n             (double)param_1,pcVar10);\n    FUN_0002e584(3,&local_830,0);\n  }\n  FUN_0001f0e0(param_2,1,0,param_3);\n  local_9c0 = 0;\n  local_9bc = 0;\n  memset(&local_9b8,0,0x188);\n  FUN_000502c0(param_1,&local_9c0,local_9c4,0);\n  local_9e0 = local_9c0 & 0xff;\n  uVar16 = (uint)local_9c4[0];\n  uVar8 = local_9c0 >> 8;\n  local_9bc._0_3_ = CONCAT12(local_9c4[0],(undefined2)local_9bc);\n  uVar9 = DAT_0007eb9c;\n  if (local_9e0 < 8) {\n    local_9e4 = 0;\n    uVar6 = uVar8;\n    uVar15 = local_9e0;\n    do {\n      while (uVar5 = uVar6 & 0xff, uVar5 <= uVar15) {\n        if (uVar16 < 2) {\n          puVar11 = &local_9b8 + local_9e4 * 4;\n          iVar14 = uVar5 * local_9e0 * uVar16;\n          uVar12 = uVar16;\n          do {\n            *(char *)puVar11 = (char)uVar15;\n            *(char *)((int)puVar11 + 1) = (char)uVar6;\n            *(char *)(puVar11 + 1) = (char)uVar12;\n            *(int *)(puVar11 + 2) = iVar14;\n            if (4 < uVar9) {\n              snprintf((char *)&local_830,0x800,\n                       \"post_div1 = %d, post_div2 = %d, user_div = %d, div_ret = %d\\n\",local_9e0,\n                       uVar5,uVar12,iVar14);\n              FUN_0002e584(4,&local_830,0);\n              uVar9 = DAT_0007eb9c;\n            }\n            uVar12 = uVar12 + 1;\n            puVar11 = puVar11 + 4;\n            iVar14 = iVar14 + uVar5 * local_9e0;\n          } while ((uVar12 & 0xff) < 2);\n          local_9e4 = local_9e4 + (1 - uVar16 & 0xff) + 1;\n        }\n        uVar6 = uVar5 + 1;\n      }\n      local_9e0 = local_9e0 + 1;\n      uVar15 = local_9e0 & 0xff;\n      uVar6 = uVar8;\n    } while (uVar15 < 8);\n  }\n  else {\n    local_9e4 = 0;\n  }\n  if (4 < uVar9) {\n    local_830._0_2_ = 10;\n    FUN_0002e584(4,&local_830,0);\n    if (4 < DAT_0007eb9c) {\n      local_830._0_1_ = 's';\n      local_830._1_1_ = 'o';\n      local_830._2_1_ = 'r';\n      local_830._3_1_ = 't';\n      uStack_82c._0_1_ = 'e';\n      uStack_82c._1_1_ = 'd';\n      uStack_82c._2_1_ = '\\n';\n      uStack_82c._3_1_ = '\\0';\n      FUN_0002e584(4,&local_830,0);\n    }\n  }\n  qsort(&local_9b8,local_9e4,8,(__compar_fn_t)&LAB_00019d50);\n  if (local_9e4 != 0) {\n    sVar7 = 0;\n    puVar11 = &local_9b8;\n    do {\n      while (sVar13 = sVar7, 4 < DAT_0007eb9c) {\n        puVar1 = (undefined4 *)(puVar11 + 2);\n        puVar2 = puVar11 + 1;\n        pbVar3 = (byte *)((int)puVar11 + 1);\n        bVar4 = *(byte *)puVar11;\n        puVar11 = puVar11 + 4;\n        snprintf((char *)&local_830,0x800,\n                 \"[%d] post_div1 = %d, post_div2 = %d, user_div = %d, div_ret = %d\\n\",sVar13,\n                 (uint)bVar4,(uint)*pbVar3,(uint)*(byte *)puVar2,*puVar1);\n        FUN_0002e584(4,&local_830,0);\n        sVar7 = sVar13 + 1;\n        if (sVar13 + 1 == local_9e4) goto LAB_0001a6d8;\n      }\n      puVar11 = puVar11 + 4;\n      sVar7 = sVar13 + 1;\n    } while (sVar13 + 1 != local_9e4);\nLAB_0001a6d8:\n    iVar14 = 0;\n    puVar11 = &local_9b8;\n    do {\n      local_9bc._0_3_ = CONCAT12(*(byte *)(puVar11 + 1),(undefined2)local_9bc);\n      local_9c0 = CONCAT22(local_9c0._2_2_,*puVar11);\n      uVar8 = FUN_0001f080(local_9c0,local_9bc);\n      if (DAT_0007edcc < uVar8) {\n        if (3 < DAT_0007eb9c) {\n          snprintf((char *)&local_830,0x800,\n                   \"[%d] _POSTDIV1 = %d, _POSTDIV2 = %d, USER_DIV = %d, freq = %d\\n\",iVar14,\n                   local_9c0 & 0xff,local_9c0 >> 8 & 0xff,local_9bc >> 0x10 & 0xff,uVar8);\n          FUN_0002e584(3,&local_830,0);\n        }\n        FUN_0001f164(param_2,1,0,param_3);\n        usleep(1000000);\n      }\n      iVar14 = iVar14 + 1;\n      puVar11 = puVar11 + 4;\n    } while (iVar14 != sVar13 + 1);\n  }\n  return;\n}\n\n",
    "FUN_0001a870": "\nvoid FUN_0001a870(float param_1,undefined4 param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  float fVar5;\n  float fVar6;\n  undefined local_844 [4];\n  undefined4 local_840;\n  undefined4 local_83c;\n  char acStack_838 [2052];\n  longlong lVar7;\n  \n  if (4 < DAT_0007eb9c) {\n    snprintf(acStack_838,0x800,\"fixed step freq_start = %d, freq_end = %d, freq_step = %.2f\\n\",\n             param_3,param_4);\n    FUN_0002e584(4,acStack_838,0);\n  }\n  iVar3 = 0;\n  do {\n    iVar1 = FUN_0001e29c(iVar3);\n    if (iVar1 != 0) {\n      FUN_0001f0e0(iVar3,1,0,param_2);\n    }\n    iVar3 = iVar3 + 1;\n  } while (iVar3 != 4);\n  if (param_3 < param_4) {\n    uVar2 = param_4 - param_3;\n  }\n  else {\n    uVar2 = param_3 - param_4;\n  }\n  fVar6 = (((float)(ulonglong)uVar2 + param_1) - 0.01) / param_1;\n  uVar2 = (uint)(fVar6 < 0.0) * (int)(longlong)fVar6;\n  if (uVar2 != 0) {\n    uVar4 = 1;\n    lVar7 = (ulonglong)(uint)(float)(ulonglong)param_4 << 0x20;\n    do {\n      fVar6 = (float)((ulonglong)lVar7 >> 0x20);\n      local_840 = 0;\n      local_83c = 0;\n      if (param_3 < param_4) {\n        fVar5 = (float)(ulonglong)param_3 + (float)(ulonglong)uVar4 * param_1;\n        lVar7 = CONCAT44(fVar6,fVar5);\n        if (fVar6 < fVar5) {\n          lVar7 = CONCAT44(fVar6,fVar6);\n        }\n      }\n      else {\n        fVar5 = (float)(ulonglong)param_3 - (float)(ulonglong)uVar4 * param_1;\n        if (fVar6 != fVar5 && fVar6 < fVar5 == (NAN(fVar6) || NAN(fVar5))) {\n          fVar5 = fVar6;\n        }\n        lVar7 = CONCAT44(fVar6,fVar5);\n      }\n      iVar3 = 0;\n      do {\n        iVar1 = FUN_0001e29c(iVar3);\n        if (iVar1 != 0) {\n          fVar6 = (float)lVar7;\n          FUN_000502c0(fVar6,&local_840,local_844,0);\n          FUN_0001f164(iVar3,1,0,param_2,local_840);\n          if (4 < DAT_0007eb9c) {\n            snprintf(acStack_838,0x800,\"chain = %d set freq to %.2f\",iVar3,(double)fVar6);\n            FUN_0002e584(4,acStack_838,0);\n          }\n          (&DAT_0007f8c4)[iVar3] = (int)fVar6;\n          (&DAT_0007f8e0)[iVar3] = (int)fVar6;\n        }\n        iVar3 = iVar3 + 1;\n      } while (iVar3 != 4);\n      uVar4 = uVar4 + 1;\n      usleep(100000);\n    } while (uVar4 <= uVar2);\n  }\n  iVar3 = 0;\n  do {\n    iVar1 = FUN_0001e29c(iVar3);\n    if (iVar1 != 0) {\n      (&DAT_0007f8c4)[iVar3] = param_4;\n      (&DAT_0007f8e0)[iVar3] = param_4;\n    }\n    iVar3 = iVar3 + 1;\n  } while (iVar3 != 4);\n  return;\n}\n\n",
    "FUN_0001aae4": "\nvoid FUN_0001aae4(float param_1,int param_2,undefined4 param_3,char *param_4,char *param_5_00,\n                 char param_5)\n\n{\n  char *pcVar1;\n  uint uVar2;\n  uint uVar3;\n  double dVar4;\n  float fVar5;\n  longlong lVar6;\n  float fVar7;\n  char *local_850;\n  undefined local_844 [4];\n  undefined4 local_840;\n  undefined uStack_83a;\n  char acStack_838 [2052];\n  \n  local_850 = param_5_00;\n  if (DAT_0007eb9c < 5) {\n    local_850 = acStack_838;\n  }\n  if (4 < DAT_0007eb9c) {\n    local_850 = acStack_838;\n    pcVar1 = \"false\";\n    if (param_5 != '\\0') {\n      pcVar1 = \"true\";\n    }\n    snprintf(local_850,0x800,\n             \"fixed step chain = %d, freq_start = %d, freq_end = %d, freq_step = %.2f, is_higher_voltage = %s\\n\"\n             ,param_2,param_4,param_5_00,(double)param_1,pcVar1);\n    FUN_0002e584(4,local_850,0);\n  }\n  FUN_0001f0e0(param_2,1,0,param_3);\n  *(undefined4 *)(local_850 + -4) = 0;\n  local_840 = 0;\n  if (param_4 < param_5_00) {\n    uVar2 = (int)param_5_00 - (int)param_4;\n  }\n  else {\n    uVar2 = (int)param_4 - (int)param_5_00;\n  }\n  dVar4 = ((double)((float)(ulonglong)uVar2 + param_1) - 0.01) / (double)param_1;\n  uVar2 = (uint)(0.0 < dVar4) * (int)(longlong)dVar4;\n  if (uVar2 != 0) {\n    lVar6 = (ulonglong)(uint)(float)ZEXT48(param_5_00) << 0x20;\n    uVar3 = 1;\n    do {\n      fVar7 = (float)((ulonglong)lVar6 >> 0x20);\n      if (param_4 < param_5_00) {\n        fVar5 = (float)(ulonglong)uVar3 * param_1 + (float)ZEXT48(param_4);\n        lVar6 = CONCAT44(fVar7,fVar5);\n        if (fVar5 != fVar7 && fVar5 < fVar7 == (NAN(fVar5) || NAN(fVar7))) {\n          lVar6 = CONCAT44(fVar7,fVar7);\n        }\n      }\n      else {\n        fVar5 = (float)ZEXT48(param_4) - (float)(ulonglong)uVar3 * param_1;\n        if (fVar5 < fVar7) {\n          fVar5 = fVar7;\n        }\n        lVar6 = CONCAT44(fVar7,fVar5);\n      }\n      FUN_000502c0((float)lVar6,local_850 + -8,local_844,0);\n      uVar3 = uVar3 + 1;\n      uStack_83a = local_844[0];\n      FUN_0001f164(param_2,1,0,param_3,*(undefined4 *)(local_850 + -8));\n      if (4 < DAT_0007eb9c) {\n        snprintf(local_850,0x800,\"chain = %d set freq to %.2f\",param_2,(double)(float)lVar6);\n        FUN_0002e584(4,local_850,0);\n      }\n      usleep(100000);\n    } while (uVar3 <= uVar2);\n  }\n  (&DAT_0007f8c4)[param_2] = param_5_00;\n  (&DAT_0007f8e0)[param_2] = param_5_00;\n  return;\n}\n\n",
    "FUN_0001ad08": "\nuint FUN_0001ad08(float param_1,int param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  float fVar1;\n  short sVar2;\n  int iVar3;\n  void *__ptr;\n  int iVar4;\n  int iVar5;\n  undefined4 uVar6;\n  uint uVar7;\n  uint *puVar8;\n  int iVar9;\n  int iVar10;\n  uint *puVar11;\n  undefined4 uVar12;\n  int *piVar13;\n  int *piVar14;\n  size_t sVar16;\n  size_t __nmemb;\n  uint *__s;\n  int iVar17;\n  float fVar18;\n  uint uVar19;\n  float fVar20;\n  uint local_1888;\n  uint local_1884;\n  undefined4 local_1878;\n  undefined local_1874 [4];\n  undefined4 local_1870;\n  undefined4 local_186c;\n  uint local_1868 [4];\n  uint local_1858 [4];\n  uint local_1848 [4];\n  undefined4 local_1838;\n  undefined4 local_1834;\n  undefined4 uStack_1830;\n  undefined4 uStack_182c;\n  undefined4 uStack_1828;\n  undefined2 local_1824;\n  uint local_1038 [1025];\n  int *piVar15;\n  \n  iVar9 = 0;\n  __s = local_1848 + 4;\n  local_1884 = 0;\n  local_1878 = 0;\n  memset(local_1038,0,0x1000);\n  local_1858[0] = 0;\n  local_1848[0] = 0;\n  local_1870 = 0;\n  local_1868[1] = 0xffffffff;\n  local_1868[2] = 0xffffffff;\n  local_1868[3] = 0xffffffff;\n  local_186c = 0;\n  local_1868[0] = 0xffffffff;\n  local_1858[1] = 0;\n  local_1858[2] = 0;\n  local_1858[3] = 0;\n  local_1848[1] = 0;\n  local_1848[2] = 0;\n  local_1848[3] = 0;\n  sVar16 = 0;\n  do {\n    iVar3 = FUN_0001e29c(iVar9);\n    __nmemb = sVar16;\n    if (iVar3 != 0) {\n      piVar13 = (int *)(param_2 + iVar9 * 0x400);\n      FUN_00019d70(piVar13,local_1868 + iVar9,local_1858 + iVar9,&local_1878);\n      __nmemb = sVar16 + 1;\n      uVar7 = local_1858[iVar9];\n      if (local_1858[iVar9] <= local_1884) {\n        uVar7 = local_1884;\n      }\n      local_1848[sVar16] = local_1868[iVar9];\n      iVar3 = FUN_0001e0f0();\n      uVar12 = local_1878;\n      if (iVar3 != 0) {\n        uVar19 = local_1868[iVar9];\n        piVar14 = piVar13;\n        puVar11 = local_1038 + iVar9 * 0x100;\n        do {\n          piVar15 = piVar14 + 1;\n          *puVar11 = *piVar14 - uVar19;\n          piVar14 = piVar15;\n          puVar11 = puVar11 + 1;\n        } while (piVar15 != piVar13 + iVar3);\n      }\n      if (DAT_0007edc8 == 2) {\n        (&DAT_0007f8c4)[iVar9] = DAT_00482a6c;\n      }\n      uVar6 = FUN_0001e0f0();\n      uVar12 = FUN_0005f880(uVar12,uVar6);\n      (&DAT_0007f8e0)[iVar9] = uVar12;\n      local_1884 = uVar7;\n    }\n    iVar9 = iVar9 + 1;\n    sVar16 = __nmemb;\n  } while (iVar9 != 4);\n  qsort(local_1848,__nmemb,4,(__compar_fn_t)&LAB_00019d60);\n  FUN_0001a470((float)(ulonglong)local_1848[0],0xff,param_3,param_4);\n  if (local_1848[0] != local_1884) {\n    if (1 < __nmemb) {\n      puVar11 = local_1848;\n      sVar16 = 1;\n      do {\n        iVar9 = 0;\n        do {\n          iVar3 = FUN_0001e29c(iVar9);\n          if ((iVar3 != 0) && (puVar11[1] <= local_1868[iVar9])) {\n            FUN_0001aae4(param_1,iVar9,param_3,*puVar11,puVar11[1],param_4);\n          }\n          iVar9 = iVar9 + 1;\n        } while (iVar9 != 4);\n        sVar16 = sVar16 + 1;\n        puVar11 = puVar11 + 1;\n      } while (__nmemb != sVar16);\n    }\n    iVar9 = 0;\n    do {\n      iVar3 = FUN_0001e29c(iVar9);\n      if ((iVar3 != 0) && (uVar7 = local_1868[iVar9], uVar7 != local_1858[iVar9])) {\n        if (3 < DAT_0007eb9c) {\n          snprintf((char *)__s,0x800,\"chain = %d, start = %d, freq_step = %.2f\\n\",iVar9,uVar7);\n          FUN_0002e584(3,__s,0);\n        }\n        sVar16 = FUN_0001e0f0();\n        __ptr = calloc(sVar16,8);\n        if (__ptr == (void *)0x0) {\n          if (3 < DAT_0007eb9c) {\n            local_1838._0_1_ = 'f';\n            local_1838._1_1_ = 'a';\n            local_1838._2_1_ = 'i';\n            local_1838._3_1_ = 'l';\n            local_1834._0_1_ = 'e';\n            local_1834._1_1_ = 'd';\n            local_1834._2_1_ = ' ';\n            local_1834._3_1_ = 'a';\n            uStack_1830._0_1_ = 'l';\n            uStack_1830._1_1_ = 'l';\n            uStack_1830._2_1_ = 'o';\n            uStack_1830._3_1_ = 'c';\n            uStack_182c._0_1_ = ' ';\n            uStack_182c._1_1_ = 'm';\n            uStack_182c._2_1_ = 'e';\n            uStack_182c._3_1_ = 'm';\n            uStack_1828._0_1_ = 'o';\n            uStack_1828._1_1_ = 'r';\n            uStack_1828._2_1_ = 'y';\n            uStack_1828._3_1_ = '!';\n            local_1824 = 10;\n            FUN_0002e584(3,__s,0);\n          }\n        }\n        else {\n          iVar10 = 0;\n          puVar11 = local_1038 + iVar9 * 0x100;\n          local_1838._0_1_ = '\\0';\n          local_1838._1_1_ = '\\0';\n          local_1838._2_1_ = '\\0';\n          local_1838._3_1_ = '\\0';\n          local_1834._0_1_ = '\\0';\n          local_1834._1_1_ = '\\0';\n          local_1834._2_1_ = '\\0';\n          local_1834._3_1_ = '\\0';\n          iVar3 = FUN_0001e0e0();\n          if (iVar3 != 0) {\n            do {\n              iVar4 = FUN_0001e100();\n              if (iVar4 != 0) {\n                iVar17 = 0;\n                do {\n                  iVar5 = FUN_0001e100();\n                  iVar5 = iVar10 * iVar5 + iVar17;\n                  iVar17 = iVar17 + 1;\n                  *(uint *)((int)__ptr + iVar5 * 8 + 4) = puVar11[iVar5];\n                  *(int *)((int)__ptr + iVar5 * 8) = iVar5;\n                } while (iVar4 != iVar17);\n              }\n              iVar4 = iVar10 * 8;\n              iVar10 = iVar10 + 1;\n              iVar17 = FUN_0001e100();\n              sVar16 = FUN_0001e100();\n              qsort((void *)(iVar17 * iVar4 + (int)__ptr),sVar16,8,(__compar_fn_t)&LAB_00019d40);\n            } while (iVar3 != iVar10);\n          }\n          iVar3 = FUN_0001e0f0();\n          fVar18 = 0.0;\n          if (iVar3 != 0) {\n            puVar8 = puVar11 + iVar3;\n            fVar18 = 0.0;\n            do {\n              uVar19 = *puVar11;\n              puVar11 = puVar11 + 1;\n              fVar20 = (float)(ulonglong)uVar19;\n              if (fVar20 != fVar18 && fVar20 < fVar18 == (NAN(fVar20) || NAN(fVar18))) {\n                fVar18 = fVar20;\n              }\n            } while (puVar8 != puVar11);\n          }\n          fVar18 = ((param_1 + fVar18) - 1.0) / param_1;\n          uVar19 = (uint)(0.0 < fVar18) * (int)fVar18;\n          if (uVar19 != 0) {\n            local_1888 = 0;\n            do {\n              local_1888 = local_1888 + 1;\n              iVar3 = FUN_0001e100();\n              fVar18 = (float)(ulonglong)local_1888 * param_1;\n              if (iVar3 != 0) {\n                iVar10 = 0;\n                do {\n                  iVar4 = FUN_0001e0e0();\n                  if (iVar4 != 0) {\n                    iVar17 = 0;\n                    do {\n                      iVar5 = FUN_0001e100();\n                      uVar12 = *(undefined4 *)((int)__ptr + (iVar17 * iVar5 + iVar10) * 8);\n                      iVar5 = FUN_0001e100();\n                      fVar20 = (float)(ulonglong)\n                                      *(uint *)((int)__ptr + (iVar17 * iVar5 + iVar10) * 8 + 4);\n                      if ((fVar18 == fVar20 || fVar18 < fVar20 != (NAN(fVar18) || NAN(fVar20))) ||\n                         (fVar18 - fVar20 < param_1)) {\n                        fVar1 = fVar18;\n                        if (fVar20 <= fVar18) {\n                          fVar1 = fVar20;\n                        }\n                        FUN_000502c0(fVar1 + (float)(ulonglong)uVar7,__s,local_1874,0);\n                        local_1834._2_1_ = local_1874[0];\n                        sVar2 = FUN_0001e160();\n                        FUN_0001f164(iVar9,0,(int)sVar2 * (int)(short)uVar12 & 0xff,param_3,\n                                     local_1838,local_1834);\n                      }\n                      iVar17 = iVar17 + 1;\n                    } while (iVar4 != iVar17);\n                  }\n                  iVar10 = iVar10 + 1;\n                  usleep(100000);\n                } while (iVar3 != iVar10);\n              }\n            } while (uVar19 != local_1888);\n          }\n          free(__ptr);\n        }\n      }\n      iVar9 = iVar9 + 1;\n    } while (iVar9 != 4);\n  }\n  return local_1884;\n}\n\n",
    "FUN_0001b398": "\nundefined4 FUN_0001b398(void)\n\n{\n  size_t sVar1;\n  size_t __nmemb;\n  void *__ptr;\n  undefined4 uVar2;\n  char acStack_818 [2052];\n  \n  __nmemb = DAT_0058e004;\n  sVar1 = DAT_0058dfbc;\n  __ptr = calloc(DAT_0058dfbc,0x210);\n  DAT_0058e018 = __ptr;\n  if (__ptr == (void *)0x0) {\n    if (3 < DAT_0007eb9c) {\n      snprintf(acStack_818,0x800,\"malloc %d runtime_chain failed\\n\",sVar1);\n      FUN_0002e584(3,acStack_818,0);\n      return 0x80000400;\n    }\n    uVar2 = 0x80000400;\n  }\n  else {\n    DAT_0058e020 = calloc(__nmemb,8);\n    if (DAT_0058e020 == (void *)0x0) {\n      if (3 < DAT_0007eb9c) {\n        snprintf(acStack_818,0x800,\"malloc %d runtime_fan failed\\n\",__nmemb);\n        FUN_0002e584(3,acStack_818,0);\n        __ptr = DAT_0058e018;\n      }\n      free(__ptr);\n      uVar2 = 0x80000400;\n    }\n    else {\n      DAT_0058e010 = 1;\n      uVar2 = 0;\n    }\n  }\n  return uVar2;\n}\n\n",
    "FUN_0001b4ac": "\nint FUN_0001b4ac(void)\n\n{\n  int iVar1;\n  bool bVar2;\n  size_t __nmemb;\n  size_t __nmemb_00;\n  undefined2 uVar3;\n  int *piVar4;\n  int *piVar5;\n  char *pcVar6;\n  size_t sVar7;\n  char *pcVar8;\n  int *piVar9;\n  undefined4 uVar10;\n  uint uVar11;\n  int *piVar12;\n  void *pvVar13;\n  int iVar14;\n  int *piVar15;\n  int iVar16;\n  int iVar17;\n  undefined uVar18;\n  int iVar19;\n  int iVar20;\n  uint uVar21;\n  void *pvVar22;\n  undefined auStack_924 [252];\n  undefined4 local_828;\n  undefined4 local_824;\n  undefined4 local_820;\n  undefined4 local_81c;\n  undefined4 local_818;\n  undefined4 local_814;\n  undefined4 local_810;\n  undefined4 local_80c;\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined2 uStack_800;\n  undefined local_7fe;\n  \n  piVar4 = (int *)FUN_0004d6e4(\"/etc/topol.conf\",0,auStack_924);\n  if ((piVar4 == (int *)0x0) || (*piVar4 != 0)) {\n    if (DAT_0007eb9c < 4) {\n      return -1;\n    }\n    snprintf((char *)&local_828,0x800,\"load topol config file %s failed\\n\",\"/etc/topol.conf\");\n    FUN_0002e584(3,&local_828,0);\n    return -1;\n  }\n  piVar5 = (int *)FUN_0004e234(piVar4,\"machine\");\n  if ((piVar5 == (int *)0x0) || (*piVar5 != 2)) {\n    if (3 < DAT_0007eb9c) {\n      local_828._0_1_ = 'g';\n      local_828._1_1_ = 'e';\n      local_828._2_1_ = 't';\n      local_828._3_1_ = ' ';\n      local_824._0_1_ = 'm';\n      local_824._1_1_ = 'a';\n      local_824._2_1_ = 'c';\n      local_824._3_1_ = 'h';\n      local_820._0_1_ = 'i';\n      local_820._1_1_ = 'n';\n      local_820._2_1_ = 'e';\n      local_820._3_1_ = ' ';\n      local_81c._0_1_ = 'f';\n      local_81c._1_1_ = 'a';\n      local_81c._2_1_ = 'i';\n      local_81c._3_1_ = 'l';\n      local_818._0_1_ = 'e';\n      local_818._1_1_ = 'd';\n      local_818._2_1_ = '\\n';\n      local_818._3_1_ = '\\0';\n      FUN_0002e584(3,&local_828,0);\nLAB_0001b5fc:\n      if (3 < DAT_0007eb9c) {\n        iVar20 = -1;\n        local_828._0_1_ = 'p';\n        local_828._1_1_ = 'a';\n        local_828._2_1_ = 'r';\n        local_828._3_1_ = 's';\n        local_824._0_1_ = 'e';\n        local_824._1_1_ = ' ';\n        local_824._2_1_ = 'm';\n        local_824._3_1_ = 'a';\n        local_820._0_1_ = 'c';\n        local_820._1_1_ = 'h';\n        local_820._2_1_ = 'i';\n        local_820._3_1_ = 'n';\n        local_81c._0_1_ = 'e';\n        local_81c._1_1_ = ' ';\n        local_81c._2_1_ = 'f';\n        local_81c._3_1_ = 'a';\n        local_818._0_1_ = 'i';\n        local_818._1_1_ = 'l';\n        local_818._2_1_ = 'e';\n        local_818._3_1_ = 'd';\n                    /* WARNING: Ignoring partial resolution of indirect */\n        local_814._0_2_ = 10;\n        FUN_0002e584(3,&local_828,0);\n        goto LAB_0001b540;\n      }\n    }\n  }\n  else {\n    if (3 < DAT_0007eb9c) {\n      uVar10 = FUN_0004e768();\n      snprintf((char *)&local_828,0x800,\"load machine %s conf\\n\",uVar10);\n      FUN_0002e584(3,&local_828,0);\n    }\n    pcVar6 = (char *)FUN_0004e768(piVar5);\n    sVar7 = strlen(pcVar6);\n    pcVar8 = (char *)calloc(sVar7 + 1,1);\n    DAT_0058dfb8 = pcVar8;\n    if (pcVar8 == (char *)0x0) {\n      if (3 < DAT_0007eb9c) {\n        local_828._0_1_ = 'g';\n        local_828._1_1_ = 'e';\n        local_828._2_1_ = 't';\n        local_828._3_1_ = ' ';\n        local_824._0_1_ = 'm';\n        local_824._1_1_ = 'a';\n        local_824._2_1_ = 'c';\n        local_824._3_1_ = 'h';\n        local_820._0_1_ = 'i';\n        local_820._1_1_ = 'n';\n        local_820._2_1_ = 'e';\n        local_820._3_1_ = ' ';\n        local_81c._0_1_ = 'f';\n        local_81c._1_1_ = 'a';\n        local_81c._2_1_ = 'i';\n        local_81c._3_1_ = 'l';\n        local_818._0_1_ = 'e';\n        local_818._1_1_ = 'd';\n        local_818._2_1_ = ',';\n        local_818._3_1_ = ' ';\n        local_814._0_1_ = 'C';\n        local_814._1_1_ = 'a';\n        local_814._2_1_ = 'n';\n        local_814._3_1_ = 'n';\n        local_810._0_1_ = 'o';\n        local_810._1_1_ = 't';\n        local_810._2_1_ = ' ';\n        local_810._3_1_ = 'a';\n        local_80c._0_1_ = 'l';\n        local_80c._1_1_ = 'l';\n        local_80c._2_1_ = 'o';\n        local_80c._3_1_ = 'c';\n        local_808._0_1_ = 'a';\n        local_808._1_1_ = 't';\n        local_808._2_1_ = 'e';\n        local_808._3_1_ = ' ';\n        uStack_804._0_1_ = 's';\n        uStack_804._1_1_ = 'p';\n        uStack_804._2_1_ = 'a';\n        uStack_804._3_1_ = 'c';\n        uStack_800 = 0xa65;\n        local_7fe = 0;\n        FUN_0002e584(3,&local_828,0);\n        goto LAB_0001b5fc;\n      }\n    }\n    else {\n      strcpy(pcVar8,pcVar6);\n      if (3 < DAT_0007eb9c) {\n        snprintf((char *)&local_828,0x800,\"machine : %s \\n\",pcVar8);\n        FUN_0002e584(3,&local_828,0);\n      }\n      piVar5 = (int *)FUN_0004e234(piVar4,\"hw_version\");\n      if ((piVar5 == (int *)0x0) || (*piVar5 != 2)) {\n        if (3 < DAT_0007eb9c) {\n          pcVar6 = \"get hw_version failed\\n\";\nLAB_0001b6d0:\n          local_828 = *(undefined4 *)pcVar6;\n          local_824 = *(undefined4 *)((int)pcVar6 + 4);\n          local_820 = *(uint *)((int)pcVar6 + 8);\n          local_81c = *(uint *)((int)pcVar6 + 0xc);\n          local_818 = *(uint *)((int)pcVar6 + 0x10);\n                    /* WARNING: Ignoring partial resolution of indirect */\n          local_814._0_2_ = (short)*(undefined4 *)((int)pcVar6 + 0x14);\n          FUN_0002e584(3,&local_828,0);\n          goto LAB_0001b5fc;\n        }\n      }\n      else {\n        if (4 < DAT_0007eb9c) {\n          uVar10 = FUN_0004e768();\n          snprintf((char *)&local_828,0x800,\"hw_version: %s\\n\",uVar10);\n          FUN_0002e584(4,&local_828,0);\n        }\n        piVar5 = (int *)FUN_0004e234(piVar4,\"sw_version\");\n        if ((piVar5 == (int *)0x0) || (*piVar5 != 2)) {\n          if (3 < DAT_0007eb9c) {\n            pcVar6 = \"get sw_version failed\\n\";\n            goto LAB_0001b6d0;\n          }\n        }\n        else {\n          if (4 < DAT_0007eb9c) {\n            FUN_0004e768();\n            snprintf((char *)&local_828,0x800,\"sw_version: %s\\n\");\n            FUN_0002e584(4,&local_828,0);\n          }\n          piVar5 = (int *)FUN_0004e234(piVar4,\"processor\");\n          if ((piVar5 == (int *)0x0) || (*piVar5 != 0)) {\n            if (3 < DAT_0007eb9c) {\n              local_828._0_1_ = 'g';\n              local_828._1_1_ = 'e';\n              local_828._2_1_ = 't';\n              local_828._3_1_ = ' ';\n              local_824._0_1_ = 'p';\n              local_824._1_1_ = 'r';\n              local_824._2_1_ = 'o';\n              local_824._3_1_ = 'c';\n              local_820._0_1_ = 'e';\n              local_820._1_1_ = 's';\n              local_820._2_1_ = 's';\n              local_820._3_1_ = 'o';\n              local_81c._0_1_ = 'r';\n              local_81c._1_1_ = ' ';\n              local_81c._2_1_ = 'f';\n              local_81c._3_1_ = 'a';\n              local_818._0_1_ = 'i';\n              local_818._1_1_ = 'l';\n              local_818._2_1_ = 'e';\n              local_818._3_1_ = 'd';\n              local_814 = CONCAT22(local_814._2_2_,10);\n              FUN_0002e584(3,&local_828,0);\nLAB_0001b8fc:\n              if (3 < DAT_0007eb9c) {\n                iVar20 = -1;\n                local_828._0_1_ = 'p';\n                local_828._1_1_ = 'a';\n                local_828._2_1_ = 'r';\n                local_828._3_1_ = 's';\n                local_824._0_1_ = 'e';\n                local_824._1_1_ = ' ';\n                local_824._2_1_ = 'p';\n                local_824._3_1_ = 'r';\n                local_820._0_1_ = 'o';\n                local_820._1_1_ = 'c';\n                local_820._2_1_ = 'e';\n                local_820._3_1_ = 's';\n                local_81c._0_1_ = 's';\n                local_81c._1_1_ = 'o';\n                local_81c._2_1_ = 'r';\n                local_81c._3_1_ = ' ';\n                local_818._0_1_ = 'f';\n                local_818._1_1_ = 'a';\n                local_818._2_1_ = 'i';\n                local_818._3_1_ = 'l';\n                local_814._0_1_ = 'e';\n                local_814._1_1_ = 'd';\n                local_814._2_1_ = '\\n';\n                local_814._3_1_ = '\\0';\n                FUN_0002e584(3,&local_828,0);\n                goto LAB_0001b540;\n              }\n            }\n          }\n          else {\n            if (4 < DAT_0007eb9c) {\n              local_828._0_1_ = 'p';\n              local_828._1_1_ = 'r';\n              local_828._2_1_ = 'o';\n              local_828._3_1_ = 'c';\n              local_824._0_1_ = 'e';\n              local_824._1_1_ = 's';\n              local_824._2_1_ = 's';\n              local_824._3_1_ = 'o';\n              local_820._0_1_ = 'r';\n              local_820._1_1_ = ':';\n              local_820._2_1_ = '\\n';\n              local_820._3_1_ = '\\0';\n              FUN_0002e584(4,&local_828,0);\n            }\n            piVar5 = (int *)FUN_0004e234(piVar5,\"type\");\n            if ((piVar5 == (int *)0x0) || (*piVar5 != 2)) {\n              if (3 < DAT_0007eb9c) {\n                local_828._0_1_ = 'g';\n                local_828._1_1_ = 'e';\n                local_828._2_1_ = 't';\n                local_828._3_1_ = ' ';\n                local_824._0_1_ = 't';\n                local_824._1_1_ = 'y';\n                local_824._2_1_ = 'p';\n                local_824._3_1_ = 'e';\n                local_820._0_1_ = ' ';\n                local_820._1_1_ = 'f';\n                local_820._2_1_ = 'a';\n                local_820._3_1_ = 'i';\n                local_81c._0_1_ = 'l';\n                local_81c._1_1_ = 'e';\n                local_81c._2_1_ = 'd';\n                local_81c._3_1_ = '\\n';\n                local_818 = local_818 & 0xffffff00;\n                FUN_0002e584(3,&local_828,0);\n                goto LAB_0001b8fc;\n              }\n            }\n            else {\n              if (4 < DAT_0007eb9c) {\n                FUN_0004e768();\n                snprintf((char *)&local_828,0x800,\"type: %s\\n\");\n                FUN_0002e584(4,&local_828,0);\n              }\n              piVar5 = (int *)FUN_0004e234(piVar4,\"power\");\n              if ((piVar5 == (int *)0x0) || (*piVar5 != 0)) {\n                if (3 < DAT_0007eb9c) {\n                  local_828._0_1_ = 'g';\n                  local_828._1_1_ = 'e';\n                  local_828._2_1_ = 't';\n                  local_828._3_1_ = ' ';\n                  local_824._0_1_ = 'p';\n                  local_824._1_1_ = 'o';\n                  local_824._2_1_ = 'w';\n                  local_824._3_1_ = 'e';\n                  local_820._0_1_ = 'r';\n                  local_820._1_1_ = ' ';\n                  local_820._2_1_ = 'f';\n                  local_820._3_1_ = 'a';\n                  local_81c._0_1_ = 'i';\n                  local_81c._1_1_ = 'l';\n                  local_81c._2_1_ = 'e';\n                  local_81c._3_1_ = 'd';\n                  local_818 = CONCAT22(local_818._2_2_,10);\n                  FUN_0002e584(3,&local_828,0);\nLAB_0001ba70:\n                  if (3 < DAT_0007eb9c) {\n                    pcVar6 = \"parse power failed\\n\";\nLAB_0001ba88:\n                    local_828 = *(undefined4 *)pcVar6;\n                    local_824 = *(undefined4 *)((int)pcVar6 + 4);\n                    local_820 = *(uint *)((int)pcVar6 + 8);\n                    local_81c = *(uint *)((int)pcVar6 + 0xc);\n                    iVar20 = -1;\n                    local_818 = *(uint *)((int)pcVar6 + 0x10);\n                    FUN_0002e584(3,&local_828,0);\n                    goto LAB_0001b540;\n                  }\n                }\n              }\n              else {\n                if (4 < DAT_0007eb9c) {\n                  local_828._0_1_ = 'p';\n                  local_828._1_1_ = 'o';\n                  local_828._2_1_ = 'w';\n                  local_828._3_1_ = 'e';\n                  local_824._0_1_ = 'r';\n                  local_824._1_1_ = ':';\n                  local_824._2_1_ = '\\n';\n                  local_824._3_1_ = '\\0';\n                  FUN_0002e584(4,&local_828);\n                }\n                piVar9 = (int *)FUN_0004e234(piVar5,\"type\");\n                if ((piVar9 == (int *)0x0) || (*piVar9 != 2)) {\n                  if (3 < DAT_0007eb9c) {\n                    pcVar6 = \"get type failed\\n\";\nLAB_0001ba4c:\n                    local_828 = *(undefined4 *)pcVar6;\n                    local_824 = *(undefined4 *)((int)pcVar6 + 4);\n                    local_820 = *(uint *)((int)pcVar6 + 8);\n                    local_81c = *(uint *)((int)pcVar6 + 0xc);\n                    /* WARNING: Ignoring partial resolution of indirect */\n                    local_818._0_1_ = (char)*(undefined4 *)((int)pcVar6 + 0x10);\n                    FUN_0002e584(3,&local_828,0);\n                    goto LAB_0001ba70;\n                  }\n                }\n                else {\n                  if (4 < DAT_0007eb9c) {\n                    uVar10 = FUN_0004e768();\n                    snprintf((char *)&local_828,0x800,\"type: %s\\n\",uVar10);\n                    FUN_0002e584(4,&local_828,0);\n                  }\n                  piVar9 = (int *)FUN_0004e234(piVar5,\"version\");\n                  if ((piVar9 == (int *)0x0) || (*piVar9 != 1)) {\n                    if (3 < DAT_0007eb9c) {\n                      local_828._0_1_ = 'g';\n                      local_828._1_1_ = 'e';\n                      local_828._2_1_ = 't';\n                      local_828._3_1_ = ' ';\n                      local_824._0_1_ = 'v';\n                      local_824._1_1_ = 'e';\n                      local_824._2_1_ = 'r';\n                      local_824._3_1_ = 's';\n                      local_820._0_1_ = 'i';\n                      local_820._1_1_ = 'o';\n                      local_820._2_1_ = 'n';\n                      local_820._3_1_ = ' ';\n                      local_81c._0_1_ = 'a';\n                      local_81c._1_1_ = 'r';\n                      local_81c._2_1_ = 'r';\n                      local_81c._3_1_ = 'a';\n                      local_818._0_1_ = 'y';\n                      local_818._1_1_ = ' ';\n                      local_818._2_1_ = 'f';\n                      local_818._3_1_ = 'a';\n                      local_814._0_1_ = 'i';\n                      local_814._1_1_ = 'l';\n                      local_814._2_1_ = 'e';\n                      local_814._3_1_ = 'd';\n                      local_810 = CONCAT22(local_810._2_2_,10);\n                      FUN_0002e584(3,&local_828,0);\n                      goto LAB_0001ba70;\n                    }\n                  }\n                  else {\n                    sVar7 = FUN_0004e5a0();\n                    DAT_0058e038 = sVar7;\n                    DAT_0058e03c = calloc(sVar7,2);\n                    if (0 < (int)sVar7) {\n                      iVar20 = 0;\n                      do {\n                        FUN_0004e5bc(piVar9,iVar20);\n                        uVar3 = FUN_0004e9c4();\n                        iVar16 = iVar20 * 2;\n                        iVar20 = iVar20 + 1;\n                        *(undefined2 *)((int)DAT_0058e03c + iVar16) = uVar3;\n                        if (4 < DAT_0007eb9c) {\n                          snprintf((char *)&local_828,0x800,\"psu version = 0x%x\",\n                                   (uint)*(ushort *)((int)DAT_0058e03c + iVar16));\n                          FUN_0002e584(4,&local_828,0);\n                        }\n                      } while (iVar20 < (int)DAT_0058e038);\n                    }\n                    piVar9 = (int *)FUN_0004e234(piVar5,\"i2c_addr\");\n                    if ((piVar9 == (int *)0x0) || (*piVar9 != 3)) {\n                      if (3 < DAT_0007eb9c) {\n                        local_828._0_1_ = 'g';\n                        local_828._1_1_ = 'e';\n                        local_828._2_1_ = 't';\n                        local_828._3_1_ = ' ';\n                        local_824._0_1_ = 'i';\n                        local_824._1_1_ = '2';\n                        local_824._2_1_ = 'c';\n                        local_824._3_1_ = '_';\n                        local_820._0_1_ = 'a';\n                        local_820._1_1_ = 'd';\n                        local_820._2_1_ = 'd';\n                        local_820._3_1_ = 'r';\n                        local_81c._0_1_ = ' ';\n                        local_81c._1_1_ = 'f';\n                        local_81c._2_1_ = 'a';\n                        local_81c._3_1_ = 'i';\n                        local_818._0_1_ = 'l';\n                        local_818._1_1_ = 'e';\n                        local_818._2_1_ = 'd';\n                        local_818._3_1_ = '\\n';\n                        local_814 = local_814 & 0xffffff00;\n                        FUN_0002e584(3,&local_828,0);\n                        goto LAB_0001ba70;\n                      }\n                    }\n                    else {\n                      if (4 < DAT_0007eb9c) {\n                        uVar10 = FUN_0004e9c4();\n                        snprintf((char *)&local_828,0x800,\"i2c_addr: %d\\n\",uVar10);\n                        FUN_0002e584(4,&local_828,0);\n                      }\n                      piVar5 = (int *)FUN_0004e234(piVar5,&DAT_00061ae0);\n                      if ((piVar5 == (int *)0x0) || (*piVar5 != 3)) {\n                        if (3 < DAT_0007eb9c) {\n                          pcVar6 = \"get gpio failed\\n\";\n                          goto LAB_0001ba4c;\n                        }\n                      }\n                      else {\n                        if (4 < DAT_0007eb9c) {\n                          FUN_0004e9c4();\n                          snprintf((char *)&local_828,0x800,\"gpio: %d\\n\");\n                          FUN_0002e584(4,&local_828,0);\n                        }\n                        piVar5 = (int *)FUN_0004e234(piVar4,&DAT_00061b1c);\n                        if ((piVar5 == (int *)0x0) || (*piVar5 != 1)) {\n                          if (3 < DAT_0007eb9c) {\n                            local_828._0_1_ = 'g';\n                            local_828._1_1_ = 'e';\n                            local_828._2_1_ = 't';\n                            local_828._3_1_ = ' ';\n                            local_824._0_1_ = 'f';\n                            local_824._1_1_ = 'a';\n                            local_824._2_1_ = 'n';\n                            local_824._3_1_ = ' ';\n                            local_820._0_1_ = 'f';\n                            local_820._1_1_ = 'a';\n                            local_820._2_1_ = 'i';\n                            local_820._3_1_ = 'l';\n                            local_81c._0_1_ = 'e';\n                            local_81c._1_1_ = 'd';\n                            local_81c._2_1_ = '\\n';\n                            local_81c._3_1_ = '\\0';\n                            FUN_0002e584(3,&local_828,0);\nLAB_0001bdac:\n                            if (3 < DAT_0007eb9c) {\n                              iVar20 = -1;\n                              local_828._0_1_ = 'p';\n                              local_828._1_1_ = 'a';\n                              local_828._2_1_ = 'r';\n                              local_828._3_1_ = 's';\n                              local_824._0_1_ = 'e';\n                              local_824._1_1_ = ' ';\n                              local_824._2_1_ = 'f';\n                              local_824._3_1_ = 'a';\n                              local_820._0_1_ = 'n';\n                              local_820._1_1_ = ' ';\n                              local_820._2_1_ = 'f';\n                              local_820._3_1_ = 'a';\n                              local_81c._0_1_ = 'i';\n                              local_81c._1_1_ = 'l';\n                              local_81c._2_1_ = 'e';\n                              local_81c._3_1_ = 'd';\n                              local_818 = CONCAT22(local_818._2_2_,10);\n                              FUN_0002e584(3,&local_828,0);\n                              goto LAB_0001b540;\n                            }\n                          }\n                        }\n                        else {\n                          if (4 < DAT_0007eb9c) {\n                            local_828._0_1_ = 'f';\n                            local_828._1_1_ = 'a';\n                            local_828._2_1_ = 'n';\n                            local_828._3_1_ = ':';\n                            local_824._0_2_ = 10;\n                            FUN_0002e584(4,&local_828,0);\n                          }\n                          pcVar8 = (char *)0x0;\n                          pcVar6 = (char *)0x0;\n                          for (uVar21 = 0; uVar11 = FUN_0004e5a0(piVar5), uVar21 < uVar11;\n                              uVar21 = uVar21 + 1) {\n                            piVar9 = (int *)FUN_0004e5bc(piVar5,uVar21);\n                            if ((piVar9 == (int *)0x0) || (*piVar9 != 0)) {\n                              if (DAT_0007eb9c < 4) goto LAB_0001b53c;\n                              pcVar6 = \"get array %d failed\\n\";\nLAB_0001bfdc:\n                              snprintf((char *)&local_828,0x800,pcVar6,uVar21);\n                              FUN_0002e584(3,&local_828,0);\n                              goto LAB_0001bdac;\n                            }\n                            piVar12 = (int *)FUN_0004e234(piVar9,&DAT_00061b50);\n                            if ((piVar12 == (int *)0x0) || (*piVar12 != 3)) {\n                              if (3 < DAT_0007eb9c) {\n                                pcVar6 = \"get arrya %d id failed\\n\";\n                                goto LAB_0001bfdc;\n                              }\n                              goto LAB_0001b53c;\n                            }\n                            if (4 < DAT_0007eb9c) {\n                              uVar10 = FUN_0004e9c4();\n                              snprintf((char *)&local_828,0x800,\"id: %d\\n\",uVar10);\n                              FUN_0002e584(4,&local_828,0);\n                            }\n                            piVar12 = (int *)FUN_0004e234(piVar9,\"position\");\n                            if ((piVar12 == (int *)0x0) || (*piVar12 != 2)) {\n                              if (3 < DAT_0007eb9c) {\n                                pcVar6 = \"get arrya %d position failed\\n\";\n                                goto LAB_0001bfdc;\n                              }\n                              goto LAB_0001b53c;\n                            }\n                            if (4 < DAT_0007eb9c) {\n                              uVar10 = FUN_0004e768();\n                              snprintf((char *)&local_828,0x800,\"position: %s\\n\",uVar10);\n                              FUN_0002e584(4,&local_828,0);\n                            }\n                            pcVar6 = (char *)FUN_0004e768(piVar12);\n                            piVar9 = (int *)FUN_0004e234(piVar9,\"direction\");\n                            if ((piVar9 == (int *)0x0) || (*piVar9 != 2)) {\n                              if (3 < DAT_0007eb9c) {\n                                pcVar6 = \"get arrya%d direction failed\\n\";\n                                goto LAB_0001bfdc;\n                              }\n                              goto LAB_0001b53c;\n                            }\n                            if (4 < DAT_0007eb9c) {\n                              uVar10 = FUN_0004e768();\n                              snprintf((char *)&local_828,0x800,\"direction: %s\\n\",uVar10);\n                              FUN_0002e584(4,&local_828,0);\n                            }\n                            pcVar8 = (char *)FUN_0004e768(piVar9);\n                            DAT_0058e004 = DAT_0058e004 + 1;\n                          }\n                          iVar20 = strncmp(pcVar6,\"right\",5);\n                          if (iVar20 == 0) {\n                            iVar20 = strncmp(pcVar8,\"in\",2);\n                            if (iVar20 == 0) {\nLAB_0001c3f4:\n                              DAT_0058e000 = 0;\n                            }\n                            else {\n                              iVar20 = strncmp(pcVar6,\"left\",4);\n                              if (iVar20 == 0) {\n                                iVar20 = strncmp(pcVar8,\"out\",2);\n                                if (iVar20 != 0) goto LAB_0001c0e4;\n                                goto LAB_0001c3f4;\n                              }\n                              iVar20 = strncmp(pcVar8,\"out\",2);\njoined_r0x0001c174:\n                              if (iVar20 != 0) goto LAB_0001c0e4;\n                              DAT_0058e000 = 1;\n                            }\n                            piVar5 = (int *)FUN_0004e234(piVar4,&DAT_00061c3c);\n                            if ((piVar5 == (int *)0x0) || (*piVar5 != 0)) {\n                              if (3 < DAT_0007eb9c) {\n                                local_828._0_1_ = 'g';\n                                local_828._1_1_ = 'e';\n                                local_828._2_1_ = 't';\n                                local_828._3_1_ = ' ';\n                                local_824._0_1_ = 'a';\n                                local_824._1_1_ = 's';\n                                local_824._2_1_ = 'i';\n                                local_824._3_1_ = 'c';\n                                local_820._0_1_ = ' ';\n                                local_820._1_1_ = 'f';\n                                local_820._2_1_ = 'a';\n                                local_820._3_1_ = 'i';\n                                local_81c._0_1_ = 'l';\n                                local_81c._1_1_ = 'e';\n                                local_81c._2_1_ = 'd';\n                                local_81c._3_1_ = '\\n';\n                                local_818 = local_818 & 0xffffff00;\n                                FUN_0002e584(3,&local_828,0);\nLAB_0001c214:\n                                if (3 < DAT_0007eb9c) {\n                                  iVar20 = -1;\n                                  local_828._0_1_ = 'p';\n                                  local_828._1_1_ = 'a';\n                                  local_828._2_1_ = 'r';\n                                  local_828._3_1_ = 's';\n                                  local_824._0_1_ = 'e';\n                                  local_824._1_1_ = ' ';\n                                  local_824._2_1_ = 'a';\n                                  local_824._3_1_ = 's';\n                                  local_820._0_1_ = 'i';\n                                  local_820._1_1_ = 'c';\n                                  local_820._2_1_ = ' ';\n                                  local_820._3_1_ = 'f';\n                                  local_81c._0_1_ = 'a';\n                                  local_81c._1_1_ = 'i';\n                                  local_81c._2_1_ = 'l';\n                                  local_81c._3_1_ = 'e';\n                                  local_818 = CONCAT13(local_818._3_1_,0xa64);\n                                  FUN_0002e584(3,&local_828,0);\n                                  goto LAB_0001b540;\n                                }\n                              }\n                            }\n                            else {\n                              if (4 < DAT_0007eb9c) {\n                                local_828._0_1_ = 'a';\n                                local_828._1_1_ = 's';\n                                local_828._2_1_ = 'i';\n                                local_828._3_1_ = 'c';\n                                local_824._0_3_ = 0xa3a;\n                                FUN_0002e584(4,&local_828);\n                              }\n                              piVar9 = (int *)FUN_0004e234(piVar5,\"asic_id\");\n                              if ((piVar9 == (int *)0x0) || (*piVar9 != 2)) {\n                                if (3 < DAT_0007eb9c) {\n                                  local_828._0_1_ = 'g';\n                                  local_828._1_1_ = 'e';\n                                  local_828._2_1_ = 't';\n                                  local_828._3_1_ = ' ';\n                                  local_824._0_1_ = 'a';\n                                  local_824._1_1_ = 's';\n                                  local_824._2_1_ = 'i';\n                                  local_824._3_1_ = 'c';\n                                  local_820._0_1_ = '_';\n                                  local_820._1_1_ = 'i';\n                                  local_820._2_1_ = 'd';\n                                  local_820._3_1_ = ' ';\n                                  local_81c._0_1_ = 'f';\n                                  local_81c._1_1_ = 'a';\n                                  local_81c._2_1_ = 'i';\n                                  local_81c._3_1_ = 'l';\n                                  local_818._0_1_ = 'e';\n                                  local_818._1_1_ = 'd';\n                                  local_818._2_1_ = '\\n';\n                                  local_818._3_1_ = '\\0';\n                                  FUN_0002e584(3,&local_828,0);\n                                  goto LAB_0001c214;\n                                }\n                              }\n                              else {\n                                if (4 < DAT_0007eb9c) {\n                                  uVar10 = FUN_0004e768();\n                                  snprintf((char *)&local_828,0x800,\"asic_id: %s\\n\",uVar10);\n                                  FUN_0002e584(4,&local_828,0);\n                                }\n                                piVar9 = (int *)FUN_0004e234(piVar5,\"asic_addr\");\n                                if ((piVar9 == (int *)0x0) || (*piVar9 != 2)) {\n                                  if (3 < DAT_0007eb9c) {\n                                    local_828._0_1_ = 'g';\n                                    local_828._1_1_ = 'e';\n                                    local_828._2_1_ = 't';\n                                    local_828._3_1_ = ' ';\n                                    local_824._0_1_ = 'a';\n                                    local_824._1_1_ = 's';\n                                    local_824._2_1_ = 'i';\n                                    local_824._3_1_ = 'c';\n                                    local_820._0_1_ = '_';\n                                    local_820._1_1_ = 'a';\n                                    local_820._2_1_ = 'd';\n                                    local_820._3_1_ = 'd';\n                                    local_81c._0_1_ = 'r';\n                                    local_81c._1_1_ = ' ';\n                                    local_81c._2_1_ = 'f';\n                                    local_81c._3_1_ = 'a';\n                                    local_818._0_1_ = 'i';\n                                    local_818._1_1_ = 'l';\n                                    local_818._2_1_ = 'e';\n                                    local_818._3_1_ = 'd';\n                                    local_814 = CONCAT22(local_814._2_2_,10);\n                                    FUN_0002e584(3,&local_828,0);\n                                    goto LAB_0001c214;\n                                  }\n                                }\n                                else {\n                                  if (4 < DAT_0007eb9c) {\n                                    uVar10 = FUN_0004e768();\n                                    snprintf((char *)&local_828,0x800,\"asic_addr : %s\\n\",uVar10);\n                                    FUN_0002e584(4,&local_828,0);\n                                  }\n                                  pcVar6 = (char *)FUN_0004e768(piVar9);\n                                  DAT_0058dfd8 = strtol(pcVar6,(char **)0x0,0);\n                                  if (DAT_0058dfd8 == 0) {\n                                    if (3 < DAT_0007eb9c) {\n                                      pcVar6 = \"convert asic_addr failed\\n\";\nLAB_0001c3ac:\n                                      local_828 = *(undefined4 *)pcVar6;\n                                      local_824 = *(undefined4 *)((int)pcVar6 + 4);\n                                      local_820 = *(uint *)((int)pcVar6 + 8);\n                                      local_81c = *(uint *)((int)pcVar6 + 0xc);\n                                      local_818 = *(uint *)((int)pcVar6 + 0x10);\n                                      local_814 = *(uint *)((int)pcVar6 + 0x14);\n                                      local_810 = CONCAT22(local_810._2_2_,\n                                                           (short)*(undefined4 *)\n                                                                   ((int)pcVar6 + 0x18));\n                                      FUN_0002e584(3,&local_828,0);\n                                      goto LAB_0001c214;\n                                    }\n                                  }\n                                  else {\n                                    if (4 < DAT_0007eb9c) {\n                                      snprintf((char *)&local_828,0x800,\"asic_addr 0x%x\\n\",\n                                               DAT_0058dfd8);\n                                      FUN_0002e584(4,&local_828,0);\n                                    }\n                                    piVar9 = (int *)FUN_0004e234(piVar5,\"asic_core_num\");\n                                    if ((piVar9 == (int *)0x0) || (*piVar9 != 3)) {\n                                      if (3 < DAT_0007eb9c) {\n                                        pcVar6 = \"get asic_core_num failed\\n\";\n                                        goto LAB_0001c3ac;\n                                      }\n                                    }\n                                    else {\n                                      if (4 < DAT_0007eb9c) {\n                                        uVar10 = FUN_0004e9c4();\n                                        snprintf((char *)&local_828,0x800,\"asic_core_num: %d\\n\",\n                                                 uVar10);\n                                        FUN_0002e584(4,&local_828,0);\n                                      }\n                                      DAT_0058dfdc = FUN_0004e9c4(piVar9);\n                                      piVar9 = (int *)FUN_0004e234(piVar5,\"asic_small_core_num\");\n                                      if ((piVar9 == (int *)0x0) || (*piVar9 != 3)) {\n                                        if (3 < DAT_0007eb9c) {\n                                          pcVar6 = \"get asic_small_core_num failed\\n\";\nLAB_0001c524:\n                                          local_828 = *(undefined4 *)pcVar6;\n                                          local_824 = *(undefined4 *)((int)pcVar6 + 4);\n                                          local_820 = *(uint *)((int)pcVar6 + 8);\n                                          local_81c = *(uint *)((int)pcVar6 + 0xc);\n                                          local_818 = *(uint *)((int)pcVar6 + 0x10);\n                                          local_814 = *(uint *)((int)pcVar6 + 0x14);\n                                          local_810 = *(uint *)((int)pcVar6 + 0x18);\n                                          local_80c = *(uint *)((int)pcVar6 + 0x1c);\n                                          FUN_0002e584(3,&local_828,0);\n                                          goto LAB_0001c214;\n                                        }\n                                      }\n                                      else {\n                                        if (4 < DAT_0007eb9c) {\n                                          uVar10 = FUN_0004e9c4();\n                                          snprintf((char *)&local_828,0x800,\n                                                   \"asic_small_core_num: %d\\n\",uVar10);\n                                          FUN_0002e584(4,&local_828,0);\n                                        }\n                                        DAT_0058dfe0 = FUN_0004e9c4(piVar9);\n                                        piVar9 = (int *)FUN_0004e234(piVar5,\"core_small_core_num\");\n                                        if ((piVar9 == (int *)0x0) || (*piVar9 != 3)) {\n                                          if (3 < DAT_0007eb9c) {\n                                            pcVar6 = \"get core_small_core_num failed\\n\";\n                                            goto LAB_0001c524;\n                                          }\n                                        }\n                                        else {\n                                          if (4 < DAT_0007eb9c) {\n                                            uVar10 = FUN_0004e9c4();\n                                            snprintf((char *)&local_828,0x800,\n                                                     \"core_small_core_num: %d\\n\",uVar10);\n                                            FUN_0002e584(4,&local_828,0);\n                                          }\n                                          DAT_0058dfe4 = FUN_0004e9c4(piVar9);\n                                          piVar9 = (int *)FUN_0004e234(piVar5,\"asic_domain_num\");\n                                          if ((piVar9 == (int *)0x0) || (*piVar9 != 3)) {\n                                            if (3 < DAT_0007eb9c) {\n                                              local_828._0_1_ = 'g';\n                                              local_828._1_1_ = 'e';\n                                              local_828._2_1_ = 't';\n                                              local_828._3_1_ = ' ';\n                                              local_824._0_1_ = 'a';\n                                              local_824._1_1_ = 's';\n                                              local_824._2_1_ = 'i';\n                                              local_824._3_1_ = 'c';\n                                              local_820._0_1_ = '_';\n                                              local_820._1_1_ = 'd';\n                                              local_820._2_1_ = 'o';\n                                              local_820._3_1_ = 'm';\n                                              local_81c._0_1_ = 'a';\n                                              local_81c._1_1_ = 'i';\n                                              local_81c._2_1_ = 'n';\n                                              local_81c._3_1_ = '_';\n                                              local_818._0_1_ = 'n';\n                                              local_818._1_1_ = 'u';\n                                              local_818._2_1_ = 'm';\n                                              local_818._3_1_ = ' ';\n                                              local_814._0_1_ = 'f';\n                                              local_814._1_1_ = 'a';\n                                              local_814._2_1_ = 'i';\n                                              local_814._3_1_ = 'l';\n                                              local_810._0_1_ = 'e';\n                                              local_810._1_1_ = 'd';\n                                              local_810._2_1_ = '\\n';\n                                              local_810._3_1_ = '\\0';\n                                              FUN_0002e584(3,&local_828,0);\n                                              goto LAB_0001c214;\n                                            }\n                                          }\n                                          else {\n                                            if (4 < DAT_0007eb9c) {\n                                              uVar10 = FUN_0004e9c4();\n                                              snprintf((char *)&local_828,0x800,\n                                                       \"asic_domain_num : %d\\n\",uVar10);\n                                              FUN_0002e584(4,&local_828,0);\n                                            }\n                                            DAT_0058dfe8 = FUN_0004e9c4(piVar9);\n                                            piVar5 = (int *)FUN_0004e234(piVar5,\"asic_addr_interval\"\n                                                                        );\n                                            if ((piVar5 == (int *)0x0) || (*piVar5 != 3)) {\n                                              if (3 < DAT_0007eb9c) {\n                                                local_828._0_1_ = 'g';\n                                                local_828._1_1_ = 'e';\n                                                local_828._2_1_ = 't';\n                                                local_828._3_1_ = ' ';\n                                                local_824._0_1_ = 'a';\n                                                local_824._1_1_ = 's';\n                                                local_824._2_1_ = 'i';\n                                                local_824._3_1_ = 'c';\n                                                local_820._0_1_ = '_';\n                                                local_820._1_1_ = 'a';\n                                                local_820._2_1_ = 'd';\n                                                local_820._3_1_ = 'd';\n                                                local_81c._0_1_ = 'r';\n                                                local_81c._1_1_ = '_';\n                                                local_81c._2_1_ = 'i';\n                                                local_81c._3_1_ = 'n';\n                                                local_818._0_1_ = 't';\n                                                local_818._1_1_ = 'e';\n                                                local_818._2_1_ = 'r';\n                                                local_818._3_1_ = 'v';\n                                                local_814._0_1_ = 'a';\n                                                local_814._1_1_ = 'l';\n                                                local_814._2_1_ = ' ';\n                                                local_814._3_1_ = 'f';\n                                                local_810._0_1_ = 'a';\n                                                local_810._1_1_ = 'i';\n                                                local_810._2_1_ = 'l';\n                                                local_810._3_1_ = 'e';\n                                                local_80c = CONCAT13(local_80c._3_1_,0xa64);\n                                                FUN_0002e584(3,&local_828,0);\n                                                goto LAB_0001c214;\n                                              }\n                                            }\n                                            else {\n                                              if (4 < DAT_0007eb9c) {\n                                                uVar10 = FUN_0004e9c4();\n                                                snprintf((char *)&local_828,0x800,\n                                                         \"asic_addr_interval : %d\\n\",uVar10);\n                                                FUN_0002e584(4,&local_828,0);\n                                              }\n                                              DAT_0058dfec = FUN_0004e9c4(piVar5);\n                                              piVar5 = (int *)FUN_0004e234(piVar4,\"chain\");\n                                              if ((piVar5 == (int *)0x0) || (*piVar5 != 0)) {\n                                                if (3 < DAT_0007eb9c) {\n                                                  local_828._0_1_ = 'g';\n                                                  local_828._1_1_ = 'e';\n                                                  local_828._2_1_ = 't';\n                                                  local_828._3_1_ = ' ';\n                                                  local_824._0_1_ = 'c';\n                                                  local_824._1_1_ = 'h';\n                                                  local_824._2_1_ = 'a';\n                                                  local_824._3_1_ = 'i';\n                                                  local_820._0_1_ = 'n';\n                                                  local_820._1_1_ = ' ';\n                                                  local_820._2_1_ = 'f';\n                                                  local_820._3_1_ = 'a';\n                                                  local_81c._0_1_ = 'i';\n                                                  local_81c._1_1_ = 'l';\n                                                  local_81c._2_1_ = 'e';\n                                                  local_81c._3_1_ = 'd';\n                                                  local_818 = CONCAT22(local_818._2_2_,10);\n                                                  FUN_0002e584(3,&local_828,0);\n                                                  goto LAB_0001c828;\n                                                }\n                                              }\n                                              else {\n                                                if (4 < DAT_0007eb9c) {\n                                                  local_828._0_1_ = 'c';\n                                                  local_828._1_1_ = 'h';\n                                                  local_828._2_1_ = 'a';\n                                                  local_828._3_1_ = 'i';\n                                                  local_824._0_1_ = 'n';\n                                                  local_824._1_1_ = ':';\n                                                  local_824._2_1_ = '\\n';\n                                                  local_824._3_1_ = '\\0';\n                                                  FUN_0002e584(4,&local_828);\n                                                }\n                                                piVar9 = (int *)FUN_0004e234(piVar5,\"chain_num\");\n                                                if ((piVar9 == (int *)0x0) || (*piVar9 != 3)) {\n                                                  if (3 < DAT_0007eb9c) {\n                                                    pcVar6 = \"get chain_num failed\\n\";\nLAB_0001c800:\n                                                    local_828 = *(undefined4 *)pcVar6;\n                                                    local_824 = *(undefined4 *)((int)pcVar6 + 4);\n                                                    local_820 = *(uint *)((int)pcVar6 + 8);\n                                                    local_81c = *(uint *)((int)pcVar6 + 0xc);\n                                                    local_818 = *(uint *)((int)pcVar6 + 0x10);\n                                                    local_814 = CONCAT22(local_814._2_2_,\n                                                                         (short)*(undefined4 *)\n                                                                                 ((int)pcVar6 + 0x14\n                                                                                 ));\n                                                    FUN_0002e584(3,&local_828,0);\nLAB_0001c828:\n                                                    if (3 < DAT_0007eb9c) {\n                                                      pcVar6 = \"parse chain failed\\n\";\n                                                      goto LAB_0001ba88;\n                                                    }\n                                                  }\n                                                }\n                                                else {\n                                                  if (4 < DAT_0007eb9c) {\n                                                    uVar10 = FUN_0004e9c4();\n                                                    snprintf((char *)&local_828,0x800,\n                                                             \"chain_num : %d\\n\",uVar10);\n                                                    FUN_0002e584(4,&local_828,0);\n                                                  }\n                                                  DAT_0058dfbc = FUN_0004e9c4(piVar9);\n                                                  piVar9 = (int *)FUN_0004e234(piVar5,\"chain_row\");\n                                                  if ((piVar9 == (int *)0x0) || (*piVar9 != 3)) {\n                                                    if (3 < DAT_0007eb9c) {\n                                                      pcVar6 = \"get chain_row failed\\n\";\n                                                      goto LAB_0001c800;\n                                                    }\n                                                  }\n                                                  else {\n                                                    if (4 < DAT_0007eb9c) {\n                                                      uVar10 = FUN_0004e9c4();\n                                                      snprintf((char *)&local_828,0x800,\n                                                               \"chain_row: %d\\n\",uVar10);\n                                                      FUN_0002e584(4,&local_828,0);\n                                                    }\n                                                    DAT_0058dfc0 = FUN_0004e9c4(piVar9);\n                                                    piVar9 = (int *)FUN_0004e234(piVar5,\n                                                  \"chain_column\");\n                                                  if ((piVar9 == (int *)0x0) || (*piVar9 != 3)) {\n                                                    if (3 < DAT_0007eb9c) {\n                                                      local_828._0_1_ = 'g';\n                                                      local_828._1_1_ = 'e';\n                                                      local_828._2_1_ = 't';\n                                                      local_828._3_1_ = ' ';\n                                                      local_824._0_1_ = 'c';\n                                                      local_824._1_1_ = 'h';\n                                                      local_824._2_1_ = 'a';\n                                                      local_824._3_1_ = 'i';\n                                                      local_820._0_1_ = 'n';\n                                                      local_820._1_1_ = '_';\n                                                      local_820._2_1_ = 'c';\n                                                      local_820._3_1_ = 'o';\n                                                      local_81c._0_1_ = 'l';\n                                                      local_81c._1_1_ = 'u';\n                                                      local_81c._2_1_ = 'm';\n                                                      local_81c._3_1_ = 'n';\n                                                      local_818._0_1_ = ' ';\n                                                      local_818._1_1_ = 'f';\n                                                      local_818._2_1_ = 'a';\n                                                      local_818._3_1_ = 'i';\n                                                      local_814._0_1_ = 'l';\n                                                      local_814._1_1_ = 'e';\n                                                      local_814._2_1_ = 'd';\n                                                      local_814._3_1_ = '\\n';\n                                                      local_810 = local_810 & 0xffffff00;\n                                                      FUN_0002e584(3,&local_828,0);\n                                                      goto LAB_0001c828;\n                                                    }\n                                                  }\n                                                  else {\n                                                    if (4 < DAT_0007eb9c) {\n                                                      uVar10 = FUN_0004e9c4();\n                                                      snprintf((char *)&local_828,0x800,\n                                                               \"chain_column: %d\\n\",uVar10);\n                                                      FUN_0002e584(4,&local_828,0);\n                                                    }\n                                                    DAT_0058dfc4 = FUN_0004e9c4(piVar9);\n                                                    piVar9 = (int *)FUN_0004e234(piVar5,\n                                                  \"chain_domain_num\");\n                                                  if ((piVar9 == (int *)0x0) || (*piVar9 != 3)) {\n                                                    if (3 < DAT_0007eb9c) {\n                                                      local_828._0_1_ = 'g';\n                                                      local_828._1_1_ = 'e';\n                                                      local_828._2_1_ = 't';\n                                                      local_828._3_1_ = ' ';\n                                                      local_824._0_1_ = 'c';\n                                                      local_824._1_1_ = 'h';\n                                                      local_824._2_1_ = 'a';\n                                                      local_824._3_1_ = 'i';\n                                                      local_820._0_1_ = 'n';\n                                                      local_820._1_1_ = '_';\n                                                      local_820._2_1_ = 'd';\n                                                      local_820._3_1_ = 'o';\n                                                      local_81c._0_1_ = 'm';\n                                                      local_81c._1_1_ = 'a';\n                                                      local_81c._2_1_ = 'i';\n                                                      local_81c._3_1_ = 'n';\n                                                      local_818._0_1_ = '_';\n                                                      local_818._1_1_ = 'n';\n                                                      local_818._2_1_ = 'u';\n                                                      local_818._3_1_ = 'm';\n                                                      local_814._0_1_ = ' ';\n                                                      local_814._1_1_ = 'f';\n                                                      local_814._2_1_ = 'a';\n                                                      local_814._3_1_ = 'i';\n                                                      local_810._0_1_ = 'l';\n                                                      local_810._1_1_ = 'e';\n                                                      local_810._2_1_ = 'd';\n                                                      local_810._3_1_ = '\\n';\n                                                      local_80c = local_80c & 0xffffff00;\n                                                      FUN_0002e584(3,&local_828,0);\n                                                      goto LAB_0001c828;\n                                                    }\n                                                  }\n                                                  else {\n                                                    if (4 < DAT_0007eb9c) {\n                                                      uVar10 = FUN_0004e9c4();\n                                                      snprintf((char *)&local_828,0x800,\n                                                               \"chain_domain_num : %d\\n\",uVar10);\n                                                      FUN_0002e584(4,&local_828,0);\n                                                    }\n                                                    DAT_0058dfc8 = FUN_0004e9c4(piVar9);\n                                                    piVar9 = (int *)FUN_0004e234(piVar5,\n                                                  \"chain_asic_num\");\n                                                  if ((piVar9 == (int *)0x0) || (*piVar9 != 3)) {\n                                                    if (3 < DAT_0007eb9c) {\n                                                      pcVar6 = \"get chain_asic_num failed\\n\";\nLAB_0001caec:\n                                                      local_828 = *(undefined4 *)pcVar6;\n                                                      local_824 = *(undefined4 *)((int)pcVar6 + 4);\n                                                      local_820 = *(uint *)((int)pcVar6 + 8);\n                                                      local_81c = *(uint *)((int)pcVar6 + 0xc);\n                                                      local_818 = *(uint *)((int)pcVar6 + 0x10);\n                                                      local_814 = *(uint *)((int)pcVar6 + 0x14);\n                                                      FUN_0002e584(3,&local_828,0);\n                                                      goto LAB_0001c828;\n                                                    }\n                                                  }\n                                                  else {\n                                                    if (4 < DAT_0007eb9c) {\n                                                      uVar10 = FUN_0004e9c4();\n                                                      snprintf((char *)&local_828,0x800,\n                                                               \"chain_asic_num : %d\\n\",uVar10);\n                                                      FUN_0002e584(4,&local_828,0);\n                                                    }\n                                                    DAT_0058dfcc = FUN_0004e9c4(piVar9);\n                                                    piVar9 = (int *)FUN_0004e234(piVar5,\n                                                  \"domain_asic_num\");\n                                                  if ((piVar9 == (int *)0x0) || (*piVar9 != 3)) {\n                                                    if (3 < DAT_0007eb9c) {\n                                                      local_828._0_1_ = 'g';\n                                                      local_828._1_1_ = 'e';\n                                                      local_828._2_1_ = 't';\n                                                      local_828._3_1_ = ' ';\n                                                      local_824._0_1_ = 'd';\n                                                      local_824._1_1_ = 'o';\n                                                      local_824._2_1_ = 'm';\n                                                      local_824._3_1_ = 'a';\n                                                      local_820._0_1_ = 'i';\n                                                      local_820._1_1_ = 'n';\n                                                      local_820._2_1_ = '_';\n                                                      local_820._3_1_ = 'a';\n                                                      local_81c._0_1_ = 's';\n                                                      local_81c._1_1_ = 'i';\n                                                      local_81c._2_1_ = 'c';\n                                                      local_81c._3_1_ = '_';\n                                                      local_818._0_1_ = 'n';\n                                                      local_818._1_1_ = 'u';\n                                                      local_818._2_1_ = 'm';\n                                                      local_818._3_1_ = ' ';\n                                                      local_814._0_1_ = 'f';\n                                                      local_814._1_1_ = 'a';\n                                                      local_814._2_1_ = 'i';\n                                                      local_814._3_1_ = 'l';\n                                                      local_810._0_1_ = 'e';\n                                                      local_810._1_1_ = 'd';\n                                                      local_810._2_1_ = '\\n';\n                                                      local_810._3_1_ = '\\0';\n                                                      FUN_0002e584(3,&local_828,0);\n                                                      goto LAB_0001c828;\n                                                    }\n                                                  }\n                                                  else {\n                                                    if (4 < DAT_0007eb9c) {\n                                                      uVar10 = FUN_0004e9c4();\n                                                      snprintf((char *)&local_828,0x800,\n                                                               \"domain_asic_num : %d\\n\",uVar10);\n                                                      FUN_0002e584(4,&local_828,0);\n                                                    }\n                                                    iVar20 = FUN_0004e9c4(piVar9);\n                                                    __nmemb_00 = DAT_0058dfcc;\n                                                    __nmemb = DAT_0058dfc8;\n                                                    sVar7 = DAT_0058dfbc;\n                                                    DAT_0058dfd0 = iVar20;\n                                                    if (3 < DAT_0007eb9c) {\n                                                      snprintf((char *)&local_828,0x800,\n                                                                                                                              \n                                                  \"chain_num %d, chain_domain_num %d, chain_asic_num %d, domain_asic_num %d\\n\"\n                                                  ,DAT_0058dfbc,DAT_0058dfc8,DAT_0058dfcc,iVar20);\n                                                  FUN_0002e584(3,&local_828,0);\n                                                  }\n                                                  DAT_0058dff0 = calloc(sVar7,0x14);\n                                                  if (DAT_0058dff0 == (void *)0x0) {\n                                                    if (3 < DAT_0007eb9c) {\n                                                      pcVar6 = \"malloc %d chain_t failed\\n\";\nLAB_0001cd40:\n                                                      snprintf((char *)&local_828,0x800,pcVar6,sVar7\n                                                              );\n                                                      FUN_0002e584(3,&local_828,0);\n                                                      if (3 < DAT_0007eb9c) {\n                                                        local_828._0_1_ = 'a';\n                                                        local_828._1_1_ = 'l';\n                                                        local_828._2_1_ = 'l';\n                                                        local_828._3_1_ = 'o';\n                                                        local_824._0_1_ = 'c';\n                                                        local_824._1_1_ = ' ';\n                                                        local_824._2_1_ = 't';\n                                                        local_824._3_1_ = 'o';\n                                                        local_820._0_1_ = 'p';\n                                                        local_820._1_1_ = 'o';\n                                                        local_820._2_1_ = 'l';\n                                                        local_820._3_1_ = ' ';\n                                                        local_81c._0_1_ = 'f';\n                                                        local_81c._1_1_ = 'a';\n                                                        local_81c._2_1_ = 'i';\n                                                        local_81c._3_1_ = 'l';\n                                                        local_818._0_1_ = 'e';\n                                                        local_818._1_1_ = 'd';\n                                                        local_818._2_1_ = '\\n';\n                                                        local_818._3_1_ = '\\0';\n                                                        FUN_0002e584(3,&local_828,0);\n                                                        goto LAB_0001c828;\n                                                      }\n                                                    }\n                                                  }\n                                                  else {\n                                                    for (iVar20 = 0; pvVar22 = DAT_0058dff0,\n                                                        iVar20 < (int)sVar7; iVar20 = iVar20 + 1) {\n                                                      iVar16 = iVar20 * 0x14;\n                                                      *(int *)((int)DAT_0058dff0 + iVar16) = iVar20;\n                                                      pvVar13 = calloc(__nmemb,8);\n                                                      *(void **)((int)pvVar22 + iVar16 + 0xc) =\n                                                           pvVar13;\n                                                      if (pvVar13 == (void *)0x0) {\n                                                        if (DAT_0007eb9c < 4) goto LAB_0001b53c;\n                                                        pcVar6 = \"malloc %d domain_t failed\\n\";\n                                                        sVar7 = __nmemb;\n                                                        goto LAB_0001cd40;\n                                                      }\n                                                      pvVar13 = calloc(__nmemb_00,0x1c);\n                                                      *(void **)((int)pvVar22 + iVar16 + 8) =\n                                                           pvVar13;\n                                                      if (pvVar13 == (void *)0x0) {\n                                                        if (DAT_0007eb9c < 4) goto LAB_0001b53c;\n                                                        pcVar6 = \"malloc %d asic_t failed\\n\";\n                                                        sVar7 = __nmemb_00;\n                                                        goto LAB_0001cd40;\n                                                      }\n                                                      iVar14 = 0;\n                                                      iVar19 = 0;\n                                                      while( true ) {\n                                                        iVar14 = iVar14 + iVar20 * 0x1c;\n                                                        if ((int)__nmemb <= iVar19) break;\n                                                        iVar17 = *(int *)((int)pvVar22 +\n                                                                         iVar16 + 0xc);\n                                                        *(int *)(iVar17 + iVar19 * 8) = iVar19;\n                                                        iVar1 = iVar19 * 8;\n                                                        iVar19 = iVar19 + 1;\n                                                        *(int *)(iVar17 + iVar1 + 4) =\n                                                             *(int *)((int)pvVar22 + iVar16 + 8) +\n                                                             iVar14 + iVar20 * -0x1c;\n                                                      }\n                                                    }\n                                                    piVar9 = (int *)FUN_0004e234(piVar5,&\n                                                  DAT_000609f8);\n                                                  if ((piVar9 == (int *)0x0) || (*piVar9 != 0)) {\n                                                    if (3 < DAT_0007eb9c) {\n                                                      local_828._0_1_ = 'g';\n                                                      local_828._1_1_ = 'e';\n                                                      local_828._2_1_ = 't';\n                                                      local_828._3_1_ = ' ';\n                                                      local_824._0_1_ = 'p';\n                                                      local_824._1_1_ = 'i';\n                                                      local_824._2_1_ = 'c';\n                                                      local_824._3_1_ = ' ';\n                                                      local_820._0_1_ = 'f';\n                                                      local_820._1_1_ = 'a';\n                                                      local_820._2_1_ = 'i';\n                                                      local_820._3_1_ = 'l';\n                                                      local_81c._0_1_ = 'e';\n                                                      local_81c._1_1_ = 'd';\n                                                      local_81c._2_1_ = '\\n';\n                                                      local_81c._3_1_ = '\\0';\n                                                      FUN_0002e584(3,&local_828,0);\nLAB_0001ce48:\n                                                      if (3 < DAT_0007eb9c) {\n                                                        local_828._0_1_ = 'p';\n                                                        local_828._1_1_ = 'a';\n                                                        local_828._2_1_ = 'r';\n                                                        local_828._3_1_ = 's';\n                                                        local_824._0_1_ = 'e';\n                                                        local_824._1_1_ = ' ';\n                                                        local_824._2_1_ = 'c';\n                                                        local_824._3_1_ = 'h';\n                                                        local_820._0_1_ = 'a';\n                                                        local_820._1_1_ = 'i';\n                                                        local_820._2_1_ = 'n';\n                                                        local_820._3_1_ = ' ';\n                                                        local_81c._0_1_ = 'p';\n                                                        local_81c._1_1_ = 'i';\n                                                        local_81c._2_1_ = 'c';\n                                                        local_81c._3_1_ = ' ';\n                                                        local_818._0_1_ = 'f';\n                                                        local_818._1_1_ = 'a';\n                                                        local_818._2_1_ = 'i';\n                                                        local_818._3_1_ = 'l';\n                                                        local_814._0_1_ = 'e';\n                                                        local_814._1_1_ = 'd';\n                                                        local_814._2_1_ = '\\n';\n                                                        local_814._3_1_ = '\\0';\n                                                        FUN_0002e584(3,&local_828,0);\n                                                        goto LAB_0001c828;\n                                                      }\n                                                    }\n                                                  }\n                                                  else {\n                                                    if (4 < DAT_0007eb9c) {\n                                                      local_828._0_1_ = 'p';\n                                                      local_828._1_1_ = 'i';\n                                                      local_828._2_1_ = 'c';\n                                                      local_828._3_1_ = ':';\n                                                      local_824._0_2_ = 10;\n                                                      FUN_0002e584(4,&local_828);\n                                                    }\n                                                    piVar12 = (int *)FUN_0004e234(piVar9,\"type\");\n                                                    if ((piVar12 == (int *)0x0) || (*piVar12 != 2))\n                                                    {\n                                                      if (3 < DAT_0007eb9c) {\n                                                        local_828._0_1_ = 'g';\n                                                        local_828._1_1_ = 'e';\n                                                        local_828._2_1_ = 't';\n                                                        local_828._3_1_ = ' ';\n                                                        local_824._0_1_ = 't';\n                                                        local_824._1_1_ = 'y';\n                                                        local_824._2_1_ = 'p';\n                                                        local_824._3_1_ = 'e';\n                                                        local_820._0_1_ = ' ';\n                                                        local_820._1_1_ = 'f';\n                                                        local_820._2_1_ = 'a';\n                                                        local_820._3_1_ = 'i';\n                                                        local_81c._0_1_ = 'l';\n                                                        local_81c._1_1_ = 'e';\n                                                        local_81c._2_1_ = 'd';\n                                                        local_81c._3_1_ = '\\n';\n                                                        local_818 = local_818 & 0xffffff00;\n                                                        FUN_0002e584(3,&local_828,0);\n                                                        goto LAB_0001ce48;\n                                                      }\n                                                    }\n                                                    else {\n                                                      if (4 < DAT_0007eb9c) {\n                                                        uVar10 = FUN_0004e768();\n                                                        snprintf((char *)&local_828,0x800,\n                                                                 \"type: %s\\n\",uVar10);\n                                                        FUN_0002e584(4,&local_828,0);\n                                                      }\n                                                      piVar12 = (int *)FUN_0004e234(piVar9,\n                                                  \"i2c_addr\");\n                                                  if ((piVar12 == (int *)0x0) || (*piVar12 != 3)) {\n                                                    if (3 < DAT_0007eb9c) {\n                                                      local_828._0_1_ = 'g';\n                                                      local_828._1_1_ = 'e';\n                                                      local_828._2_1_ = 't';\n                                                      local_828._3_1_ = ' ';\n                                                      local_824._0_1_ = 'i';\n                                                      local_824._1_1_ = '2';\n                                                      local_824._2_1_ = 'c';\n                                                      local_824._3_1_ = '_';\n                                                      local_820._0_1_ = 'a';\n                                                      local_820._1_1_ = 'd';\n                                                      local_820._2_1_ = 'd';\n                                                      local_820._3_1_ = 'r';\n                                                      local_81c._0_1_ = ' ';\n                                                      local_81c._1_1_ = 'f';\n                                                      local_81c._2_1_ = 'a';\n                                                      local_81c._3_1_ = 'i';\n                                                      local_818._0_1_ = 'l';\n                                                      local_818._1_1_ = 'e';\n                                                      local_818._2_1_ = 'd';\n                                                      local_818._3_1_ = '\\n';\n                                                      local_814 = local_814 & 0xffffff00;\n                                                      FUN_0002e584(3,&local_828,0);\n                                                      goto LAB_0001ce48;\n                                                    }\n                                                  }\n                                                  else {\n                                                    if (4 < DAT_0007eb9c) {\n                                                      uVar10 = FUN_0004e9c4();\n                                                      snprintf((char *)&local_828,0x800,\n                                                               \"i2c_addr: %d\\n\",uVar10);\n                                                      FUN_0002e584(4,&local_828,0);\n                                                    }\n                                                    piVar9 = (int *)FUN_0004e234(piVar9,\"sensor\");\n                                                    pcVar6 = DAT_0058dfb8;\n                                                    if ((piVar9 == (int *)0x0) || (*piVar9 != 1)) {\n                                                      iVar20 = strcmp(DAT_0058dfb8,\"BHB28601\");\n                                                      if ((iVar20 == 0) ||\n                                                         (iVar20 = strcmp(pcVar6,\"BHB28501\"),\n                                                         iVar20 == 0)) goto LAB_0001d42c;\n                                                      if (3 < DAT_0007eb9c) {\n                                                        local_828._0_1_ = 'g';\n                                                        local_828._1_1_ = 'e';\n                                                        local_828._2_1_ = 't';\n                                                        local_828._3_1_ = ' ';\n                                                        local_824._0_1_ = 'p';\n                                                        local_824._1_1_ = 'i';\n                                                        local_824._2_1_ = 'c';\n                                                        local_824._3_1_ = ' ';\n                                                        local_820._0_1_ = 's';\n                                                        local_820._1_1_ = 'e';\n                                                        local_820._2_1_ = 'n';\n                                                        local_820._3_1_ = 's';\n                                                        local_81c._0_1_ = 'o';\n                                                        local_81c._1_1_ = 'r';\n                                                        local_81c._2_1_ = ' ';\n                                                        local_81c._3_1_ = 'f';\n                                                        local_818._0_1_ = 'a';\n                                                        local_818._1_1_ = 'i';\n                                                        local_818._2_1_ = 'l';\n                                                        local_818._3_1_ = 'e';\n                                                        local_814 = CONCAT13(local_814._3_1_,0xa64);\n                                                        FUN_0002e584(3,&local_828,0);\n                                                        goto LAB_0001ce48;\n                                                      }\n                                                    }\n                                                    else {\n                                                      if (4 < DAT_0007eb9c) {\n                                                        local_828._0_1_ = 'p';\n                                                        local_828._1_1_ = 'i';\n                                                        local_828._2_1_ = 'c';\n                                                        local_828._3_1_ = ' ';\n                                                        local_824._0_1_ = 's';\n                                                        local_824._1_1_ = 'e';\n                                                        local_824._2_1_ = 'n';\n                                                        local_824._3_1_ = 's';\n                                                        local_820._0_1_ = 'o';\n                                                        local_820._1_1_ = 'r';\n                                                        local_820._2_1_ = ':';\n                                                        local_820._3_1_ = '\\n';\n                                                        local_81c = local_81c & 0xffffff00;\n                                                        FUN_0002e584(4,&local_828,0);\n                                                      }\n                                                      DAT_0058dff8 = FUN_0004e5a0(piVar9);\n                                                      sVar7 = FUN_0004e5a0(piVar9);\n                                                      DAT_0058dffc = calloc(sVar7,0xc);\n                                                      if (DAT_0058dffc == (void *)0x0) {\n                                                        if (3 < DAT_0007eb9c) {\n                                                          uVar10 = FUN_0004e5a0(piVar9);\n                                                          snprintf((char *)&local_828,0x800,\n                                                                   \"malloc %d sensor_t failed\\n\",\n                                                                   uVar10);\n                                                          FUN_0002e584(3,&local_828,0);\n                                                          goto LAB_0001ce48;\n                                                        }\n                                                      }\n                                                      else {\n                                                        for (uVar21 = 0;\n                                                            uVar11 = FUN_0004e5a0(piVar9),\n                                                            uVar21 < uVar11; uVar21 = uVar21 + 1) {\n                                                          piVar12 = (int *)FUN_0004e5bc(piVar9,\n                                                  uVar21);\n                                                  if ((piVar12 == (int *)0x0) || (*piVar12 != 0)) {\n                                                    if (DAT_0007eb9c < 4) goto LAB_0001b53c;\n                                                    pcVar6 = \"get array %d failed\\n\";\nLAB_0001d33c:\n                                                    snprintf((char *)&local_828,0x800,pcVar6,uVar21)\n                                                    ;\n                                                    FUN_0002e584(3,&local_828,0);\n                                                    goto LAB_0001ce48;\n                                                  }\n                                                  piVar15 = (int *)FUN_0004e234(piVar12,\"index\");\n                                                  if ((piVar15 == (int *)0x0) || (*piVar15 != 3)) {\n                                                    if (3 < DAT_0007eb9c) {\n                                                      pcVar6 = \"get array %d index failed\\n\";\n                                                      goto LAB_0001d33c;\n                                                    }\n                                                    goto LAB_0001b53c;\n                                                  }\n                                                  if (4 < DAT_0007eb9c) {\n                                                    uVar10 = FUN_0004e9c4();\n                                                    snprintf((char *)&local_828,0x800,\"index: %d\\n\",\n                                                             uVar10);\n                                                    FUN_0002e584(4,&local_828,0);\n                                                  }\n                                                  pvVar22 = DAT_0058dffc;\n                                                  iVar20 = FUN_0004e9c4(piVar15);\n                                                  iVar20 = iVar20 * 0xc;\n                                                  uVar10 = FUN_0004e9c4(piVar15);\n                                                  *(undefined4 *)((int)pvVar22 + iVar20) = uVar10;\n                                                  piVar15 = (int *)FUN_0004e234(piVar12,\"type\");\n                                                  if ((piVar15 == (int *)0x0) || (*piVar15 != 2)) {\n                                                    if (3 < DAT_0007eb9c) {\n                                                      pcVar6 = \"get array %d type failed\\n\";\n                                                      goto LAB_0001d33c;\n                                                    }\n                                                    goto LAB_0001b53c;\n                                                  }\n                                                  if (4 < DAT_0007eb9c) {\n                                                    uVar10 = FUN_0004e768();\n                                                    snprintf((char *)&local_828,0x800,\"type: %s\\n\",\n                                                             uVar10);\n                                                    FUN_0002e584(4,&local_828,0);\n                                                  }\n                                                  piVar15 = (int *)FUN_0004e234(piVar12,&\n                                                  DAT_00062164);\n                                                  if ((piVar15 == (int *)0x0) || (*piVar15 != 3)) {\n                                                    if (3 < DAT_0007eb9c) {\n                                                      pcVar6 = \"get array %d bind_asic failed\\n\";\n                                                      goto LAB_0001d33c;\n                                                    }\n                                                    goto LAB_0001b53c;\n                                                  }\n                                                  if (4 < DAT_0007eb9c) {\n                                                    uVar10 = FUN_0004e9c4();\n                                                    snprintf((char *)&local_828,0x800,\"iic: %d\\n\",\n                                                             uVar10);\n                                                    FUN_0002e584(4,&local_828,0);\n                                                  }\n                                                  uVar10 = FUN_0004e9c4(piVar15);\n                                                  *(undefined4 *)((int)pvVar22 + iVar20 + 4) =\n                                                       uVar10;\n                                                  piVar12 = (int *)FUN_0004e234(piVar12,\"x\");\n                                                  if ((piVar12 == (int *)0x0) || (*piVar12 != 2)) {\n                                                    if (3 < DAT_0007eb9c) {\n                                                      pcVar6 = \"get array %d x failed\\n\";\n                                                      goto LAB_0001d33c;\n                                                    }\n                                                    goto LAB_0001b53c;\n                                                  }\n                                                  if (4 < DAT_0007eb9c) {\n                                                    FUN_0004e768();\n                                                    snprintf((char *)&local_828,0x800,\"x: %s\\n\");\n                                                    FUN_0002e584(4,&local_828,0);\n                                                  }\n                                                  if (DAT_0058e000 == 0) {\n                                                    pcVar6 = (char *)FUN_0004e768(piVar12);\n                                                    iVar16 = strncasecmp(pcVar6,\"right\",5);\n                                                    if (iVar16 == 0) {\n                                                      *(undefined *)((int)pvVar22 + iVar20 + 8) = 1;\n                                                    }\n                                                    else {\n                                                      *(undefined *)((int)pvVar22 + iVar20 + 8) = 0;\n                                                    }\n                                                  }\n                                                  }\nLAB_0001d42c:\n                                                  piVar9 = (int *)FUN_0004e234(piVar5,\"eeprom\");\n                                                  if ((piVar9 == (int *)0x0) || (*piVar9 != 0)) {\n                                                    if (3 < DAT_0007eb9c) {\n                                                      local_828._0_1_ = 'g';\n                                                      local_828._1_1_ = 'e';\n                                                      local_828._2_1_ = 't';\n                                                      local_828._3_1_ = ' ';\n                                                      local_824._0_1_ = 'e';\n                                                      local_824._1_1_ = 'e';\n                                                      local_824._2_1_ = 'p';\n                                                      local_824._3_1_ = 'r';\n                                                      local_820._0_1_ = 'o';\n                                                      local_820._1_1_ = 'm';\n                                                      local_820._2_1_ = ' ';\n                                                      local_820._3_1_ = 'f';\n                                                      local_81c._0_1_ = 'a';\n                                                      local_81c._1_1_ = 'i';\n                                                      local_81c._2_1_ = 'l';\n                                                      local_81c._3_1_ = 'e';\n                                                      local_818 = CONCAT13(local_818._3_1_,0xa64);\n                                                      FUN_0002e584(3,&local_828,0);\nLAB_0001d498:\n                                                      if (3 < DAT_0007eb9c) {\n                                                        pcVar6 = \"parse chain eeprom failed\\n\";\n                                                        goto LAB_0001caec;\n                                                      }\n                                                    }\n                                                  }\n                                                  else {\n                                                    if (4 < DAT_0007eb9c) {\n                                                      local_828._0_1_ = 'e';\n                                                      local_828._1_1_ = 'e';\n                                                      local_828._2_1_ = 'p';\n                                                      local_828._3_1_ = 'r';\n                                                      local_824._0_1_ = 'o';\n                                                      local_824._1_1_ = 'm';\n                                                      local_824._2_1_ = ':';\n                                                      local_824._3_1_ = '\\n';\n                                                      local_820 = local_820 & 0xffffff00;\n                                                      FUN_0002e584(4,&local_828,0);\n                                                    }\n                                                    piVar12 = (int *)FUN_0004e234(piVar9,\"type\");\n                                                    if ((piVar12 == (int *)0x0) || (*piVar12 != 2))\n                                                    {\n                                                      if (3 < DAT_0007eb9c) {\n                                                        local_828._0_1_ = 'g';\n                                                        local_828._1_1_ = 'e';\n                                                        local_828._2_1_ = 't';\n                                                        local_828._3_1_ = ' ';\n                                                        local_824._0_1_ = 't';\n                                                        local_824._1_1_ = 'y';\n                                                        local_824._2_1_ = 'p';\n                                                        local_824._3_1_ = 'e';\n                                                        local_820._0_1_ = ' ';\n                                                        local_820._1_1_ = 'f';\n                                                        local_820._2_1_ = 'a';\n                                                        local_820._3_1_ = 'i';\n                                                        local_81c._0_1_ = 'l';\n                                                        local_81c._1_1_ = 'e';\n                                                        local_81c._2_1_ = 'd';\n                                                        local_81c._3_1_ = '\\n';\n                                                        local_818 = local_818 & 0xffffff00;\n                                                        FUN_0002e584(3,&local_828,0);\n                                                        goto LAB_0001d498;\n                                                      }\n                                                    }\n                                                    else {\n                                                      if (4 < DAT_0007eb9c) {\n                                                        uVar10 = FUN_0004e768();\n                                                        snprintf((char *)&local_828,0x800,\n                                                                 \"type: %s\\n\",uVar10);\n                                                        FUN_0002e584(4,&local_828,0);\n                                                      }\n                                                      piVar9 = (int *)FUN_0004e234(piVar9,\"i2c_addr\"\n                                                                                  );\n                                                      if ((piVar9 == (int *)0x0) || (*piVar9 != 3))\n                                                      {\n                                                        if (3 < DAT_0007eb9c) {\n                                                          local_828._0_1_ = 'g';\n                                                          local_828._1_1_ = 'e';\n                                                          local_828._2_1_ = 't';\n                                                          local_828._3_1_ = ' ';\n                                                          local_824._0_1_ = 'i';\n                                                          local_824._1_1_ = '2';\n                                                          local_824._2_1_ = 'c';\n                                                          local_824._3_1_ = '_';\n                                                          local_820._0_1_ = 'a';\n                                                          local_820._1_1_ = 'd';\n                                                          local_820._2_1_ = 'd';\n                                                          local_820._3_1_ = 'r';\n                                                          local_81c._0_1_ = ' ';\n                                                          local_81c._1_1_ = 'f';\n                                                          local_81c._2_1_ = 'a';\n                                                          local_81c._3_1_ = 'i';\n                                                          local_818._0_1_ = 'l';\n                                                          local_818._1_1_ = 'e';\n                                                          local_818._2_1_ = 'd';\n                                                          local_818._3_1_ = '\\n';\n                                                          local_814 = local_814 & 0xffffff00;\n                                                          FUN_0002e584(3,&local_828,0);\n                                                          goto LAB_0001d498;\n                                                        }\n                                                      }\n                                                      else {\n                                                        if (4 < DAT_0007eb9c) {\n                                                          uVar10 = FUN_0004e9c4();\n                                                          snprintf((char *)&local_828,0x800,\n                                                                   \"i2c_addr: %d\\n\",uVar10);\n                                                          FUN_0002e584(4,&local_828,0);\n                                                        }\n                                                        piVar9 = (int *)FUN_0004e234(piVar5,\"sensor\"\n                                                                                    );\n                                                        if ((piVar9 == (int *)0x0) || (*piVar9 != 1)\n                                                           ) {\n                                                          if (3 < DAT_0007eb9c) {\n                                                            local_828._0_1_ = 'g';\n                                                            local_828._1_1_ = 'e';\n                                                            local_828._2_1_ = 't';\n                                                            local_828._3_1_ = ' ';\n                                                            local_824._0_1_ = 's';\n                                                            local_824._1_1_ = 'e';\n                                                            local_824._2_1_ = 'n';\n                                                            local_824._3_1_ = 's';\n                                                            local_820._0_1_ = 'o';\n                                                            local_820._1_1_ = 'r';\n                                                            local_820._2_1_ = ' ';\n                                                            local_820._3_1_ = 'f';\n                                                            local_81c._0_1_ = 'a';\n                                                            local_81c._1_1_ = 'i';\n                                                            local_81c._2_1_ = 'l';\n                                                            local_81c._3_1_ = 'e';\n                                                            local_818 = CONCAT13(local_818._3_1_,\n                                                                                 0xa64);\n                                                            FUN_0002e584(3,&local_828,0);\nLAB_0001d68c:\n                                                            if (3 < DAT_0007eb9c) {\n                                                              pcVar6 = \"parse chain sensor failed\\n\"\n                                                              ;\n                                                              goto LAB_0001caec;\n                                                            }\n                                                          }\n                                                        }\n                                                        else {\n                                                          if (4 < DAT_0007eb9c) {\n                                                            local_828._0_1_ = 's';\n                                                            local_828._1_1_ = 'e';\n                                                            local_828._2_1_ = 'n';\n                                                            local_828._3_1_ = 's';\n                                                            local_824._0_1_ = 'o';\n                                                            local_824._1_1_ = 'r';\n                                                            local_824._2_1_ = ':';\n                                                            local_824._3_1_ = '\\n';\n                                                            local_820 = local_820 & 0xffffff00;\n                                                            FUN_0002e584(4,&local_828,0);\n                                                          }\n                                                          DAT_0058dfd4 = FUN_0004e5a0(piVar9);\n                                                          sVar7 = FUN_0004e5a0(piVar9);\n                                                          DAT_0058dff4 = calloc(sVar7,0xc);\n                                                          if (DAT_0058dff4 == (void *)0x0) {\n                                                            if (3 < DAT_0007eb9c) {\n                                                              uVar10 = FUN_0004e5a0(piVar9);\n                                                              snprintf((char *)&local_828,0x800,\n                                                                       \"malloc %d sensor_t failed\\n\"\n                                                                       ,uVar10);\n                                                              FUN_0002e584(3,&local_828,0);\n                                                              goto LAB_0001d68c;\n                                                            }\n                                                          }\n                                                          else {\n                                                            for (uVar21 = 0;\n                                                                uVar11 = FUN_0004e5a0(piVar9),\n                                                                uVar21 < uVar11; uVar21 = uVar21 + 1\n                                                                ) {\n                                                              piVar12 = (int *)FUN_0004e5bc(piVar9,\n                                                  uVar21);\n                                                  if ((piVar12 == (int *)0x0) || (*piVar12 != 0)) {\n                                                    if (DAT_0007eb9c < 4) goto LAB_0001b53c;\n                                                    pcVar6 = \"get array %d failed\\n\";\nLAB_0001d8a8:\n                                                    snprintf((char *)&local_828,0x800,pcVar6,uVar21)\n                                                    ;\n                                                    FUN_0002e584(3,&local_828,0);\n                                                    goto LAB_0001d68c;\n                                                  }\n                                                  piVar15 = (int *)FUN_0004e234(piVar12,\"index\");\n                                                  if ((piVar15 == (int *)0x0) || (*piVar15 != 3)) {\n                                                    if (3 < DAT_0007eb9c) {\n                                                      pcVar6 = \"get array %d index failed\\n\";\n                                                      goto LAB_0001d8a8;\n                                                    }\n                                                    goto LAB_0001b53c;\n                                                  }\n                                                  if (4 < DAT_0007eb9c) {\n                                                    uVar10 = FUN_0004e9c4();\n                                                    snprintf((char *)&local_828,0x800,\"index: %d\\n\",\n                                                             uVar10);\n                                                    FUN_0002e584(4,&local_828,0);\n                                                  }\n                                                  pvVar22 = DAT_0058dff4;\n                                                  iVar20 = FUN_0004e9c4(piVar15);\n                                                  piVar15 = (int *)FUN_0004e234(piVar12,\"type\");\n                                                  if ((piVar15 == (int *)0x0) || (*piVar15 != 2)) {\n                                                    if (3 < DAT_0007eb9c) {\n                                                      pcVar6 = \"get array %d type failed\\n\";\n                                                      goto LAB_0001d8a8;\n                                                    }\n                                                    goto LAB_0001b53c;\n                                                  }\n                                                  if (4 < DAT_0007eb9c) {\n                                                    uVar10 = FUN_0004e768();\n                                                    snprintf((char *)&local_828,0x800,\"type: %s\\n\",\n                                                             uVar10);\n                                                    FUN_0002e584(4,&local_828,0);\n                                                  }\n                                                  piVar12 = (int *)FUN_0004e234(piVar12,\"bind_asic\")\n                                                  ;\n                                                  if ((piVar12 == (int *)0x0) || (*piVar12 != 3)) {\n                                                    if (3 < DAT_0007eb9c) {\n                                                      pcVar6 = \"get array %d bind_asic failed\\n\";\n                                                      goto LAB_0001d8a8;\n                                                    }\n                                                    goto LAB_0001b53c;\n                                                  }\n                                                  if (4 < DAT_0007eb9c) {\n                                                    uVar10 = FUN_0004e9c4();\n                                                    snprintf((char *)&local_828,0x800,\n                                                             \"bind_asic: %d\\n\",uVar10);\n                                                    FUN_0002e584(4,&local_828,0);\n                                                  }\n                                                  uVar10 = FUN_0004e9c4(piVar12);\n                                                  *(undefined4 *)((int)pvVar22 + iVar20 * 0xc + 4) =\n                                                       uVar10;\n                                                  }\n                                                  piVar5 = (int *)FUN_0004e234(piVar5,\"domain\");\n                                                  if ((piVar5 != (int *)0x0) && (*piVar5 == 1)) {\n                                                    if (4 < DAT_0007eb9c) {\n                                                      local_828._0_1_ = 'd';\n                                                      local_828._1_1_ = 'o';\n                                                      local_828._2_1_ = 'm';\n                                                      local_828._3_1_ = 'a';\n                                                      local_824._0_1_ = 'i';\n                                                      local_824._1_1_ = 'n';\n                                                      local_824._2_1_ = ':';\n                                                      local_824._3_1_ = '\\n';\n                                                      local_820 = local_820 & 0xffffff00;\n                                                      FUN_0002e584(4,&local_828,0);\n                                                    }\n                                                    for (pvVar22 = (void *)0x0;\n                                                        pvVar13 = (void *)FUN_0004e5a0(piVar5),\n                                                        pvVar22 < pvVar13;\n                                                        pvVar22 = (void *)((int)pvVar22 + 1)) {\n                                                      piVar9 = (int *)FUN_0004e5bc(piVar5,pvVar22);\n                                                      if ((piVar9 == (int *)0x0) || (*piVar9 != 0))\n                                                      {\n                                                        if (DAT_0007eb9c < 4) goto LAB_0001b53c;\n                                                        pcVar6 = \"get array %d failed\\n\";\nLAB_0001dba0:\n                                                        snprintf((char *)&local_828,0x800,pcVar6,\n                                                                 pvVar22);\n                                                        FUN_0002e584(3,&local_828,0);\n                                                        goto LAB_0001d9a4;\n                                                      }\n                                                      piVar12 = (int *)FUN_0004e234(piVar9,\"index\");\n                                                      if ((piVar12 == (int *)0x0) || (*piVar12 != 3)\n                                                         ) {\n                                                        if (3 < DAT_0007eb9c) {\n                                                          pcVar6 = \"get array %d index failed\\n\";\n                                                          goto LAB_0001dba0;\n                                                        }\n                                                        goto LAB_0001b53c;\n                                                      }\n                                                      if (4 < DAT_0007eb9c) {\n                                                        uVar10 = FUN_0004e9c4();\n                                                        snprintf((char *)&local_828,0x800,\n                                                                 \"index: %d\\n\",uVar10);\n                                                        FUN_0002e584(4,&local_828,0);\n                                                      }\n                                                      piVar9 = (int *)FUN_0004e234(piVar9,&\n                                                  DAT_00061c3c);\n                                                  if ((piVar9 == (int *)0x0) || (*piVar9 != 1)) {\n                                                    if (DAT_0007eb9c < 4) goto LAB_0001b53c;\n                                                    local_828._0_1_ = 'g';\n                                                    local_828._1_1_ = 'e';\n                                                    local_828._2_1_ = 't';\n                                                    local_828._3_1_ = ' ';\n                                                    local_824._0_1_ = 'a';\n                                                    local_824._1_1_ = 's';\n                                                    local_824._2_1_ = 'i';\n                                                    local_824._3_1_ = 'c';\n                                                    local_820._0_1_ = ' ';\n                                                    local_820._1_1_ = 'f';\n                                                    local_820._2_1_ = 'a';\n                                                    local_820._3_1_ = 'i';\n                                                    local_81c._0_1_ = 'l';\n                                                    local_81c._1_1_ = 'e';\n                                                    local_81c._2_1_ = 'd';\n                                                    local_81c._3_1_ = '\\n';\n                                                    local_818 = local_818 & 0xffffff00;\n                                                    FUN_0002e584(3,&local_828,0);\nLAB_0001db44:\n                                                    if (DAT_0007eb9c < 4) goto LAB_0001b53c;\n                                                    snprintf((char *)&local_828,0x800,\n                                                             \"parse arrry %d asic failed\\n\",pvVar22)\n                                                    ;\n                                                    FUN_0002e584(3,&local_828,0);\n                                                    goto LAB_0001d9a4;\n                                                  }\n                                                  if (4 < DAT_0007eb9c) {\n                                                    local_828._0_1_ = 'a';\n                                                    local_828._1_1_ = 's';\n                                                    local_828._2_1_ = 'i';\n                                                    local_828._3_1_ = 'c';\n                                                    local_824._0_3_ = 0xa3a;\n                                                    FUN_0002e584(4,&local_828,0);\n                                                  }\n                                                  for (uVar21 = 0; uVar11 = FUN_0004e5a0(piVar9),\n                                                      uVar21 < uVar11; uVar21 = uVar21 + 1) {\n                                                    piVar12 = (int *)FUN_0004e5bc(piVar9,uVar21);\n                                                    if ((piVar12 == (int *)0x0) || (*piVar12 != 0))\n                                                    {\n                                                      if (DAT_0007eb9c < 4) goto LAB_0001b53c;\n                                                      pcVar6 = \"get array %d failed\\n\";\nLAB_0001de28:\n                                                      snprintf((char *)&local_828,0x800,pcVar6,\n                                                               uVar21);\n                                                      FUN_0002e584(3,&local_828,0);\n                                                      goto LAB_0001db44;\n                                                    }\n                                                    piVar15 = (int *)FUN_0004e234(piVar12,\"index\");\n                                                    if ((piVar15 == (int *)0x0) || (*piVar15 != 3))\n                                                    {\n                                                      if (3 < DAT_0007eb9c) {\n                                                        pcVar6 = \"get array %d index failed\\n\";\n                                                        goto LAB_0001de28;\n                                                      }\n                                                      goto LAB_0001b53c;\n                                                    }\n                                                    if (4 < DAT_0007eb9c) {\n                                                      uVar10 = FUN_0004e9c4();\n                                                      snprintf((char *)&local_828,0x800,\n                                                               \"index: %d\\n\",uVar10);\n                                                      FUN_0002e584(4,&local_828,0);\n                                                    }\n                                                    iVar20 = FUN_0004e9c4(piVar15);\n                                                    iVar16 = *(int *)((int)DAT_0058dff0 + 8);\n                                                    *(int *)(iVar16 + iVar20 * 0x1c) = iVar20;\n                                                    iVar16 = iVar16 + iVar20 * 0x1c;\n                                                    piVar12 = (int *)FUN_0004e234(piVar12,\n                                                  \"coordinate\");\n                                                  if ((piVar12 == (int *)0x0) || (*piVar12 != 1)) {\n                                                    if (3 < DAT_0007eb9c) {\n                                                      pcVar6 = \"get array %d coordinate failed\\n\";\n                                                      goto LAB_0001de28;\n                                                    }\n                                                    goto LAB_0001b53c;\n                                                  }\n                                                  piVar15 = (int *)FUN_0004e5bc(piVar12,0);\n                                                  if ((piVar15 == (int *)0x0) || (*piVar15 != 3)) {\n                                                    if (3 < DAT_0007eb9c) {\n                                                      pcVar6 = \"get array %d coordinate x failed\\n\";\n                                                      goto LAB_0001de28;\n                                                    }\n                                                    goto LAB_0001b53c;\n                                                  }\n                                                  if (4 < DAT_0007eb9c) {\n                                                    uVar10 = FUN_0004e9c4();\n                                                    snprintf((char *)&local_828,0x800,\"x: %d\\n\",\n                                                             uVar10);\n                                                    FUN_0002e584(4,&local_828,0);\n                                                  }\n                                                  uVar10 = FUN_0004e9c4(piVar15);\n                                                  *(undefined4 *)(iVar16 + 4) = uVar10;\n                                                  piVar12 = (int *)FUN_0004e5bc(piVar12,1);\n                                                  if ((piVar12 == (int *)0x0) || (*piVar12 != 3)) {\n                                                    if (3 < DAT_0007eb9c) {\n                                                      pcVar6 = \"get array %d coordinate y failed\\n\";\n                                                      goto LAB_0001de28;\n                                                    }\n                                                    goto LAB_0001b53c;\n                                                  }\n                                                  if (4 < DAT_0007eb9c) {\n                                                    uVar10 = FUN_0004e9c4();\n                                                    snprintf((char *)&local_828,0x800,\"y: %d\\n\",\n                                                             uVar10);\n                                                    FUN_0002e584(4,&local_828,0);\n                                                  }\n                                                  uVar10 = FUN_0004e9c4(piVar12);\n                                                  *(undefined4 *)(iVar16 + 8) = uVar10;\n                                                  }\n                                                  }\n                                                  pvVar22 = *(void **)((int)DAT_0058dff0 + 8);\n                                                  for (iVar20 = 1; iVar20 < (int)DAT_0058dfbc;\n                                                      iVar20 = iVar20 + 1) {\n                                                    pvVar13 = memcpy(*(void **)((int)DAT_0058dff0 +\n                                                                               iVar20 * 0x14 + 8),\n                                                                     pvVar22,DAT_0058dfcc * 0x1c);\n                                                  }\n                                                  for (iVar20 = 0; pvVar22 = DAT_0058dff4,\n                                                      iVar20 < DAT_0058dfd4; iVar20 = iVar20 + 1) {\n                                                    iVar16 = *(int *)((int)DAT_0058dff4 +\n                                                                     iVar20 * 0xc + 4);\n                                                    iVar14 = iVar16 * 0x1c +\n                                                             *(int *)((int)DAT_0058dff0 + 8);\n                                                    if (3 < DAT_0007eb9c) {\n                                                      snprintf((char *)&local_828,0x800,\n                                                               \"asic %d, wind %d, y %d\\n\",iVar16,\n                                                               DAT_0058e000,\n                                                               *(undefined4 *)(iVar14 + 8));\n                                                      pvVar13 = (void *)FUN_0002e584(3,&local_828,0)\n                                                      ;\n                                                    }\n                                                    if (DAT_0058e000 == 1) {\n                                                      pvVar13 = (void *)(DAT_0058dfc4 * 0x55555556);\n                                                      if (DAT_0058dfc4 / 3 < *(int *)(iVar14 + 8))\n                                                      goto LAB_0001e03c;\n                                                      uVar18 = 1;\n                                                      if (3 < DAT_0007eb9c) {\n                                                        local_828._0_1_ = 'a';\n                                                        local_828._1_1_ = 'i';\n                                                        local_828._2_1_ = 'r';\n                                                        local_828._3_1_ = ' ';\n                                                        local_824._0_1_ = 'i';\n                                                        local_824._1_1_ = 'n';\n                                                        local_824._2_1_ = '\\n';\n                                                        local_824._3_1_ = '\\0';\n                                                        pvVar13 = (void *)FUN_0002e584(3,&local_828,\n                                                                                       0);\n                                                      }\n                                                    }\n                                                    else if ((DAT_0058e000 == 0) &&\n                                                            (pvVar13 = (void *)(DAT_0058dfc4 *\n                                                                               -0x55555554),\n                                                            (DAT_0058dfc4 * 2) / 3 <=\n                                                            *(int *)(iVar14 + 8))) {\n                                                      if (DAT_0007eb9c < 4) {\n                                                        uVar18 = 1;\n                                                      }\n                                                      else {\n                                                        local_828._0_1_ = 'a';\n                                                        local_828._1_1_ = 'i';\n                                                        local_828._2_1_ = 'r';\n                                                        local_828._3_1_ = ' ';\n                                                        local_824._0_1_ = 'i';\n                                                        local_824._1_1_ = 'n';\n                                                        local_824._2_1_ = '\\n';\n                                                        local_824._3_1_ = '\\0';\n                                                        pvVar13 = (void *)FUN_0002e584(3,&local_828,\n                                                                                       0);\n                                                        uVar18 = 1;\n                                                      }\n                                                    }\n                                                    else {\nLAB_0001e03c:\n                                                      if (DAT_0007eb9c < 4) {\n                                                        uVar18 = 0;\n                                                      }\n                                                      else {\n                                                        local_828._0_1_ = 'a';\n                                                        local_828._1_1_ = 'i';\n                                                        local_828._2_1_ = 'r';\n                                                        local_828._3_1_ = ' ';\n                                                        local_824._0_1_ = 'o';\n                                                        local_824._1_1_ = 'u';\n                                                        local_824._2_1_ = 't';\n                                                        local_824._3_1_ = '\\n';\n                                                        local_820 = local_820 & 0xffffff00;\n                                                        pvVar13 = (void *)FUN_0002e584(3,&local_828,\n                                                                                       0);\n                                                        uVar18 = 0;\n                                                      }\n                                                    }\n                                                    *(undefined *)((int)pvVar22 + iVar20 * 0xc + 8)\n                                                         = uVar18;\n                                                  }\n                                                  iVar20 = FUN_0001b398(pvVar13);\n                                                  if ((iVar20 != 0) && (3 < DAT_0007eb9c)) {\n                                                    local_828._0_1_ = 'i';\n                                                    local_828._1_1_ = 'n';\n                                                    local_828._2_1_ = 'i';\n                                                    local_828._3_1_ = 't';\n                                                    local_824._0_1_ = ' ';\n                                                    local_824._1_1_ = 't';\n                                                    local_824._2_1_ = 'o';\n                                                    local_824._3_1_ = 'p';\n                                                    local_820._0_1_ = 'o';\n                                                    local_820._1_1_ = 'l';\n                                                    local_820._2_1_ = ' ';\n                                                    local_820._3_1_ = 'r';\n                                                    local_81c._0_1_ = 'u';\n                                                    local_81c._1_1_ = 'n';\n                                                    local_81c._2_1_ = 't';\n                                                    local_81c._3_1_ = 'i';\n                                                    local_818._0_1_ = 'm';\n                                                    local_818._1_1_ = 'e';\n                                                    local_818._2_1_ = ' ';\n                                                    local_818._3_1_ = 'f';\n                                                    local_814._0_1_ = 'a';\n                                                    local_814._1_1_ = 'i';\n                                                    local_814._2_1_ = 'l';\n                                                    local_814._3_1_ = 'e';\n                                                    local_810 = CONCAT13(local_810._3_1_,0xa64);\n                                                    FUN_0002e584(3,&local_828,0);\n                                                  }\n                                                  goto LAB_0001b540;\n                                                  }\n                                                  if (3 < DAT_0007eb9c) {\n                                                    local_828._0_1_ = 'g';\n                                                    local_828._1_1_ = 'e';\n                                                    local_828._2_1_ = 't';\n                                                    local_828._3_1_ = ' ';\n                                                    local_824._0_1_ = 'd';\n                                                    local_824._1_1_ = 'o';\n                                                    local_824._2_1_ = 'm';\n                                                    local_824._3_1_ = 'a';\n                                                    local_820._0_1_ = 'i';\n                                                    local_820._1_1_ = 'n';\n                                                    local_820._2_1_ = ' ';\n                                                    local_820._3_1_ = 'f';\n                                                    local_81c._0_1_ = 'a';\n                                                    local_81c._1_1_ = 'i';\n                                                    local_81c._2_1_ = 'l';\n                                                    local_81c._3_1_ = 'e';\n                                                    local_818 = CONCAT13(local_818._3_1_,0xa64);\n                                                    FUN_0002e584(3,&local_828,0);\nLAB_0001d9a4:\n                                                    if (3 < DAT_0007eb9c) {\n                                                      pcVar6 = \"parse chain domain failed\\n\";\n                                                      goto LAB_0001caec;\n                                                    }\n                                                  }\n                                                  }\n                                                  }\n                                                  }\n                                                  }\n                                                  }\n                                                  }\n                                                  }\n                                                  }\n                                                  }\n                                                  }\n                                                  }\n                                                  }\n                                                  }\n                                                  }\n                                                  }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                          else {\n                            iVar20 = strncmp(pcVar6,\"left\",4);\n                            if (iVar20 == 0) {\n                              iVar20 = strncmp(pcVar8,\"out\",2);\n                              if (iVar20 != 0) {\n                                iVar20 = strncmp(pcVar8,\"in\",2);\n                                goto joined_r0x0001c174;\n                              }\n                              goto LAB_0001c3f4;\n                            }\nLAB_0001c0e4:\n                            if (3 < DAT_0007eb9c) {\n                              snprintf((char *)&local_828,0x800,\n                                       \"unkonwn wind position %s, direction %s\\n\",pcVar6,pcVar8);\n                              FUN_0002e584(3,&local_828,0);\n                              goto LAB_0001bdac;\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\nLAB_0001b53c:\n  iVar20 = -1;\nLAB_0001b540:\n  if (piVar4[1] != -1) {\n    piVar5 = piVar4 + 1;\n    DataMemoryBarrier(0xb);\n    do {\n      iVar16 = *piVar5;\n      bVar2 = (bool)hasExclusiveAccess(piVar5);\n    } while (!bVar2);\n    *piVar5 = iVar16 + -1;\n    if (iVar16 + -1 == 0) {\n      FUN_0004eb6c(piVar4);\n    }\n  }\n  return iVar20;\n}\n\n",
    "FUN_0001e0c0": "\nundefined4 FUN_0001e0c0(void)\n\n{\n  return DAT_0058dfb8;\n}\n\n",
    "FUN_0001e0e0": "\nundefined4 FUN_0001e0e0(void)\n\n{\n  return DAT_0058dfc8;\n}\n\n",
    "FUN_0001e0f0": "\nundefined4 FUN_0001e0f0(void)\n\n{\n  return DAT_0058dfcc;\n}\n\n",
    "FUN_0001e100": "\nundefined4 FUN_0001e100(void)\n\n{\n  return DAT_0058dfd0;\n}\n\n",
    "FUN_0001e110": "\nundefined4 FUN_0001e110(void)\n\n{\n  return DAT_0058dfd8;\n}\n\n",
    "FUN_0001e120": "\nundefined4 FUN_0001e120(void)\n\n{\n  return DAT_0058dfdc;\n}\n\n",
    "FUN_0001e130": "\nundefined4 FUN_0001e130(void)\n\n{\n  return DAT_0058dfe0;\n}\n\n",
    "FUN_0001e140": "\nundefined4 FUN_0001e140(void)\n\n{\n  return DAT_0058dfe4;\n}\n\n",
    "FUN_0001e150": "\nundefined4 FUN_0001e150(void)\n\n{\n  return DAT_0058dfe8;\n}\n\n",
    "FUN_0001e160": "\nundefined4 FUN_0001e160(void)\n\n{\n  return DAT_0058dfec;\n}\n\n",
    "FUN_0001e170": "\nundefined4 FUN_0001e170(void)\n\n{\n  return DAT_0058dfd4;\n}\n\n",
    "FUN_0001e180": "\nundefined4 FUN_0001e180(int param_1)\n\n{\n  return *(undefined4 *)(DAT_0058dff4 + param_1 * 0xc + 4);\n}\n\n",
    "FUN_0001e19c": "\nundefined4 FUN_0001e19c(void)\n\n{\n  return DAT_0058dff8;\n}\n\n",
    "FUN_0001e1ac": "\nundefined4 FUN_0001e1ac(int param_1)\n\n{\n  return *(undefined4 *)(DAT_0058dffc + param_1 * 0xc + 4);\n}\n\n",
    "FUN_0001e200": "\nint FUN_0001e200(uint param_1,uint param_2)\n\n{\n  int iVar1;\n  uint uVar2;\n  \n  uVar2 = param_1 >> 0x1f;\n  if (DAT_0058dfbc <= (int)param_1) {\n    uVar2 = 1;\n  }\n  if (uVar2 != 0) {\n    return -0x7ffffbff;\n  }\n  if (DAT_0058e010 == 0) {\n    iVar1 = FUN_0001b398(param_1);\n    if (iVar1 < 0) {\n      return iVar1;\n    }\n  }\n  else {\n    iVar1 = 0;\n  }\n  if (*(byte *)(DAT_0058e018 + param_1 * 0x210) != param_2) {\n    *(char *)(DAT_0058e018 + param_1 * 0x210) = (char)param_2;\n    if (param_2 == 0) {\n      DAT_0058e014 = DAT_0058e014 + -1;\n    }\n    else {\n      DAT_0058e014 = DAT_0058e014 + '\\x01';\n    }\n    return iVar1;\n  }\n  return iVar1;\n}\n\n",
    "FUN_0001e28c": "\nundefined FUN_0001e28c(void)\n\n{\n  return DAT_0058e014;\n}\n\n",
    "FUN_0001e29c": "\nundefined FUN_0001e29c(int param_1)\n\n{\n  return *(undefined *)(DAT_0058e018 + param_1 * 0x210);\n}\n\n",
    "FUN_0001e2b4": "\nundefined4 FUN_0001e2b4(void)\n\n{\n  undefined8 in_d0;\n  \n  DAT_0058e028 = in_d0;\n  return 0;\n}\n\n",
    "FUN_0001e2c8": "\nundefined8 FUN_0001e2c8(void)\n\n{\n  return DAT_0058e028;\n}\n\n",
    "FUN_0001e2d8": "\nundefined4 FUN_0001e2d8(void)\n\n{\n  undefined8 in_d0;\n  \n  DAT_0058e030 = in_d0;\n  return 0;\n}\n\n",
    "FUN_0001e2ec": "\nundefined8 FUN_0001e2ec(void)\n\n{\n  return DAT_0058e030;\n}\n\n",
    "FUN_0001e2fc": "\nundefined4 FUN_0001e2fc(void)\n\n{\n  return DAT_0058e004;\n}\n\n",
    "FUN_0001e30c": "\nint FUN_0001e30c(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  \n  if (0 < DAT_0058e004) {\n    iVar2 = 0;\n    iVar3 = 0;\n    do {\n      iVar1 = iVar3 * 8;\n      iVar3 = iVar3 + 1;\n      if (*(char *)(DAT_0058e020 + iVar1) != '\\0') {\n        iVar2 = iVar2 + 1;\n      }\n    } while (iVar3 != DAT_0058e004);\n    return iVar2;\n  }\n  return 0;\n}\n\n",
    "FUN_0001e350": "\nint FUN_0001e350(uint param_1,uint param_2)\n\n{\n  int iVar1;\n  uint uVar2;\n  \n  uVar2 = param_1 >> 0x1f;\n  if (DAT_0058e004 <= (int)param_1) {\n    uVar2 = 1;\n  }\n  if (uVar2 != 0) {\n    return -0x7ffffbff;\n  }\n  if (DAT_0058e010 == 0) {\n    iVar1 = FUN_0001b398(param_1);\n    if (iVar1 < 0) {\n      return iVar1;\n    }\n  }\n  else {\n    iVar1 = 0;\n  }\n  if (*(byte *)(DAT_0058e020 + param_1 * 8) != param_2) {\n    *(char *)(DAT_0058e020 + param_1 * 8) = (char)param_2;\n    if (param_2 == 0) {\n      DAT_0058e01c = DAT_0058e01c + -1;\n    }\n    else {\n      DAT_0058e01c = DAT_0058e01c + '\\x01';\n    }\n    return iVar1;\n  }\n  return iVar1;\n}\n\n",
    "FUN_0001e3d4": "\nint FUN_0001e3d4(uint param_1,undefined4 param_2)\n\n{\n  int iVar1;\n  uint uVar2;\n  \n  uVar2 = param_1 >> 0x1f;\n  if (DAT_0058e004 <= (int)param_1) {\n    uVar2 = 1;\n  }\n  if (uVar2 == 0) {\n    if (DAT_0058e010 == 0) {\n      iVar1 = FUN_0001b398(param_1);\n      if (iVar1 < 0) {\n        return iVar1;\n      }\n    }\n    else {\n      iVar1 = 0;\n    }\n    *(undefined4 *)(DAT_0058e020 + param_1 * 8 + 4) = param_2;\n    return iVar1;\n  }\n  return -0x7ffffbff;\n}\n\n",
    "FUN_0001e43c": "\nint FUN_0001e43c(uint param_1)\n\n{\n  int iVar1;\n  \n  if (((uint)(DAT_0058e004 <= (int)param_1) | param_1 >> 0x1f) != 0) {\n    return -0x7ffffbff;\n  }\n  if ((DAT_0058e010 == 0) && (iVar1 = FUN_0001b398(), iVar1 < 0)) {\n    return iVar1;\n  }\n  return *(int *)(DAT_0058e020 + param_1 * 8 + 4);\n}\n\n",
    "FUN_0001e49c": "\nundefined4 FUN_0001e49c(undefined param_1)\n\n{\n  DAT_0058e01d = param_1;\n  return 0;\n}\n\n",
    "FUN_0001e4b0": "\nundefined FUN_0001e4b0(void)\n\n{\n  return DAT_0058e01d;\n}\n\n",
    "FUN_0001e4c0": "\nint FUN_0001e4c0(undefined4 param_1,undefined4 param_2,uint param_3)\n\n{\n  int iVar1;\n  uint uVar2;\n  int iVar3;\n  \n  uVar2 = param_3 >> 0x1f;\n  if (DAT_0058dfbc <= (int)param_3) {\n    uVar2 = 1;\n  }\n  if (uVar2 == 0) {\n    if (DAT_0058e010 == 0) {\n      iVar1 = FUN_0001b398(param_3);\n      if (iVar1 < 0) {\n        return iVar1;\n      }\n    }\n    else {\n      iVar1 = 0;\n    }\n    iVar3 = DAT_0058e018 + param_3 * 0x210;\n    *(undefined4 *)(iVar3 + 8) = param_1;\n    *(undefined4 *)(iVar3 + 0xc) = param_2;\n    return iVar1;\n  }\n  return -0x7ffffbff;\n}\n\n",
    "FUN_0001e52c": "\ndouble FUN_0001e52c(uint param_1)\n\n{\n  int iVar1;\n  \n  if (((uint)(DAT_0058dfbc <= (int)param_1) | param_1 >> 0x1f) != 0) {\n    return 2147484673.0;\n  }\n  if ((DAT_0058e010 == 0) && (iVar1 = FUN_0001b398(), iVar1 < 0)) {\n    return (double)(longlong)iVar1;\n  }\n  return *(double *)(DAT_0058e018 + param_1 * 0x210 + 8);\n}\n\n",
    "FUN_0001e5a0": "\nint FUN_0001e5a0(uint param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  int iVar3;\n  \n  uVar2 = param_1 >> 0x1f;\n  if (DAT_0058dfbc <= (int)param_1) {\n    uVar2 = 1;\n  }\n  if (uVar2 == 0) {\n    if (DAT_0058e010 == 0) {\n      iVar1 = FUN_0001b398(param_1);\n      if (iVar1 < 0) {\n        return iVar1;\n      }\n    }\n    else {\n      iVar1 = 0;\n    }\n    iVar3 = DAT_0058e018 + param_1 * 0x210;\n    *(char *)(iVar3 + 1) = *(char *)(iVar3 + 1) + '\\x01';\n    return iVar1;\n  }\n  return -0x7ffffbff;\n}\n\n",
    "FUN_0001e610": "\nint FUN_0001e610(uint param_1,undefined param_2)\n\n{\n  int iVar1;\n  uint uVar2;\n  \n  uVar2 = param_1 >> 0x1f;\n  if (DAT_0058dfbc <= (int)param_1) {\n    uVar2 = 1;\n  }\n  if (uVar2 == 0) {\n    if (DAT_0058e010 == 0) {\n      iVar1 = FUN_0001b398(param_1);\n      if (iVar1 < 0) {\n        return iVar1;\n      }\n    }\n    else {\n      iVar1 = 0;\n    }\n    *(undefined *)(DAT_0058e018 + param_1 * 0x210 + 1) = param_2;\n    return iVar1;\n  }\n  return -0x7ffffbff;\n}\n\n",
    "FUN_0001e67c": "\nuint FUN_0001e67c(uint param_1)\n\n{\n  uint uVar1;\n  \n  if (((uint)(DAT_0058dfbc <= (int)param_1) | param_1 >> 0x1f) != 0) {\n    return 0x80000401;\n  }\n  if ((DAT_0058e010 == 0) && (uVar1 = FUN_0001b398(), (int)uVar1 < 0)) {\n    return uVar1;\n  }\n  return (uint)*(byte *)(DAT_0058e018 + param_1 * 0x210 + 1);\n}\n\n",
    "FUN_0001e6e0": "\nint FUN_0001e6e0(uint param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  int iVar3;\n  \n  uVar2 = param_1 >> 0x1f;\n  if (DAT_0058dfbc <= (int)param_1) {\n    uVar2 = 1;\n  }\n  if (uVar2 == 0) {\n    if (DAT_0058e010 == 0) {\n      iVar1 = FUN_0001b398(param_1);\n      if (iVar1 < 0) {\n        return iVar1;\n      }\n    }\n    else {\n      iVar1 = 0;\n    }\n    iVar3 = DAT_0058e018 + param_1 * 0x210;\n    *(int *)(iVar3 + 4) = *(int *)(iVar3 + 4) + 1;\n    return iVar1;\n  }\n  return -0x7ffffbff;\n}\n\n",
    "FUN_0001e750": "\nint FUN_0001e750(uint param_1,undefined4 param_2)\n\n{\n  int iVar1;\n  uint uVar2;\n  \n  uVar2 = param_1 >> 0x1f;\n  if (DAT_0058dfbc <= (int)param_1) {\n    uVar2 = 1;\n  }\n  if (uVar2 == 0) {\n    if (DAT_0058e010 == 0) {\n      iVar1 = FUN_0001b398(param_1);\n      if (iVar1 < 0) {\n        return iVar1;\n      }\n    }\n    else {\n      iVar1 = 0;\n    }\n    *(undefined4 *)(DAT_0058e018 + param_1 * 0x210 + 4) = param_2;\n    return iVar1;\n  }\n  return -0x7ffffbff;\n}\n\n",
    "FUN_0001e7bc": "\nint FUN_0001e7bc(uint param_1)\n\n{\n  int iVar1;\n  \n  if (((uint)(DAT_0058dfbc <= (int)param_1) | param_1 >> 0x1f) != 0) {\n    return -0x7ffffbff;\n  }\n  if ((DAT_0058e010 == 0) && (iVar1 = FUN_0001b398(), iVar1 < 0)) {\n    return iVar1;\n  }\n  return *(int *)(DAT_0058e018 + param_1 * 0x210 + 4);\n}\n\n",
    "FUN_0001e820": "\nint FUN_0001e820(uint param_1,int param_2,undefined param_3)\n\n{\n  int iVar1;\n  uint uVar2;\n  \n  uVar2 = param_1 >> 0x1f;\n  if (DAT_0058dfbc <= (int)param_1) {\n    uVar2 = 1;\n  }\n  if (uVar2 == 0) {\n    if (DAT_0058e010 == 0) {\n      iVar1 = FUN_0001b398(param_1);\n      if (iVar1 < 0) {\n        return iVar1;\n      }\n    }\n    else {\n      iVar1 = 0;\n    }\n    *(undefined *)(DAT_0058e018 + param_1 * 0x210 + param_2 + 0x10) = param_3;\n    return iVar1;\n  }\n  return -0x7ffffbff;\n}\n\n",
    "FUN_0001e894": "\nint FUN_0001e894(uint param_1,char *param_2)\n\n{\n  int iVar1;\n  \n  if (((int)param_1 < DAT_0058dfbc) && (((uint)(param_2 == (char *)0x0) | param_1 >> 0x1f) == 0)) {\n    iVar1 = 0;\n    if ((DAT_0058e010 == 0) && (iVar1 = FUN_0001b398(), iVar1 < 0)) {\n      return iVar1;\n    }\n    snprintf(param_2,0x200,\"%s\",DAT_0058e018 + param_1 * 0x210 + 0x10);\n  }\n  else {\n    iVar1 = -0x7ffffbff;\n  }\n  return iVar1;\n}\n\n",
    "FUN_0001e91c": "\nundefined4 FUN_0001e91c(uint param_1)\n\n{\n  ushort *puVar1;\n  \n  if (DAT_0058e038 < 1) {\n    return 0;\n  }\n  if (*DAT_0058e03c != param_1) {\n    puVar1 = DAT_0058e03c;\n    do {\n      puVar1 = puVar1 + 1;\n      if (puVar1 == DAT_0058e03c + DAT_0058e038) {\n        return 0;\n      }\n    } while (*puVar1 != param_1);\n  }\n  return 1;\n}\n\n",
    "FUN_0001e970": "\nvoid FUN_0001e970(void)\n\n{\n  int iVar1;\n  uint uVar2;\n  \n  uVar2 = 0;\n  iVar1 = FUN_0001e29c(0);\n  while( true ) {\n    if (iVar1 != 0) {\n      FUN_00050c38(uVar2 & 0xff,0);\n    }\n    uVar2 = uVar2 + 1;\n    if (uVar2 == 4) break;\n    iVar1 = FUN_0001e29c(uVar2);\n  }\n  return;\n}\n\n",
    "FUN_0001e9b4": "\nvoid FUN_0001e9b4(undefined4 param_1,undefined4 param_2)\n\n{\n  uint local_14;\n  \n  FUN_00051a20(1,param_1,param_2,0x18,&local_14);\n  local_14 = local_14 & 0xfffffff7 | 8;\n  FUN_0004fa10(param_1,0,param_2,0x18,local_14);\n  return;\n}\n\n",
    "FUN_0001e9cc": "\nvoid FUN_0001e9cc(undefined4 param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  \n  uVar2 = 0;\n  iVar1 = FUN_0001e29c(0);\n  while( true ) {\n    if (iVar1 != 0) {\n      FUN_0004ffe8(uVar2 & 0xff,param_1);\n    }\n    uVar2 = uVar2 + 1;\n    if (uVar2 == 4) break;\n    iVar1 = FUN_0001e29c(uVar2);\n  }\n  return;\n}\n\n",
    "FUN_0001ea18": "\nvoid FUN_0001ea18(uint param_1,undefined4 param_2,int param_3,undefined param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  \n  uVar2 = 0;\n  do {\n    uVar3 = uVar2 & 0xff;\n    iVar1 = FUN_0001e29c(uVar2);\n    if ((iVar1 != 0) && (param_1 == 0xff || param_1 == uVar3)) {\n      if (param_3 == 0) {\n        FUN_00050874(uVar3,param_2,param_4);\n      }\n      else {\n        FUN_000508a0(uVar3,param_4);\n      }\n    }\n    uVar2 = uVar2 + 1;\n  } while (uVar2 != 4);\n  return;\n}\n\n",
    "FUN_0001ead4": "\nvoid FUN_0001ead4(undefined4 param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  \n  uVar2 = 0;\n  do {\n    while( true ) {\n      uVar3 = uVar2 + 1;\n      iVar1 = FUN_0001e29c(uVar2);\n      if (iVar1 == 0) break;\n      FUN_0005021c(uVar2 & 0xff,param_1);\n      uVar2 = uVar3;\n      if (uVar3 == 4) {\n        return;\n      }\n    }\n    uVar2 = uVar3;\n  } while (uVar3 != 4);\n  return;\n}\n\n",
    "FUN_0001eb1c": "\nvoid FUN_0001eb1c(undefined4 param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  \n  uVar2 = 0;\n  do {\n    while( true ) {\n      uVar3 = uVar2 + 1;\n      iVar1 = FUN_0001e29c(uVar2);\n      if (iVar1 == 0) break;\n      FUN_000508e4(uVar2 & 0xff,1,(undefined)DAT_0007eb58,param_1);\n      uVar2 = uVar3;\n      if (uVar3 == 4) {\n        return;\n      }\n    }\n    uVar2 = uVar3;\n  } while (uVar3 != 4);\n  return;\n}\n\n",
    "FUN_0001eb74": "\nvoid FUN_0001eb74(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  uint uVar6;\n  uint uVar7;\n  undefined4 local_820;\n  undefined4 uStack_81c;\n  undefined4 uStack_818;\n  undefined4 uStack_814;\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined2 uStack_808;\n  undefined local_806;\n  \n  iVar1 = FUN_0001e0e0();\n  if (iVar1 < 10) {\n    if (4 < DAT_0007eb9c) {\n      local_820._0_1_ = 'n';\n      local_820._1_1_ = 'o';\n      local_820._2_1_ = ' ';\n      local_820._3_1_ = 'n';\n      uStack_81c._0_1_ = 'e';\n      uStack_81c._1_1_ = 'e';\n      uStack_81c._2_1_ = 'd';\n      uStack_81c._3_1_ = ' ';\n      uStack_818._0_1_ = 't';\n      uStack_818._1_1_ = 'o';\n      uStack_818._2_1_ = ' ';\n      uStack_818._3_1_ = 's';\n      uStack_814._0_1_ = 'e';\n      uStack_814._1_1_ = 't';\n      uStack_814._2_1_ = ' ';\n      uStack_814._3_1_ = 'u';\n      local_810._0_1_ = 'a';\n      local_810._1_1_ = 'r';\n      local_810._2_1_ = 't';\n      local_810._3_1_ = ' ';\n      uStack_80c._0_1_ = 'r';\n      uStack_80c._1_1_ = 'e';\n      uStack_80c._2_1_ = 'l';\n      uStack_80c._3_1_ = 'a';\n      uStack_808 = 0xa79;\n      local_806 = 0;\n      FUN_0002e584(4,&local_820,0);\n      return;\n    }\n  }\n  else {\n    iVar1 = FUN_0001e0e0();\n    iVar1 = iVar1 + -3;\n    if (-1 < iVar1) {\n      do {\n        iVar2 = FUN_0001e100();\n        uVar6 = 0;\n        iVar3 = FUN_0001e160();\n        do {\n          uVar7 = uVar6 & 0xff;\n          iVar4 = FUN_0001e29c(uVar6);\n          uVar6 = uVar6 + 1;\n          if (iVar4 != 0) {\n            iVar4 = FUN_0001e0e0();\n            iVar5 = FUN_0001e100();\n            FUN_0005129c(uVar7,iVar3 * (iVar1 * iVar2 + iVar2 + -1),iVar5 * (iVar4 - iVar1) + 0xe,1,\n                         1);\n          }\n        } while (uVar6 != 4);\n        iVar1 = iVar1 + -3;\n      } while (-1 < iVar1);\n      return;\n    }\n  }\n  return;\n}\n\n",
    "FUN_0001ec84": "\nvoid FUN_0001ec84(uint param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined4 extraout_r1;\n  undefined4 uVar1;\n  uint uVar2;\n  undefined8 uVar3;\n  \n  uVar2 = 0;\n  uVar1 = param_2;\n  do {\n    uVar3 = FUN_0001e29c(uVar2,uVar1);\n    uVar1 = (int)((ulonglong)uVar3 >> 0x20);\n    if (((int)uVar3 != 0) && (uVar1 = param_2, param_1 == uVar2 || param_1 == 0xff)) {\n      FUN_0004fef0(uVar2 & 0xff,param_2,param_3,param_4);\n      uVar1 = extraout_r1;\n    }\n    uVar2 = uVar2 + 1;\n  } while (uVar2 != 4);\n  return;\n}\n\n",
    "FUN_0001ecdc": "\nvoid FUN_0001ecdc(uint param_1,uint param_2,undefined4 param_3,int param_4,undefined param_5,\n                 undefined param_6)\n\n{\n  if (param_4 != 0) {\n    FUN_0004fa10(param_6,0,param_5,0x1c);\n    return;\n  }\n  FUN_0004fa10(param_6,0,param_5,0x1c,\n               (param_2 & 0xff) << 8 | (param_1 >> 1 & 0x7f) << 0x11 | 0x1000000);\n  return;\n}\n\n",
    "FUN_0001ed08": "\nvoid FUN_0001ed08(void)\n\n{\n  undefined uVar1;\n  int iVar2;\n  uint uVar3;\n  char acStack_810 [2052];\n  \n  if ((DAT_00482a5d != '\\0') &&\n     (((DAT_00590404 != '\\0' || (DAT_00482a5c != '\\0')) || (6 < DAT_0007eba0)))) {\n    snprintf(acStack_810,0x800,\"--- %s\\n\",\"dhash_chip_set_addr_all\");\n    FUN_0002e584(7,acStack_810,0);\n  }\n  uVar3 = 0;\n  do {\n    iVar2 = FUN_0001e29c(uVar3);\n    if (iVar2 != 0) {\n      thunk_FUN_0004fe70(uVar3 & 0xff);\n      FUN_000304d4(0x1e);\n      uVar1 = FUN_0001e160();\n      FUN_0004ff50(uVar3 & 0xff,uVar1);\n    }\n    uVar3 = uVar3 + 1;\n  } while (uVar3 != 4);\n  FUN_000304d4(10);\n  return;\n}\n\n",
    "FUN_0001edf0": "\nvoid FUN_0001edf0(uint param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  uint *puVar1;\n  uint *puVar2;\n  uint *puVar3;\n  int iVar4;\n  uint auStack_54 [5];\n  uint auStack_40 [8];\n  uint local_10;\n  undefined4 local_c;\n  undefined4 local_8;\n  undefined4 uStack_4;\n  \n  local_10 = param_1;\n  local_c = param_2;\n  local_8 = param_3;\n  uStack_4 = param_4;\n  memset(auStack_54 + 2,0,0x2c);\n  iVar4 = 2;\n  auStack_54[0] =\n       local_10 << 0x18 | (local_10 >> 8 & 0xff) << 0x10 | (local_10 >> 0x10 & 0xff) << 8 |\n       local_10 >> 0x18;\n  auStack_54[1] = local_c;\n  puVar1 = &local_10;\n  do {\n    auStack_54[iVar4] =\n         (uint)*(byte *)((int)puVar1 + 9) << 0x10 | (uint)*(byte *)(puVar1 + 2) << 0x18 |\n         (uint)*(byte *)((int)puVar1 + 0xb) | (uint)*(byte *)((int)puVar1 + 10) << 8;\n    iVar4 = iVar4 + 1;\n    puVar1 = puVar1 + 1;\n  } while (iVar4 != 5);\n  puVar1 = auStack_40;\n  puVar2 = &local_10;\n  do {\n    puVar3 = puVar2 + 1;\n    *puVar1 = (uint)*(byte *)((int)puVar2 + 0x15) << 0x10 | (uint)*(byte *)(puVar2 + 5) << 0x18 |\n              (uint)*(byte *)((int)puVar2 + 0x17) | (uint)*(byte *)((int)puVar2 + 0x16) << 8;\n    puVar1 = puVar1 + 1;\n    puVar2 = puVar3;\n  } while (puVar3 != (uint *)&stack0x00000010);\n  FUN_0004587c(auStack_54,0x34);\n  return;\n}\n\n",
    "FUN_0001eeb8": "\nvoid FUN_0001eeb8(uint param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  uint *puVar1;\n  uint *puVar2;\n  uint *puVar3;\n  uint *puVar4;\n  uint *puVar5;\n  int iVar6;\n  uint auStack_bc [5];\n  uint auStack_a8 [33];\n  uint local_10;\n  undefined4 local_c;\n  undefined4 local_8;\n  undefined4 uStack_4;\n  \n  puVar3 = &local_10;\n  local_10 = param_1;\n  local_c = param_2;\n  local_8 = param_3;\n  uStack_4 = param_4;\n  memset(auStack_bc + 2,0,0x8c);\n  iVar6 = 2;\n  auStack_bc[0] =\n       local_10 << 0x18 | (local_10 >> 8 & 0xff) << 0x10 | (local_10 >> 0x10 & 0xff) << 8 |\n       local_10 >> 0x18;\n  auStack_bc[1] = local_c;\n  puVar1 = puVar3;\n  do {\n    auStack_bc[iVar6] =\n         (uint)*(byte *)((int)puVar1 + 9) << 0x10 | (uint)*(byte *)(puVar1 + 2) << 0x18 |\n         (uint)*(byte *)((int)puVar1 + 0xb) | (uint)*(byte *)((int)puVar1 + 10) << 8;\n    iVar6 = iVar6 + 1;\n    puVar1 = puVar1 + 1;\n  } while (iVar6 != 5);\n  puVar1 = auStack_a8;\n  do {\n    puVar5 = puVar3 + 8;\n    puVar2 = puVar1;\n    puVar4 = puVar3;\n    do {\n      puVar3 = puVar4 + 1;\n      *puVar2 = (uint)*(byte *)((int)puVar4 + 0x15) << 0x10 | (uint)*(byte *)(puVar4 + 5) << 0x18 |\n                (uint)*(byte *)((int)puVar4 + 0x17) | (uint)*(byte *)((int)puVar4 + 0x16) << 8;\n      puVar2 = puVar2 + 1;\n      puVar4 = puVar3;\n    } while (puVar3 != puVar5);\n    puVar1 = puVar1 + 8;\n  } while (puVar3 != (uint *)&stack0x00000070);\n  FUN_0004587c(auStack_bc,0x94);\n  return;\n}\n\n",
    "FUN_0001ef94": "\nvoid FUN_0001ef94(undefined4 param_1,undefined4 param_2)\n\n{\n  int iVar1;\n  uint uVar2;\n  \n  uVar2 = 0;\n  iVar1 = FUN_0001e29c(0);\n  while( true ) {\n    if (iVar1 != 0) {\n      FUN_0005161c(uVar2 & 0xff,param_2,0);\n    }\n    uVar2 = uVar2 + 1;\n    if (uVar2 == 4) break;\n    iVar1 = FUN_0001e29c(uVar2);\n  }\n  return;\n}\n\n",
    "FUN_0001efe0": "\nvoid FUN_0001efe0(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  \n  uVar2 = 0;\n  iVar1 = FUN_0001e29c(0);\n  while( true ) {\n    if (iVar1 != 0) {\n      FUN_00051694(uVar2 & 0xff,param_2,param_3,param_4);\n    }\n    uVar2 = uVar2 + 1;\n    if (uVar2 == 4) break;\n    iVar1 = FUN_0001e29c(uVar2);\n  }\n  return;\n}\n\n",
    "FUN_0001f038": "\nvoid FUN_0001f038(uint param_1,undefined4 param_2)\n\n{\n  undefined4 extraout_r1;\n  uint uVar1;\n  undefined8 uVar2;\n  \n  uVar1 = 0;\n  do {\n    uVar2 = FUN_0001e29c(uVar1,param_2);\n    param_2 = (undefined4)((ulonglong)uVar2 >> 0x20);\n    if ((int)uVar2 != 0) {\n      param_2 = 1;\n      if (param_1 == uVar1 || param_1 == 0xff) {\n        FUN_00051708(uVar1 & 0xff);\n        param_2 = extraout_r1;\n      }\n    }\n    uVar1 = uVar1 + 1;\n  } while (uVar1 != 4);\n  return;\n}\n\n",
    "FUN_0001f080": "\nint FUN_0001f080(uint param_1,uint param_2)\n\n{\n  byte local_8;\n  byte local_7;\n  \n  local_8 = (byte)param_1;\n  local_7 = (byte)(param_1 >> 8);\n  return (int)(((25.0 / (float)(longlong)(int)(param_1 >> 0x10 & 0xff)) *\n               (float)(longlong)(int)(param_2 & 0xffff)) /\n              (float)(longlong)\n                     (int)((param_2 >> 0x10 & 0xff) *\n                          (int)(short)(ushort)local_8 * (int)(short)(ushort)local_7));\n}\n\n",
    "FUN_0001f0e0": "\nvoid FUN_0001f0e0(uint param_1,int param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  \n  uVar2 = 0;\n  do {\n    iVar1 = FUN_0001e29c(uVar2);\n    if ((iVar1 != 0) && (param_1 == 0xff || uVar2 == param_1)) {\n      if (param_2 == 0) {\n        FUN_000506f8(uVar2 & 0xff,param_3,param_4,0);\n      }\n      else {\n        FUN_00050794(uVar2 & 0xff,param_4,0);\n      }\n    }\n    uVar2 = uVar2 + 1;\n  } while (uVar2 != 4);\n  return;\n}\n\n",
    "FUN_0001f164": "\nvoid FUN_0001f164(uint param_1,int param_2,undefined4 param_3,undefined4 param_4,undefined4 param_5,\n                 undefined4 param_6)\n\n{\n  int iVar1;\n  uint uVar2;\n  \n  uVar2 = 0;\n  do {\n    iVar1 = FUN_0001e29c(uVar2);\n    if ((iVar1 != 0) && (param_1 == 0xff || uVar2 == param_1)) {\n      if (param_2 == 0) {\n        FUN_000505a4(uVar2 & 0xff,param_3,param_4,param_5,(undefined2)param_6);\n      }\n      else {\n        FUN_00050560(uVar2 & 0xff,param_4,param_5,param_6);\n      }\n    }\n    uVar2 = uVar2 + 1;\n  } while (uVar2 != 4);\n  return;\n}\n\n",
    "FUN_0001f1ec": "\nvoid FUN_0001f1ec(undefined4 param_1,int param_2)\n\n{\n  int iVar1;\n  uint uVar2;\n  \n  uVar2 = 0;\n  iVar1 = FUN_0001e29c(0);\n  while( true ) {\n    if (iVar1 != 0) {\n      FUN_000508dc(uVar2 & 0xff);\n      if (param_2 == 0) {\n        FUN_00050f28(uVar2 & 0xff);\n      }\n      else {\n        FUN_00050ed0();\n      }\n    }\n    uVar2 = uVar2 + 1;\n    if (uVar2 == 4) break;\n    iVar1 = FUN_0001e29c(uVar2);\n  }\n  return;\n}\n\n",
    "FUN_0001f24c": "\nvoid FUN_0001f24c(undefined4 param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  \n  uVar2 = 0;\n  iVar1 = FUN_0001e29c(0);\n  while( true ) {\n    if (iVar1 != 0) {\n      FUN_00050d54(uVar2 & 0xff,param_1);\n    }\n    uVar2 = uVar2 + 1;\n    if (uVar2 == 4) break;\n    iVar1 = FUN_0001e29c(uVar2);\n  }\n  return;\n}\n\n",
    "FUN_0001f340": "\nvoid FUN_0001f340(int param_1)\n\n{\n  undefined4 uVar1;\n  char acStack_808 [2048];\n  \n  if (param_1 == 0) {\n    if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (2 < DAT_0007eba0)) {\n      snprintf(acStack_808,0x800,\"%s: input bad json param\\n\",\"api_miner_inited\");\n      FUN_0002e584(3,acStack_808,0);\n      return;\n    }\n  }\n  else {\n    uVar1 = FUN_00031d38();\n    uVar1 = FUN_0004e990(uVar1,0);\n    FUN_0004efd4(param_1,\"inited\",uVar1);\n  }\n  return;\n}\n\n",
    "FUN_0001f3e8": "\nvoid FUN_0001f3e8(int param_1)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  char acStack_808 [2048];\n  \n  if (param_1 == 0) {\n    if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (2 < DAT_0007eba0)) {\n      snprintf(acStack_808,0x800,\"%s: input bad json param\\n\",\"api_miner_chain_num\");\n      FUN_0002e584(3,acStack_808,0);\n      return;\n    }\n  }\n  else {\n    iVar1 = FUN_0001e28c();\n    uVar2 = FUN_0004e990(iVar1,iVar1 >> 0x1f);\n    FUN_0004efd4(param_1,\"chain_num\",uVar2);\n  }\n  return;\n}\n\n",
    "FUN_0001f490": "\nvoid FUN_0001f490(int param_1)\n\n{\n  undefined4 uVar1;\n  undefined4 local_818;\n  undefined4 local_814;\n  undefined4 local_810;\n  undefined4 local_80c;\n  char acStack_808 [2048];\n  \n  local_818 = 0;\n  local_814 = 0;\n  local_810 = 0;\n  local_80c = 0;\n  if (param_1 == 0) {\n    if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (2 < DAT_0007eba0)) {\n      snprintf(acStack_808,0x800,\"%s: input bad json param\\n\",\"api_miner_rate_5s\");\n      FUN_0002e584(3,acStack_808,0);\n    }\n    return;\n  }\n  FUN_0001e2c8();\n  snprintf((char *)&local_818,0x10,\"%.2f\");\n  uVar1 = FUN_0004e744(&local_818);\n  FUN_0004efd4(param_1,\"rate_5s\",uVar1);\n  return;\n}\n\n",
    "FUN_0001f574": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_0001f574(int param_1)\n\n{\n  undefined4 uVar1;\n  undefined4 local_818;\n  undefined4 local_814;\n  undefined4 local_810;\n  undefined4 local_80c;\n  char acStack_808 [2048];\n  \n  local_818 = 0;\n  local_814 = 0;\n  local_810 = 0;\n  local_80c = 0;\n  if (param_1 == 0) {\n    if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (2 < DAT_0007eba0)) {\n      snprintf(acStack_808,0x800,\"%s: input bad json param\\n\",\"api_miner_rate_30m\");\n      FUN_0002e584(3,acStack_808,0);\n      return;\n    }\n  }\n  else {\n    FUN_0001e2ec();\n    snprintf((char *)&local_818,0x10,\"%.2lf\");\n    uVar1 = FUN_0004e744(&local_818);\n    FUN_0004efd4(param_1,\"rate_30m\",uVar1);\n  }\n  return;\n}\n\n",
    "FUN_0001f6ac": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_0001f6ac(int param_1)\n\n{\n  undefined4 uVar1;\n  undefined4 local_818;\n  undefined4 local_814;\n  undefined4 local_810;\n  undefined4 local_80c;\n  char acStack_808 [2048];\n  \n  local_818 = 0;\n  local_814 = 0;\n  local_810 = 0;\n  local_80c = 0;\n  if (param_1 == 0) {\n    if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (2 < DAT_0007eba0)) {\n      snprintf(acStack_808,0x800,\"%s: input bad json param\\n\",\"api_miner_rate_avg\");\n      FUN_0002e584(3,acStack_808,0);\n    }\n    return;\n  }\n  snprintf((char *)&local_818,0x10,\"%.2lf\",DAT_0058e344,\n           _DAT_00080f50 / ((double)(longlong)DAT_005903f8 - (double)(longlong)DAT_0058e344));\n  uVar1 = FUN_0004e744(&local_818);\n  FUN_0004efd4(param_1,\"rate_avg\",uVar1);\n  return;\n}\n\n",
    "FUN_0001f7c4": "\nvoid FUN_0001f7c4(int param_1)\n\n{\n  undefined4 uVar1;\n  undefined4 local_818;\n  undefined4 local_814;\n  undefined4 local_810;\n  undefined4 local_80c;\n  char acStack_808 [2048];\n  \n  local_818 = 0;\n  local_814 = 0;\n  local_810 = 0;\n  local_80c = 0;\n  if (param_1 == 0) {\n    if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (2 < DAT_0007eba0)) {\n      snprintf(acStack_808,0x800,\"%s: input bad json param\\n\",\"api_miner_rate_ideal\");\n      FUN_0002e584(3,acStack_808,0);\n    }\n    return;\n  }\n  FUN_0001a18c();\n  snprintf((char *)&local_818,0x10,\"%.2lf\");\n  uVar1 = FUN_0004e744(&local_818);\n  FUN_0004efd4(param_1,\"rate_ideal\",uVar1);\n  return;\n}\n\n",
    "FUN_0001f8b0": "\nvoid FUN_0001f8b0(int param_1)\n\n{\n  undefined4 uVar1;\n  undefined4 local_80c;\n  char acStack_808 [2048];\n  \n  local_80c = 0;\n  if (param_1 == 0) {\n    if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (2 < DAT_0007eba0)) {\n      snprintf(acStack_808,0x800,\"%s: input bad json param\\n\",\"api_miner_rate_unit\");\n      FUN_0002e584(3,acStack_808,0);\n    }\n    return;\n  }\n  local_80c = 0x4847;\n  uVar1 = FUN_0004e744(&local_80c);\n  FUN_0004efd4(param_1,\"rate_unit\",uVar1);\n  return;\n}\n\n",
    "FUN_0001f984": "\nvoid FUN_0001f984(int param_1)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  char acStack_808 [2048];\n  \n  if (param_1 == 0) {\n    if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (2 < DAT_0007eba0)) {\n      snprintf(acStack_808,0x800,\"%s: input bad json param\\n\",\"api_miner_fan_num\");\n      FUN_0002e584(3,acStack_808,0);\n      return;\n    }\n  }\n  else {\n    iVar1 = FUN_0001e30c();\n    uVar2 = FUN_0004e990(iVar1,iVar1 >> 0x1f);\n    FUN_0004efd4(param_1,\"fan_num\",uVar2);\n  }\n  return;\n}\n\n",
    "FUN_0001fa2c": "\nvoid FUN_0001fa2c(int param_1)\n\n{\n  undefined4 uVar1;\n  int iVar2;\n  int iVar3;\n  undefined4 uVar4;\n  int iVar5;\n  char acStack_818 [2052];\n  \n  if (param_1 == 0) {\n    if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (2 < DAT_0007eba0)) {\n      snprintf(acStack_818,0x800,\"%s: input bad json param\\n\",\"api_miner_fan_speed\");\n      FUN_0002e584(3,acStack_818,0);\n      return;\n    }\n  }\n  else {\n    uVar1 = FUN_0004e540();\n    iVar2 = FUN_0001e2fc();\n    if (0 < iVar2) {\n      iVar3 = 0;\n      do {\n        iVar5 = iVar3 + 1;\n        iVar3 = FUN_0001e43c(iVar3);\n        uVar4 = FUN_0004e990(iVar3,iVar3 >> 0x1f);\n        FUN_0004f494(uVar1,uVar4);\n        iVar3 = iVar5;\n      } while (iVar2 != iVar5);\n    }\n    FUN_0004efd4(param_1,&DAT_00061b1c,uVar1);\n  }\n  return;\n}\n\n",
    "FUN_0001fb14": "\nvoid FUN_0001fb14(int param_1,uint param_2)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  char acStack_808 [2048];\n  \n  if (param_1 != 0 && param_2 < 4) {\n    iVar1 = FUN_0001a2e0(param_2);\n    uVar2 = FUN_0004e990(iVar1,iVar1 >> 0x1f);\n    FUN_0004efd4(param_1,\"freq_avg\",uVar2);\n    return;\n  }\n  if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (2 < DAT_0007eba0)) {\n    snprintf(acStack_808,0x800,\"%s: input bad param\\n\",\"api_miner_chain_frequency\");\n    FUN_0002e584(3,acStack_808,0);\n  }\n  return;\n}\n\n",
    "FUN_0001fbd8": "\nvoid FUN_0001fbd8(int param_1,uint param_2)\n\n{\n  undefined4 uVar1;\n  undefined4 local_818;\n  undefined4 local_814;\n  undefined4 local_810;\n  undefined4 local_80c;\n  char acStack_808 [2048];\n  \n  local_818 = 0;\n  local_814 = 0;\n  local_810 = 0;\n  local_80c = 0;\n  if (param_1 != 0 && param_2 < 4) {\n    uVar1 = FUN_00019de4(param_2);\n    snprintf((char *)&local_818,0x10,\"%d\",uVar1);\n    uVar1 = FUN_0004e744(&local_818);\n    FUN_0004efd4(param_1,\"rate_ideal\",uVar1);\n    return;\n  }\n  if (((DAT_00590404 == '\\0') && (DAT_00482a5c == '\\0')) && (DAT_0007eba0 < 3)) {\n    return;\n  }\n  snprintf(acStack_808,0x800,\"%s: input bad param\\n\",\"api_miner_chain_rate_ideal\");\n  FUN_0002e584(3,acStack_808,0);\n  return;\n}\n\n",
    "FUN_0001fcd0": "\nvoid FUN_0001fcd0(int param_1,uint param_2)\n\n{\n  undefined4 uVar1;\n  undefined4 local_818;\n  undefined4 local_814;\n  undefined4 local_810;\n  undefined4 local_80c;\n  char acStack_808 [2048];\n  \n  local_818 = 0;\n  local_814 = 0;\n  local_810 = 0;\n  local_80c = 0;\n  if (param_1 != 0 && param_2 < 4) {\n    FUN_0001e52c(param_2);\n    snprintf((char *)&local_818,0x10,\"%.2f\");\n    uVar1 = FUN_0004e744(&local_818);\n    FUN_0004efd4(param_1,\"rate_real\",uVar1);\n    return;\n  }\n  if (((DAT_00590404 == '\\0') && (DAT_00482a5c == '\\0')) && (DAT_0007eba0 < 3)) {\n    return;\n  }\n  snprintf(acStack_808,0x800,\"%s: input bad param\\n\",\"api_miner_chain_rate_real\");\n  FUN_0002e584(3,acStack_808,0);\n  return;\n}\n\n",
    "FUN_0001fdd8": "\nvoid FUN_0001fdd8(int param_1,uint param_2)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  char acStack_808 [2048];\n  \n  if (param_1 != 0 && param_2 < 4) {\n    iVar1 = FUN_0001e67c(param_2);\n    uVar2 = FUN_0004e990(iVar1,iVar1 >> 0x1f);\n    FUN_0004efd4(param_1,\"asic_num\",uVar2);\n    return;\n  }\n  if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (2 < DAT_0007eba0)) {\n    snprintf(acStack_808,0x800,\"%s: input bad param\\n\",\"api_miner_chain_asic_num\");\n    FUN_0002e584(3,acStack_808,0);\n  }\n  return;\n}\n\n",
    "FUN_0001fe9c": "\nvoid FUN_0001fe9c(int param_1,uint param_2)\n\n{\n  undefined4 uVar1;\n  undefined auStack_a10 [512];\n  char acStack_810 [2052];\n  \n  memset(auStack_a10,0,0x200);\n  if (param_1 != 0 && param_2 < 4) {\n    FUN_0001e894(param_2,auStack_a10);\n    uVar1 = FUN_0004e744(auStack_a10);\n    FUN_0004efd4(param_1,&DAT_00061c3c,uVar1);\n    return;\n  }\n  if (((DAT_00590404 == '\\0') && (DAT_00482a5c == '\\0')) && (DAT_0007eba0 < 3)) {\n    return;\n  }\n  snprintf(acStack_810,0x800,\"%s: input bad param\\n\",\"api_miner_chain_asic_status\");\n  FUN_0002e584(3,acStack_810,0);\n  return;\n}\n\n",
    "FUN_0001ff90": "\nvoid FUN_0001ff90(int param_1,uint param_2)\n\n{\n  short sVar1;\n  undefined4 uVar2;\n  char *pcVar3;\n  int iVar4;\n  uint uVar5;\n  undefined4 uVar6;\n  uint uVar7;\n  uint uVar8;\n  char acStack_818 [2048];\n  \n  if (param_1 == 0 || 3 < param_2) {\n    if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (2 < DAT_0007eba0)) {\n      snprintf(acStack_818,0x800,\"%s: input bad param\\n\",\"api_miner_chain_temp_pic\");\n      FUN_0002e584(3,acStack_818,0);\n    }\n    return;\n  }\n  uVar2 = FUN_0004e540();\n  pcVar3 = (char *)FUN_0001e0c0();\n  iVar4 = strcmp(pcVar3,\"BHB28601\");\n  if (iVar4 != 0) {\n    pcVar3 = (char *)FUN_0001e0c0();\n    iVar4 = strcmp(pcVar3,\"BHB28501\");\n    if (iVar4 != 0) {\n      uVar5 = FUN_0001e19c();\n      goto LAB_00020068;\n    }\n  }\n  uVar5 = FUN_00014434();\nLAB_00020068:\n  if (0 < (int)uVar5) {\n    uVar8 = 0;\n    do {\n      uVar7 = uVar8 & 0xff;\n      uVar8 = uVar8 + 1;\n      sVar1 = FUN_000152f0(param_2,uVar7);\n      uVar6 = FUN_0004e990((int)sVar1,(int)sVar1 >> 0x1f);\n      FUN_0004f494(uVar2,uVar6);\n    } while (uVar5 != uVar8);\n  }\n  FUN_0004efd4(param_1,\"temp_pic\",uVar2);\n  return;\n}\n\n",
    "FUN_000200d0": "\nvoid FUN_000200d0(int param_1,uint param_2)\n\n{\n  short sVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  int iVar4;\n  uint uVar5;\n  uint uVar6;\n  char acStack_818 [2052];\n  \n  if (param_1 == 0 || 3 < param_2) {\n    if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (2 < DAT_0007eba0)) {\n      snprintf(acStack_818,0x800,\"%s: input bad param\\n\",\"api_miner_chain_temp_chip\");\n      FUN_0002e584(3,acStack_818,0);\n    }\n    return;\n  }\n  uVar2 = FUN_0004e540();\n  uVar6 = 0;\n  if ((DAT_00080fb4 == 1) || (uVar5 = 0, DAT_00482a8c < 1)) {\n    while( true ) {\n      iVar4 = FUN_0001e19c();\n      if (iVar4 <= (int)uVar6) break;\n      sVar1 = FUN_000152f0(param_2,uVar6 & 0xff);\n      uVar6 = uVar6 + 1;\n      uVar3 = FUN_0004e990((int)sVar1,(int)sVar1 >> 0x1f);\n      FUN_0004f494(uVar2,uVar3);\n    }\n  }\n  else {\n    while( true ) {\n      iVar4 = FUN_00014434();\n      if (iVar4 <= (int)uVar5) break;\n      sVar1 = FUN_000153a0(param_2,uVar5 & 0xff);\n      uVar3 = FUN_0004e990((int)sVar1,(int)sVar1 >> 0x1f);\n      FUN_0004f494(uVar2,uVar3);\n      uVar5 = uVar5 + 1;\n    }\n  }\n  FUN_0004efd4(param_1,\"temp_chip\",uVar2);\n  return;\n}\n\n",
    "FUN_00020234": "\nvoid FUN_00020234(int param_1,uint param_2)\n\n{\n  short sVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  int iVar4;\n  uint uVar5;\n  uint uVar6;\n  char acStack_818 [2052];\n  \n  if (param_1 == 0 || 3 < param_2) {\n    if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (2 < DAT_0007eba0)) {\n      snprintf(acStack_818,0x800,\"%s: input bad param\\n\",\"api_miner_chain_temp_pcb\");\n      FUN_0002e584(3,acStack_818,0);\n    }\n    return;\n  }\n  uVar2 = FUN_0004e540();\n  uVar6 = 0;\n  if ((DAT_00080fb4 == 1) || (uVar5 = 0, DAT_00482a8c < 1)) {\n    while( true ) {\n      iVar4 = FUN_0001e19c();\n      if (iVar4 <= (int)uVar6) break;\n      sVar1 = FUN_000152f0(param_2,uVar6 & 0xff);\n      uVar6 = uVar6 + 1;\n      uVar3 = FUN_0004e990((int)sVar1,(int)sVar1 >> 0x1f);\n      FUN_0004f494(uVar2,uVar3);\n    }\n  }\n  else {\n    while( true ) {\n      iVar4 = FUN_00014434();\n      if (iVar4 <= (int)uVar5) break;\n      sVar1 = FUN_00015354(param_2,uVar5 & 0xff);\n      uVar3 = FUN_0004e990((int)sVar1,(int)sVar1 >> 0x1f);\n      FUN_0004f494(uVar2,uVar3);\n      uVar5 = uVar5 + 1;\n    }\n  }\n  FUN_0004efd4(param_1,\"temp_pcb\",uVar2);\n  return;\n}\n\n",
    "FUN_00020398": "\nvoid FUN_00020398(int param_1,uint param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  uint uVar5;\n  undefined4 *puVar6;\n  uint uVar7;\n  uint uVar8;\n  char acStack_820 [2048];\n  \n  if (param_1 != 0 && param_2 < 4) {\n    uVar3 = FUN_0004e540();\n    if (DAT_0007f8f0 < 0x18) {\n      if (DAT_0007f8f0 != 0) {\n        uVar7 = 0;\n        puVar6 = (undefined4 *)(&DAT_0058e040 + param_2 * 0xc0);\n        do {\n          uVar7 = uVar7 + 1;\n          FUN_0006015c(*puVar6,puVar6[1]);\n          uVar4 = FUN_0004e990();\n          FUN_0004f494(uVar3,uVar4);\n          puVar6 = puVar6 + 2;\n        } while (uVar7 < DAT_0007f8f0);\n      }\n    }\n    else {\n      uVar8 = DAT_0007f8f0 % 0x18;\n      uVar7 = uVar8 + 0x18;\n      do {\n        iVar2 = uVar8 * -0x55555555;\n        uVar5 = uVar8 % 0x18;\n        uVar8 = uVar8 + 1;\n        iVar1 = (param_2 * 0x18 + uVar5) * 8;\n        FUN_0006015c(*(undefined4 *)(&DAT_0058e040 + iVar1),*(undefined4 *)(&DAT_0058e044 + iVar1),\n                     iVar2);\n        uVar4 = FUN_0004e990();\n        FUN_0004f494(uVar3,uVar4);\n      } while (uVar7 != uVar8);\n    }\n    FUN_0004efd4(param_1,\"rate_array\",uVar3);\n    return;\n  }\n  if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (2 < DAT_0007eba0)) {\n    snprintf(acStack_820,0x800,\"%s: input bad param\\n\",\"api_miner_chain_rate_array\");\n    FUN_0002e584(3,acStack_820,0);\n  }\n  return;\n}\n\n",
    "FUN_00020528": "\nvoid FUN_00020528(int param_1,uint param_2)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  char acStack_808 [2048];\n  \n  if (param_1 != 0 && param_2 < 4) {\n    iVar1 = FUN_0001e7bc(param_2);\n    uVar2 = FUN_0004e990(iVar1,iVar1 >> 0x1f);\n    FUN_0004efd4(param_1,&DAT_000626e0,uVar2);\n    return;\n  }\n  if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (2 < DAT_0007eba0)) {\n    snprintf(acStack_808,0x800,\"%s: input bad param\\n\",\"api_miner_chain_hw\");\n    FUN_0002e584(3,acStack_808,0);\n  }\n  return;\n}\n\n",
    "FUN_000205ec": "\nvoid FUN_000205ec(int param_1,uint param_2)\n\n{\n  undefined4 uVar1;\n  char acStack_808 [2048];\n  \n  if (param_1 != 0 && param_2 < 4) {\n    uVar1 = FUN_0004e990(*(int *)(&DAT_00081118 + param_2 * 4),\n                         *(int *)(&DAT_00081118 + param_2 * 4) >> 0x1f);\n    FUN_0004efd4(param_1,\"nonce\",uVar1);\n    return;\n  }\n  if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (2 < DAT_0007eba0)) {\n    snprintf(acStack_808,0x800,\"%s: input bad param\\n\",\"api_miner_chain_nonce\");\n    FUN_0002e584(3,acStack_808,0);\n  }\n  return;\n}\n\n",
    "FUN_000206b4": "\nvoid FUN_000206b4(int param_1,uint param_2)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  char acStack_808 [2048];\n  \n  if (param_1 != 0 && param_2 < 4) {\n    iVar1 = FUN_00018b30(param_2);\n    if (iVar1 == 0) {\n      uVar2 = FUN_0004eb54();\n    }\n    else {\n      uVar2 = FUN_0004eb48();\n    }\n    FUN_0004efd4(param_1,\"eeprom\",uVar2);\n    return;\n  }\n  if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (2 < DAT_0007eba0)) {\n    snprintf(acStack_808,0x800,\"%s: input bad param\\n\",\"api_miner_chain_eeprom\");\n    FUN_0002e584(3,acStack_808,0);\n  }\n  return;\n}\n\n",
    "FUN_00020788": "\nvoid FUN_00020788(int param_1,uint param_2)\n\n{\n  undefined4 uVar1;\n  undefined auStack_830 [32];\n  char acStack_810 [2052];\n  \n  memset(auStack_830,0,0x20);\n  if (param_1 != 0 && param_2 < 4) {\n    FUN_00017fd8(param_2,auStack_830,0x20);\n    uVar1 = FUN_0004e744(auStack_830);\n    FUN_0004efd4(param_1,\"sn\",uVar1);\n    return;\n  }\n  if (((DAT_00590404 == '\\0') && (DAT_00482a5c == '\\0')) && (DAT_0007eba0 < 3)) {\n    return;\n  }\n  snprintf(acStack_810,0x800,\"%s: input bad param\\n\",\"api_miner_chain_sn\");\n  FUN_0002e584(3,acStack_810,0);\n  return;\n}\n\n",
    "FUN_00020880": "\nvoid FUN_00020880(undefined4 param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  FUN_00018654(param_2,2);\n  uVar1 = FUN_0004e990(0,0);\n  FUN_0004efd4(param_1,\"eeprom_vol\",uVar1);\n  return;\n}\n\n",
    "FUN_000208cc": "\nvoid FUN_000208cc(undefined4 param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  FUN_000183fc(param_2,2);\n  uVar1 = FUN_0004e990(0,0);\n  FUN_0004efd4(param_1,\"eeprom_freq\",uVar1);\n  return;\n}\n\n",
    "FUN_00020918": "\nvoid FUN_00020918(undefined4 param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  undefined4 local_14 [2];\n  \n  local_14[0] = 0;\n  FUN_000182fc(param_2,local_14);\n  uVar1 = FUN_0004e990(local_14[0],0);\n  FUN_0004efd4(param_1,\"eeprom_bin\",uVar1);\n  return;\n}\n\n",
    "FUN_00020964": "\nvoid FUN_00020964(undefined4 param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  undefined4 local_18;\n  undefined4 local_14;\n  undefined4 local_10;\n  undefined4 local_c;\n  \n  local_14 = 0;\n  local_18 = 0;\n  local_10 = 0;\n  local_c = 0;\n  FUN_00018360(param_2,&local_18,0x10);\n  uVar1 = FUN_0004e744(&local_18);\n  FUN_0004efd4(param_1,\"eeprom_ft\",uVar1);\n  return;\n}\n\n",
    "FUN_000209bc": "\nvoid FUN_000209bc(undefined4 param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  undefined4 local_14 [2];\n  \n  local_14[0] = 0;\n  FUN_00018258(param_2,local_14);\n  uVar1 = FUN_0004e990(local_14[0],0);\n  FUN_0004efd4(param_1,\"eeprom_code\",uVar1);\n  return;\n}\n\n",
    "FUN_00020a08": "\nvoid FUN_00020a08(byte param_1)\n\n{\n  DAT_0007f8f4._0_1_ = (byte)DAT_0007f8f4 & 0xfe | param_1 & 1;\n  return;\n}\n\n",
    "FUN_00020a20": "\nvoid FUN_00020a20(uint param_1)\n\n{\n  DAT_0007f8f4._0_1_ = (byte)DAT_0007f8f4 & 0xfd | (byte)((param_1 & 1) << 1);\n  return;\n}\n\n",
    "FUN_00020a38": "\nvoid FUN_00020a38(uint param_1)\n\n{\n  DAT_0007f8f4._0_1_ = (byte)DAT_0007f8f4 & 0xfb | (byte)((param_1 & 1) << 2);\n  return;\n}\n\n",
    "FUN_00020a50": "\nvoid FUN_00020a50(undefined4 param_1)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  char acStack_810 [2052];\n  \n  iVar1 = DAT_0007f8f4;\n  if (4 < DAT_0007eb9c) {\n    snprintf(acStack_810,0x800,\"error_code = %d\\n\",DAT_0007f8f4);\n    FUN_0002e584(4,acStack_810,0);\n  }\n  uVar2 = FUN_0004e990(iVar1,iVar1 >> 0x1f);\n  FUN_0004efd4(param_1,\"error_code\",uVar2);\n  return;\n}\n\n",
    "FUN_00020ad4": "\nvoid FUN_00020ad4(int param_1)\n\n{\n  undefined4 uVar1;\n  char acStack_808 [2048];\n  \n  if (param_1 == 0) {\n    if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (2 < DAT_0007eba0)) {\n      snprintf(acStack_808,0x800,\"%s: input bad json param\\n\",\"api_miner_version\");\n      FUN_0002e584(3,acStack_808,0);\n      return;\n    }\n  }\n  else {\n    uVar1 = FUN_0004e744(&DAT_00080fdc);\n    FUN_0004efd4(param_1,\"miner_version\",uVar1);\n  }\n  return;\n}\n\n",
    "FUN_00020b7c": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00020b7c(int param_1)\n\n{\n  undefined4 uVar1;\n  char acStack_808 [2048];\n  \n  if (param_1 == 0) {\n    if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (2 < DAT_0007eba0)) {\n      snprintf(acStack_808,0x800,\"%s: input bad json param\\n\",\"api_total_hash\");\n      FUN_0002e584(3,acStack_808,0);\n      return;\n    }\n  }\n  else {\n    uVar1 = FUN_0004ea14((int)_DAT_00080f50);\n    FUN_0004efd4(param_1,\"total_hash\",uVar1);\n  }\n  return;\n}\n\n",
    "FUN_00020c28": "\nvoid FUN_00020c28(int param_1)\n\n{\n  undefined4 uVar1;\n  char acStack_808 [2048];\n  \n  if (param_1 == 0) {\n    if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (2 < DAT_0007eba0)) {\n      snprintf(acStack_808,0x800,\"%s: input bad json param\\n\",\"api_miner_id\");\n      FUN_0002e584(3,acStack_808,0);\n      return;\n    }\n  }\n  else {\n    uVar1 = FUN_0004e744(&DAT_0099ede0);\n    FUN_0004efd4(param_1,\"miner_id\",uVar1);\n  }\n  return;\n}\n\n",
    "FUN_00020d44": "\nvoid FUN_00020d44(int param_1,uint *param_2)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  uint uVar13;\n  uint uVar14;\n  uint uVar15;\n  int iVar16;\n  uint uVar17;\n  uint uVar18;\n  uint uVar19;\n  uint uVar20;\n  uint uVar21;\n  uint uVar22;\n  uint uVar23;\n  uint uVar24;\n  uint uVar25;\n  uint uVar26;\n  uint uVar27;\n  uint uVar28;\n  uint uVar29;\n  uint uVar30;\n  uint uVar31;\n  uint uVar32;\n  uint uVar33;\n  uint uVar34;\n  uint uVar35;\n  uint uVar36;\n  uint uVar37;\n  uint uVar38;\n  uint uVar39;\n  uint uVar40;\n  uint uVar41;\n  uint uVar42;\n  uint uVar43;\n  uint uVar44;\n  uint uVar45;\n  uint uVar46;\n  uint uVar47;\n  uint uVar48;\n  uint uVar49;\n  uint uVar50;\n  uint uVar51;\n  uint uVar52;\n  uint uVar53;\n  uint uVar54;\n  uint uVar55;\n  uint uVar56;\n  uint uVar57;\n  uint uVar58;\n  uint uVar59;\n  uint uVar60;\n  uint uVar61;\n  uint uVar62;\n  uint uVar63;\n  uint uVar64;\n  \n  uVar35 = *(uint *)(param_1 + 8);\n  uVar39 = *(uint *)(param_1 + 0x18);\n  uVar2 = *(uint *)(param_1 + 0x20);\n  uVar44 = *(uint *)(param_1 + 0x1c);\n  uVar57 = *(uint *)(param_1 + 0xc);\n  uVar30 = *(uint *)(param_1 + 0x10);\n  uVar48 = *param_2;\n  uVar19 = param_2[1];\n  uVar24 = uVar48 << 0x18 | (uVar48 >> 8 & 0xff) << 0x10 | (uVar48 >> 0x10 & 0xff) << 8 |\n           uVar48 >> 0x18;\n  iVar16 = ((uVar39 >> 0xb | uVar39 << 0x15) ^ (uVar39 >> 6 | uVar39 << 0x1a) ^\n           (uVar39 >> 0x19 | uVar39 << 7)) + *(int *)(param_1 + 0x24) + 0x428a2f98 +\n           ((uVar44 ^ uVar2) & uVar39 ^ uVar2) + uVar24;\n  uVar31 = *(int *)(param_1 + 0x14) + iVar16;\n  uVar58 = ((uVar35 >> 0xd | uVar35 << 0x13) ^ (uVar35 >> 2 | uVar35 << 0x1e) ^\n           (uVar35 >> 0x16 | uVar35 << 10)) + ((uVar35 | uVar57) & uVar30 | uVar35 & uVar57) +\n           iVar16;\n  uVar48 = uVar19 << 0x18 | (uVar19 >> 8 & 0xff) << 0x10;\n  uVar49 = uVar48 | (uVar19 >> 0x10 & 0xff) << 8 | uVar19 >> 0x18;\n  iVar16 = ((uVar39 ^ uVar44) & uVar31 ^ uVar44) + uVar2 + 0x71374491 + uVar49 +\n           ((uVar31 >> 0xb | uVar31 * 0x200000) ^ (uVar31 >> 6 | uVar31 * 0x4000000) ^\n           (uVar31 >> 0x19 | uVar31 * 0x80));\n  uVar40 = param_2[3];\n  uVar1 = ((uVar58 >> 0xd | uVar58 * 0x80000) ^ (uVar58 >> 2 | uVar58 * 0x40000000) ^\n          (uVar58 >> 0x16 | uVar58 * 0x400)) + ((uVar35 | uVar58) & uVar57 | uVar35 & uVar58) +\n          iVar16;\n  uVar20 = param_2[4];\n  uVar25 = uVar30 + iVar16;\n  uVar52 = param_2[2];\n  uVar13 = uVar52 << 0x18 | (uVar52 >> 8 & 0xff) << 0x10;\n  uVar53 = uVar13 | (uVar52 >> 0x10 & 0xff) << 8 | uVar52 >> 0x18;\n  uVar36 = param_2[5];\n  iVar16 = ((uVar39 ^ uVar31) & uVar25 ^ uVar39) + uVar44 + 0xb5c0fbcf + uVar53 +\n           ((uVar25 >> 0xb | uVar25 * 0x200000) ^ (uVar25 >> 6 | uVar25 * 0x4000000) ^\n           (uVar25 >> 0x19 | uVar25 * 0x80));\n  uVar60 = param_2[6];\n  uVar15 = ((uVar1 >> 0xd | uVar1 * 0x80000) ^ (uVar1 >> 2 | uVar1 * 0x40000000) ^\n           (uVar1 >> 0x16 | uVar1 * 0x400)) + ((uVar58 | uVar1) & uVar35 | uVar58 & uVar1) + iVar16;\n  uVar21 = uVar57 + iVar16;\n  uVar12 = uVar40 << 0x18 | (uVar40 >> 8 & 0xff) << 0x10;\n  uVar41 = uVar12 | (uVar40 >> 0x10 & 0xff) << 8 | uVar40 >> 0x18;\n  uVar54 = param_2[7];\n  iVar16 = ((uVar31 ^ uVar25) & uVar21 ^ uVar31) + uVar39 + 0xe9b5dba5 + uVar41 +\n           ((uVar21 >> 0xb | uVar21 * 0x200000) ^ (uVar21 >> 6 | uVar21 * 0x4000000) ^\n           (uVar21 >> 0x19 | uVar21 * 0x80));\n  uVar17 = ((uVar15 >> 0xd | uVar15 * 0x80000) ^ (uVar15 >> 2 | uVar15 * 0x40000000) ^\n           (uVar15 >> 0x16 | uVar15 * 0x400)) + ((uVar1 | uVar15) & uVar58 | uVar1 & uVar15) +\n           iVar16;\n  uVar55 = uVar35 + iVar16;\n  uVar61 = param_2[8];\n  uVar14 = uVar20 << 0x18 | (uVar20 >> 8 & 0xff) << 0x10;\n  uVar50 = uVar14 | (uVar20 >> 0x10 & 0xff) << 8 | uVar20 >> 0x18;\n  uVar42 = param_2[9];\n  iVar16 = ((uVar25 ^ uVar21) & uVar55 ^ uVar25) + uVar50 + 0x3956c25b + uVar31 +\n           ((uVar55 >> 0xb | uVar55 * 0x200000) ^ (uVar55 >> 6 | uVar55 * 0x4000000) ^\n           (uVar55 >> 0x19 | uVar55 * 0x80));\n  uVar45 = param_2[10];\n  uVar58 = uVar58 + iVar16;\n  uVar3 = param_2[0xb];\n  uVar51 = ((uVar17 >> 0xd | uVar17 * 0x80000) ^ (uVar17 >> 2 | uVar17 * 0x40000000) ^\n           (uVar17 >> 0x16 | uVar17 * 0x400)) + ((uVar15 | uVar17) & uVar1 | uVar15 & uVar17) +\n           iVar16;\n  uVar31 = uVar36 << 0x18 | (uVar36 >> 8 & 0xff) << 0x10;\n  uVar46 = uVar31 | (uVar36 >> 0x10 & 0xff) << 8 | uVar36 >> 0x18;\n  iVar16 = ((uVar21 ^ uVar55) & uVar58 ^ uVar21) + uVar46 + 0x59f111f1 + uVar25 +\n           ((uVar58 >> 0xb | uVar58 * 0x200000) ^ (uVar58 >> 6 | uVar58 * 0x4000000) ^\n           (uVar58 >> 0x19 | uVar58 * 0x80));\n  uVar37 = param_2[0xc];\n  uVar1 = uVar1 + iVar16;\n  uVar32 = ((uVar51 >> 0xd | uVar51 * 0x80000) ^ (uVar51 >> 2 | uVar51 * 0x40000000) ^\n           (uVar51 >> 0x16 | uVar51 * 0x400)) + ((uVar17 | uVar51) & uVar15 | uVar17 & uVar51) +\n           iVar16;\n  uVar25 = uVar60 << 0x18 | (uVar60 >> 8 & 0xff) << 0x10;\n  uVar62 = uVar25 | (uVar60 >> 0x10 & 0xff) << 8 | uVar60 >> 0x18;\n  iVar16 = ((uVar55 ^ uVar58) & uVar1 ^ uVar55) + uVar62 + 0x923f82a4 + uVar21 +\n           ((uVar1 >> 0xb | uVar1 * 0x200000) ^ (uVar1 >> 6 | uVar1 * 0x4000000) ^\n           (uVar1 >> 0x19 | uVar1 * 0x80));\n  uVar63 = param_2[0xd];\n  uVar22 = param_2[0xe];\n  uVar26 = ((uVar32 >> 0xd | uVar32 * 0x80000) ^ (uVar32 >> 2 | uVar32 * 0x40000000) ^\n           (uVar32 >> 0x16 | uVar32 * 0x400)) + ((uVar51 | uVar32) & uVar17 | uVar51 & uVar32) +\n           iVar16;\n  uVar15 = uVar15 + iVar16;\n  uVar21 = uVar54 << 0x18 | (uVar54 >> 8 & 0xff) << 0x10;\n  uVar4 = uVar21 | (uVar54 >> 0x10 & 0xff) << 8 | uVar54 >> 0x18;\n  uVar5 = param_2[0xf];\n  iVar16 = ((uVar58 ^ uVar1) & uVar15 ^ uVar58) + uVar4 + 0xab1c5ed5 + uVar55 +\n           ((uVar15 >> 0xb | uVar15 * 0x200000) ^ (uVar15 >> 6 | uVar15 * 0x4000000) ^\n           (uVar15 >> 0x19 | uVar15 * 0x80));\n  uVar17 = uVar17 + iVar16;\n  uVar55 = uVar61 << 0x18 | (uVar61 >> 8 & 0xff) << 0x10;\n  uVar6 = uVar55 | (uVar61 >> 0x10 & 0xff) << 8 | uVar61 >> 0x18;\n  uVar29 = uVar42 << 0x18 | (uVar42 >> 8 & 0xff) << 0x10;\n  uVar7 = uVar29 | (uVar42 >> 0x10 & 0xff) << 8 | uVar42 >> 0x18;\n  uVar47 = ((uVar26 >> 0xd | uVar26 * 0x80000) ^ (uVar26 >> 2 | uVar26 * 0x40000000) ^\n           (uVar26 >> 0x16 | uVar26 * 0x400)) + ((uVar32 | uVar26) & uVar51 | uVar32 & uVar26) +\n           iVar16;\n  uVar27 = uVar45 << 0x18 | (uVar45 >> 8 & 0xff) << 0x10;\n  uVar43 = uVar27 | (uVar45 >> 0x10 & 0xff) << 8 | uVar45 >> 0x18;\n  uVar28 = uVar3 << 0x18 | (uVar3 >> 8 & 0xff) << 0x10;\n  uVar8 = uVar28 | (uVar3 >> 0x10 & 0xff) << 8 | uVar3 >> 0x18;\n  iVar16 = ((uVar1 ^ uVar15) & uVar17 ^ uVar1) + uVar6 + 0xd807aa98 + uVar58 +\n           ((uVar17 >> 0xb | uVar17 * 0x200000) ^ (uVar17 >> 6 | uVar17 * 0x4000000) ^\n           (uVar17 >> 0x19 | uVar17 * 0x80));\n  uVar51 = uVar51 + iVar16;\n  uVar58 = uVar37 << 0x18 | (uVar37 >> 8 & 0xff) << 0x10;\n  uVar59 = uVar58 | (uVar37 >> 0x10 & 0xff) << 8 | uVar37 >> 0x18;\n  uVar56 = ((uVar47 >> 0xd | uVar47 * 0x80000) ^ (uVar47 >> 2 | uVar47 * 0x40000000) ^\n           (uVar47 >> 0x16 | uVar47 * 0x400)) + ((uVar26 | uVar47) & uVar32 | uVar26 & uVar47) +\n           iVar16;\n  iVar16 = ((uVar15 ^ uVar17) & uVar51 ^ uVar15) + uVar7 + 0x12835b01 + uVar1 +\n           ((uVar51 >> 0xb | uVar51 * 0x200000) ^ (uVar51 >> 6 | uVar51 * 0x4000000) ^\n           (uVar51 >> 0x19 | uVar51 * 0x80));\n  uVar1 = uVar63 << 0x18 | (uVar63 >> 8 & 0xff) << 0x10;\n  uVar9 = uVar1 | (uVar63 >> 0x10 & 0xff) << 8 | uVar63 >> 0x18;\n  uVar32 = uVar32 + iVar16;\n  uVar33 = uVar22 << 0x18 | (uVar22 >> 8 & 0xff) << 0x10;\n  uVar11 = uVar33 | (uVar22 >> 0x10 & 0xff) << 8;\n  uVar10 = uVar11 | uVar22 >> 0x18;\n  uVar38 = ((uVar56 >> 0xd | uVar56 * 0x80000) ^ (uVar56 >> 2 | uVar56 * 0x40000000) ^\n           (uVar56 >> 0x16 | uVar56 * 0x400)) + ((uVar47 | uVar56) & uVar26 | uVar47 & uVar56) +\n           iVar16;\n  uVar34 = uVar5 << 0x18 | (uVar5 >> 8 & 0xff) << 0x10;\n  uVar18 = uVar34 | (uVar5 >> 0x10 & 0xff) << 8;\n  uVar23 = uVar18 | uVar5 >> 0x18;\n  iVar16 = ((uVar17 ^ uVar51) & uVar32 ^ uVar17) + uVar43 + 0x243185be + uVar15 +\n           ((uVar32 >> 0xb | uVar32 * 0x200000) ^ (uVar32 >> 6 | uVar32 * 0x4000000) ^\n           (uVar32 >> 0x19 | uVar32 * 0x80));\n  uVar26 = uVar26 + iVar16;\n  uVar64 = ((uVar38 >> 0xd | uVar38 * 0x80000) ^ (uVar38 >> 2 | uVar38 * 0x40000000) ^\n           (uVar38 >> 0x16 | uVar38 * 0x400)) + ((uVar56 | uVar38) & uVar47 | uVar56 & uVar38) +\n           iVar16;\n  iVar16 = ((uVar51 ^ uVar32) & uVar26 ^ uVar51) + uVar8 + 0x550c7dc3 + uVar17 +\n           ((uVar26 >> 0xb | uVar26 * 0x200000) ^ (uVar26 >> 6 | uVar26 * 0x4000000) ^\n           (uVar26 >> 0x19 | uVar26 * 0x80));\n  uVar17 = ((uVar64 >> 0xd | uVar64 * 0x80000) ^ (uVar64 >> 2 | uVar64 * 0x40000000) ^\n           (uVar64 >> 0x16 | uVar64 * 0x400)) + ((uVar38 | uVar64) & uVar56 | uVar38 & uVar64) +\n           iVar16;\n  uVar47 = uVar47 + iVar16;\n  iVar16 = ((uVar32 ^ uVar26) & uVar47 ^ uVar32) + uVar59 + 0x72be5d74 + uVar51 +\n           ((uVar47 >> 0xb | uVar47 * 0x200000) ^ (uVar47 >> 6 | uVar47 * 0x4000000) ^\n           (uVar47 >> 0x19 | uVar47 * 0x80));\n  uVar51 = ((uVar17 >> 0xd | uVar17 * 0x80000) ^ (uVar17 >> 2 | uVar17 * 0x40000000) ^\n           (uVar17 >> 0x16 | uVar17 * 0x400)) + ((uVar64 | uVar17) & uVar38 | uVar64 & uVar17) +\n           iVar16;\n  uVar56 = uVar56 + iVar16;\n  iVar16 = ((uVar26 ^ uVar47) & uVar56 ^ uVar26) + uVar9 + 0x80deb1fe + uVar32 +\n           ((uVar56 >> 0xb | uVar56 * 0x200000) ^ (uVar56 >> 6 | uVar56 * 0x4000000) ^\n           (uVar56 >> 0x19 | uVar56 * 0x80));\n  uVar38 = uVar38 + iVar16;\n  uVar15 = ((uVar51 >> 0xd | uVar51 * 0x80000) ^ (uVar51 >> 2 | uVar51 * 0x40000000) ^\n           (uVar51 >> 0x16 | uVar51 * 0x400)) + ((uVar17 | uVar51) & uVar64 | uVar17 & uVar51) +\n           iVar16;\n  iVar16 = ((uVar47 ^ uVar56) & uVar38 ^ uVar47) + uVar10 + 0x9bdc06a7 + uVar26 +\n           ((uVar38 >> 0xb | uVar38 * 0x200000) ^ (uVar38 >> 6 | uVar38 * 0x4000000) ^\n           (uVar38 >> 0x19 | uVar38 * 0x80));\n  uVar32 = ((uVar15 >> 0xd | uVar15 * 0x80000) ^ (uVar15 >> 2 | uVar15 * 0x40000000) ^\n           (uVar15 >> 0x16 | uVar15 * 0x400)) + ((uVar51 | uVar15) & uVar17 | uVar51 & uVar15) +\n           iVar16;\n  uVar64 = uVar64 + iVar16;\n  iVar16 = ((uVar56 ^ uVar38) & uVar64 ^ uVar56) + uVar23 + 0xc19bf174 + uVar47 +\n           ((uVar64 >> 0xb | uVar64 * 0x200000) ^ (uVar64 >> 6 | uVar64 * 0x4000000) ^\n           (uVar64 >> 0x19 | uVar64 * 0x80));\n  uVar17 = uVar17 + iVar16;\n  uVar26 = ((uVar32 >> 0xd | uVar32 * 0x80000) ^ (uVar32 >> 2 | uVar32 * 0x40000000) ^\n           (uVar32 >> 0x16 | uVar32 * 0x400)) + ((uVar15 | uVar32) & uVar51 | uVar15 & uVar32) +\n           iVar16;\n  uVar19 = ((uVar33 >> 0x13 | uVar10 << 0xd) ^ (uVar33 >> 0x11 | uVar10 << 0xf) ^ uVar11 >> 10) +\n           uVar24 + uVar7 +\n           ((uVar48 >> 0x12 | uVar49 << 0xe) ^ (uVar49 >> 7 | (uVar19 >> 0x18) << 0x19) ^\n           uVar49 >> 3);\n  iVar16 = ((uVar38 ^ uVar64) & uVar17 ^ uVar38) + uVar19 + 0xe49b69c1 + uVar56 +\n           ((uVar17 >> 0xb | uVar17 * 0x200000) ^ (uVar17 >> 6 | uVar17 * 0x4000000) ^\n           (uVar17 >> 0x19 | uVar17 * 0x80));\n  uVar51 = uVar51 + iVar16;\n  uVar24 = ((uVar26 >> 0xd | uVar26 * 0x80000) ^ (uVar26 >> 2 | uVar26 * 0x40000000) ^\n           (uVar26 >> 0x16 | uVar26 * 0x400)) + ((uVar32 | uVar26) & uVar15 | uVar32 & uVar26) +\n           iVar16;\n  uVar11 = ((uVar34 >> 0x13 | uVar23 << 0xd) ^ (uVar34 >> 0x11 | uVar23 << 0xf) ^ uVar18 >> 10) +\n           uVar49 + uVar43 +\n           ((uVar13 >> 0x12 | uVar53 << 0xe) ^ (uVar53 >> 7 | (uVar52 >> 0x18) << 0x19) ^\n           uVar53 >> 3);\n  iVar16 = ((uVar64 ^ uVar17) & uVar51 ^ uVar64) + uVar11 + 0xefbe4786 + uVar38 +\n           ((uVar51 >> 0xb | uVar51 * 0x200000) ^ (uVar51 >> 6 | uVar51 * 0x4000000) ^\n           (uVar51 >> 0x19 | uVar51 * 0x80));\n  uVar15 = uVar15 + iVar16;\n  uVar47 = ((uVar24 >> 0xd | uVar24 * 0x80000) ^ (uVar24 >> 2 | uVar24 * 0x40000000) ^\n           (uVar24 >> 0x16 | uVar24 * 0x400)) + ((uVar26 | uVar24) & uVar32 | uVar26 & uVar24) +\n           iVar16;\n  uVar12 = ((uVar12 >> 0x12 | uVar41 << 0xe) ^ (uVar41 >> 7 | (uVar40 >> 0x18) << 0x19) ^\n           uVar41 >> 3) + uVar53 + uVar8 +\n           ((uVar19 >> 0x13 | uVar19 * 0x2000) ^ (uVar19 >> 0x11 | uVar19 * 0x8000) ^ uVar19 >> 10);\n  iVar16 = ((uVar17 ^ uVar51) & uVar15 ^ uVar17) + uVar12 + 0xfc19dc6 + uVar64 +\n           ((uVar15 >> 0xb | uVar15 * 0x200000) ^ (uVar15 >> 6 | uVar15 * 0x4000000) ^\n           (uVar15 >> 0x19 | uVar15 * 0x80));\n  uVar32 = uVar32 + iVar16;\n  uVar48 = ((uVar47 >> 0xd | uVar47 * 0x80000) ^ (uVar47 >> 2 | uVar47 * 0x40000000) ^\n           (uVar47 >> 0x16 | uVar47 * 0x400)) + ((uVar24 | uVar47) & uVar26 | uVar24 & uVar47) +\n           iVar16;\n  uVar38 = ((uVar14 >> 0x12 | uVar50 << 0xe) ^ (uVar50 >> 7 | (uVar20 >> 0x18) << 0x19) ^\n           uVar50 >> 3) + uVar41 + uVar59 +\n           ((uVar11 >> 0x13 | uVar11 * 0x2000) ^ (uVar11 >> 0x11 | uVar11 * 0x8000) ^ uVar11 >> 10);\n  iVar16 = ((uVar51 ^ uVar15) & uVar32 ^ uVar51) + uVar38 + 0x240ca1cc + uVar17 +\n           ((uVar32 >> 0xb | uVar32 * 0x200000) ^ (uVar32 >> 6 | uVar32 * 0x4000000) ^\n           (uVar32 >> 0x19 | uVar32 * 0x80));\n  uVar13 = ((uVar48 >> 0xd | uVar48 * 0x80000) ^ (uVar48 >> 2 | uVar48 * 0x40000000) ^\n           (uVar48 >> 0x16 | uVar48 * 0x400)) + ((uVar47 | uVar48) & uVar24 | uVar47 & uVar48) +\n           iVar16;\n  uVar26 = uVar26 + iVar16;\n  uVar17 = ((uVar31 >> 0x12 | uVar46 << 0xe) ^ (uVar46 >> 7 | (uVar36 >> 0x18) << 0x19) ^\n           uVar46 >> 3) + uVar50 + uVar9 +\n           ((uVar12 >> 0x13 | uVar12 * 0x2000) ^ (uVar12 >> 0x11 | uVar12 * 0x8000) ^ uVar12 >> 10);\n  iVar16 = ((uVar15 ^ uVar32) & uVar26 ^ uVar15) + uVar17 + 0x2de92c6f + uVar51 +\n           ((uVar26 >> 0xb | uVar26 * 0x200000) ^ (uVar26 >> 6 | uVar26 * 0x4000000) ^\n           (uVar26 >> 0x19 | uVar26 * 0x80));\n  uVar24 = uVar24 + iVar16;\n  uVar31 = ((uVar13 >> 0xd | uVar13 * 0x80000) ^ (uVar13 >> 2 | uVar13 * 0x40000000) ^\n           (uVar13 >> 0x16 | uVar13 * 0x400)) + ((uVar48 | uVar13) & uVar47 | uVar48 & uVar13) +\n           iVar16;\n  uVar18 = ((uVar25 >> 0x12 | uVar62 << 0xe) ^ (uVar62 >> 7 | (uVar60 >> 0x18) << 0x19) ^\n           uVar62 >> 3) + uVar46 + uVar10 +\n           ((uVar38 >> 0x13 | uVar38 * 0x2000) ^ (uVar38 >> 0x11 | uVar38 * 0x8000) ^ uVar38 >> 10);\n  iVar16 = ((uVar32 ^ uVar26) & uVar24 ^ uVar32) + uVar18 + 0x4a7484aa + uVar15 +\n           ((uVar24 >> 0xb | uVar24 * 0x200000) ^ (uVar24 >> 6 | uVar24 * 0x4000000) ^\n           (uVar24 >> 0x19 | uVar24 * 0x80));\n  uVar47 = uVar47 + iVar16;\n  uVar25 = ((uVar31 >> 0xd | uVar31 * 0x80000) ^ (uVar31 >> 2 | uVar31 * 0x40000000) ^\n           (uVar31 >> 0x16 | uVar31 * 0x400)) + ((uVar13 | uVar31) & uVar48 | uVar13 & uVar31) +\n           iVar16;\n  uVar20 = ((uVar21 >> 0x12 | uVar4 << 0xe) ^ (uVar4 >> 7 | (uVar54 >> 0x18) << 0x19) ^ uVar4 >> 3)\n           + uVar62 + uVar23 +\n           ((uVar17 >> 0x13 | uVar17 * 0x2000) ^ (uVar17 >> 0x11 | uVar17 * 0x8000) ^ uVar17 >> 10);\n  iVar16 = ((uVar26 ^ uVar24) & uVar47 ^ uVar26) + uVar20 + 0x5cb0a9dc + uVar32 +\n           ((uVar47 >> 0xb | uVar47 * 0x200000) ^ (uVar47 >> 6 | uVar47 * 0x4000000) ^\n           (uVar47 >> 0x19 | uVar47 * 0x80));\n  uVar48 = uVar48 + iVar16;\n  uVar15 = ((uVar25 >> 0xd | uVar25 * 0x80000) ^ (uVar25 >> 2 | uVar25 * 0x40000000) ^\n           (uVar25 >> 0x16 | uVar25 * 0x400)) + ((uVar31 | uVar25) & uVar13 | uVar31 & uVar25) +\n           iVar16;\n  uVar4 = ((uVar55 >> 0x12 | uVar6 << 0xe) ^ (uVar6 >> 7 | (uVar61 >> 0x18) << 0x19) ^ uVar6 >> 3) +\n          uVar4 + uVar19 +\n          ((uVar18 >> 0x13 | uVar18 * 0x2000) ^ (uVar18 >> 0x11 | uVar18 * 0x8000) ^ uVar18 >> 10);\n  iVar16 = ((uVar24 ^ uVar47) & uVar48 ^ uVar24) + uVar4 + 0x76f988da + uVar26 +\n           ((uVar48 >> 0xb | uVar48 * 0x200000) ^ (uVar48 >> 6 | uVar48 * 0x4000000) ^\n           (uVar48 >> 0x19 | uVar48 * 0x80));\n  uVar13 = uVar13 + iVar16;\n  uVar51 = ((uVar15 >> 0xd | uVar15 * 0x80000) ^ (uVar15 >> 2 | uVar15 * 0x40000000) ^\n           (uVar15 >> 0x16 | uVar15 * 0x400)) + ((uVar25 | uVar15) & uVar31 | uVar25 & uVar15) +\n           iVar16;\n  uVar6 = ((uVar29 >> 0x12 | uVar7 << 0xe) ^ (uVar7 >> 7 | (uVar42 >> 0x18) << 0x19) ^ uVar7 >> 3) +\n          uVar6 + uVar11 +\n          ((uVar20 >> 0x13 | uVar20 * 0x2000) ^ (uVar20 >> 0x11 | uVar20 * 0x8000) ^ uVar20 >> 10);\n  iVar16 = ((uVar47 ^ uVar48) & uVar13 ^ uVar47) + uVar6 + 0x983e5152 + uVar24 +\n           ((uVar13 >> 0xb | uVar13 * 0x200000) ^ (uVar13 >> 6 | uVar13 * 0x4000000) ^\n           (uVar13 >> 0x19 | uVar13 * 0x80));\n  uVar31 = uVar31 + iVar16;\n  uVar24 = ((uVar51 >> 0xd | uVar51 * 0x80000) ^ (uVar51 >> 2 | uVar51 * 0x40000000) ^\n           (uVar51 >> 0x16 | uVar51 * 0x400)) + ((uVar15 | uVar51) & uVar25 | uVar15 & uVar51) +\n           iVar16;\n  uVar27 = ((uVar27 >> 0x12 | uVar43 << 0xe) ^ (uVar43 >> 7 | (uVar45 >> 0x18) << 0x19) ^\n           uVar43 >> 3) + uVar7 + uVar12 +\n           ((uVar4 >> 0x13 | uVar4 * 0x2000) ^ (uVar4 >> 0x11 | uVar4 * 0x8000) ^ uVar4 >> 10);\n  iVar16 = ((uVar48 ^ uVar13) & uVar31 ^ uVar48) + uVar27 + 0xa831c66d + uVar47 +\n           ((uVar31 >> 0xb | uVar31 * 0x200000) ^ (uVar31 >> 6 | uVar31 * 0x4000000) ^\n           (uVar31 >> 0x19 | uVar31 * 0x80));\n  uVar7 = ((uVar24 >> 0xd | uVar24 * 0x80000) ^ (uVar24 >> 2 | uVar24 * 0x40000000) ^\n          (uVar24 >> 0x16 | uVar24 * 0x400)) + ((uVar51 | uVar24) & uVar15 | uVar51 & uVar24) +\n          iVar16;\n  uVar25 = uVar25 + iVar16;\n  uVar28 = ((uVar28 >> 0x12 | uVar8 << 0xe) ^ (uVar8 >> 7 | (uVar3 >> 0x18) << 0x19) ^ uVar8 >> 3) +\n           uVar43 + uVar38 +\n           ((uVar6 >> 0x13 | uVar6 * 0x2000) ^ (uVar6 >> 0x11 | uVar6 * 0x8000) ^ uVar6 >> 10);\n  iVar16 = ((uVar13 ^ uVar31) & uVar25 ^ uVar13) + uVar28 + 0xb00327c8 + uVar48 +\n           ((uVar25 >> 0xb | uVar25 * 0x200000) ^ (uVar25 >> 6 | uVar25 * 0x4000000) ^\n           (uVar25 >> 0x19 | uVar25 * 0x80));\n  uVar15 = uVar15 + iVar16;\n  uVar48 = ((uVar7 >> 0xd | uVar7 * 0x80000) ^ (uVar7 >> 2 | uVar7 * 0x40000000) ^\n           (uVar7 >> 0x16 | uVar7 * 0x400)) + ((uVar24 | uVar7) & uVar51 | uVar24 & uVar7) + iVar16;\n  uVar58 = ((uVar58 >> 0x12 | uVar59 << 0xe) ^ (uVar59 >> 7 | (uVar37 >> 0x18) << 0x19) ^\n           uVar59 >> 3) + uVar8 + uVar17 +\n           ((uVar27 >> 0x13 | uVar27 * 0x2000) ^ (uVar27 >> 0x11 | uVar27 * 0x8000) ^ uVar27 >> 10);\n  iVar16 = ((uVar31 ^ uVar25) & uVar15 ^ uVar31) + uVar58 + 0xbf597fc7 + uVar13 +\n           ((uVar15 >> 0xb | uVar15 * 0x200000) ^ (uVar15 >> 6 | uVar15 * 0x4000000) ^\n           (uVar15 >> 0x19 | uVar15 * 0x80));\n  uVar14 = ((uVar48 >> 0xd | uVar48 * 0x80000) ^ (uVar48 >> 2 | uVar48 * 0x40000000) ^\n           (uVar48 >> 0x16 | uVar48 * 0x400)) + ((uVar7 | uVar48) & uVar24 | uVar7 & uVar48) +\n           iVar16;\n  uVar51 = uVar51 + iVar16;\n  uVar1 = ((uVar1 >> 0x12 | uVar9 << 0xe) ^ (uVar9 >> 7 | (uVar63 >> 0x18) << 0x19) ^ uVar9 >> 3) +\n          uVar59 + uVar18 +\n          ((uVar28 >> 0x13 | uVar28 * 0x2000) ^ (uVar28 >> 0x11 | uVar28 * 0x8000) ^ uVar28 >> 10);\n  iVar16 = ((uVar25 ^ uVar15) & uVar51 ^ uVar25) + uVar1 + 0xc6e00bf3 + uVar31 +\n           ((uVar51 >> 0xb | uVar51 * 0x200000) ^ (uVar51 >> 6 | uVar51 * 0x4000000) ^\n           (uVar51 >> 0x19 | uVar51 * 0x80));\n  uVar24 = uVar24 + iVar16;\n  uVar29 = ((uVar14 >> 0xd | uVar14 * 0x80000) ^ (uVar14 >> 2 | uVar14 * 0x40000000) ^\n           (uVar14 >> 0x16 | uVar14 * 0x400)) + ((uVar48 | uVar14) & uVar7 | uVar48 & uVar14) +\n           iVar16;\n  uVar33 = ((uVar33 >> 0x12 | uVar10 << 0xe) ^ (uVar10 >> 7 | (uVar22 >> 0x18) << 0x19) ^\n           uVar10 >> 3) + uVar9 + uVar20 +\n           ((uVar58 >> 0x13 | uVar58 * 0x2000) ^ (uVar58 >> 0x11 | uVar58 * 0x8000) ^ uVar58 >> 10);\n  iVar16 = ((uVar15 ^ uVar51) & uVar24 ^ uVar15) + uVar33 + 0xd5a79147 + uVar25 +\n           ((uVar24 >> 0xb | uVar24 * 0x200000) ^ (uVar24 >> 6 | uVar24 * 0x4000000) ^\n           (uVar24 >> 0x19 | uVar24 * 0x80));\n  uVar7 = uVar7 + iVar16;\n  uVar21 = ((uVar29 >> 0xd | uVar29 * 0x80000) ^ (uVar29 >> 2 | uVar29 * 0x40000000) ^\n           (uVar29 >> 0x16 | uVar29 * 0x400)) + ((uVar14 | uVar29) & uVar48 | uVar14 & uVar29) +\n           iVar16;\n  uVar34 = ((uVar34 >> 0x12 | uVar23 << 0xe) ^ (uVar23 >> 7 | (uVar5 >> 0x18) << 0x19) ^ uVar23 >> 3\n           ) + uVar10 + uVar4 +\n           ((uVar1 >> 0x13 | uVar1 * 0x2000) ^ (uVar1 >> 0x11 | uVar1 * 0x8000) ^ uVar1 >> 10);\n  iVar16 = ((uVar51 ^ uVar24) & uVar7 ^ uVar51) + uVar34 + 0x6ca6351 + uVar15 +\n           ((uVar7 >> 0xb | uVar7 * 0x200000) ^ (uVar7 >> 6 | uVar7 * 0x4000000) ^\n           (uVar7 >> 0x19 | uVar7 * 0x80));\n  uVar48 = uVar48 + iVar16;\n  uVar55 = ((uVar21 >> 0xd | uVar21 * 0x80000) ^ (uVar21 >> 2 | uVar21 * 0x40000000) ^\n           (uVar21 >> 0x16 | uVar21 * 0x400)) + ((uVar29 | uVar21) & uVar14 | uVar29 & uVar21) +\n           iVar16;\n  uVar5 = ((uVar19 >> 0x12 | uVar19 * 0x4000) ^ (uVar19 >> 7 | uVar19 * 0x2000000) ^ uVar19 >> 3) +\n          uVar23 + uVar6 +\n          ((uVar33 >> 0x13 | uVar33 * 0x2000) ^ (uVar33 >> 0x11 | uVar33 * 0x8000) ^ uVar33 >> 10);\n  iVar16 = ((uVar24 ^ uVar7) & uVar48 ^ uVar24) + uVar5 + 0x14292967 + uVar51 +\n           ((uVar48 >> 0xb | uVar48 * 0x200000) ^ (uVar48 >> 6 | uVar48 * 0x4000000) ^\n           (uVar48 >> 0x19 | uVar48 * 0x80));\n  uVar14 = uVar14 + iVar16;\n  uVar15 = ((uVar55 >> 0xd | uVar55 * 0x80000) ^ (uVar55 >> 2 | uVar55 * 0x40000000) ^\n           (uVar55 >> 0x16 | uVar55 * 0x400)) + ((uVar21 | uVar55) & uVar29 | uVar21 & uVar55) +\n           iVar16;\n  uVar9 = ((uVar11 >> 0x12 | uVar11 * 0x4000) ^ (uVar11 >> 7 | uVar11 * 0x2000000) ^ uVar11 >> 3) +\n          uVar19 + uVar27 +\n          ((uVar34 >> 0x13 | uVar34 * 0x2000) ^ (uVar34 >> 0x11 | uVar34 * 0x8000) ^ uVar34 >> 10);\n  iVar16 = ((uVar7 ^ uVar48) & uVar14 ^ uVar7) + uVar9 + 0x27b70a85 + uVar24 +\n           ((uVar14 >> 0xb | uVar14 * 0x200000) ^ (uVar14 >> 6 | uVar14 * 0x4000000) ^\n           (uVar14 >> 0x19 | uVar14 * 0x80));\n  uVar29 = uVar29 + iVar16;\n  uVar13 = ((uVar15 >> 0xd | uVar15 * 0x80000) ^ (uVar15 >> 2 | uVar15 * 0x40000000) ^\n           (uVar15 >> 0x16 | uVar15 * 0x400)) + ((uVar55 | uVar15) & uVar21 | uVar55 & uVar15) +\n           iVar16;\n  uVar31 = ((uVar12 >> 0x12 | uVar12 * 0x4000) ^ (uVar12 >> 7 | uVar12 * 0x2000000) ^ uVar12 >> 3) +\n           uVar11 + uVar28 +\n           ((uVar5 >> 0x13 | uVar5 * 0x2000) ^ (uVar5 >> 0x11 | uVar5 * 0x8000) ^ uVar5 >> 10);\n  iVar16 = ((uVar48 ^ uVar14) & uVar29 ^ uVar48) + uVar31 + 0x2e1b2138 + uVar7 +\n           ((uVar29 >> 0xb | uVar29 * 0x200000) ^ (uVar29 >> 6 | uVar29 * 0x4000000) ^\n           (uVar29 >> 0x19 | uVar29 * 0x80));\n  uVar21 = uVar21 + iVar16;\n  uVar11 = ((uVar13 >> 0xd | uVar13 * 0x80000) ^ (uVar13 >> 2 | uVar13 * 0x40000000) ^\n           (uVar13 >> 0x16 | uVar13 * 0x400)) + ((uVar15 | uVar13) & uVar55 | uVar15 & uVar13) +\n           iVar16;\n  uVar3 = ((uVar38 >> 0x12 | uVar38 * 0x4000) ^ (uVar38 >> 7 | uVar38 * 0x2000000) ^ uVar38 >> 3) +\n          uVar12 + uVar58 +\n          ((uVar9 >> 0x13 | uVar9 * 0x2000) ^ (uVar9 >> 0x11 | uVar9 * 0x8000) ^ uVar9 >> 10);\n  iVar16 = ((uVar14 ^ uVar29) & uVar21 ^ uVar14) + uVar3 + 0x4d2c6dfc + uVar48 +\n           ((uVar21 >> 0xb | uVar21 * 0x200000) ^ (uVar21 >> 6 | uVar21 * 0x4000000) ^\n           (uVar21 >> 0x19 | uVar21 * 0x80));\n  uVar55 = uVar55 + iVar16;\n  uVar25 = ((uVar11 >> 0xd | uVar11 * 0x80000) ^ (uVar11 >> 2 | uVar11 * 0x40000000) ^\n           (uVar11 >> 0x16 | uVar11 * 0x400)) + ((uVar13 | uVar11) & uVar15 | uVar13 & uVar11) +\n           iVar16;\n  uVar12 = ((uVar17 >> 0x12 | uVar17 * 0x4000) ^ (uVar17 >> 7 | uVar17 * 0x2000000) ^ uVar17 >> 3) +\n           uVar38 + uVar1 +\n           ((uVar31 >> 0x13 | uVar31 * 0x2000) ^ (uVar31 >> 0x11 | uVar31 * 0x8000) ^ uVar31 >> 10);\n  iVar16 = ((uVar29 ^ uVar21) & uVar55 ^ uVar29) + uVar12 + 0x53380d13 + uVar14 +\n           ((uVar55 >> 0xb | uVar55 * 0x200000) ^ (uVar55 >> 6 | uVar55 * 0x4000000) ^\n           (uVar55 >> 0x19 | uVar55 * 0x80));\n  uVar15 = uVar15 + iVar16;\n  uVar14 = ((uVar25 >> 0xd | uVar25 * 0x80000) ^ (uVar25 >> 2 | uVar25 * 0x40000000) ^\n           (uVar25 >> 0x16 | uVar25 * 0x400)) + ((uVar11 | uVar25) & uVar13 | uVar11 & uVar25) +\n           iVar16;\n  uVar22 = ((uVar18 >> 0x12 | uVar18 * 0x4000) ^ (uVar18 >> 7 | uVar18 * 0x2000000) ^ uVar18 >> 3) +\n           uVar17 + uVar33 +\n           ((uVar3 >> 0x13 | uVar3 * 0x2000) ^ (uVar3 >> 0x11 | uVar3 * 0x8000) ^ uVar3 >> 10);\n  iVar16 = ((uVar21 ^ uVar55) & uVar15 ^ uVar21) + uVar22 + 0x650a7354 + uVar29 +\n           ((uVar15 >> 0xb | uVar15 * 0x200000) ^ (uVar15 >> 6 | uVar15 * 0x4000000) ^\n           (uVar15 >> 0x19 | uVar15 * 0x80));\n  uVar13 = uVar13 + iVar16;\n  uVar23 = ((uVar14 >> 0xd | uVar14 * 0x80000) ^ (uVar14 >> 2 | uVar14 * 0x40000000) ^\n           (uVar14 >> 0x16 | uVar14 * 0x400)) + ((uVar25 | uVar14) & uVar11 | uVar25 & uVar14) +\n           iVar16;\n  uVar10 = ((uVar20 >> 0x12 | uVar20 * 0x4000) ^ (uVar20 >> 7 | uVar20 * 0x2000000) ^ uVar20 >> 3) +\n           uVar18 + uVar34 +\n           ((uVar12 >> 0x13 | uVar12 * 0x2000) ^ (uVar12 >> 0x11 | uVar12 * 0x8000) ^ uVar12 >> 10);\n  iVar16 = ((uVar55 ^ uVar15) & uVar13 ^ uVar55) + uVar10 + 0x766a0abb + uVar21 +\n           ((uVar13 >> 0xb | uVar13 * 0x200000) ^ (uVar13 >> 6 | uVar13 * 0x4000000) ^\n           (uVar13 >> 0x19 | uVar13 * 0x80));\n  uVar11 = uVar11 + iVar16;\n  uVar21 = ((uVar23 >> 0xd | uVar23 * 0x80000) ^ (uVar23 >> 2 | uVar23 * 0x40000000) ^\n           (uVar23 >> 0x16 | uVar23 * 0x400)) + ((uVar14 | uVar23) & uVar25 | uVar14 & uVar23) +\n           iVar16;\n  uVar17 = ((uVar4 >> 0x12 | uVar4 * 0x4000) ^ (uVar4 >> 7 | uVar4 * 0x2000000) ^ uVar4 >> 3) +\n           uVar20 + uVar5 +\n           ((uVar22 >> 0x13 | uVar22 * 0x2000) ^ (uVar22 >> 0x11 | uVar22 * 0x8000) ^ uVar22 >> 10);\n  iVar16 = ((uVar15 ^ uVar13) & uVar11 ^ uVar15) + uVar17 + 0x81c2c92e + uVar55 +\n           ((uVar11 >> 0xb | uVar11 * 0x200000) ^ (uVar11 >> 6 | uVar11 * 0x4000000) ^\n           (uVar11 >> 0x19 | uVar11 * 0x80));\n  uVar25 = uVar25 + iVar16;\n  uVar29 = ((uVar21 >> 0xd | uVar21 * 0x80000) ^ (uVar21 >> 2 | uVar21 * 0x40000000) ^\n           (uVar21 >> 0x16 | uVar21 * 0x400)) + ((uVar23 | uVar21) & uVar14 | uVar23 & uVar21) +\n           iVar16;\n  uVar19 = ((uVar6 >> 0x12 | uVar6 * 0x4000) ^ (uVar6 >> 7 | uVar6 * 0x2000000) ^ uVar6 >> 3) +\n           uVar4 + uVar9 +\n           ((uVar10 >> 0x13 | uVar10 * 0x2000) ^ (uVar10 >> 0x11 | uVar10 * 0x8000) ^ uVar10 >> 10);\n  iVar16 = ((uVar13 ^ uVar11) & uVar25 ^ uVar13) + uVar19 + 0x92722c85 + uVar15 +\n           ((uVar25 >> 0xb | uVar25 * 0x200000) ^ (uVar25 >> 6 | uVar25 * 0x4000000) ^\n           (uVar25 >> 0x19 | uVar25 * 0x80));\n  uVar7 = ((uVar29 >> 0xd | uVar29 * 0x80000) ^ (uVar29 >> 2 | uVar29 * 0x40000000) ^\n          (uVar29 >> 0x16 | uVar29 * 0x400)) + ((uVar21 | uVar29) & uVar23 | uVar21 & uVar29) +\n          iVar16;\n  uVar14 = uVar14 + iVar16;\n  uVar15 = ((uVar27 >> 0x12 | uVar27 * 0x4000) ^ (uVar27 >> 7 | uVar27 * 0x2000000) ^ uVar27 >> 3) +\n           uVar6 + uVar31 +\n           ((uVar17 >> 0x13 | uVar17 * 0x2000) ^ (uVar17 >> 0x11 | uVar17 * 0x8000) ^ uVar17 >> 10);\n  iVar16 = ((uVar11 ^ uVar25) & uVar14 ^ uVar11) + uVar15 + 0xa2bfe8a1 + uVar13 +\n           ((uVar14 >> 0xb | uVar14 * 0x200000) ^ (uVar14 >> 6 | uVar14 * 0x4000000) ^\n           (uVar14 >> 0x19 | uVar14 * 0x80));\n  uVar23 = uVar23 + iVar16;\n  uVar55 = ((uVar7 >> 0xd | uVar7 * 0x80000) ^ (uVar7 >> 2 | uVar7 * 0x40000000) ^\n           (uVar7 >> 0x16 | uVar7 * 0x400)) + ((uVar29 | uVar7) & uVar21 | uVar29 & uVar7) + iVar16;\n  uVar4 = ((uVar28 >> 0x12 | uVar28 * 0x4000) ^ (uVar28 >> 7 | uVar28 * 0x2000000) ^ uVar28 >> 3) +\n          uVar27 + uVar3 +\n          ((uVar19 >> 0x13 | uVar19 * 0x2000) ^ (uVar19 >> 0x11 | uVar19 * 0x8000) ^ uVar19 >> 10);\n  iVar16 = ((uVar25 ^ uVar14) & uVar23 ^ uVar25) + uVar4 + 0xa81a664b + uVar11 +\n           ((uVar23 >> 0xb | uVar23 * 0x200000) ^ (uVar23 >> 6 | uVar23 * 0x4000000) ^\n           (uVar23 >> 0x19 | uVar23 * 0x80));\n  uVar21 = uVar21 + iVar16;\n  uVar48 = ((uVar55 >> 0xd | uVar55 * 0x80000) ^ (uVar55 >> 2 | uVar55 * 0x40000000) ^\n           (uVar55 >> 0x16 | uVar55 * 0x400)) + ((uVar7 | uVar55) & uVar29 | uVar7 & uVar55) +\n           iVar16;\n  uVar18 = ((uVar58 >> 0x12 | uVar58 * 0x4000) ^ (uVar58 >> 7 | uVar58 * 0x2000000) ^ uVar58 >> 3) +\n           uVar28 + uVar12 +\n           ((uVar15 >> 0x13 | uVar15 * 0x2000) ^ (uVar15 >> 0x11 | uVar15 * 0x8000) ^ uVar15 >> 10);\n  iVar16 = ((uVar14 ^ uVar23) & uVar21 ^ uVar14) + uVar18 + 0xc24b8b70 + uVar25 +\n           ((uVar21 >> 0xb | uVar21 * 0x200000) ^ (uVar21 >> 6 | uVar21 * 0x4000000) ^\n           (uVar21 >> 0x19 | uVar21 * 0x80));\n  uVar29 = uVar29 + iVar16;\n  uVar24 = ((uVar48 >> 0xd | uVar48 * 0x80000) ^ (uVar48 >> 2 | uVar48 * 0x40000000) ^\n           (uVar48 >> 0x16 | uVar48 * 0x400)) + ((uVar55 | uVar48) & uVar7 | uVar55 & uVar48) +\n           iVar16;\n  uVar13 = ((uVar1 >> 0x12 | uVar1 * 0x4000) ^ (uVar1 >> 7 | uVar1 * 0x2000000) ^ uVar1 >> 3) +\n           uVar58 + uVar22 +\n           ((uVar4 >> 0x13 | uVar4 * 0x2000) ^ (uVar4 >> 0x11 | uVar4 * 0x8000) ^ uVar4 >> 10);\n  iVar16 = ((uVar23 ^ uVar21) & uVar29 ^ uVar23) + uVar13 + 0xc76c51a3 + uVar14 +\n           ((uVar29 >> 0xb | uVar29 * 0x200000) ^ (uVar29 >> 6 | uVar29 * 0x4000000) ^\n           (uVar29 >> 0x19 | uVar29 * 0x80));\n  uVar27 = ((uVar24 >> 0xd | uVar24 * 0x80000) ^ (uVar24 >> 2 | uVar24 * 0x40000000) ^\n           (uVar24 >> 0x16 | uVar24 * 0x400)) + ((uVar48 | uVar24) & uVar55 | uVar48 & uVar24) +\n           iVar16;\n  uVar7 = uVar7 + iVar16;\n  uVar8 = ((uVar33 >> 0x12 | uVar33 * 0x4000) ^ (uVar33 >> 7 | uVar33 * 0x2000000) ^ uVar33 >> 3) +\n          uVar1 + uVar10 +\n          ((uVar18 >> 0x13 | uVar18 * 0x2000) ^ (uVar18 >> 0x11 | uVar18 * 0x8000) ^ uVar18 >> 10);\n  iVar16 = ((uVar21 ^ uVar29) & uVar7 ^ uVar21) + uVar8 + 0xd192e819 + uVar23 +\n           ((uVar7 >> 0xb | uVar7 * 0x200000) ^ (uVar7 >> 6 | uVar7 * 0x4000000) ^\n           (uVar7 >> 0x19 | uVar7 * 0x80));\n  uVar55 = uVar55 + iVar16;\n  uVar28 = ((uVar27 >> 0xd | uVar27 * 0x80000) ^ (uVar27 >> 2 | uVar27 * 0x40000000) ^\n           (uVar27 >> 0x16 | uVar27 * 0x400)) + ((uVar24 | uVar27) & uVar48 | uVar24 & uVar27) +\n           iVar16;\n  uVar14 = ((uVar34 >> 0x12 | uVar34 * 0x4000) ^ (uVar34 >> 7 | uVar34 * 0x2000000) ^ uVar34 >> 3) +\n           uVar33 + uVar17 +\n           ((uVar13 >> 0x13 | uVar13 * 0x2000) ^ (uVar13 >> 0x11 | uVar13 * 0x8000) ^ uVar13 >> 10);\n  iVar16 = ((uVar29 ^ uVar7) & uVar55 ^ uVar29) + uVar14 + 0xd6990624 + uVar21 +\n           ((uVar55 >> 0xb | uVar55 * 0x200000) ^ (uVar55 >> 6 | uVar55 * 0x4000000) ^\n           (uVar55 >> 0x19 | uVar55 * 0x80));\n  uVar48 = uVar48 + iVar16;\n  uVar1 = ((uVar28 >> 0xd | uVar28 * 0x80000) ^ (uVar28 >> 2 | uVar28 * 0x40000000) ^\n          (uVar28 >> 0x16 | uVar28 * 0x400)) + ((uVar27 | uVar28) & uVar24 | uVar27 & uVar28) +\n          iVar16;\n  uVar25 = ((uVar5 >> 0x12 | uVar5 * 0x4000) ^ (uVar5 >> 7 | uVar5 * 0x2000000) ^ uVar5 >> 3) +\n           uVar34 + uVar19 +\n           ((uVar8 >> 0x13 | uVar8 * 0x2000) ^ (uVar8 >> 0x11 | uVar8 * 0x8000) ^ uVar8 >> 10);\n  iVar16 = ((uVar7 ^ uVar55) & uVar48 ^ uVar7) + uVar25 + 0xf40e3585 + uVar29 +\n           ((uVar48 >> 0xb | uVar48 * 0x200000) ^ (uVar48 >> 6 | uVar48 * 0x4000000) ^\n           (uVar48 >> 0x19 | uVar48 * 0x80));\n  uVar24 = uVar24 + iVar16;\n  uVar58 = ((uVar1 >> 0xd | uVar1 * 0x80000) ^ (uVar1 >> 2 | uVar1 * 0x40000000) ^\n           (uVar1 >> 0x16 | uVar1 * 0x400)) + ((uVar28 | uVar1) & uVar27 | uVar28 & uVar1) + iVar16;\n  uVar21 = ((uVar9 >> 0x12 | uVar9 * 0x4000) ^ (uVar9 >> 7 | uVar9 * 0x2000000) ^ uVar9 >> 3) +\n           uVar5 + uVar15 +\n           ((uVar14 >> 0x13 | uVar14 * 0x2000) ^ (uVar14 >> 0x11 | uVar14 * 0x8000) ^ uVar14 >> 10);\n  iVar16 = ((uVar55 ^ uVar48) & uVar24 ^ uVar55) + uVar21 + 0x106aa070 + uVar7 +\n           ((uVar24 >> 0xb | uVar24 * 0x200000) ^ (uVar24 >> 6 | uVar24 * 0x4000000) ^\n           (uVar24 >> 0x19 | uVar24 * 0x80));\n  uVar27 = uVar27 + iVar16;\n  uVar33 = ((uVar58 >> 0xd | uVar58 * 0x80000) ^ (uVar58 >> 2 | uVar58 * 0x40000000) ^\n           (uVar58 >> 0x16 | uVar58 * 0x400)) + ((uVar1 | uVar58) & uVar28 | uVar1 & uVar58) +\n           iVar16;\n  uVar5 = ((uVar31 >> 0x12 | uVar31 * 0x4000) ^ (uVar31 >> 7 | uVar31 * 0x2000000) ^ uVar31 >> 3) +\n          uVar9 + uVar4 +\n          ((uVar25 >> 0x13 | uVar25 * 0x2000) ^ (uVar25 >> 0x11 | uVar25 * 0x8000) ^ uVar25 >> 10);\n  iVar16 = ((uVar48 ^ uVar24) & uVar27 ^ uVar48) + uVar5 + 0x19a4c116 + uVar55 +\n           ((uVar27 >> 0xb | uVar27 * 0x200000) ^ (uVar27 >> 6 | uVar27 * 0x4000000) ^\n           (uVar27 >> 0x19 | uVar27 * 0x80));\n  uVar28 = uVar28 + iVar16;\n  uVar6 = ((uVar33 >> 0xd | uVar33 * 0x80000) ^ (uVar33 >> 2 | uVar33 * 0x40000000) ^\n          (uVar33 >> 0x16 | uVar33 * 0x400)) + ((uVar58 | uVar33) & uVar1 | uVar58 & uVar33) +\n          iVar16;\n  uVar29 = ((uVar3 >> 0x12 | uVar3 * 0x4000) ^ (uVar3 >> 7 | uVar3 * 0x2000000) ^ uVar3 >> 3) +\n           uVar31 + uVar18 +\n           ((uVar21 >> 0x13 | uVar21 * 0x2000) ^ (uVar21 >> 0x11 | uVar21 * 0x8000) ^ uVar21 >> 10);\n  iVar16 = ((uVar24 ^ uVar27) & uVar28 ^ uVar24) + uVar29 + 0x1e376c08 + uVar48 +\n           ((uVar28 >> 0xb | uVar28 * 0x200000) ^ (uVar28 >> 6 | uVar28 * 0x4000000) ^\n           (uVar28 >> 0x19 | uVar28 * 0x80));\n  uVar11 = ((uVar6 >> 0xd | uVar6 * 0x80000) ^ (uVar6 >> 2 | uVar6 * 0x40000000) ^\n           (uVar6 >> 0x16 | uVar6 * 0x400)) + ((uVar33 | uVar6) & uVar58 | uVar33 & uVar6) + iVar16;\n  uVar1 = uVar1 + iVar16;\n  uVar34 = ((uVar12 >> 0x12 | uVar12 * 0x4000) ^ (uVar12 >> 7 | uVar12 * 0x2000000) ^ uVar12 >> 3) +\n           uVar3 + uVar13 +\n           ((uVar5 >> 0x13 | uVar5 * 0x2000) ^ (uVar5 >> 0x11 | uVar5 * 0x8000) ^ uVar5 >> 10);\n  iVar16 = ((uVar27 ^ uVar28) & uVar1 ^ uVar27) + uVar34 + 0x2748774c + uVar24 +\n           ((uVar1 >> 0xb | uVar1 * 0x200000) ^ (uVar1 >> 6 | uVar1 * 0x4000000) ^\n           (uVar1 >> 0x19 | uVar1 * 0x80));\n  uVar58 = uVar58 + iVar16;\n  uVar48 = ((uVar11 >> 0xd | uVar11 * 0x80000) ^ (uVar11 >> 2 | uVar11 * 0x40000000) ^\n           (uVar11 >> 0x16 | uVar11 * 0x400)) + ((uVar6 | uVar11) & uVar33 | uVar6 & uVar11) +\n           iVar16;\n  uVar12 = ((uVar22 >> 0x12 | uVar22 * 0x4000) ^ (uVar22 >> 7 | uVar22 * 0x2000000) ^ uVar22 >> 3) +\n           uVar12 + uVar8 +\n           ((uVar29 >> 0x13 | uVar29 * 0x2000) ^ (uVar29 >> 0x11 | uVar29 * 0x8000) ^ uVar29 >> 10);\n  iVar16 = ((uVar28 ^ uVar1) & uVar58 ^ uVar28) + uVar12 + 0x34b0bcb5 + uVar27 +\n           ((uVar58 >> 0xb | uVar58 * 0x200000) ^ (uVar58 >> 6 | uVar58 * 0x4000000) ^\n           (uVar58 >> 0x19 | uVar58 * 0x80));\n  uVar33 = uVar33 + iVar16;\n  uVar7 = ((uVar48 >> 0xd | uVar48 * 0x80000) ^ (uVar48 >> 2 | uVar48 * 0x40000000) ^\n          (uVar48 >> 0x16 | uVar48 * 0x400)) + ((uVar11 | uVar48) & uVar6 | uVar11 & uVar48) +\n          iVar16;\n  uVar27 = ((uVar10 >> 0x12 | uVar10 * 0x4000) ^ (uVar10 >> 7 | uVar10 * 0x2000000) ^ uVar10 >> 3) +\n           uVar22 + uVar14 +\n           ((uVar34 >> 0x13 | uVar34 * 0x2000) ^ (uVar34 >> 0x11 | uVar34 * 0x8000) ^ uVar34 >> 10);\n  iVar16 = ((uVar1 ^ uVar58) & uVar33 ^ uVar1) + uVar27 + 0x391c0cb3 + uVar28 +\n           ((uVar33 >> 0xb | uVar33 * 0x200000) ^ (uVar33 >> 6 | uVar33 * 0x4000000) ^\n           (uVar33 >> 0x19 | uVar33 * 0x80));\n  uVar6 = uVar6 + iVar16;\n  uVar3 = ((uVar7 >> 0xd | uVar7 * 0x80000) ^ (uVar7 >> 2 | uVar7 * 0x40000000) ^\n          (uVar7 >> 0x16 | uVar7 * 0x400)) + ((uVar48 | uVar7) & uVar11 | uVar48 & uVar7) + iVar16;\n  uVar31 = ((uVar17 >> 0x12 | uVar17 * 0x4000) ^ (uVar17 >> 7 | uVar17 * 0x2000000) ^ uVar17 >> 3) +\n           uVar10 + uVar25 +\n           ((uVar12 >> 0x13 | uVar12 * 0x2000) ^ (uVar12 >> 0x11 | uVar12 * 0x8000) ^ uVar12 >> 10);\n  iVar16 = ((uVar58 ^ uVar33) & uVar6 ^ uVar58) + uVar31 + 0x4ed8aa4a + uVar1 +\n           ((uVar6 >> 0xb | uVar6 * 0x200000) ^ (uVar6 >> 6 | uVar6 * 0x4000000) ^\n           (uVar6 >> 0x19 | uVar6 * 0x80));\n  uVar11 = uVar11 + iVar16;\n  uVar28 = ((uVar3 >> 0xd | uVar3 * 0x80000) ^ (uVar3 >> 2 | uVar3 * 0x40000000) ^\n           (uVar3 >> 0x16 | uVar3 * 0x400)) + ((uVar7 | uVar3) & uVar48 | uVar7 & uVar3) + iVar16;\n  uVar55 = ((uVar19 >> 0x12 | uVar19 * 0x4000) ^ (uVar19 >> 7 | uVar19 * 0x2000000) ^ uVar19 >> 3) +\n           uVar17 + uVar21 +\n           ((uVar27 >> 0x13 | uVar27 * 0x2000) ^ (uVar27 >> 0x11 | uVar27 * 0x8000) ^ uVar27 >> 10);\n  iVar16 = ((uVar33 ^ uVar6) & uVar11 ^ uVar33) + uVar55 + 0x5b9cca4f + uVar58 +\n           ((uVar11 >> 0xb | uVar11 * 0x200000) ^ (uVar11 >> 6 | uVar11 * 0x4000000) ^\n           (uVar11 >> 0x19 | uVar11 * 0x80));\n  uVar48 = uVar48 + iVar16;\n  uVar1 = ((uVar15 >> 0x12 | uVar15 * 0x4000) ^ (uVar15 >> 7 | uVar15 * 0x2000000) ^ uVar15 >> 3) +\n          uVar19 + uVar5 +\n          ((uVar31 >> 0x13 | uVar31 * 0x2000) ^ (uVar31 >> 0x11 | uVar31 * 0x8000) ^ uVar31 >> 10);\n  uVar9 = ((uVar28 >> 0xd | uVar28 * 0x80000) ^ (uVar28 >> 2 | uVar28 * 0x40000000) ^\n          (uVar28 >> 0x16 | uVar28 * 0x400)) + ((uVar3 | uVar28) & uVar7 | uVar3 & uVar28) + iVar16;\n  iVar16 = ((uVar6 ^ uVar11) & uVar48 ^ uVar6) + uVar1 + 0x682e6ff3 + uVar33 +\n           ((uVar48 >> 0xb | uVar48 * 0x200000) ^ (uVar48 >> 6 | uVar48 * 0x4000000) ^\n           (uVar48 >> 0x19 | uVar48 * 0x80));\n  uVar7 = uVar7 + iVar16;\n  uVar33 = ((uVar9 >> 0xd | uVar9 * 0x80000) ^ (uVar9 >> 2 | uVar9 * 0x40000000) ^\n           (uVar9 >> 0x16 | uVar9 * 0x400)) + ((uVar28 | uVar9) & uVar3 | uVar28 & uVar9) + iVar16;\n  uVar15 = ((uVar4 >> 0x12 | uVar4 * 0x4000) ^ (uVar4 >> 7 | uVar4 * 0x2000000) ^ uVar4 >> 3) +\n           uVar15 + uVar29 +\n           ((uVar55 >> 0x13 | uVar55 * 0x2000) ^ (uVar55 >> 0x11 | uVar55 * 0x8000) ^ uVar55 >> 10);\n  iVar16 = ((uVar11 ^ uVar48) & uVar7 ^ uVar11) + uVar15 + 0x748f82ee + uVar6 +\n           ((uVar7 >> 0xb | uVar7 * 0x200000) ^ (uVar7 >> 6 | uVar7 * 0x4000000) ^\n           (uVar7 >> 0x19 | uVar7 * 0x80));\n  uVar3 = uVar3 + iVar16;\n  uVar58 = ((uVar33 >> 0xd | uVar33 * 0x80000) ^ (uVar33 >> 2 | uVar33 * 0x40000000) ^\n           (uVar33 >> 0x16 | uVar33 * 0x400)) + ((uVar9 | uVar33) & uVar28 | uVar9 & uVar33) +\n           iVar16;\n  uVar29 = ((uVar18 >> 0x12 | uVar18 * 0x4000) ^ (uVar18 >> 7 | uVar18 * 0x2000000) ^ uVar18 >> 3) +\n           uVar4 + uVar34 +\n           ((uVar1 >> 0x13 | uVar1 * 0x2000) ^ (uVar1 >> 0x11 | uVar1 * 0x8000) ^ uVar1 >> 10);\n  iVar16 = ((uVar48 ^ uVar7) & uVar3 ^ uVar48) + uVar29 + 0x78a5636f + uVar11 +\n           ((uVar3 >> 0xb | uVar3 * 0x200000) ^ (uVar3 >> 6 | uVar3 * 0x4000000) ^\n           (uVar3 >> 0x19 | uVar3 * 0x80));\n  uVar28 = uVar28 + iVar16;\n  uVar34 = ((uVar58 >> 0xd | uVar58 * 0x80000) ^ (uVar58 >> 2 | uVar58 * 0x40000000) ^\n           (uVar58 >> 0x16 | uVar58 * 0x400)) + ((uVar33 | uVar58) & uVar9 | uVar33 & uVar58) +\n           iVar16;\n  uVar11 = ((uVar13 >> 0x12 | uVar13 * 0x4000) ^ (uVar13 >> 7 | uVar13 * 0x2000000) ^ uVar13 >> 3) +\n           uVar18 + uVar12 +\n           ((uVar15 >> 0x13 | uVar15 * 0x2000) ^ (uVar15 >> 0x11 | uVar15 * 0x8000) ^ uVar15 >> 10);\n  iVar16 = ((uVar7 ^ uVar3) & uVar28 ^ uVar7) + uVar11 + 0x84c87814 + uVar48 +\n           ((uVar28 >> 0xb | uVar28 * 0x200000) ^ (uVar28 >> 6 | uVar28 * 0x4000000) ^\n           (uVar28 >> 0x19 | uVar28 * 0x80));\n  uVar9 = uVar9 + iVar16;\n  uVar12 = ((uVar34 >> 0xd | uVar34 * 0x80000) ^ (uVar34 >> 2 | uVar34 * 0x40000000) ^\n           (uVar34 >> 0x16 | uVar34 * 0x400)) + ((uVar58 | uVar34) & uVar33 | uVar58 & uVar34) +\n           iVar16;\n  uVar48 = ((uVar8 >> 0x12 | uVar8 * 0x4000) ^ (uVar8 >> 7 | uVar8 * 0x2000000) ^ uVar8 >> 3) +\n           uVar13 + uVar27 +\n           ((uVar29 >> 0x13 | uVar29 * 0x2000) ^ (uVar29 >> 0x11 | uVar29 * 0x8000) ^ uVar29 >> 10);\n  iVar16 = ((uVar3 ^ uVar28) & uVar9 ^ uVar3) + uVar48 + 0x8cc70208 + uVar7 +\n           ((uVar9 >> 0xb | uVar9 * 0x200000) ^ (uVar9 >> 6 | uVar9 * 0x4000000) ^\n           (uVar9 >> 0x19 | uVar9 * 0x80));\n  uVar29 = ((uVar12 >> 0xd | uVar12 * 0x80000) ^ (uVar12 >> 2 | uVar12 * 0x40000000) ^\n           (uVar12 >> 0x16 | uVar12 * 0x400)) + ((uVar34 | uVar12) & uVar58 | uVar34 & uVar12) +\n           iVar16;\n  uVar33 = uVar33 + iVar16;\n  uVar31 = ((uVar14 >> 0x12 | uVar14 * 0x4000) ^ (uVar14 >> 7 | uVar14 * 0x2000000) ^ uVar14 >> 3) +\n           uVar8 + uVar31 +\n           ((uVar11 >> 0x13 | uVar11 * 0x2000) ^ (uVar11 >> 0x11 | uVar11 * 0x8000) ^ uVar11 >> 10);\n  iVar16 = ((uVar28 ^ uVar9) & uVar33 ^ uVar28) + uVar31 + 0x90befffa + uVar3 +\n           ((uVar33 >> 0xb | uVar33 * 0x200000) ^ (uVar33 >> 6 | uVar33 * 0x4000000) ^\n           (uVar33 >> 0x19 | uVar33 * 0x80));\n  uVar13 = ((uVar29 >> 0xd | uVar29 * 0x80000) ^ (uVar29 >> 2 | uVar29 * 0x40000000) ^\n           (uVar29 >> 0x16 | uVar29 * 0x400)) + ((uVar12 | uVar29) & uVar34 | uVar12 & uVar29) +\n           iVar16;\n  uVar58 = uVar58 + iVar16;\n  uVar55 = ((uVar25 >> 0x12 | uVar25 * 0x4000) ^ (uVar25 >> 7 | uVar25 * 0x2000000) ^ uVar25 >> 3) +\n           uVar14 + uVar55 +\n           ((uVar48 >> 0x13 | uVar48 * 0x2000) ^ (uVar48 >> 0x11 | uVar48 * 0x8000) ^ uVar48 >> 10);\n  iVar16 = ((uVar9 ^ uVar33) & uVar58 ^ uVar9) + uVar55 + 0xa4506ceb + uVar28 +\n           ((uVar58 >> 0xb | uVar58 * 0x200000) ^ (uVar58 >> 6 | uVar58 * 0x4000000) ^\n           (uVar58 >> 0x19 | uVar58 * 0x80));\n  uVar34 = uVar34 + iVar16;\n  uVar48 = ((uVar13 >> 0xd | uVar13 * 0x80000) ^ (uVar13 >> 2 | uVar13 * 0x40000000) ^\n           (uVar13 >> 0x16 | uVar13 * 0x400)) + ((uVar29 | uVar13) & uVar12 | uVar29 & uVar13) +\n           iVar16;\n  iVar16 = ((uVar21 >> 0x12 | uVar21 * 0x4000) ^ (uVar21 >> 7 | uVar21 * 0x2000000) ^ uVar21 >> 3) +\n           uVar25 + 0xbef9a3f7 + uVar1 +\n           ((uVar31 >> 0x13 | uVar31 * 0x2000) ^ (uVar31 >> 0x11 | uVar31 * 0x8000) ^ uVar31 >> 10)\n           + uVar9 + ((uVar33 ^ uVar58) & uVar34 ^ uVar33) +\n           ((uVar34 >> 0xb | uVar34 * 0x200000) ^ (uVar34 >> 6 | uVar34 * 0x4000000) ^\n           (uVar34 >> 0x19 | uVar34 * 0x80));\n  uVar14 = ((uVar48 >> 0xd | uVar48 * 0x80000) ^ (uVar48 >> 2 | uVar48 * 0x40000000) ^\n           (uVar48 >> 0x16 | uVar48 * 0x400)) + ((uVar13 | uVar48) & uVar29 | uVar13 & uVar48) +\n           iVar16;\n  uVar12 = uVar12 + iVar16;\n  iVar16 = ((uVar5 >> 0x12 | uVar5 * 0x4000) ^ (uVar5 >> 7 | uVar5 * 0x2000000) ^ uVar5 >> 3) +\n           uVar21 + 0xc67178f2 + uVar15 +\n           ((uVar55 >> 0x13 | uVar55 * 0x2000) ^ (uVar55 >> 0x11 | uVar55 * 0x8000) ^ uVar55 >> 10)\n           + uVar33 + ((uVar58 ^ uVar34) & uVar12 ^ uVar58) +\n           ((uVar12 >> 0xb | uVar12 * 0x200000) ^ (uVar12 >> 6 | uVar12 * 0x4000000) ^\n           (uVar12 >> 0x19 | uVar12 * 0x80));\n  *(uint *)(param_1 + 0x24) = *(int *)(param_1 + 0x24) + uVar58;\n  *(uint *)(param_1 + 0x14) = *(int *)(param_1 + 0x14) + uVar13;\n  *(uint *)(param_1 + 0x20) = uVar2 + uVar34;\n  *(uint *)(param_1 + 0x10) = uVar30 + uVar48;\n  *(uint *)(param_1 + 0xc) = uVar57 + uVar14;\n  *(uint *)(param_1 + 0x1c) = uVar44 + uVar12;\n  *(uint *)(param_1 + 8) =\n       ((uVar14 >> 0xd | uVar14 * 0x80000) ^ (uVar14 >> 2 | uVar14 * 0x40000000) ^\n       (uVar14 >> 0x16 | uVar14 * 0x400)) + ((uVar48 | uVar14) & uVar13 | uVar48 & uVar14) + uVar35\n       + iVar16;\n  *(uint *)(param_1 + 0x18) = uVar39 + uVar29 + iVar16;\n  return;\n}\n\n",
    "FUN_000231a4": "\nvoid FUN_000231a4(uint *param_1,void *param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  void *pvVar3;\n  size_t __n;\n  void *pvVar4;\n  uint uVar5;\n  bool bVar6;\n  \n  uVar2 = *param_1;\n  bVar6 = CARRY4(uVar2,param_3);\n  uVar1 = uVar2 + param_3;\n  uVar5 = uVar2 & 0x3f;\n  if (bVar6) {\n    uVar2 = param_1[1];\n  }\n  __n = 0x40 - uVar5;\n  *param_1 = uVar1;\n  if (bVar6) {\n    param_1[1] = uVar2 + 1;\n  }\n  if (uVar5 != 0 && (int)__n <= (int)param_3) {\n    param_3 = param_3 - __n;\n    memcpy((void *)((int)(param_1 + 10) + uVar5),param_2,__n);\n    param_2 = (void *)((int)param_2 + __n);\n    uVar5 = 0;\n    FUN_00020d44(param_1,param_1 + 10);\n  }\n  if (0x3f < (int)param_3) {\n    uVar1 = param_3 - 0x40 >> 6;\n    pvVar4 = (void *)((int)param_2 + (uVar1 + 1) * 0x40);\n    pvVar3 = param_2;\n    do {\n      param_2 = (void *)((int)pvVar3 + 0x40);\n      FUN_00020d44(param_1,pvVar3);\n      pvVar3 = param_2;\n    } while (param_2 != pvVar4);\n    param_3 = (param_3 - 0x40) + uVar1 * -0x40;\n  }\n  if (0 < (int)param_3) {\n    memcpy((void *)((int)param_1 + uVar5 + 0x28),param_2,param_3);\n    return;\n  }\n  return;\n}\n\n",
    "FUN_0002327c": "\nvoid FUN_0002327c(uint *param_1,undefined *param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  uint uVar3;\n  int iVar4;\n  uint uVar5;\n  undefined local_18;\n  undefined local_17;\n  undefined local_16;\n  byte local_15;\n  undefined local_14;\n  undefined local_13;\n  undefined local_12;\n  undefined local_11;\n  \n  uVar5 = *param_1;\n  uVar3 = uVar5 & 0x3f;\n  iVar1 = uVar5 << 3;\n  iVar2 = param_1[1] << 3;\n  local_15 = (byte)(uVar5 >> 0x1d) | (byte)iVar2;\n  local_11 = (undefined)iVar1;\n  local_14 = (undefined)((uint)iVar1 >> 0x18);\n  local_17 = (undefined)((uint)iVar2 >> 0x10);\n  local_16 = (undefined)((uint)iVar2 >> 8);\n  local_13 = (undefined)((uint)iVar1 >> 0x10);\n  if (uVar3 < 0x38) {\n    iVar4 = 0x38 - uVar3;\n  }\n  else {\n    iVar4 = 0x78 - uVar3;\n  }\n  local_12 = (undefined)((uint)iVar1 >> 8);\n  local_18 = (undefined)((uint)iVar2 >> 0x18);\n  FUN_000231a4(param_1,&DAT_00062768,iVar4);\n  FUN_000231a4(param_1,&local_18,8);\n  *param_2 = *(undefined *)((int)param_1 + 0xb);\n  param_2[1] = (char)*(undefined2 *)((int)param_1 + 10);\n  param_2[2] = (char)(param_1[2] >> 8);\n  param_2[3] = (char)param_1[2];\n  param_2[4] = *(undefined *)((int)param_1 + 0xf);\n  param_2[5] = (char)*(undefined2 *)((int)param_1 + 0xe);\n  param_2[6] = (char)(param_1[3] >> 8);\n  param_2[7] = (char)param_1[3];\n  param_2[8] = *(undefined *)((int)param_1 + 0x13);\n  param_2[9] = (char)*(undefined2 *)((int)param_1 + 0x12);\n  param_2[10] = (char)(param_1[4] >> 8);\n  param_2[0xb] = (char)param_1[4];\n  param_2[0xc] = *(undefined *)((int)param_1 + 0x17);\n  param_2[0xd] = (char)*(undefined2 *)((int)param_1 + 0x16);\n  param_2[0xe] = (char)(param_1[5] >> 8);\n  param_2[0xf] = (char)param_1[5];\n  param_2[0x10] = *(undefined *)((int)param_1 + 0x1b);\n  param_2[0x11] = (char)*(undefined2 *)((int)param_1 + 0x1a);\n  param_2[0x12] = (char)(param_1[6] >> 8);\n  param_2[0x13] = (char)param_1[6];\n  param_2[0x14] = *(undefined *)((int)param_1 + 0x1f);\n  param_2[0x15] = (char)*(undefined2 *)((int)param_1 + 0x1e);\n  param_2[0x16] = (char)(param_1[7] >> 8);\n  param_2[0x17] = (char)param_1[7];\n  param_2[0x18] = *(undefined *)((int)param_1 + 0x23);\n  param_2[0x19] = (char)*(undefined2 *)((int)param_1 + 0x22);\n  param_2[0x1a] = (char)(param_1[8] >> 8);\n  param_2[0x1b] = (char)param_1[8];\n  param_2[0x1c] = *(undefined *)((int)param_1 + 0x27);\n  param_2[0x1d] = (char)*(undefined2 *)((int)param_1 + 0x26);\n  param_2[0x1e] = (char)(param_1[9] >> 8);\n  param_2[0x1f] = (char)param_1[9];\n  return;\n}\n\n",
    "FUN_00023430": "\nvoid FUN_00023430(undefined4 param_1,int param_2,undefined4 param_3)\n\n{\n  undefined4 local_f8;\n  undefined4 local_f4;\n  undefined4 local_f0;\n  undefined4 local_ec;\n  undefined4 local_e8;\n  undefined4 local_e4;\n  undefined4 local_e0;\n  undefined4 local_dc;\n  undefined4 local_d8;\n  undefined4 local_d4;\n  \n  local_f0 = 0x6a09e667;\n  local_e8 = 0x3c6ef372;\n  local_e4 = 0xa54ff53a;\n  local_e0 = 0x510e527f;\n  local_dc = 0x9b05688c;\n  local_ec = 0xbb67ae85;\n  local_d8 = 0x1f83d9ab;\n  local_d4 = 0x5be0cd19;\n  local_f8 = 0;\n  local_f4 = 0;\n  if (0 < param_2) {\n    FUN_000231a4(&local_f8,param_1,param_2);\n  }\n  FUN_0002327c(&local_f8,param_3);\n  return;\n}\n\n",
    "FUN_000234d8": "\nundefined4 FUN_000234d8(char *param_1,size_t param_2,undefined4 param_3)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  \n  iVar1 = FUN_00036548();\n  if (iVar1 == 0) {\n    snprintf(param_1,param_2,\"%d\",param_3);\n    return 0;\n  }\n  if (iVar1 != 1) {\n    snprintf(param_1,param_2,\"searching\");\n    return 0;\n  }\n  uVar2 = FUN_000359ec();\n  snprintf(param_1,param_2,\"%s:%s\",\"searchfailed\",uVar2);\n  return 0;\n}\n\n",
    "FUN_00023574": "\n/* WARNING: Type propagation algorithm not settling */\n\nundefined4 FUN_00023574(int param_1,undefined4 *param_2,size_t param_3)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  int iVar3;\n  long lVar4;\n  long lVar5;\n  long lVar6;\n  int iVar7;\n  size_t sVar8;\n  int extraout_r1;\n  int iVar9;\n  int iVar10;\n  int iVar11;\n  char *pcVar12;\n  int iVar13;\n  int iVar14;\n  undefined8 uVar15;\n  undefined2 local_c54 [2];\n  undefined4 local_c50 [256];\n  undefined4 local_850;\n  undefined4 uStack_84c;\n  undefined4 uStack_848;\n  undefined4 uStack_844;\n  undefined4 local_840;\n  undefined4 local_83c;\n  undefined4 uStack_838;\n  undefined4 uStack_834;\n  undefined2 uStack_830;\n  undefined local_82e;\n  \n  pcVar12 = (char *)(param_1 + 4);\n  iVar1 = strncmp(pcVar12,\"/rate\",5);\n  if (iVar1 == 0) {\n    if ((DAT_00482a5d != '\\0') &&\n       (((DAT_00590404 != '\\0' || (DAT_00482a5c != '\\0')) || (6 < DAT_0007eba0)))) {\n      local_850._0_1_ = 'c';\n      local_850._1_1_ = 'm';\n      local_850._2_1_ = 'd';\n      local_850._3_1_ = ' ';\n      uStack_84c._0_1_ = ':';\n      uStack_84c._1_1_ = ' ';\n      uStack_84c._2_1_ = 'g';\n      uStack_84c._3_1_ = 'e';\n      uStack_848._0_1_ = 't';\n      uStack_848._1_1_ = ' ';\n      uStack_848._2_1_ = 'r';\n      uStack_848._3_1_ = 'a';\n      uStack_844._0_3_ = 0x6574;\n      FUN_0002e584(7,&local_850,0);\n    }\n    uVar2 = FUN_0001a18c();\n    FUN_000234d8(param_2,param_3,uVar2);\n    return 0;\n  }\n  iVar1 = strncmp(pcVar12,\"/ideal_rate\",0xb);\n  if (iVar1 == 0) {\n    if ((DAT_00482a5d != '\\0') &&\n       (((DAT_00590404 != '\\0' || (DAT_00482a5c != '\\0')) || (6 < DAT_0007eba0)))) {\n      local_850._0_1_ = 'c';\n      local_850._1_1_ = 'm';\n      local_850._2_1_ = 'd';\n      local_850._3_1_ = ' ';\n      uStack_84c._0_1_ = ':';\n      uStack_84c._1_1_ = ' ';\n      uStack_84c._2_1_ = 'g';\n      uStack_84c._3_1_ = 'e';\n      uStack_848._0_1_ = 't';\n      uStack_848._1_1_ = ' ';\n      uStack_848._2_1_ = 'i';\n      uStack_848._3_1_ = 'd';\n      uStack_844._0_1_ = 'e';\n      uStack_844._1_1_ = 'a';\n      uStack_844._2_1_ = 'l';\n      uStack_844._3_1_ = ' ';\n      local_840._0_1_ = 'r';\n      local_840._1_1_ = 'a';\n      local_840._2_1_ = 't';\n      local_840._3_1_ = 'e';\n      local_83c = local_83c & 0xffffff00;\n      FUN_0002e584(7,&local_850,0);\n    }\n    uVar2 = FUN_0001a014();\n    FUN_000234d8(param_2,param_3,uVar2);\n    return 0;\n  }\n  iVar1 = strncmp(pcVar12,\"/max_rate\",9);\n  if (iVar1 == 0) {\n    if ((DAT_00482a5d != '\\0') &&\n       (((DAT_00590404 != '\\0' || (DAT_00482a5c != '\\0')) || (6 < DAT_0007eba0)))) {\n      local_850._0_1_ = 'c';\n      local_850._1_1_ = 'm';\n      local_850._2_1_ = 'd';\n      local_850._3_1_ = ' ';\n      uStack_84c._0_1_ = ':';\n      uStack_84c._1_1_ = ' ';\n      uStack_84c._2_1_ = 'g';\n      uStack_84c._3_1_ = 'e';\n      uStack_848._0_1_ = 't';\n      uStack_848._1_1_ = ' ';\n      uStack_848._2_1_ = 'm';\n      uStack_848._3_1_ = 'a';\n      uStack_844._0_1_ = 'x';\n      uStack_844._1_1_ = ' ';\n      uStack_844._2_1_ = 'r';\n      uStack_844._3_1_ = 'a';\n      local_840._0_3_ = 0x6574;\n      FUN_0002e584(7,&local_850,0);\n    }\n    uVar2 = FUN_00019e68();\n    FUN_000234d8(param_2,param_3,uVar2);\n    return 0;\n  }\n  iVar1 = strncmp(pcVar12,\"/miner_status\",0xd);\n  if (iVar1 == 0) {\n    if ((DAT_00482a5d != '\\0') &&\n       (((DAT_00590404 != '\\0' || (DAT_00482a5c != '\\0')) || (6 < DAT_0007eba0)))) {\n      local_850._0_1_ = 'c';\n      local_850._1_1_ = 'm';\n      local_850._2_1_ = 'd';\n      local_850._3_1_ = ' ';\n      uStack_84c._0_1_ = ':';\n      uStack_84c._1_1_ = ' ';\n      uStack_84c._2_1_ = 'g';\n      uStack_84c._3_1_ = 'e';\n      uStack_848._0_1_ = 't';\n      uStack_848._1_1_ = ' ';\n      uStack_848._2_1_ = 'm';\n      uStack_848._3_1_ = 'i';\n      uStack_844._0_1_ = 'n';\n      uStack_844._1_1_ = 'e';\n      uStack_844._2_1_ = 'r';\n      uStack_844._3_1_ = ' ';\n      local_840._0_1_ = 's';\n      local_840._1_1_ = 't';\n      local_840._2_1_ = 'a';\n      local_840._3_1_ = 't';\n      local_83c = CONCAT13(local_83c._3_1_,0x7375);\n      FUN_0002e584(7,&local_850,0);\n      return 0;\n    }\n  }\n  else {\n    iVar1 = strncmp(pcVar12,\"/productName\",0xc);\n    if (iVar1 == 0) {\n      if ((DAT_00482a5d != '\\0') &&\n         (((DAT_00590404 != '\\0' || (DAT_00482a5c != '\\0')) || (6 < DAT_0007eba0)))) {\n        local_850._0_1_ = 'c';\n        local_850._1_1_ = 'm';\n        local_850._2_1_ = 'd';\n        local_850._3_1_ = ' ';\n        uStack_84c._0_1_ = ':';\n        uStack_84c._1_1_ = ' ';\n        uStack_84c._2_1_ = 'g';\n        uStack_84c._3_1_ = 'e';\n        uStack_848._0_1_ = 't';\n        uStack_848._1_1_ = ' ';\n        uStack_848._2_1_ = 'm';\n        uStack_848._3_1_ = 'i';\n        uStack_844._0_1_ = 'n';\n        uStack_844._1_1_ = 'e';\n        uStack_844._2_1_ = 'r';\n        uStack_844._3_1_ = ' ';\n        local_840._0_1_ = 't';\n        local_840._1_1_ = 'y';\n        local_840._2_1_ = 'p';\n        local_840._3_1_ = 'e';\n        local_83c = local_83c & 0xffffff00;\n        FUN_0002e584(7,&local_850,0);\n      }\n      snprintf((char *)param_2,0x100,\"%s\",&DAT_00080ca0);\n      return 0;\n    }\n    iVar1 = strncmp(pcVar12,\"/get_sn\",7);\n    if (iVar1 == 0) {\n      if ((DAT_00482a5d != '\\0') &&\n         (((DAT_00590404 != '\\0' || (DAT_00482a5c != '\\0')) || (6 < DAT_0007eba0)))) {\n        local_850._0_1_ = 'c';\n        local_850._1_1_ = 'm';\n        local_850._2_1_ = 'd';\n        local_850._3_1_ = ' ';\n        uStack_84c._0_1_ = ':';\n        uStack_84c._1_1_ = ' ';\n        uStack_84c._2_1_ = 'g';\n        uStack_84c._3_1_ = 'e';\n        uStack_848._0_1_ = 't';\n        uStack_848._1_1_ = ' ';\n        uStack_848._2_1_ = 'm';\n        uStack_848._3_1_ = 'i';\n        uStack_844._0_1_ = 'n';\n        uStack_844._1_1_ = 'e';\n        uStack_844._2_1_ = 'r';\n        uStack_844._3_1_ = ' ';\n        local_840._0_3_ = 0x6e73;\n        FUN_0002e584(7,&local_850,0);\n      }\n      if (DAT_0007f8f8 != '\\0') {\n        snprintf((char *)param_2,0x100,\"%s\");\n        return 0;\n      }\n      *param_2 = 0x6d206f6e;\n      param_2[1] = 0x72656e69;\n      param_2[2] = 0x206e7320;\n      param_2[3] = 0x726f7473;\n      param_2[4] = 0x6f206465;\n      param_2[5] = 0x6f62206e;\n      param_2[6] = 0x647261;\n      return 0;\n    }\n    iVar1 = strncmp(pcVar12,\"/set_sn\",7);\n    if (iVar1 == 0) {\n      if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (4 < DAT_0007eba0)) {\n        local_850._0_1_ = 'c';\n        local_850._1_1_ = 'm';\n        local_850._2_1_ = 'd';\n        local_850._3_1_ = ' ';\n        uStack_84c._0_1_ = ':';\n        uStack_84c._1_1_ = ' ';\n        uStack_84c._2_1_ = 's';\n        uStack_84c._3_1_ = 'e';\n        uStack_848._0_1_ = 't';\n        uStack_848._1_1_ = ' ';\n        uStack_848._2_1_ = 'm';\n        uStack_848._3_1_ = 'i';\n        uStack_844._0_1_ = 'n';\n        uStack_844._1_1_ = 'e';\n        uStack_844._2_1_ = 'r';\n        uStack_844._3_1_ = ' ';\n        local_840._0_1_ = 's';\n        local_840._1_1_ = 'n';\n        local_840._2_1_ = ',';\n        local_840._3_1_ = ' ';\n        local_83c._0_1_ = 'd';\n        local_83c._1_1_ = 'o';\n        local_83c._2_1_ = 'e';\n        local_83c._3_1_ = 's';\n        uStack_838._0_1_ = 'n';\n        uStack_838._1_1_ = '\\'';\n        uStack_838._2_1_ = 't';\n        uStack_838._3_1_ = ' ';\n        uStack_834._0_1_ = 's';\n        uStack_834._1_1_ = 'p';\n        uStack_834._2_1_ = 'p';\n        uStack_834._3_1_ = 'o';\n        uStack_830 = 0x7472;\n        local_82e = 0;\n        FUN_0002e584(5,&local_850,0);\n      }\n      snprintf((char *)param_2,0x14,\"doesn\\'t support sn set in Release mode\");\n      return 0;\n    }\n    iVar1 = strncmp(pcVar12,\"/readreg\",8);\n    if (iVar1 == 0) {\n      local_c50[0]._0_2_ = 0x2d;\n      pcVar12 = strtok(pcVar12,(char *)local_c50);\n      if ((pcVar12 != (char *)0x0) &&\n         (pcVar12 = strtok((char *)0x0,(char *)local_c50), pcVar12 != (char *)0x0)) {\n        lVar5 = strtol(pcVar12,(char **)0x0,10);\n        pcVar12 = strtok((char *)0x0,(char *)local_c50);\n        if (pcVar12 != (char *)0x0) {\n          lVar6 = strtol(pcVar12,(char **)0x0,10);\n          pcVar12 = strtok((char *)0x0,(char *)local_c50);\n          if (pcVar12 != (char *)0x0) {\n            lVar4 = strtol(pcVar12,(char **)0x0,0x10);\n            if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (4 < DAT_0007eba0)) {\n              snprintf((char *)&local_850,0x800,\"recvBuf = %s, chain = %d, asic = %d, reg = 0x%x\\n\",\n                       param_1,lVar5,lVar6,lVar4);\n              FUN_0002e584(5,&local_850,0);\n            }\n            iVar1 = FUN_0001e160();\n            uVar2 = FUN_0002c06c(lVar4,lVar6 * iVar1,lVar5);\n            snprintf((char *)param_2,param_3,\"reg 0x%08x of asic %2d @ chain %2d, val = 0x%08x\",\n                     lVar4,lVar6,lVar5,uVar2);\n            return 0;\n          }\n        }\n      }\n    }\n    else {\n      iVar1 = strncmp(pcVar12,\"/readcorereg\",0xc);\n      if (iVar1 == 0) {\n        local_c54[0] = 0x2d;\n        memset(local_c50,0,0x400);\n        pcVar12 = strtok(pcVar12,(char *)local_c54);\n        if ((pcVar12 != (char *)0x0) &&\n           (pcVar12 = strtok((char *)0x0,(char *)local_c54), pcVar12 != (char *)0x0)) {\n          lVar5 = strtol(pcVar12,(char **)0x0,10);\n          pcVar12 = strtok((char *)0x0,(char *)local_c54);\n          if (pcVar12 != (char *)0x0) {\n            lVar6 = strtol(pcVar12,(char **)0x0,10);\n            pcVar12 = strtok((char *)0x0,(char *)local_c54);\n            if (pcVar12 != (char *)0x0) {\n              lVar4 = strtol(pcVar12,(char **)0x0,0x10);\n              if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (4 < DAT_0007eba0)) {\n                snprintf((char *)&local_850,0x800,\n                         \"recvBuf = %s, chain = %d, asic = %d, reg = 0x%x\\n\",param_1,lVar5,lVar6,\n                         lVar4);\n                FUN_0002e584(5,&local_850,0);\n              }\n              iVar1 = FUN_0002c2e8(lVar4,lVar6,lVar5,local_c50);\n              if (iVar1 != 0) {\n                snprintf((char *)param_2,param_3,\"500 server error\");\n                return 0;\n              }\n              iVar1 = FUN_0001e120();\n              if (iVar1 < 1) {\n                return 0;\n              }\n              iVar11 = 0;\n              iVar13 = 0;\n              do {\n                iVar14 = iVar13 + 1;\n                iVar13 = snprintf((char *)((int)param_2 + iVar11),param_3 - iVar11,\n                                  \"asic\\t%03d\\tcore\\t%03d\\treg\\t0x%02x\\tval\\t0x%08x\\n\",lVar6,iVar13,\n                                  lVar4,*(undefined4 *)((int)local_c50 + iVar13 * 2 * 2));\n                iVar11 = iVar11 + iVar13;\n                iVar13 = iVar14;\n              } while (iVar1 != iVar14);\n              return 0;\n            }\n          }\n        }\n      }\n      else {\n        iVar1 = strncmp(pcVar12,\"/resetcore\",10);\n        if (iVar1 == 0) {\n          local_c50[0]._0_2_ = 0x2d;\n          pcVar12 = strtok(pcVar12,(char *)local_c50);\n          if ((pcVar12 != (char *)0x0) &&\n             (pcVar12 = strtok((char *)0x0,(char *)local_c50), pcVar12 != (char *)0x0)) {\n            lVar5 = strtol(pcVar12,(char **)0x0,10);\n            pcVar12 = strtok((char *)0x0,(char *)local_c50);\n            if (pcVar12 != (char *)0x0) {\n              lVar6 = strtol(pcVar12,(char **)0x0,10);\n              if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (4 < DAT_0007eba0)) {\n                snprintf((char *)&local_850,0x800,\"recvBuf = %s, chain = %d, asic = %d\\n\",param_1,\n                         lVar5,lVar6);\n                FUN_0002e584(5,&local_850,0);\n              }\n              snprintf((char *)param_2,param_3,\"reset chain %d asic %d core success!!!.\",lVar5,lVar6\n                      );\n              return 0;\n            }\n          }\n        }\n        else {\n          iVar1 = strncmp(pcVar12,\"/nonce\",6);\n          if (iVar1 == 0) {\n            memset(&local_850,0,0x100);\n            iVar1 = 0;\n            iVar11 = 0;\n            iVar13 = 0;\n            iVar14 = 0;\n            do {\n              iVar3 = FUN_0001e29c(iVar11);\n              if (iVar3 != 0) {\n                sVar8 = param_3 - iVar1;\n                pcVar12 = (char *)((int)param_2 + iVar1);\n                iVar1 = iVar1 + 0x24;\n                snprintf(pcVar12,sVar8,\"\\n asic nonce number for chain[%d]...\\n\",iVar11);\n                iVar3 = FUN_0001e0f0();\n                if (iVar3 != 0) {\n                  iVar9 = 0;\n                  do {\n                    iVar7 = FUN_0002cdfc(iVar11,iVar9);\n                    iVar14 = iVar14 + iVar7;\n                    iVar10 = iVar9 + 1;\n                    uVar2 = FUN_0002cdfc(iVar11,iVar9);\n                    iVar7 = snprintf((char *)((int)&local_850 + iVar13),0x100 - iVar13,\n                                     \"asic[%03d]=%-8d \",iVar9,uVar2);\n                    uVar2 = FUN_0001e100();\n                    FUN_0005fadc(iVar10,uVar2);\n                    iVar13 = iVar13 + iVar7;\n                    if (extraout_r1 == 0) {\n                      uVar2 = FUN_0001e100();\n                      uVar2 = FUN_0005f880(iVar9,uVar2);\n                      iVar13 = snprintf((char *)((int)param_2 + iVar1),param_3 - iVar1,\n                                        \"domain %02d %s total=%-8u\\n\",uVar2,&local_850,iVar14);\n                      iVar1 = iVar1 + iVar13;\n                      iVar13 = 0;\n                      iVar14 = 0;\n                    }\n                    iVar9 = iVar10;\n                  } while (iVar10 != iVar3);\n                }\n              }\n              iVar11 = iVar11 + 1;\n            } while (iVar11 != 4);\n            return 0;\n          }\n          iVar1 = strncmp(pcVar12,\"/adc\",4);\n          if (iVar1 == 0) {\n            iVar1 = 0;\n            iVar11 = 0;\n            do {\n              iVar13 = FUN_0001e29c(iVar1);\n              if (iVar13 != 0) {\n                sVar8 = param_3 - iVar11;\n                pcVar12 = (char *)((int)param_2 + iVar11);\n                iVar11 = iVar11 + 0x17;\n                snprintf(pcVar12,sVar8,\"\\t\\t\\td0\\td1\\td2\\td3\\tsum\\tavg\\n\");\n                iVar13 = FUN_0001e0f0();\n                if (iVar13 != 0) {\n                  iVar14 = 0;\n                  do {\n                    FUN_0003f92c(iVar1,iVar14,0);\n                    FUN_0003f92c(iVar1,iVar14,1);\n                    FUN_0003f92c(iVar1,iVar14,2);\n                    FUN_0003f92c(iVar1,iVar14,3);\n                    FUN_0003f970(iVar1,iVar14);\n                    FUN_0003f9ec(iVar1,iVar14);\n                    iVar3 = iVar14 + 1;\n                    iVar14 = snprintf((char *)((int)param_2 + iVar11),param_3 - iVar11,\n                                      \"chain %2d asic %03d adc:\\t%.2f\\t%.2f\\t%.2f\\t%.2f\\t%.2f\\t%.2f\\n\"\n                                      ,iVar1,iVar14);\n                    iVar11 = iVar11 + iVar14;\n                    iVar14 = iVar3;\n                  } while (iVar13 != iVar3);\n                }\n              }\n              iVar1 = iVar1 + 1;\n            } while (iVar1 != 4);\n            return 0;\n          }\n          iVar1 = strncmp(pcVar12,\"/flush\",6);\n          if (iVar1 == 0) {\n            FUN_000452f8();\n            return 0;\n          }\n          local_850 = strncmp(pcVar12,\"/power\",6);\n          if (local_850 != 0) {\n            return 0xffffffff;\n          }\n          iVar11 = __isoc99_sscanf(pcVar12,\"/power-%d\");\n          iVar1 = local_850;\n          if ((iVar11 == 1) && (local_850 < 4)) {\n            uVar15 = FUN_000192c8(local_850);\n            snprintf((char *)param_2,param_3,\"chain %d power is %.2f\",iVar1,uVar15);\n            return 0;\n          }\n        }\n      }\n    }\n    snprintf((char *)param_2,param_3,\"404 not found\");\n  }\n  return 0;\n}\n\n",
    "FUN_00024264": "\nvoid FUN_00024264(char *param_1)\n\n{\n  undefined4 uVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  int iVar6;\n  char *__s;\n  \n  iVar6 = 0;\n  iVar5 = 0;\n  uVar1 = FUN_00019ab4();\n  iVar2 = 0;\n  __s = param_1;\n  do {\n    iVar4 = iVar2 + 1;\n    iVar2 = FUN_0001e29c(iVar2);\n    if (iVar2 != 0) {\n      iVar2 = sprintf(__s,\"chain%d_voltage=%d;\",iVar4,uVar1);\n      iVar6 = iVar6 + 1;\n      iVar3 = sprintf(param_1 + iVar2 + iVar5,\"chain%d_voladded=%d;\",iVar4,0);\n      iVar3 = iVar2 + iVar5 + iVar3;\n      iVar2 = sprintf(param_1 + iVar3,\"chain%d_basefreq=%d;\",iVar4,300);\n      iVar3 = iVar3 + iVar2;\n      iVar5 = sprintf(param_1 + iVar3,\"chain%d_badcore=%d;\",iVar4,0);\n      iVar5 = iVar3 + iVar5;\n      __s = param_1 + iVar5;\n    }\n    iVar2 = iVar4;\n  } while (iVar4 != 4);\n  iVar2 = sprintf(__s,\"chainnum=%d;\",iVar6);\n  sprintf(param_1 + iVar5 + iVar2,\"version=%s;\",&DAT_00080ba0);\n  return;\n}\n\n",
    "FUN_00024364": "\nvoid FUN_00024364(void)\n\n{\n  memcpy(&DAT_0007f8f8,&DAT_00080da0,0x100);\n  DAT_0007f9fc = FUN_00023574;\n  return;\n}\n\n",
    "FUN_00024398": "\nint FUN_00024398(int param_1)\n\n{\n  char *__s;\n  char *pcVar1;\n  size_t sVar2;\n  int iVar3;\n  int iVar4;\n  size_t sVar5;\n  ssize_t sVar6;\n  int *piVar7;\n  int iVar8;\n  uint uVar9;\n  char *pcVar10;\n  undefined2 local_5850;\n  undefined local_584e;\n  socklen_t local_584c;\n  undefined4 local_5848;\n  undefined local_5844;\n  undefined4 local_5840;\n  undefined4 local_583c;\n  sockaddr sStack_5838;\n  undefined4 local_5828;\n  undefined4 uStack_5824;\n  undefined4 uStack_5820;\n  undefined4 uStack_581c;\n  undefined4 local_5818;\n  undefined4 uStack_5814;\n  undefined4 local_5810;\n  undefined4 uStack_580c;\n  undefined4 local_5808;\n  undefined4 uStack_5804;\n  undefined4 local_5800;\n  undefined4 local_57fc;\n  undefined4 local_57f8;\n  char local_5028 [10240];\n  undefined4 local_2828;\n  undefined4 uStack_2824;\n  undefined4 uStack_2820;\n  undefined4 uStack_281c;\n  undefined4 local_2818;\n  undefined4 local_2814;\n  undefined4 local_2810;\n  undefined4 local_280c;\n  undefined4 local_2808;\n  undefined4 uStack_2804;\n  undefined4 uStack_2800;\n  undefined local_27fc;\n  \n  iVar8 = 0;\n  local_5840 = 3;\n  local_583c = 0;\n  __s = (char *)calloc(1,0x6000);\n  pcVar10 = local_5028;\n  local_5850 = 0xa0d;\n  local_584c = 0;\n  local_584e = 0;\n  local_5844 = 0;\n  local_5848 = 0xa0d0a0d;\n  memset(pcVar10,0,0x2800);\n  do {\n    if (DAT_0007f9f8 != '\\0') goto LAB_00024478;\n    sVar6 = recvfrom(param_1,pcVar10,0x27ff - iVar8,0,&sStack_5838,&local_584c);\n    iVar8 = iVar8 + sVar6;\n    if (sVar6 < 1) {\n      close(param_1);\n      if ((DAT_00482a5d != '\\0') &&\n         (((DAT_00590404 != '\\0' || (DAT_00482a5c != '\\0')) || (6 < DAT_0007eba0)))) {\n        local_2828._0_1_ = ':';\n        local_2828._1_1_ = 's';\n        local_2828._2_1_ = 't';\n        local_2828._3_1_ = 'a';\n        uStack_2824._0_1_ = 't';\n        uStack_2824._1_1_ = 'u';\n        uStack_2824._2_1_ = 's';\n        uStack_2824._3_1_ = 'S';\n        uStack_2820._0_1_ = 'e';\n        uStack_2820._1_1_ = 'r';\n        uStack_2820._2_1_ = 'v';\n        uStack_2820._3_1_ = 'i';\n        uStack_281c._0_1_ = 'c';\n        uStack_281c._1_1_ = 'e';\n        uStack_281c._2_1_ = 'T';\n        uStack_281c._3_1_ = 'h';\n        local_2818._0_1_ = 'r';\n        local_2818._1_1_ = 'e';\n        local_2818._2_1_ = 'a';\n        local_2818._3_1_ = 'd';\n        local_2814._0_1_ = ' ';\n        local_2814._1_1_ = 'r';\n        local_2814._2_1_ = 'e';\n        local_2814._3_1_ = 'c';\n        local_2810._0_1_ = 'v';\n        local_2810._1_1_ = 'f';\n        local_2810._2_1_ = 'r';\n        local_2810._3_1_ = 'o';\n        local_280c._0_1_ = 'm';\n        local_280c._1_1_ = '<';\n        local_280c._2_1_ = '=';\n        local_280c._3_1_ = '0';\n        local_2808 = local_2808 & 0xffffff00;\n        FUN_0002e584(7,&local_2828,0);\n      }\n      goto LAB_0002458c;\n    }\n    pcVar10 = local_5028 + iVar8;\n    if (0x27fe < iVar8) {\n      close(param_1);\n      if ((DAT_00482a5d != '\\0') &&\n         (((DAT_00590404 != '\\0' || (DAT_00482a5c != '\\0')) || (6 < DAT_0007eba0)))) {\n        local_2828._0_1_ = 'B';\n        local_2828._1_1_ = 'U';\n        local_2828._2_1_ = 'F';\n        local_2828._3_1_ = 'S';\n        uStack_2824._0_1_ = 'I';\n        uStack_2824._1_1_ = 'Z';\n        uStack_2824._2_1_ = 'E';\n        uStack_2824._3_1_ = ' ';\n        uStack_2820._0_1_ = 'i';\n        uStack_2820._1_1_ = 's';\n        uStack_2820._2_1_ = ' ';\n        uStack_2820._3_1_ = 't';\n        uStack_281c._0_1_ = 'o';\n        uStack_281c._1_1_ = 'o';\n        uStack_281c._2_1_ = ' ';\n        uStack_281c._3_1_ = 's';\n        local_2818._0_1_ = 'm';\n        local_2818._1_1_ = 'a';\n        local_2818._2_1_ = 'l';\n        local_2818._3_1_ = 'l';\n        local_2814._0_2_ = 0x21;\n        FUN_0002e584(7,&local_2828,0);\n      }\n      goto LAB_0002458c;\n    }\n    pcVar1 = strstr(local_5028,(char *)&local_5848);\n  } while (pcVar1 == (char *)0x0);\n  if (DAT_00482a5d != '\\0') {\n    if (((DAT_00590404 == '\\0') && (DAT_00482a5c == '\\0')) && (DAT_0007eba0 < 7)) {\nLAB_000244a0:\n      if ((DAT_00482a5c != '\\0') || (6 < DAT_0007eba0)) {\nLAB_000244c0:\n        snprintf((char *)&local_2828,0x800,\"get http=%s\",local_5028);\n        FUN_0002e584(7,&local_2828,0);\n      }\n    }\n    else {\n      local_2828._0_1_ = 'f';\n      local_2828._1_1_ = 'i';\n      local_2828._2_1_ = 'n';\n      local_2828._3_1_ = 'd';\n      uStack_2824._0_1_ = ' ';\n      uStack_2824._1_1_ = 'h';\n      uStack_2824._2_1_ = 't';\n      uStack_2824._3_1_ = 't';\n      uStack_2820._0_1_ = 'p';\n      uStack_2820._1_1_ = ' ';\n      uStack_2820._2_1_ = 'r';\n      uStack_2820._3_1_ = 'e';\n      uStack_281c._0_1_ = 'q';\n      uStack_281c._1_1_ = 'u';\n      uStack_281c._2_1_ = 'e';\n      uStack_281c._3_1_ = 's';\n      local_2818._0_1_ = 't';\n      local_2818._1_1_ = ' ';\n      local_2818._2_1_ = 'e';\n      local_2818._3_1_ = 'n';\n      local_2814._0_1_ = 'd';\n      local_2814._1_1_ = ' ';\n      local_2814._2_1_ = 'f';\n      local_2814._3_1_ = 'l';\n      local_2810._0_1_ = 'a';\n      local_2810._1_1_ = 'g';\n      local_2810._2_1_ = '!';\n      local_2810._3_1_ = '\\0';\n      FUN_0002e584(7,&local_2828,0);\nLAB_00024478:\n      if (DAT_00482a5d != '\\0') {\n        if (DAT_00590404 == '\\0') goto LAB_000244a0;\n        goto LAB_000244c0;\n      }\n    }\n  }\n  if ((((local_5028[0] != 'G') || (local_5028[1] != 'E')) || (local_5028[2] != 'T')) ||\n     (local_5028[3] != ' ')) {\n    close(param_1);\n    if ((DAT_00482a5d != '\\0') &&\n       (((DAT_00590404 != '\\0' || (DAT_00482a5c != '\\0')) || (6 < DAT_0007eba0)))) {\n      local_2828._0_1_ = 's';\n      local_2828._1_1_ = 't';\n      local_2828._2_1_ = 'a';\n      local_2828._3_1_ = 't';\n      uStack_2824._0_1_ = 'u';\n      uStack_2824._1_1_ = 's';\n      uStack_2824._2_1_ = 'S';\n      uStack_2824._3_1_ = 'e';\n      uStack_2820._0_1_ = 'r';\n      uStack_2820._1_1_ = 'v';\n      uStack_2820._2_1_ = 'i';\n      uStack_2820._3_1_ = 'c';\n      uStack_281c._0_1_ = 'e';\n      uStack_281c._1_1_ = 'T';\n      uStack_281c._2_1_ = 'h';\n      uStack_281c._3_1_ = 'r';\n      local_2818._0_1_ = 'e';\n      local_2818._1_1_ = 'a';\n      local_2818._2_1_ = 'd';\n      local_2818._3_1_ = ' ';\n      local_2814._0_1_ = 'n';\n      local_2814._1_1_ = 'o';\n      local_2814._2_1_ = 't';\n      local_2814._3_1_ = ' ';\n      local_2810._0_1_ = 's';\n      local_2810._1_1_ = 'u';\n      local_2810._2_1_ = 'p';\n      local_2810._3_1_ = 'p';\n      local_280c._0_1_ = 'o';\n      local_280c._1_1_ = 'r';\n      local_280c._2_1_ = 't';\n      local_280c._3_1_ = ' ';\n      local_2808._0_1_ = 'h';\n      local_2808._1_1_ = 't';\n      local_2808._2_1_ = 't';\n      local_2808._3_1_ = 'p';\n      uStack_2804._0_1_ = ' ';\n      uStack_2804._1_1_ = 'c';\n      uStack_2804._2_1_ = 'o';\n      uStack_2804._3_1_ = 'm';\n      uStack_2800._0_1_ = 'm';\n      uStack_2800._1_1_ = 'a';\n      uStack_2800._2_1_ = 'n';\n      uStack_2800._3_1_ = 'd';\n      local_27fc = 0;\n      FUN_0002e584(7,&local_2828,0);\n    }\n    goto LAB_0002458c;\n  }\n  iVar8 = setsockopt(param_1,1,0x15,&local_5840,8);\n  if (iVar8 == 0) {\n    iVar8 = setsockopt(param_1,1,0x14,&local_5840,8);\n    if (iVar8 == 0) {\n      if (DAT_0007f9fc == (code *)0x0) {\n        if ((DAT_00482a5d != '\\0') &&\n           (((DAT_00590404 != '\\0' || (DAT_00482a5c != '\\0')) || (6 < DAT_0007eba0)))) {\n          local_2828._0_1_ = 'N';\n          local_2828._1_1_ = 'o';\n          local_2828._2_1_ = ' ';\n          local_2828._3_1_ = '6';\n          uStack_2824._0_1_ = '0';\n          uStack_2824._1_1_ = '6';\n          uStack_2824._2_1_ = '0';\n          uStack_2824._3_1_ = ' ';\n          uStack_2820._0_1_ = 't';\n          uStack_2820._1_1_ = 'e';\n          uStack_2820._2_1_ = 's';\n          uStack_2820._3_1_ = 't';\n          uStack_281c._0_1_ = ' ';\n          uStack_281c._1_1_ = 'c';\n          uStack_281c._2_1_ = 'a';\n          uStack_281c._3_1_ = 's';\n          local_2818._0_1_ = 'e';\n          local_2818._1_1_ = ' ';\n          local_2818._2_1_ = 'f';\n          local_2818._3_1_ = 'o';\n          local_2814._0_1_ = 'u';\n          local_2814._1_1_ = 'n';\n          local_2814._2_1_ = 'd';\n          local_2814._3_1_ = '.';\n          local_2810 = local_2810 & 0xffffff00;\n          FUN_0002e584(7,&local_2828,0);\n        }\n      }\n      else {\n        iVar8 = (*DAT_0007f9fc)(local_5028,__s,0x6000);\n        if (iVar8 != 0) {\n          close(param_1);\n          if ((DAT_00482a5d != '\\0') &&\n             (((DAT_00590404 != '\\0' || (DAT_00482a5c != '\\0')) || (6 < DAT_0007eba0)))) {\n            local_2828._0_1_ = 's';\n            local_2828._1_1_ = 't';\n            local_2828._2_1_ = 'a';\n            local_2828._3_1_ = 't';\n            uStack_2824._0_1_ = 'u';\n            uStack_2824._1_1_ = 's';\n            uStack_2824._2_1_ = 'S';\n            uStack_2824._3_1_ = 'e';\n            uStack_2820._0_1_ = 'r';\n            uStack_2820._1_1_ = 'v';\n            uStack_2820._2_1_ = 'i';\n            uStack_2820._3_1_ = 'c';\n            uStack_281c._0_1_ = 'e';\n            uStack_281c._1_1_ = 'T';\n            uStack_281c._2_1_ = 'h';\n            uStack_281c._3_1_ = 'r';\n            local_2818._0_1_ = 'e';\n            local_2818._1_1_ = 'a';\n            local_2818._2_1_ = 'd';\n            local_2818._3_1_ = ' ';\n            local_2814._0_1_ = 'e';\n            local_2814._1_1_ = 'x';\n            local_2814._2_1_ = 'i';\n            local_2814._3_1_ = 't';\n            local_2810._0_1_ = ' ';\n            local_2810._1_1_ = 'f';\n            local_2810._2_1_ = 'o';\n            local_2810._3_1_ = 'r';\n            local_280c._0_1_ = ' ';\n            local_280c._1_1_ = 'E';\n            local_280c._2_1_ = 'r';\n            local_280c._3_1_ = 'r';\n            local_2808._0_1_ = 'o';\n            local_2808._1_1_ = 'r';\n            local_2808._2_1_ = ' ';\n            local_2808._3_1_ = 'c';\n            uStack_2804._0_1_ = 'm';\n            uStack_2804._1_1_ = 'd';\n            uStack_2804._2_1_ = '!';\n            uStack_2804._3_1_ = '\\0';\n            FUN_0002e584(7,&local_2828,0);\n          }\n          goto LAB_0002458c;\n        }\n      }\n      sVar2 = strlen(__s);\n      iVar8 = sprintf((char *)&local_2828,\"HTTP/1.0  200  OK%s\",&local_5850);\n      iVar3 = sprintf((char *)((int)&local_2828 + iVar8),\"Server: SearchFreqServer%s\",&local_5850);\n      iVar4 = sprintf((char *)((int)&local_2828 + iVar8 + iVar3),\"Cache-Control: no-cache%s\",\n                      &local_5850);\n      iVar4 = iVar8 + iVar3 + iVar4;\n      iVar8 = sprintf((char *)((int)&local_2828 + iVar4),\"Pragma: no-cache%s\",&local_5850);\n      iVar4 = iVar4 + iVar8;\n      iVar8 = sprintf((char *)((int)&local_2828 + iVar4),\"Content-Type: text/plain%s\",&local_5850);\n      iVar4 = iVar4 + iVar8;\n      iVar8 = sprintf((char *)((int)&local_2828 + iVar4),\"Content-Length: %d%s\",sVar2,&local_5850);\n      sprintf((char *)((int)&local_2828 + iVar4 + iVar8),\"Connection: Keep-Alive%s\",&local_5848);\n      if (DAT_00482a5d == '\\0') {\n        if (DAT_0007f9f8 == '\\0') goto LAB_0002496c;\n      }\n      else {\n        if (((DAT_00590404 == '\\0') && (DAT_00482a5c == '\\0')) && (DAT_0007eba0 < 7)) {\n          if (DAT_0007f9f8 == '\\0') {\nLAB_0002496c:\n            sVar5 = strlen((char *)&local_2828);\n            uVar9 = 0;\n            do {\n              sVar6 = send(param_1,(char *)((int)&local_2828 + uVar9),sVar5 - uVar9,0);\n              if (sVar6 == -1) {\n                piVar7 = __errno_location();\n                if (*piVar7 != 0xb) {\nLAB_000249f0:\n                  close(param_1);\n                  if ((DAT_00482a5d != '\\0') &&\n                     (((DAT_00590404 != '\\0' || (DAT_00482a5c != '\\0')) || (6 < DAT_0007eba0)))) {\n                    local_5828._0_1_ = 's';\n                    local_5828._1_1_ = 't';\n                    local_5828._2_1_ = 'a';\n                    local_5828._3_1_ = 't';\n                    uStack_5824._0_1_ = 'u';\n                    uStack_5824._1_1_ = 's';\n                    uStack_5824._2_1_ = 'S';\n                    uStack_5824._3_1_ = 'e';\n                    uStack_5820._0_1_ = 'r';\n                    uStack_5820._1_1_ = 'v';\n                    uStack_5820._2_1_ = 'i';\n                    uStack_5820._3_1_ = 'c';\n                    uStack_581c._0_1_ = 'e';\n                    uStack_581c._1_1_ = 'T';\n                    uStack_581c._2_1_ = 'h';\n                    uStack_581c._3_1_ = 'r';\n                    local_5818._0_1_ = 'e';\n                    local_5818._1_1_ = 'a';\n                    local_5818._2_1_ = 'd';\n                    local_5818._3_1_ = ' ';\n                    uStack_5814._0_1_ = 's';\n                    uStack_5814._1_1_ = 'e';\n                    uStack_5814._2_1_ = 'n';\n                    uStack_5814._3_1_ = 'd';\n                    local_5810._0_1_ = ' ';\n                    local_5810._1_1_ = 'h';\n                    local_5810._2_1_ = 't';\n                    local_5810._3_1_ = 't';\n                    uStack_580c._0_1_ = 'p';\n                    uStack_580c._1_1_ = ' ';\n                    uStack_580c._2_1_ = 'r';\n                    uStack_580c._3_1_ = 'e';\n                    local_5808._0_1_ = 's';\n                    local_5808._1_1_ = 'p';\n                    local_5808._2_1_ = 'o';\n                    local_5808._3_1_ = 'n';\n                    uStack_5804._0_1_ = 's';\n                    uStack_5804._1_1_ = 'e';\n                    uStack_5804._2_1_ = ' ';\n                    uStack_5804._3_1_ = 'e';\n                    local_5800._0_1_ = 'r';\n                    local_5800._1_1_ = 'r';\n                    local_5800._2_1_ = 'o';\n                    local_5800._3_1_ = 'r';\n                    local_57fc = local_57fc & 0xffffff00;\n                    FUN_0002e584(7,&local_5828,0);\n                  }\n                  goto LAB_00024594;\n                }\n                if ((DAT_00482a5d != '\\0') &&\n                   (((DAT_00590404 != '\\0' || (DAT_00482a5c != '\\0')) || (6 < DAT_0007eba0)))) {\n                  local_5828._0_1_ = 's';\n                  local_5828._1_1_ = 't';\n                  local_5828._2_1_ = 'a';\n                  local_5828._3_1_ = 't';\n                  uStack_5824._0_1_ = 'u';\n                  uStack_5824._1_1_ = 's';\n                  uStack_5824._2_1_ = 'S';\n                  uStack_5824._3_1_ = 'e';\n                  uStack_5820._0_1_ = 'r';\n                  uStack_5820._1_1_ = 'v';\n                  uStack_5820._2_1_ = 'i';\n                  uStack_5820._3_1_ = 'c';\n                  uStack_581c._0_1_ = 'e';\n                  uStack_581c._1_1_ = 'T';\n                  uStack_581c._2_1_ = 'h';\n                  uStack_581c._3_1_ = 'r';\n                  local_5818._0_1_ = 'e';\n                  local_5818._1_1_ = 'a';\n                  local_5818._2_1_ = 'd';\n                  local_5818._3_1_ = ' ';\n                  uStack_5814._0_1_ = 's';\n                  uStack_5814._1_1_ = 'e';\n                  uStack_5814._2_1_ = 'n';\n                  uStack_5814._3_1_ = 'd';\n                  local_5810._0_1_ = ' ';\n                  local_5810._1_1_ = 'h';\n                  local_5810._2_1_ = 't';\n                  local_5810._3_1_ = 't';\n                  uStack_580c._0_1_ = 'p';\n                  uStack_580c._1_1_ = ' ';\n                  uStack_580c._2_1_ = 't';\n                  uStack_580c._3_1_ = 'i';\n                  local_5808._0_1_ = 'm';\n                  local_5808._1_1_ = 'e';\n                  local_5808._2_1_ = 'o';\n                  local_5808._3_1_ = 'u';\n                  uStack_5804._0_1_ = 't';\n                  uStack_5804._1_1_ = ',';\n                  uStack_5804._2_1_ = ' ';\n                  uStack_5804._3_1_ = 't';\n                  local_5800._0_1_ = 'r';\n                  local_5800._1_1_ = 'y';\n                  local_5800._2_1_ = ' ';\n                  local_5800._3_1_ = 'a';\n                  local_57fc._0_1_ = 'g';\n                  local_57fc._1_1_ = 'a';\n                  local_57fc._2_1_ = 'i';\n                  local_57fc._3_1_ = 'n';\n                  local_57f8._0_1_ = '.';\n                  local_57f8._1_1_ = '.';\n                  local_57f8._2_1_ = '.';\n                  local_57f8._3_1_ = '\\0';\n                  FUN_0002e584(7,&local_5828,0);\n                }\n                usleep(100000);\n              }\n              else {\n                if (sVar6 < 1) goto LAB_000249f0;\n                uVar9 = uVar9 + sVar6;\n              }\n              sVar5 = strlen((char *)&local_2828);\n            } while ((uVar9 < sVar5) && (DAT_0007f9f8 == '\\0'));\n            goto LAB_00024ac0;\n          }\n        }\n        else {\n          local_5828._0_1_ = 's';\n          local_5828._1_1_ = 'e';\n          local_5828._2_1_ = 'n';\n          local_5828._3_1_ = 'd';\n          uStack_5824._0_1_ = ' ';\n          uStack_5824._1_1_ = 'h';\n          uStack_5824._2_1_ = 't';\n          uStack_5824._3_1_ = 't';\n          uStack_5820._0_1_ = 'p';\n          uStack_5820._1_1_ = ' ';\n          uStack_5820._2_1_ = 'r';\n          uStack_5820._3_1_ = 'e';\n          uStack_581c._0_1_ = 's';\n          uStack_581c._1_1_ = 'p';\n          uStack_581c._2_1_ = 'o';\n          uStack_581c._3_1_ = 'n';\n          local_5818._0_1_ = 's';\n          local_5818._1_1_ = 'e';\n          local_5818._2_1_ = '.';\n          local_5818._3_1_ = '.';\n          uStack_5814._0_3_ = 0xa2e;\n          FUN_0002e584(7,&local_5828,0);\n          if (DAT_0007f9f8 == '\\0') goto LAB_0002496c;\nLAB_00024ac0:\n          if (DAT_00482a5d == '\\0') goto LAB_00024ad4;\n        }\n        if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (6 < DAT_0007eba0)) {\n          local_5828._0_1_ = 's';\n          local_5828._1_1_ = 'e';\n          local_5828._2_1_ = 'n';\n          local_5828._3_1_ = 'd';\n          uStack_5824._0_1_ = ' ';\n          uStack_5824._1_1_ = 'h';\n          uStack_5824._2_1_ = 't';\n          uStack_5824._3_1_ = 't';\n          uStack_5820._0_1_ = 'p';\n          uStack_5820._1_1_ = ' ';\n          uStack_5820._2_1_ = 'd';\n          uStack_5820._3_1_ = 'a';\n          uStack_581c._0_1_ = 't';\n          uStack_581c._1_1_ = 'a';\n          uStack_581c._2_1_ = '.';\n          uStack_581c._3_1_ = '.';\n          local_5818._0_2_ = 0x2e;\n          FUN_0002e584(7,&local_5828,0);\n        }\n      }\nLAB_00024ad4:\n      iVar8 = 0;\n      while( true ) {\n        sVar6 = send(param_1,__s + iVar8,sVar2 - iVar8,0);\n        if ((DAT_00482a5d != '\\0') &&\n           (((DAT_00590404 != '\\0' || (DAT_00482a5c != '\\0')) || (6 < DAT_0007eba0)))) {\n          snprintf((char *)&local_5828,0x800,\"send http data ret=%d\",sVar6);\n          FUN_0002e584(7,&local_5828,0);\n        }\n        if (sVar6 < 1) break;\n        iVar8 = iVar8 + sVar6;\n        if (((int)sVar2 <= iVar8) || (DAT_0007f9f8 != '\\0')) goto LAB_00024c14;\n      }\n      if (DAT_00482a5d == '\\0') goto LAB_00024c8c;\n      if (((DAT_00590404 == '\\0') && (DAT_00482a5c == '\\0')) && (DAT_0007eba0 < 7))\n      goto LAB_00024c3c;\n      local_5828._0_1_ = 's';\n      local_5828._1_1_ = 't';\n      local_5828._2_1_ = 'a';\n      local_5828._3_1_ = 't';\n      uStack_5824._0_1_ = 'u';\n      uStack_5824._1_1_ = 's';\n      uStack_5824._2_1_ = 'S';\n      uStack_5824._3_1_ = 'e';\n      uStack_5820._0_1_ = 'r';\n      uStack_5820._1_1_ = 'v';\n      uStack_5820._2_1_ = 'i';\n      uStack_5820._3_1_ = 'c';\n      uStack_581c._0_1_ = 'e';\n      uStack_581c._1_1_ = 'T';\n      uStack_581c._2_1_ = 'h';\n      uStack_581c._3_1_ = 'r';\n      local_5818._0_1_ = 'e';\n      local_5818._1_1_ = 'a';\n      local_5818._2_1_ = 'd';\n      local_5818._3_1_ = ' ';\n      uStack_5814._0_1_ = 's';\n      uStack_5814._1_1_ = 'e';\n      uStack_5814._2_1_ = 'n';\n      uStack_5814._3_1_ = 'd';\n      local_5810._0_1_ = ' ';\n      local_5810._1_1_ = 'h';\n      local_5810._2_1_ = 't';\n      local_5810._3_1_ = 't';\n      uStack_580c._0_1_ = 'p';\n      uStack_580c._1_1_ = ' ';\n      uStack_580c._2_1_ = 'd';\n      uStack_580c._3_1_ = 'a';\n      local_5808._0_1_ = 't';\n      local_5808._1_1_ = 'a';\n      local_5808._2_1_ = ' ';\n      local_5808._3_1_ = 'e';\n      uStack_5804._0_1_ = 'r';\n      uStack_5804._1_1_ = 'r';\n      uStack_5804._2_1_ = 'o';\n      uStack_5804._3_1_ = 'r';\n      local_5800 = local_5800 & 0xffffff00;\n      FUN_0002e584(7,&local_5828,0);\nLAB_00024c14:\n      if (DAT_00482a5d != '\\0') {\n        if (DAT_00590404 == '\\0') {\nLAB_00024c3c:\n          if ((DAT_00482a5c == '\\0') && (DAT_0007eba0 < 7)) goto LAB_00024c8c;\n        }\n        local_5828._0_1_ = 'o';\n        local_5828._1_1_ = 'n';\n        local_5828._2_1_ = 'e';\n        local_5828._3_1_ = ' ';\n        uStack_5824._0_1_ = 'c';\n        uStack_5824._1_1_ = 'l';\n        uStack_5824._2_1_ = 'i';\n        uStack_5824._3_1_ = 'e';\n        uStack_5820._0_1_ = 'n';\n        uStack_5820._1_1_ = 't';\n        uStack_5820._2_1_ = ' ';\n        uStack_5820._3_1_ = 'd';\n        uStack_581c._0_1_ = 'i';\n        uStack_581c._1_1_ = 's';\n        uStack_581c._2_1_ = 'c';\n        uStack_581c._3_1_ = 'o';\n        local_5818._0_1_ = 'n';\n        local_5818._1_1_ = 'n';\n        local_5818._2_1_ = 'e';\n        local_5818._3_1_ = 'c';\n        uStack_5814._0_1_ = 't';\n        uStack_5814._1_1_ = 'e';\n        uStack_5814._2_1_ = 'd';\n        uStack_5814._3_1_ = '!';\n        local_5810 = local_5810 & 0xffffff00;\n        FUN_0002e584(7,&local_5828,0);\n      }\nLAB_00024c8c:\n      close(param_1);\n      free(__s);\n      return iVar8;\n    }\n    close(param_1);\n    if ((DAT_00482a5d == '\\0') ||\n       (((DAT_00590404 == '\\0' && (DAT_00482a5c == '\\0')) && (DAT_0007eba0 < 7))))\n    goto LAB_0002458c;\n    pcVar10 = \"setsockopt SO_RCVTIMEO failed\";\n  }\n  else {\n    close(param_1);\n    if ((DAT_00482a5d == '\\0') ||\n       (((DAT_00590404 == '\\0' && (DAT_00482a5c == '\\0')) && (DAT_0007eba0 < 7))))\n    goto LAB_0002458c;\n    pcVar10 = \"setsockopt SO_SNDTIMEO failed\";\n  }\n  local_2828 = *(undefined4 *)pcVar10;\n  uStack_2824 = *(undefined4 *)((int)pcVar10 + 4);\n  uStack_2820 = *(undefined4 *)((int)pcVar10 + 8);\n  uStack_281c = *(undefined4 *)((int)pcVar10 + 0xc);\n  local_2818 = *(undefined4 *)((int)pcVar10 + 0x10);\n  local_2814 = *(undefined4 *)((int)pcVar10 + 0x14);\n  local_2810 = *(uint *)((int)pcVar10 + 0x18);\n  local_280c._0_2_ = (short)*(undefined4 *)((int)pcVar10 + 0x1c);\n  FUN_0002e584(7,&local_2828,0);\nLAB_0002458c:\n  if (__s != (char *)0x0) {\nLAB_00024594:\n    free(__s);\n  }\n  return 0;\n}\n\n",
    "FUN_00024f04": "\nundefined4 FUN_00024f04(void)\n\n{\n  int iVar1;\n  socklen_t local_84c;\n  sockaddr local_848;\n  sockaddr sStack_838;\n  undefined4 local_828;\n  undefined4 uStack_824;\n  undefined4 uStack_820;\n  undefined4 uStack_81c;\n  undefined4 local_818;\n  undefined4 uStack_814;\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined2 local_7fc;\n  undefined local_7fa;\n  \n  prctl(0xf,&DAT_00062e4c,0,0,0);\n  do {\n    DAT_0007e2ec = socket(2,1,6);\n    if (DAT_0007e2ec < 0) {\n      if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (4 < DAT_0007eba0)) {\n        local_828._0_1_ = 's';\n        local_828._1_1_ = 'o';\n        local_828._2_1_ = 'c';\n        local_828._3_1_ = 'k';\n        uStack_824._0_1_ = 'e';\n        uStack_824._1_1_ = 't';\n        uStack_824._2_1_ = ' ';\n        uStack_824._3_1_ = 'c';\n        uStack_820._0_1_ = 'r';\n        uStack_820._1_1_ = 'e';\n        uStack_820._2_1_ = 'a';\n        uStack_820._3_1_ = 't';\n        uStack_81c._0_1_ = 'i';\n        uStack_81c._1_1_ = 'n';\n        uStack_81c._2_1_ = 'g';\n        uStack_81c._3_1_ = ' ';\n        local_818._0_1_ = 'f';\n        local_818._1_1_ = 'a';\n        local_818._2_1_ = 'i';\n        local_818._3_1_ = 'l';\n        uStack_814._0_1_ = 'e';\n        uStack_814._1_1_ = 'd';\n        uStack_814._2_1_ = ',';\n        uStack_814._3_1_ = ' ';\n        local_810._0_1_ = 't';\n        local_810._1_1_ = 'r';\n        local_810._2_1_ = 'y';\n        local_810._3_1_ = ' ';\n        uStack_80c._0_1_ = 'a';\n        uStack_80c._1_1_ = 'g';\n        uStack_80c._2_1_ = 'a';\n        uStack_80c._3_1_ = 'i';\n        local_808._0_1_ = 'n';\n        local_808._1_1_ = ' ';\n        local_808._2_1_ = 'a';\n        local_808._3_1_ = 'f';\n        uStack_804._0_1_ = 't';\n        uStack_804._1_1_ = 'e';\n        uStack_804._2_1_ = 'r';\n        uStack_804._3_1_ = ' ';\n        uStack_800._0_1_ = '1';\n        uStack_800._1_1_ = '0';\n        uStack_800._2_1_ = 's';\n        uStack_800._3_1_ = '.';\n        local_7fc = 0x2e2e;\n        local_7fa = 0;\n        FUN_0002e584(5,&local_828,0);\n      }\n      sleep(10);\n    }\n    else {\n      local_848.sa_data[6] = '\\0';\n      local_848.sa_data[7] = '\\0';\n      local_848.sa_data[8] = '\\0';\n      local_848.sa_data[9] = '\\0';\n      local_848.sa_data[10] = '\\0';\n      local_848.sa_data[11] = '\\0';\n      local_848.sa_data[12] = '\\0';\n      local_848.sa_data[13] = '\\0';\n      local_848.sa_family = 2;\n      local_848.sa_data[0] = '\\x17';\n      local_848.sa_data[1] = -0x54;\n      local_848.sa_data[2] = '\\0';\n      local_848.sa_data[3] = '\\0';\n      local_848.sa_data[4] = '\\0';\n      local_848.sa_data[5] = '\\0';\n      iVar1 = bind(DAT_0007e2ec,&local_848,0x10);\n      if (iVar1 < 0) {\n        if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (4 < DAT_0007eba0)) {\n          local_828._0_1_ = 'h';\n          local_828._1_1_ = 't';\n          local_828._2_1_ = 't';\n          local_828._3_1_ = 'p';\n          uStack_824._0_1_ = ' ';\n          uStack_824._1_1_ = 'p';\n          uStack_824._2_1_ = 'o';\n          uStack_824._3_1_ = 'r';\n          uStack_820._0_1_ = 't';\n          uStack_820._1_1_ = ' ';\n          uStack_820._2_1_ = 'b';\n          uStack_820._3_1_ = 'i';\n          uStack_81c._0_1_ = 'n';\n          uStack_81c._1_1_ = 'd';\n          uStack_81c._2_1_ = ' ';\n          uStack_81c._3_1_ = 'f';\n          local_818._0_1_ = 'a';\n          local_818._1_1_ = 'i';\n          local_818._2_1_ = 'l';\n          local_818._3_1_ = 'e';\n          uStack_814._0_1_ = 'd';\n          uStack_814._1_1_ = '!';\n          uStack_814._2_1_ = ' ';\n          uStack_814._3_1_ = 't';\n          local_810._0_1_ = 'r';\n          local_810._1_1_ = 'y';\n          local_810._2_1_ = ' ';\n          local_810._3_1_ = 'a';\n          uStack_80c._0_1_ = 'g';\n          uStack_80c._1_1_ = 'a';\n          uStack_80c._2_1_ = 'i';\n          uStack_80c._3_1_ = 'n';\n          local_808._0_1_ = ' ';\n          local_808._1_1_ = 'a';\n          local_808._2_1_ = 'f';\n          local_808._3_1_ = 't';\n          uStack_804._0_1_ = 'e';\n          uStack_804._1_1_ = 'r';\n          uStack_804._2_1_ = ' ';\n          uStack_804._3_1_ = '1';\n          uStack_800._0_1_ = '0';\n          uStack_800._1_1_ = 's';\n          uStack_800._2_1_ = '.';\n          uStack_800._3_1_ = '.';\n          local_7fc = 0x2e;\n          FUN_0002e584(5,&local_828,0);\n        }\n      }\n      else {\n        iVar1 = listen(DAT_0007e2ec,100);\n        if (-1 < iVar1) break;\n        if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (4 < DAT_0007eba0)) {\n          local_828._0_1_ = 'h';\n          local_828._1_1_ = 't';\n          local_828._2_1_ = 't';\n          local_828._3_1_ = 'p';\n          uStack_824._0_1_ = ' ';\n          uStack_824._1_1_ = 'l';\n          uStack_824._2_1_ = 'i';\n          uStack_824._3_1_ = 's';\n          uStack_820._0_1_ = 't';\n          uStack_820._1_1_ = 'e';\n          uStack_820._2_1_ = 'n';\n          uStack_820._3_1_ = ' ';\n          uStack_81c._0_1_ = 'f';\n          uStack_81c._1_1_ = 'a';\n          uStack_81c._2_1_ = 'i';\n          uStack_81c._3_1_ = 'l';\n          local_818._0_1_ = 'e';\n          local_818._1_1_ = 'd';\n          local_818._2_1_ = '!';\n          local_818._3_1_ = ' ';\n          uStack_814._0_1_ = 't';\n          uStack_814._1_1_ = 'r';\n          uStack_814._2_1_ = 'y';\n          uStack_814._3_1_ = ' ';\n          local_810._0_1_ = 'a';\n          local_810._1_1_ = 'g';\n          local_810._2_1_ = 'a';\n          local_810._3_1_ = 'i';\n          uStack_80c._0_1_ = 'n';\n          uStack_80c._1_1_ = ' ';\n          uStack_80c._2_1_ = 'a';\n          uStack_80c._3_1_ = 'f';\n          local_808._0_1_ = 't';\n          local_808._1_1_ = 'e';\n          local_808._2_1_ = 'r';\n          local_808._3_1_ = ' ';\n          uStack_804._0_1_ = '1';\n          uStack_804._1_1_ = '0';\n          uStack_804._2_1_ = 's';\n          uStack_804._3_1_ = '.';\n          uStack_800._0_3_ = 0x2e2e;\n          FUN_0002e584(5,&local_828,0);\n        }\n      }\n      close(DAT_0007e2ec);\n      DAT_0007e2ec = -1;\n      sleep(10);\n    }\n  } while (DAT_0007f9f8 == '\\0');\n  if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (4 < DAT_0007eba0)) {\n    local_828._0_1_ = 's';\n    local_828._1_1_ = 't';\n    local_828._2_1_ = 'a';\n    local_828._3_1_ = 'r';\n    uStack_824._0_1_ = 't';\n    uStack_824._1_1_ = ' ';\n    uStack_824._2_1_ = 'l';\n    uStack_824._3_1_ = 'i';\n    uStack_820._0_1_ = 's';\n    uStack_820._1_1_ = 't';\n    uStack_820._2_1_ = 'e';\n    uStack_820._3_1_ = 'n';\n    uStack_81c._0_1_ = ' ';\n    uStack_81c._1_1_ = 'o';\n    uStack_81c._2_1_ = 'n';\n    uStack_81c._3_1_ = ' ';\n    local_818._0_1_ = '6';\n    local_818._1_1_ = '0';\n    local_818._2_1_ = '6';\n    local_818._3_1_ = '0';\n    uStack_814._0_1_ = ' ';\n    uStack_814._1_1_ = '.';\n    uStack_814._2_1_ = '.';\n    uStack_814._3_1_ = '.';\n    local_810 = local_810 & 0xffffff00;\n    FUN_0002e584(5,&local_828,0);\n  }\n  do {\n    do {\n      if (DAT_0007f9f8 != '\\0') {\nLAB_000250e4:\n        close(DAT_0007e2ec);\n        DAT_0007e2ec = 0xffffffff;\n        return 0;\n      }\n      usleep(10000);\n      local_84c = 0x10;\n      iVar1 = accept(DAT_0007e2ec,&sStack_838,&local_84c);\n    } while (iVar1 == -1);\n    if (DAT_0007f9f8 != '\\0') {\n      close(iVar1);\n      goto LAB_000250e4;\n    }\n    if ((DAT_00482a5d != '\\0') &&\n       (((DAT_00590404 != '\\0' || (DAT_00482a5c != '\\0')) || (6 < DAT_0007eba0)))) {\n      snprintf((char *)&local_828,0x800,\"one client connected sock=%d\",iVar1);\n      FUN_0002e584(7,&local_828,0);\n    }\n    FUN_00024398(iVar1);\n  } while( true );\n}\n\n",
    "FUN_00025284": "\nvoid FUN_00025284(void)\n\n{\n  int iVar1;\n  pthread_t pStack_830;\n  pthread_attr_t pStack_82c;\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined4 uStack_7fc;\n  undefined4 uStack_7f8;\n  undefined local_7f4;\n  \n  if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (4 < DAT_0007eba0)) {\n    local_808._0_1_ = 's';\n    local_808._1_1_ = 't';\n    local_808._2_1_ = 'a';\n    local_808._3_1_ = 'r';\n    uStack_804._0_1_ = 't';\n    uStack_804._1_1_ = ' ';\n    uStack_804._2_1_ = 't';\n    uStack_804._3_1_ = 'h';\n    uStack_800._0_1_ = 'e';\n    uStack_800._1_1_ = ' ';\n    uStack_800._2_1_ = 'h';\n    uStack_800._3_1_ = 't';\n    uStack_7fc._0_1_ = 't';\n    uStack_7fc._1_1_ = 'p';\n    uStack_7fc._2_1_ = ' ';\n    uStack_7fc._3_1_ = 'l';\n    uStack_7f8._0_1_ = 'o';\n    uStack_7f8._1_1_ = 'g';\n    uStack_7f8._2_1_ = '.';\n    uStack_7f8._3_1_ = '\\n';\n    local_7f4 = 0;\n    FUN_0002e584(5,&local_808,0);\n  }\n  pthread_attr_init(&pStack_82c);\n  pthread_attr_setstacksize(&pStack_82c,0x200000);\n  iVar1 = pthread_create(&pStack_830,&pStack_82c,FUN_00024f04,(void *)0x0);\n  if (((DAT_00590404 == '\\0') && (DAT_00482a5c == '\\0')) && (DAT_0007eba0 < 5)) {\n    return;\n  }\n  snprintf((char *)&local_808,0x800,\"httpListenThread start ret=%d\",iVar1);\n  FUN_0002e584(5,&local_808,0);\n  return;\n}\n\n",
    "FUN_000253a0": "\nchar * FUN_000253a0(char *param_1)\n\n{\n  char cVar1;\n  int iVar2;\n  char *pcVar3;\n  size_t sVar4;\n  size_t sVar5;\n  hostent *phVar6;\n  int iVar7;\n  ssize_t sVar8;\n  long lVar9;\n  char *__dest;\n  uint uVar10;\n  undefined4 local_2020;\n  undefined4 local_201c;\n  char acStack_2018 [1023];\n  undefined auStack_1c19 [1025];\n  undefined local_1818;\n  undefined uStack_1817;\n  undefined2 uStack_1816;\n  undefined4 local_1814;\n  undefined4 uStack_1810;\n  undefined4 local_180c;\n  undefined4 local_1808;\n  undefined4 uStack_1804;\n  undefined2 local_1800;\n  char acStack_1018 [4096];\n  \n  memset(acStack_1018,0,0x1000);\n  memset(acStack_2018,0,0x400);\n  memset(auStack_1c19 + 1,0,0x400);\n  if (param_1 == (char *)0x0) {\n    if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (4 < DAT_0007eba0)) {\n      _local_1818 = 0x206c7275;\n      local_1814._0_1_ = 'i';\n      local_1814._1_1_ = 's';\n      local_1814._2_1_ = ' ';\n      local_1814._3_1_ = 'n';\n      uStack_1810._0_1_ = 'u';\n      uStack_1810._1_1_ = 'l';\n      uStack_1810._2_1_ = 'l';\n      uStack_1810._3_1_ = '!';\n      local_180c._0_2_ = 10;\n      FUN_0002e584(5,(sockaddr *)&local_1818,0);\n      return (char *)0x0;\n    }\n  }\n  else {\n    iVar2 = strncmp(param_1,\"http://\",7);\n    if (iVar2 != 0) {\n      if (((DAT_00590404 == '\\0') && (DAT_00482a5c == '\\0')) && (DAT_0007eba0 < 5)) {\n        return (char *)0x0;\n      }\n      local_1818 = 'p';\n      uStack_1817 = 'a';\n      uStack_1816._0_1_ = 'r';\n      uStack_1816._1_1_ = 's';\n      local_1814._0_1_ = 'e';\n      local_1814._1_1_ = ' ';\n      local_1814._2_1_ = 'u';\n      local_1814._3_1_ = 'r';\n      uStack_1810._0_1_ = 'l';\n      uStack_1810._1_1_ = ' ';\n      uStack_1810._2_1_ = 'f';\n      uStack_1810._3_1_ = 'a';\n      local_180c._0_1_ = 'i';\n      local_180c._1_1_ = 'l';\n      local_180c._2_1_ = 'e';\n      local_180c._3_1_ = 'd';\n      local_1808 = CONCAT13(local_1808._3_1_,0xa21);\n      FUN_0002e584(5,(sockaddr *)&local_1818,0);\n      return (char *)0x0;\n    }\n    param_1 = param_1 + 7;\n    pcVar3 = strchr(param_1,0x2f);\n    sVar4 = strlen(param_1);\n    if (pcVar3 == (char *)0x0) {\n      memcpy(acStack_2018,param_1,sVar4);\n      acStack_2018[sVar4] = '\\0';\n    }\n    else {\n      sVar5 = strlen(pcVar3);\n      memcpy(acStack_2018,param_1,sVar4 - sVar5);\n      cVar1 = pcVar3[1];\n      acStack_2018[sVar4 - sVar5] = '\\0';\n      if (cVar1 != '\\0') {\n        memcpy(auStack_1c19 + 1,pcVar3 + 1,sVar5 - 1);\n        auStack_1c19[sVar5] = 0;\n      }\n    }\n    pcVar3 = strchr(acStack_2018,0x3a);\n    if (pcVar3 == (char *)0x0) {\n      uVar10 = 0x50;\n    }\n    else {\n      *pcVar3 = '\\0';\n      uVar10 = strtol(pcVar3 + 1,(char **)0x0,10);\n    }\n    phVar6 = gethostbyname(acStack_2018);\n    if (phVar6 != (hostent *)0x0) {\n      uStack_1816 = (ushort)((uVar10 & 0xff) << 8) | (ushort)(uVar10 >> 8) & 0xff;\n      _local_1818 = 2;\n      local_1814 = *(undefined4 *)*phVar6->h_addr_list;\n      iVar2 = socket(2,1,0);\n      if (iVar2 != -1) {\n        local_2020 = 10;\n        local_201c = 0;\n        iVar7 = setsockopt(iVar2,1,0x15,&local_2020,8);\n        if (((iVar7 == 0) && (iVar7 = setsockopt(iVar2,1,0x14,&local_2020,8), iVar7 == 0)) &&\n           ((iVar7 = connect(iVar2,(sockaddr *)&local_1818,0x10), iVar7 != -1 && (-1 < iVar2)))) {\n          sprintf(acStack_1018,\"GET /%s HTTP/1.1\\r\\nHOST: %s:%d\\r\\nAccept: */*\\r\\n\\r\\n\",\n                  auStack_1c19 + 1,acStack_2018,uVar10);\n          sVar4 = strlen(acStack_1018);\n          iVar7 = 0;\n          if (sVar4 != 0) {\n            do {\n              sVar8 = send(iVar2,acStack_1018 + iVar7,sVar4 - iVar7,0);\n              iVar7 = iVar7 + sVar8;\n              if (sVar8 == -1) {\n                if (((DAT_00590404 == '\\0') && (DAT_00482a5c == '\\0')) && (DAT_0007eba0 < 5)) {\n                  return (char *)0x0;\n                }\n                pcVar3 = \"tcp client send failed\\n\";\n                goto LAB_000255fc;\n              }\n            } while (iVar7 < (int)sVar4);\n          }\n          sVar8 = recv(iVar2,acStack_1018,0x1000,0);\n          if (0 < sVar8) {\n            close(iVar2);\n            pcVar3 = strstr(acStack_1018,\"HTTP/1.1\");\n            if (pcVar3 == (char *)0x0) {\n              return (char *)0x0;\n            }\n            lVar9 = strtol(pcVar3 + 9,(char **)0x0,10);\n            if (lVar9 != 200) {\n              return (char *)0x0;\n            }\n            pcVar3 = strstr(acStack_1018,\"\\r\\n\\r\\n\");\n            if (pcVar3 == (char *)0x0) {\n              return (char *)0x0;\n            }\n            sVar4 = strlen(pcVar3);\n            __dest = (char *)malloc(sVar4 + 1);\n            if (__dest == (char *)0x0) {\n              return (char *)0x0;\n            }\n            strcpy(__dest,pcVar3 + 4);\n            return __dest;\n          }\n          if (((DAT_00590404 == '\\0') && (DAT_00482a5c == '\\0')) && (DAT_0007eba0 < 5)) {\n            return (char *)0x0;\n          }\n          pcVar3 = \"tcp client recv failed\\n\";\nLAB_000255fc:\n          _local_1818 = *(undefined4 *)pcVar3;\n          local_1814 = *(undefined4 *)((int)pcVar3 + 4);\n          uStack_1810 = *(undefined4 *)((int)pcVar3 + 8);\n          local_180c = *(undefined4 *)((int)pcVar3 + 0xc);\n          local_1808 = *(undefined4 *)((int)pcVar3 + 0x10);\n          uStack_1804 = *(undefined4 *)((int)pcVar3 + 0x14);\n          FUN_0002e584(5,(sockaddr *)&local_1818,0);\n          return (char *)0x0;\n        }\n      }\n    }\n    if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (4 < DAT_0007eba0)) {\n      local_1818 = 't';\n      uStack_1817 = 'c';\n      uStack_1816._0_1_ = 'p';\n      uStack_1816._1_1_ = ' ';\n      local_1814._0_1_ = 'c';\n      local_1814._1_1_ = 'l';\n      local_1814._2_1_ = 'i';\n      local_1814._3_1_ = 'e';\n      uStack_1810._0_1_ = 'n';\n      uStack_1810._1_1_ = 't';\n      uStack_1810._2_1_ = ' ';\n      uStack_1810._3_1_ = 'c';\n      local_180c._0_1_ = 'r';\n      local_180c._1_1_ = 'e';\n      local_180c._2_1_ = 'a';\n      local_180c._3_1_ = 't';\n      local_1808._0_1_ = 'e';\n      local_1808._1_1_ = ' ';\n      local_1808._2_1_ = 'f';\n      local_1808._3_1_ = 'a';\n      uStack_1804._0_1_ = 'i';\n      uStack_1804._1_1_ = 'l';\n      uStack_1804._2_1_ = 'e';\n      uStack_1804._3_1_ = 'd';\n      local_1800 = 10;\n      FUN_0002e584(5,(sockaddr *)&local_1818,0);\n      return (char *)0x0;\n    }\n  }\n  return (char *)0x0;\n}\n\n",
    "FUN_000258c8": "\nint FUN_000258c8(char *param_1)\n\n{\n  int __fd;\n  int iVar1;\n  int iVar2;\n  char *__src;\n  undefined *puVar3;\n  uint uVar4;\n  bool bVar5;\n  uint local_228;\n  undefined *puStack_224;\n  undefined auStack_220 [512];\n  \n  __fd = socket(2,2,0);\n  if (__fd < 0) {\n    iVar1 = -1;\n  }\n  else {\n    local_228 = 0x200;\n    puStack_224 = auStack_220;\n    iVar1 = ioctl(__fd,0x8912,&local_228);\n    if (iVar1 == 0) {\n      iVar1 = -1;\n      uVar4 = local_228 >> 5;\n      puVar3 = auStack_220 + (uVar4 - 1) * 0x20;\n      while (bVar5 = uVar4 != 0, uVar4 = uVar4 - 1, bVar5) {\n        iVar2 = ioctl(__fd,0x8915,puVar3);\n        if ((iVar2 == 0) &&\n           (__src = inet_ntoa((in_addr)*(in_addr_t *)(puVar3 + 0x14)), __src != (char *)0x0)) {\n          strcpy(param_1,__src);\n          iVar1 = strcmp(\"127.0.0.1\",param_1);\n          if (iVar1 != 0) {\n            iVar1 = 0;\n            break;\n          }\n        }\n        puVar3 = puVar3 + -0x20;\n      }\n    }\n    else {\n      iVar1 = -1;\n    }\n    close(__fd);\n  }\n  return iVar1;\n}\n\n",
    "FUN_000259a8": "\nvoid FUN_000259a8(void)\n\n{\n  int iVar1;\n  undefined *puVar2;\n  uint uVar3;\n  double dVar4;\n  double dVar5;\n  double dVar6;\n  double dVar7;\n  int local_848 [4];\n  char acStack_838 [2048];\n  \n  local_848[0] = 0;\n  local_848[1] = 0;\n  local_848[2] = 0;\n  local_848[3] = 0;\n  prctl(0xf,\"heart_beat\",0,0,0);\n  dVar7 = -1.0;\n  do {\n    uVar3 = 0;\n    dVar6 = 0.0;\n    pthread_setcancelstate(1,(int *)0x0);\n    do {\n      iVar1 = FUN_0001e29c(uVar3);\n      if (iVar1 != 0) {\n        FUN_000304d4(10);\n        iVar1 = FUN_000191fc(uVar3 & 0xff);\n        if (iVar1 == 0) {\n          iVar1 = local_848[uVar3];\n          local_848[uVar3] = iVar1 + 1;\n          if (1 < DAT_0007eb9c) {\n            snprintf(acStack_838,0x800,\"chain[%d] heart beat fail %d times.\\n\",uVar3,iVar1 + 1);\n            FUN_0002e584(1,acStack_838,0);\n          }\n        }\n        else {\n          local_848[uVar3] = 0;\n        }\n        FUN_000304d4(10);\n        dVar5 = (double)FUN_000192c8(uVar3);\n        dVar6 = dVar6 + dVar5;\n      }\n      uVar3 = uVar3 + 1;\n    } while (uVar3 != 4);\n    iVar1 = FUN_0001e28c();\n    if (iVar1 != 0) {\n      iVar1 = FUN_0001e28c();\n      dVar6 = dVar6 / (double)(longlong)iVar1;\n    }\n    if (dVar7 < -0.1) {\n      dVar7 = dVar6;\n    }\n    if (4 < DAT_0007eb9c) {\n      snprintf(acStack_838,0x800,\"last avg = %.2f, current voltage = %.2f\",DAT_0007eb9c,dVar7,dVar6)\n      ;\n      FUN_0002e584(4,acStack_838,0);\n    }\n    dVar5 = (double)(longlong)(DAT_00482a8c / 100) * 0.75;\n    if ((((dVar5 < dVar7) &&\n         (dVar4 = dVar7 * 0.75, dVar4 != dVar6 && dVar4 < dVar6 == (NAN(dVar4) || NAN(dVar6)))) ||\n        ((dVar5 < dVar6 &&\n         (dVar5 = dVar6 * 0.75, dVar5 != dVar7 && dVar5 < dVar7 == (NAN(dVar5) || NAN(dVar7)))))) &&\n       (3 < DAT_0007eb9c)) {\n      dVar7 = dVar6 - dVar7;\n      puVar2 = &UNK_000613bc;\n      if (dVar7 != 0.0 && dVar7 < 0.0 == NAN(dVar7)) {\n        puVar2 = &UNK_000613b4;\n      }\n      snprintf(acStack_838,0x800,\"chain avg vol %s to %.2f\",puVar2,dVar6);\n      FUN_0002e584(3,acStack_838,0);\n    }\n    pthread_setcancelstate(0,(int *)0x0);\n    pthread_testcancel();\n    sleep(10);\n    dVar7 = dVar6;\n  } while( true );\n}\n\n",
    "FUN_00025c08": "\nundefined4 FUN_00025c08(void)\n\n{\n  int iVar1;\n  int iVar2;\n  uint *__ptr;\n  int iVar3;\n  uint uVar4;\n  uint *puVar5;\n  uint uVar6;\n  int iVar7;\n  bool bVar8;\n  undefined8 uVar9;\n  undefined4 local_820;\n  undefined4 uStack_81c;\n  undefined4 uStack_818;\n  undefined4 uStack_814;\n  undefined4 uStack_810;\n  undefined4 local_80c;\n  undefined4 uStack_808;\n  \n  iVar1 = FUN_0001e0e0();\n  iVar2 = FUN_0001e150();\n  iVar2 = iVar2 * iVar1;\n  __ptr = (uint *)malloc(iVar2 * 4);\n  if (__ptr == (uint *)0x0) {\n    if (3 < DAT_0007eb9c) {\n      local_820._0_1_ = 'f';\n      local_820._1_1_ = 'a';\n      local_820._2_1_ = 'i';\n      local_820._3_1_ = 'l';\n      uStack_81c._0_1_ = 'e';\n      uStack_81c._1_1_ = 'd';\n      uStack_81c._2_1_ = ' ';\n      uStack_81c._3_1_ = 'a';\n      uStack_818._0_1_ = 'l';\n      uStack_818._1_1_ = 'l';\n      uStack_818._2_1_ = 'o';\n      uStack_818._3_1_ = 'c';\n      uStack_814._0_1_ = ' ';\n      uStack_814._1_1_ = 'm';\n      uStack_814._2_1_ = 'e';\n      uStack_814._3_1_ = 'm';\n      uStack_810._0_1_ = 'o';\n      uStack_810._1_1_ = 'r';\n      uStack_810._2_1_ = 'y';\n      uStack_810._3_1_ = '!';\n      local_80c = CONCAT22(local_80c._2_2_,10);\n      FUN_0002e584(3,&local_820,0);\n    }\n  }\n  else {\n    iVar1 = 0;\n    do {\n      iVar3 = FUN_0001e29c(iVar1);\n      if ((iVar3 != 0) && (iVar2 != 0)) {\n        puVar5 = __ptr + -1;\n        uVar6 = 0;\n        iVar7 = 0;\n        iVar3 = 0;\n        do {\n          uVar4 = FUN_0002cd30(iVar1,iVar3);\n          iVar3 = iVar3 + 1;\n          bVar8 = CARRY4(uVar6,uVar4);\n          uVar6 = uVar6 + uVar4;\n          iVar7 = iVar7 + (uint)bVar8;\n          puVar5 = puVar5 + 1;\n          *puVar5 = uVar4;\n        } while (iVar2 - iVar3 != 0);\n        uVar9 = FUN_00060120(uVar6,iVar7,iVar2,0);\n        uVar6 = (uint)((ulonglong)uVar9 >> 0x20);\n        uVar4 = (uint)uVar9;\n        if ((uVar6 != 0 || 0x1386 < uVar4) && (uVar6 != 0 || uVar4 != 4999)) {\n          uVar6 = uVar6 >> 1;\n          uVar4 = (uint)((byte)((ulonglong)uVar9 >> 0x20) & 1) << 0x1f | uVar4 >> 1;\n          bVar8 = uVar6 == 0;\n          if (uVar6 == 0) {\n            bVar8 = uVar4 <= *__ptr;\n          }\n          if (!bVar8) {\nLAB_00025d0c:\n            if (3 < DAT_0007eb9c) {\n              local_820._0_1_ = 'D';\n              local_820._1_1_ = 'o';\n              local_820._2_1_ = 'm';\n              local_820._3_1_ = 'a';\n              uStack_81c._0_1_ = 'i';\n              uStack_81c._1_1_ = 'n';\n              uStack_81c._2_1_ = ' ';\n              uStack_81c._3_1_ = 'u';\n              uStack_818._0_1_ = 'n';\n              uStack_818._1_1_ = 'b';\n              uStack_818._2_1_ = 'a';\n              uStack_818._3_1_ = 'l';\n              uStack_814._0_1_ = 'a';\n              uStack_814._1_1_ = 'n';\n              uStack_814._2_1_ = 'c';\n              uStack_814._3_1_ = 'e';\n              uStack_810._0_1_ = ' ';\n              uStack_810._1_1_ = 'h';\n              uStack_810._2_1_ = 'a';\n              uStack_810._3_1_ = 'p';\n              local_80c._0_1_ = 'p';\n              local_80c._1_1_ = 'e';\n              local_80c._2_1_ = 'n';\n              local_80c._3_1_ = 'e';\n              uStack_808._0_1_ = 'd';\n              uStack_808._1_1_ = '!';\n              uStack_808._2_1_ = '\\n';\n              uStack_808._3_1_ = '\\0';\n              FUN_0002e584(3,&local_820,0);\n            }\n            free(__ptr);\n            return 1;\n          }\n          iVar7 = 0;\n          puVar5 = __ptr;\n          while (iVar7 = iVar7 + 1, iVar7 != iVar3) {\n            puVar5 = puVar5 + 1;\n            bVar8 = uVar6 == 0;\n            if (uVar6 == 0) {\n              bVar8 = uVar4 <= *puVar5;\n            }\n            if (!bVar8) goto LAB_00025d0c;\n          }\n        }\n      }\n      iVar1 = iVar1 + 1;\n    } while (iVar1 != 4);\n    free(__ptr);\n  }\n  return 0;\n}\n\n",
    "FUN_00025db0": "\nvoid FUN_00025db0(void)\n\n{\n  undefined4 uVar1;\n  uint __seed;\n  long lVar2;\n  int local_820;\n  uint uStack_81c;\n  undefined4 local_818;\n  undefined4 uStack_814;\n  undefined4 uStack_810;\n  undefined4 uStack_80c;\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 local_800;\n  undefined4 uStack_7fc;\n  undefined2 uStack_7f8;\n  undefined local_7f6;\n  \n  FUN_000302a0(&local_820);\n  if (DAT_00482a74 == 0 && DAT_00482a78 == 0) {\n    FUN_000302a0();\n    return;\n  }\n  local_820 = local_820 - DAT_00482a74;\n  if ((int)(uStack_81c - DAT_00482a78) < 0) {\n    local_820 = local_820 + -1;\n  }\n  if (local_820 < 0x12d) {\n    if (DAT_0007fa04 != 0) {\n      if (3 < DAT_0007eb9c) {\n        local_818._0_1_ = 'n';\n        local_818._1_1_ = 'e';\n        local_818._2_1_ = 't';\n        local_818._3_1_ = 'w';\n        uStack_814._0_1_ = 'o';\n        uStack_814._1_1_ = 'r';\n        uStack_814._2_1_ = 'k';\n        uStack_814._3_1_ = ' ';\n        uStack_810._0_1_ = 'c';\n        uStack_810._1_1_ = 'o';\n        uStack_810._2_1_ = 'n';\n        uStack_810._3_1_ = 'n';\n        uStack_80c._0_1_ = 'e';\n        uStack_80c._1_1_ = 'c';\n        uStack_80c._2_1_ = 't';\n        uStack_80c._3_1_ = 'i';\n        local_808._0_1_ = 'o';\n        local_808._1_1_ = 'n';\n        local_808._2_1_ = ' ';\n        local_808._3_1_ = 'r';\n        uStack_804._0_1_ = 'e';\n        uStack_804._1_1_ = 's';\n        uStack_804._2_1_ = 'u';\n        uStack_804._3_1_ = 'm';\n        local_800._0_1_ = 'e';\n        local_800._1_1_ = ',';\n        local_800._2_1_ = ' ';\n        local_800._3_1_ = 'r';\n        uStack_7fc._0_1_ = 'e';\n        uStack_7fc._1_1_ = 's';\n        uStack_7fc._2_1_ = 't';\n        uStack_7fc._3_1_ = 'a';\n        uStack_7f8 = 0x7472;\n        local_7f6 = 0;\n        FUN_0002e584(3,&local_818,0);\n      }\n      FUN_00031d58(6,\"network connection resume, restart...\");\n      DAT_0007fa04 = 0;\n      DAT_0007fa00 = 0;\n      return;\n    }\n    if (DAT_0007fa00 != 0) {\n      if (3 < DAT_0007eb9c) {\n        local_818._0_1_ = 'n';\n        local_818._1_1_ = 'e';\n        local_818._2_1_ = 't';\n        local_818._3_1_ = 'w';\n        uStack_814._0_1_ = 'o';\n        uStack_814._1_1_ = 'r';\n        uStack_814._2_1_ = 'k';\n        uStack_814._3_1_ = ' ';\n        uStack_810._0_1_ = 'c';\n        uStack_810._1_1_ = 'o';\n        uStack_810._2_1_ = 'n';\n        uStack_810._3_1_ = 'n';\n        uStack_80c._0_1_ = 'e';\n        uStack_80c._1_1_ = 'c';\n        uStack_80c._2_1_ = 't';\n        uStack_80c._3_1_ = 'i';\n        local_808._0_1_ = 'o';\n        local_808._1_1_ = 'n';\n        local_808._2_1_ = ' ';\n        local_808._3_1_ = 'r';\n        uStack_804._0_1_ = 'e';\n        uStack_804._1_1_ = 's';\n        uStack_804._2_1_ = 'u';\n        uStack_804._3_1_ = 'm';\n        local_800._0_2_ = 0x65;\n        FUN_0002e584(3,&local_818,0);\n      }\n      uVar1 = FUN_00031d48();\n      FUN_00031d58(uVar1,0);\n      DAT_0007fa00 = 0;\n      return;\n    }\n  }\n  else if (DAT_0007fa00 == 0) {\n    FUN_00031d58(3,\"network connection lost\");\n    __seed = FUN_0002b2f4();\n    if (__seed == 0) {\n      __seed = uStack_81c;\n    }\n    srandom(__seed);\n    lVar2 = random();\n    DAT_0007fa00 = lVar2 % 300 + 1;\n    if (3 < DAT_0007eb9c) {\n      snprintf((char *)&local_818,0x800,\"will power off in %d seconds in case not resume\");\n      FUN_0002e584(3,&local_818,0);\n    }\n  }\n  else if ((DAT_0007fa00 + 299 < local_820) && (DAT_0007fa04 == 0)) {\n    if (3 < DAT_0007eb9c) {\n      snprintf((char *)&local_818,0x800,\n               \"network connection lost for 5 min + %d seconds, power off...\");\n      FUN_0002e584(3,&local_818,0);\n    }\n    FUN_000194dc();\n    DAT_0007fa04 = 1;\n  }\n  return;\n}\n\n",
    "FUN_0002600c": "\nvoid FUN_0002600c(void)\n\n{\n  uint uVar1;\n  uint uVar2;\n  undefined auStack_20 [3];\n  char local_1d;\n  \n  uVar1 = FUN_000452b0();\n  FUN_000452d0(uVar1 | 0x10000);\n  prctl(0xf,\"nonce_reg_process\",0,0,0);\n  do {\n    uVar1 = FUN_00044d3c();\n    uVar1 = uVar1 >> 1;\n    if (uVar1 != 0) {\n      uVar2 = 0;\n      do {\n        while( true ) {\n          FUN_00044d94(auStack_20);\n          if (-1 < local_1d) break;\n          uVar2 = uVar2 + 1;\n          FUN_0002c5e8();\n          if (uVar1 == uVar2) goto LAB_00026088;\n        }\n        uVar2 = uVar2 + 1;\n        FUN_0002c96c(auStack_20);\n      } while (uVar1 != uVar2);\n    }\nLAB_00026088:\n    FUN_000304d4(1);\n  } while( true );\n}\n\n",
    "FUN_00026094": "\nvoid FUN_00026094(void)\n\n{\n  int *piVar1;\n  char *pcVar2;\n  int __errnum;\n  char acStack_808 [2048];\n  \n  if (3 < DAT_0007eb9c) {\n    piVar1 = __errno_location();\n    __errnum = *piVar1;\n    pcVar2 = strerror(__errnum);\n    snprintf(acStack_808,0x800,\"Failed to get sysinfo, errno = %u, reason = %s.\\n\",__errnum,pcVar2);\n    FUN_0002e584(3,acStack_808,0);\n  }\n  time((time_t *)0x0);\n  return;\n}\n\n",
    "FUN_00026104": "\nundefined4 FUN_00026104(void)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  sysinfo local_48;\n  \n  iVar1 = sysinfo(&local_48);\n  if (iVar1 != 0) {\n    uVar2 = FUN_00026094();\n    return uVar2;\n  }\n  return local_48.uptime;\n}\n\n",
    "FUN_00026134": "\nvoid FUN_00026134(void)\n\n{\n  uint uVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  double dVar5;\n  char acStack_818 [2048];\n  \n  iVar2 = FUN_00026104();\n  iVar3 = DAT_0099ee0c;\n  uVar1 = DAT_0099ee08;\n  iVar4 = iVar2 - DAT_0007fa08;\n  DAT_0007fa08 = iVar2;\n  dVar5 = (double)FUN_000600b4(DAT_0099ee08 - DAT_0007fa10,\n                               DAT_0099ee0c - (DAT_0007fa14 + (uint)(DAT_0099ee08 < DAT_0007fa10)));\n  DAT_0007fa10 = uVar1;\n  DAT_0007fa14 = iVar3;\n  DAT_0099ee00 = ((dVar5 * 4294967295.0) / 1000000000.0) / (double)(longlong)iVar4;\n  iVar3 = FUN_0001a18c();\n  dVar5 = (double)(longlong)iVar3 * 0.75;\n  if ((dVar5 != DAT_0099ee00 && dVar5 < DAT_0099ee00 == (NAN(dVar5) || NAN(DAT_0099ee00))) &&\n     (3 < DAT_0007eb9c)) {\n    snprintf(acStack_818,0x800,\"avg rate is lower than ideal rate, %0.2f in %ld mins\\n\",\n             iVar4 >> 0x1f,DAT_0099ee00,iVar4 / 0x3c);\n    FUN_0002e584(3,acStack_818,0);\n    return;\n  }\n  return;\n}\n\n",
    "FUN_00026250": "\nvoid FUN_00026250(void)\n\n{\n  uint uVar1;\n  int iVar2;\n  int iVar3;\n  uint *puVar4;\n  int iVar5;\n  uint uVar6;\n  uint uVar7;\n  uint uVar8;\n  double dVar9;\n  undefined8 uVar10;\n  char acStack_828 [2052];\n  \n  if (DAT_00080f60 == 1) {\n    memset(&DAT_0007fa18,0,0x20);\n    DAT_00080f60 = 0;\n  }\n  iVar2 = FUN_00026104();\n  iVar5 = iVar2 - DAT_0007fa38;\n  puVar4 = &DAT_0007fa18;\n  iVar3 = 0;\n  DAT_0007fa38 = iVar2;\n  do {\n    while( true ) {\n      iVar2 = FUN_0001e29c(iVar3);\n      uVar1 = DAT_0007f8f0;\n      if (iVar2 != 0) break;\nLAB_000263e0:\n      iVar3 = iVar3 + 1;\n      puVar4 = puVar4 + 2;\n      if (iVar3 == 4) goto LAB_000263f0;\n    }\n    uVar6 = (&DAT_0099ed98)[iVar3 * 2];\n    uVar7 = (&DAT_0099ed9c)[iVar3 * 2];\n    uVar8 = uVar6 - *puVar4;\n    uVar10 = FUN_00060120(-uVar8,(uVar8 & 0xfffffffe) +\n                                 ((uint)(uVar8 * -0x80000000 < uVar8) * -2 -\n                                 (uVar7 - (puVar4[1] + (uint)(uVar6 < *puVar4)))) +\n                                 (uint)CARRY4(uVar8 * 0x7fffffff,uVar8 * 0x7fffffff) +\n                                 (uint)CARRY4(uVar8 * -2,uVar8),iVar5,iVar5 >> 0x1f);\n    FUN_00060120((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),1000000000,0);\n    dVar9 = (double)FUN_000600b4();\n    *puVar4 = uVar6;\n    puVar4[1] = uVar7;\n    *(double *)(&DAT_0058e040 + (iVar3 * 0x18 + uVar1 % 0x18) * 8) = dVar9;\n    if (((uVar1 < 2) ||\n        (*(double *)(&DAT_0058e040 + (iVar3 * 0x18 + (uVar1 - 1) % 0x18) * 8) * 0.75 <= dVar9)) ||\n       (DAT_0007eb9c < 4)) goto LAB_000263e0;\n    snprintf(acStack_828,0x800,\"chain %d hash rate %.2f low in %ld mins\",iVar3,dVar9,iVar5 / 0x3c);\n    iVar3 = iVar3 + 1;\n    FUN_0002e584(3,acStack_828,0);\n    puVar4 = puVar4 + 2;\n  } while (iVar3 != 4);\nLAB_000263f0:\n  DAT_0007f8f0 = DAT_0007f8f0 + 1;\n  return;\n}\n\n",
    "FUN_0002647c": "\nvoid FUN_0002647c(void)\n\n{\n  char *__s1;\n  int iVar1;\n  int iVar2;\n  undefined4 uVar3;\n  uint uVar4;\n  \n  prctl(0xf,\"chk_sys\",0,0,0);\n  __s1 = (char *)FUN_0001e0c0();\n  iVar1 = strcmp(__s1,\"BHB28601\");\n  if (iVar1 != 0) {\n    FUN_0001e0c0();\n  }\n  iVar1 = FUN_00026104();\n  do {\n    iVar2 = FUN_00031d38();\n    if (iVar2 == 2) {\n      iVar2 = FUN_00026104();\n      if (((DAT_0099ee08 | DAT_0099ee0c) != 0) || (0x708 < (uint)(iVar2 - iVar1))) {\n        DAT_0007fa08 = FUN_00026104();\n        uVar4 = 1;\n        DAT_0007fa38 = DAT_0007fa08;\n        DAT_0007fa3c = DAT_0007fa08;\n        DAT_0007fa40 = DAT_0007fa08;\n        pthread_setcancelstate(1,(int *)0x0);\n        do {\n          do {\n            iVar1 = pthread_mutex_trylock((pthread_mutex_t *)&DAT_0007fa44);\n            if (iVar1 == 0) {\n              if (DAT_0007eb78 != '\\0') {\n                FUN_000350e8();\n              }\n              pthread_mutex_unlock((pthread_mutex_t *)&DAT_0007fa44);\n            }\n            uVar4 = uVar4 + 1;\n            pthread_setcancelstate(0,(int *)0x0);\n            pthread_testcancel();\n            FUN_000304d4(1000);\n            pthread_setcancelstate(1,(int *)0x0);\n          } while (uVar4 + (((uint)((ulonglong)uVar4 * 0x88888889 >> 0x20) & 0xfffffff0) -\n                           uVar4 / 0x1e) * -2 != 0);\n          iVar2 = FUN_0001e29c(0);\n          iVar1 = 0;\n          while( true ) {\n            if (iVar2 != 0) {\n              uVar3 = FUN_0001e160();\n              FUN_0003eff0(iVar1,uVar3);\n            }\n            iVar1 = iVar1 + 1;\n            if (iVar1 == 4) break;\n            iVar2 = FUN_0001e29c(iVar1);\n          }\n        } while( true );\n      }\n    }\n    FUN_000304d4(10);\n  } while( true );\n}\n\n",
    "FUN_000265f4": "\nvoid FUN_000265f4(void)\n\n{\n  DAT_0007fa3c = FUN_00026104();\n  DAT_0007fa08 = DAT_0007fa3c;\n  DAT_0007fa40 = DAT_0007fa3c;\n  DAT_0007fa38 = DAT_0007fa3c;\n  return;\n}\n\n",
    "FUN_00026618": "\nvoid FUN_00026618(void)\n\n{\n  int iVar1;\n  double dVar2;\n  \n  iVar1 = FUN_0001a18c();\n  dVar2 = (double)(longlong)iVar1 * 0.95;\n  if (dVar2 == DAT_0099ee00 || dVar2 < DAT_0099ee00 != (NAN(dVar2) || NAN(DAT_0099ee00))) {\n    return;\n  }\n  iVar1 = FUN_00025c08();\n  if (iVar1 == 0) {\n    return;\n  }\n  FUN_00031d58(0xb,\"Unbalance happened, reboot!\\n\");\n  return;\n}\n\n",
    "FUN_00026670": "\nundefined4 FUN_00026670(void)\n\n{\n  void *pvVar1;\n  int iVar2;\n  int iVar3;\n  uint uVar4;\n  undefined4 *puVar5;\n  uint uVar6;\n  int iVar7;\n  int iVar8;\n  uint uVar9;\n  uint uVar10;\n  double *pdVar11;\n  uint uVar12;\n  int iVar13;\n  int iVar14;\n  uint *puVar15;\n  uint *puVar16;\n  uint uVar17;\n  uint uVar18;\n  bool bVar19;\n  double dVar20;\n  double dVar21;\n  \n  FUN_00032530();\n  pvVar1 = (void *)(DAT_0007fa5c * 0x66666667);\n  iVar2 = DAT_0007fa5c >> 0x1f;\n  if (DAT_0007fa5c % 5 == 0) {\n    if (DAT_00080f58 == 1) {\n      memset(&DAT_0007fa60,0,0x140);\n      memset(&DAT_0007fba0,0,0x20);\n      pvVar1 = memset(&DAT_0007fbc0,0,0x20);\n      DAT_0007fbe0 = 0;\n      DAT_0007fbe4 = 0;\n      DAT_0007fbe8 = 0;\n      DAT_0007fbec = 0;\n      DAT_0007fbf0 = 0;\n      DAT_0007fbf4 = 0;\n      DAT_0007fbf8 = 0;\n      DAT_0007fbfc = 0;\n      DAT_00080f58 = 0;\n    }\n    iVar2 = FUN_00026104(pvVar1);\n    puVar16 = &DAT_0007fba0;\n    dVar21 = 0.0;\n    iVar8 = iVar2 - DAT_0007fa3c;\n    puVar15 = &DAT_0007fbc0;\n    iVar13 = 0;\n    DAT_0007fa3c = iVar2;\n    do {\n      iVar2 = FUN_0001e29c(iVar13);\n      if (iVar2 != 0) {\n        uVar18 = (&DAT_0099ed9c)[iVar13 * 2];\n        iVar3 = (&DAT_0007fbe0)[iVar13] + 1;\n        iVar14 = (&DAT_0007fbf0)[iVar13];\n        iVar2 = (iVar13 * 10 + (&DAT_0007fbe0)[iVar13]) * 8;\n        puVar5 = (undefined4 *)(iVar3 * 0x66666667);\n        if (iVar14 < 10) {\n          puVar5 = &DAT_0007fbf0;\n        }\n        uVar12 = *puVar15;\n        if (iVar14 < 10) {\n          iVar14 = iVar14 + 1;\n          puVar5[iVar13] = iVar14;\n        }\n        iVar3 = iVar3 % 10;\n        uVar4 = (&DAT_0099ed98)[iVar13 * 2];\n        uVar6 = puVar16[1];\n        (&DAT_0007fbe0)[iVar13] = iVar3;\n        uVar9 = *puVar16;\n        uVar17 = puVar15[1];\n        *puVar16 = uVar4;\n        uVar10 = uVar4 - uVar9;\n        puVar16[1] = uVar18;\n        iVar7 = uVar18 - (uVar6 + (uVar4 < uVar9));\n        *(uint *)(&DAT_0007fa60 + iVar2) = uVar10;\n        uVar18 = uVar10 + uVar12;\n        *(int *)(&DAT_0007fa64 + iVar2) = iVar7;\n        uVar12 = iVar7 + uVar17 + (uint)CARRY4(uVar10,uVar12);\n        *puVar15 = uVar18;\n        puVar15[1] = uVar12;\n        dVar20 = (double)FUN_000600b4(uVar18,uVar12);\n        dVar20 = (((dVar20 * 4294967295.0) / (double)(longlong)iVar14) / (double)(longlong)iVar8) /\n                 1000000000.0;\n        FUN_0001e4c0(SUB84(dVar20,0),iVar13);\n        dVar21 = dVar21 + dVar20;\n        uVar12 = *puVar15;\n        iVar2 = (iVar13 * 10 + iVar3) * 8;\n        uVar18 = *(uint *)(&DAT_0007fa60 + iVar2);\n        iVar2 = *(int *)(&DAT_0007fa64 + iVar2);\n        *puVar15 = uVar12 - uVar18;\n        puVar15[1] = puVar15[1] - (iVar2 + (uint)(uVar12 < uVar18));\n      }\n      iVar13 = iVar13 + 1;\n      puVar16 = puVar16 + 2;\n      puVar15 = puVar15 + 2;\n    } while (iVar13 != 4);\n    FUN_0001e2b4(SUB84(dVar21,0));\n    sprintf(&DAT_00080fb8,\"%.2f\",SUB84(dVar21,0),(int)((ulonglong)dVar21 >> 0x20));\n    if (DAT_00080f5c == 1) {\n      DAT_0007fc00 = 0;\n      DAT_0007fc04 = 0;\n      memset(&DAT_0007fc08,0,0xb40);\n      DAT_00080748 = 0;\n      DAT_00080f5c = 0;\n    }\n    iVar8 = FUN_00026104();\n    if ((DAT_0099ee08 | DAT_0099ee0c) == 0) {\n      iVar2 = DAT_0007fa5c >> 0x1f;\n      DAT_0007fa40 = iVar8;\n    }\n    else {\n      iVar2 = iVar8 - DAT_0007fa40;\n      uVar18 = DAT_0099ee08 - DAT_0007fc00;\n      DAT_0007fa40 = iVar8;\n      dVar21 = (double)FUN_000600b4(-uVar18,(uVar18 & 0xfffffffe) +\n                                            ((uint)(uVar18 * -0x80000000 < uVar18) * -2 -\n                                            (DAT_0099ee0c -\n                                            (DAT_0007fc04 + (DAT_0099ee08 < DAT_0007fc00)))) +\n                                            (uint)CARRY4(uVar18 * 0x7fffffff,uVar18 * 0x7fffffff) +\n                                            (uint)CARRY4(uVar18 * -2,uVar18));\n      dVar20 = 1000000000.0;\n      pdVar11 = (double *)&DAT_0007fc08;\n      dVar21 = dVar21 / 1000000000.0;\n      if (iVar2 != 0) {\n        dVar20 = (double)(longlong)iVar2;\n      }\n      uVar18 = DAT_00080748 >> 3;\n      uVar12 = DAT_00080748 + 1;\n      iVar8 = DAT_00080748 + (uVar18 / 0x2d) * -0x168;\n      if (iVar2 != 0) {\n        dVar21 = dVar21 / dVar20;\n      }\n      dVar20 = 0.0;\n      DAT_00080748 = uVar12;\n      (&DAT_0007fc08)[iVar8] = dVar21;\n      uVar4 = 0;\n      do {\n        bVar19 = uVar12 == uVar4;\n        uVar4 = uVar4 + 1;\n        if (bVar19) goto LAB_00026a70;\n        dVar21 = *pdVar11;\n        pdVar11 = pdVar11 + 1;\n        dVar20 = dVar20 + dVar21;\n      } while (uVar4 != 0x168);\n      if (uVar12 < 0x168) {\nLAB_00026a70:\n        dVar21 = (double)(longlong)(int)uVar12;\n      }\n      else {\n        dVar21 = 360.0;\n      }\n      DAT_00080fc8 = dVar20 / dVar21;\n      FUN_0001e2d8(SUB84(DAT_00080fc8,0),uVar18 * 0x16c16c17);\n      iVar2 = DAT_0007fa5c >> 0x1f;\n      DAT_0007fc00 = DAT_0099ee08;\n      DAT_0007fc04 = DAT_0099ee0c;\n    }\n  }\n  if ((DAT_0007fa5c == ((DAT_0007fa5c / 10 + (DAT_0007fa5c >> 0x1f)) - iVar2) * 10) &&\n     (iVar2 = FUN_00031d38(DAT_0007fa5c * 0x66666667), iVar2 == 2)) {\n    FUN_0002d158();\n  }\n  DAT_0007fa5c = DAT_0007fa5c + 1;\n  iVar2 = DAT_0007fa5c >> 0x1f;\n  if (DAT_0007fa5c == (DAT_0007fa5c / 0x3c) * 0x3c) {\n    FUN_0003264c();\n    if (DAT_0007fa5c % 0x708 == 0) goto LAB_00026780;\n  }\n  else {\n    if (DAT_0007fa5c % 0x708 != 0) goto LAB_00026718;\nLAB_00026780:\n    FUN_00026134();\n  }\n  iVar2 = DAT_0007fa5c >> 0x1f;\n  if (DAT_0007fa5c == (DAT_0007fa5c / 0x3c) * 0x3c) {\n    FUN_0002cb2c();\n    FUN_0002ce20();\n    iVar2 = DAT_0007fa5c >> 0x1f;\n  }\nLAB_00026718:\n  if (DAT_0007fa5c + ((DAT_0007fa5c / 900 + (DAT_0007fa5c >> 0x1f)) - iVar2) * -900 == 0) {\n    FUN_00026250();\n  }\n  return 0;\n}\n\n",
    "FUN_00026b80": "\nvoid FUN_00026b80(void)\n\n{\n  prctl(0xf,\"chk_status\",0,0,0);\n  do {\n    do {\n      FUN_00025db0();\n      FUN_00026670();\n      FUN_000304d4(1000);\n    } while (DAT_0007f7e0 != 0);\n    FUN_00013da4(400);\n  } while( true );\n}\n\n",
    "FUN_00026bd4": "\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nvoid FUN_00026bd4(undefined4 param_1,int param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 uVar3;\n  int extraout_r1;\n  int iVar4;\n  int iVar5;\n  int iVar6;\n  undefined4 *puVar7;\n  int iVar8;\n  char *pcVar9;\n  char acStack_128 [260];\n  \n  memset(acStack_128,0,0x100);\n  if (DAT_0008074c == 0) {\n    DAT_0008074c = FUN_000536f4(\"bmminer_tuning\");\n  }\n  FUN_00054cb0(DAT_0008074c,\"thread.c\",8,\"_tuning_freq_dump_nonce_info\",0x1c,0x263,0x14,\n               \"\\n current freq: %d\\n\",param_1);\n  if (DAT_0008074c == 0) {\n    DAT_0008074c = FUN_000536f4(\"bmminer_tuning\");\n  }\n  iVar4 = 0;\n  FUN_00054cb0(DAT_0008074c,\"thread.c\",8,\"_tuning_freq_dump_nonce_info\",0x1c,0x264,0x14,\n               \"\\n dump asic nonce number...\\n\",param_1);\n  iVar8 = 0;\n  do {\n    iVar1 = FUN_0001e29c(iVar8);\n    if (iVar1 != 0) {\n      if (DAT_0008074c == 0) {\n        DAT_0008074c = FUN_000536f4(\"bmminer_tuning\");\n      }\n      FUN_00054cb0(DAT_0008074c,\"thread.c\",8,\"_tuning_freq_dump_nonce_info\",0x1c,0x268,0x14,\n                   \"Chain[%d] nonce:\\n\",iVar8);\n      iVar1 = FUN_0001e0f0();\n      if (0 < iVar1) {\n        puVar7 = (undefined4 *)(param_2 + -4 + iVar8 * 0x400);\n        iVar5 = 0;\n        do {\n          puVar7 = puVar7 + 1;\n          iVar6 = iVar5 + 1;\n          iVar2 = snprintf(acStack_128 + iVar4,0x100 - iVar4,\"asic[%03d]=%-8d\",iVar5,*puVar7);\n          uVar3 = FUN_0001e100();\n          FUN_0005fd8c(iVar6,uVar3);\n          iVar4 = iVar4 + iVar2;\n          if (extraout_r1 == 0) {\n            iVar4 = 0;\n            if (DAT_0008074c == 0) {\n              DAT_0008074c = FUN_000536f4(\"bmminer_tuning\");\n            }\n            iVar2 = DAT_0008074c;\n            pcVar9 = acStack_128;\n            uVar3 = FUN_0005faf8(iVar5,iVar1);\n            FUN_00054cb0(iVar2,\"thread.c\",8,\"_tuning_freq_dump_nonce_info\",0x1c,0x271,0x14,\n                         \"domain %02d %s\",uVar3,pcVar9);\n          }\n          iVar5 = iVar6;\n        } while (iVar6 != iVar1);\n      }\n      if (DAT_0008074c == 0) {\n        DAT_0008074c = FUN_000536f4(\"bmminer_tuning\");\n      }\n      uVar3 = 0;\n      iVar1 = iVar8;\n      FUN_00054cb0(DAT_0008074c,\"thread.c\",8,\"_tuning_freq_dump_nonce_info\",0x1c,0x276,0x14,\n                   \"Chain[%d] total nonce number = %d\\n\",iVar8,0);\n      if (DAT_0008074c == 0) {\n        DAT_0008074c = FUN_000536f4(\"bmminer_tuning\");\n      }\n      FUN_00054cb0(DAT_0008074c,\"thread.c\",8,\"_tuning_freq_dump_nonce_info\",0x1c,0x277,0x14,\"\\n\",\n                   iVar1,uVar3);\n    }\n    iVar8 = iVar8 + 1;\n  } while (iVar8 != 4);\n  return;\n}\n\n",
    "FUN_00026f34": "\nint FUN_00026f34(int param_1,int param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  int iVar4;\n  \n  iVar1 = FUN_0001e0f0();\n  if (0 < iVar1) {\n    iVar2 = 0;\n    iVar4 = 0;\n    piVar3 = (int *)(param_2 + param_1 * 0x400 + -4);\n    do {\n      iVar4 = iVar4 + 1;\n      piVar3 = piVar3 + 1;\n      iVar2 = iVar2 + *piVar3;\n    } while (iVar1 != iVar4);\n    return iVar2;\n  }\n  return 0;\n}\n\n",
    "FUN_00026f7c": "\nfloat FUN_00026f7c(int param_1,int param_2)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  int *piVar3;\n  int iVar4;\n  int iVar5;\n  int iVar6;\n  double unaff_d8;\n  \n  iVar1 = FUN_0001e0f0();\n  if (iVar1 < 1) {\n    iVar6 = 0;\n  }\n  else {\n    iVar6 = 0;\n    iVar4 = 0;\n    piVar3 = (int *)(param_2 + param_1 * 0x400 + -4);\n    do {\n      iVar4 = iVar4 + 1;\n      piVar3 = piVar3 + 1;\n      iVar6 = iVar6 + *piVar3;\n    } while (iVar1 != iVar4);\n  }\n  uVar2 = FUN_0001e0f0();\n  iVar1 = FUN_0005faf8(iVar6,uVar2);\n  iVar6 = FUN_0001e0f0();\n  if (iVar6 < 1) {\n    FUN_0001e0f0();\n    return 0.0;\n  }\n  iVar5 = 0;\n  iVar4 = 0;\n  piVar3 = (int *)(param_2 + param_1 * 0x400 + -4);\n  do {\n    piVar3 = piVar3 + 1;\n    iVar4 = iVar4 + 1;\n    iVar5 = (*piVar3 - iVar1) * (*piVar3 - iVar1) + iVar5;\n  } while (iVar6 != iVar4);\n  uVar2 = FUN_0001e0f0();\n  iVar1 = FUN_0005faf8(iVar5,uVar2);\n  if ((float)(longlong)iVar1 < 0.0) {\n    sqrt(unaff_d8);\n  }\n  return SQRT((float)(longlong)iVar1);\n}\n\n",
    "FUN_00027058": "\nvoid FUN_00027058(void)\n\n{\n  uint uVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  uint uVar5;\n  uint uVar6;\n  \n  iVar3 = DAT_00482a6c;\n  iVar4 = 0;\n  uVar1 = DAT_0007eb64 + (uint)(DAT_0007eb70 * (DAT_00482a6c - DAT_0007eb64)) / 100;\n  DAT_00482a8c = (((DAT_0007eb70 * (DAT_00482a8c - DAT_0007eb60)) / 100 + DAT_0007eb60) / 10) * 10;\n  DAT_00482a6c = uVar1 / 5 + ((uint)((ulonglong)uVar1 * 0xcccccccd >> 0x20) & 0xfffffffc);\n  do {\n    iVar2 = FUN_0001e29c(iVar4);\n    if (iVar2 != 0) {\n      FUN_0001aae4(DAT_0007edd0,iVar4,DAT_00482a70,iVar3,DAT_00482a6c,0);\n    }\n    iVar4 = iVar4 + 1;\n  } while (iVar4 != 4);\n  iVar3 = FUN_00019ab4();\n  uVar1 = DAT_00482a8c - iVar3;\n  if ((int)uVar1 < 0) {\n    uVar1 = -uVar1;\n  }\n  if (uVar1 / 0x14 < 2) {\n    iVar4 = 0;\n  }\n  else {\n    uVar5 = 1;\n    do {\n      uVar6 = uVar5 + 1;\n      iVar4 = uVar5 * -0x14;\n      if (iVar3 < DAT_00482a8c) {\n        iVar4 = uVar5 * 0x14;\n      }\n      iVar4 = iVar3 + iVar4;\n      FUN_000195a8(iVar4);\n      usleep(200000);\n      uVar5 = uVar6;\n    } while (uVar1 / 0x14 != uVar6);\n  }\n  if (DAT_00482a8c != iVar4) {\n    FUN_000195a8();\n  }\n  FUN_0001ead4(0xf);\n  return;\n}\n\n",
    "FUN_000271e8": "\nundefined4 FUN_000271e8(void)\n\n{\n  longlong lVar1;\n  longlong lVar2;\n  undefined uVar3;\n  int iVar4;\n  int iVar5;\n  uint uVar6;\n  uint uVar7;\n  int *piVar8;\n  int *piVar9;\n  int iVar11;\n  int iVar12;\n  int iVar13;\n  int iVar14;\n  int *piVar15;\n  int iVar16;\n  int iVar17;\n  int *piVar18;\n  float fVar19;\n  double dVar20;\n  double dVar21;\n  int local_2a90;\n  int *local_2a84;\n  int local_2a5c [15];\n  int local_2a20 [60];\n  int local_2930 [60];\n  undefined4 local_2840;\n  undefined4 uStack_283c;\n  undefined4 uStack_2838;\n  undefined4 uStack_2834;\n  undefined4 local_2830;\n  undefined2 local_282c;\n  int aiStack_2040 [1023];\n  int iStack_1044;\n  undefined4 local_1040;\n  undefined4 uStack_103c;\n  undefined4 uStack_1038;\n  undefined4 uStack_1034;\n  undefined2 uStack_1030;\n  undefined local_102e;\n  int *piVar10;\n  \n  prctl(0xf,\"tuning_freq\",0,0,0);\n  while (iVar4 = FUN_00031d38(), iVar4 != 2) {\n    FUN_000304d4(1000);\n  }\n  while( true ) {\n    pthread_mutex_lock((pthread_mutex_t *)&DAT_0007fa44);\n    iVar4 = FUN_00019ab4();\n    uVar3 = DAT_0007eb78;\n    if (iVar4 == DAT_00482a8c) break;\n    pthread_mutex_unlock((pthread_mutex_t *)&DAT_0007fa44);\n    FUN_000304d4(1000);\n  }\n  DAT_0007eb78 = 0;\n  pthread_mutex_unlock((pthread_mutex_t *)&DAT_0007fa44);\n  FUN_000304d4(60000);\n  if (3 < DAT_0007eb9c) {\n    local_1040._0_1_ = 't';\n    local_1040._1_1_ = 'u';\n    local_1040._2_1_ = 'n';\n    local_1040._3_1_ = 'i';\n    uStack_103c._0_1_ = 'n';\n    uStack_103c._1_1_ = 'g';\n    uStack_103c._2_1_ = ' ';\n    uStack_103c._3_1_ = 'f';\n    uStack_1038._0_1_ = 'r';\n    uStack_1038._1_1_ = 'e';\n    uStack_1038._2_1_ = 'q';\n    uStack_1038._3_1_ = ' ';\n    uStack_1034._0_1_ = 's';\n    uStack_1034._1_1_ = 't';\n    uStack_1034._2_1_ = 'a';\n    uStack_1034._3_1_ = 'r';\n    uStack_1030 = 0xa74;\n    local_102e = 0;\n    FUN_0002e584(3,&iStack_1044 + 1,0);\n  }\n  FUN_00027058();\n  if (DAT_0007eb68 < 1) {\n    iVar4 = 0;\n    iVar13 = DAT_00482a6c;\n  }\n  else {\n    piVar15 = &iStack_1044 + 1;\n    local_2a90 = 0;\n    iVar4 = 0;\n    iVar11 = DAT_00482a6c;\n    iVar14 = DAT_00482a6c;\n    while( true ) {\n      iVar13 = iVar11;\n      if (3 < DAT_0007eb9c) {\n        snprintf((char *)&local_2840,0x800,\"level %d, freq_curr %d, freq_next %d\\n\",iVar4,iVar14,\n                 iVar13);\n        FUN_0002e584(3,&local_2840,0);\n      }\n      iVar11 = 0;\n      do {\n        iVar5 = FUN_0001e29c(iVar11);\n        if (iVar5 != 0) {\n          FUN_0001aae4(DAT_0007edd0,iVar11,DAT_00482a70,iVar14,iVar13,0);\n        }\n        iVar11 = iVar11 + 1;\n      } while (iVar11 != 4);\n      iVar14 = 0;\n      memcpy(aiStack_2040,&DAT_00081128,0x1000);\n      FUN_000304d4(180000);\n      do {\n        iVar11 = FUN_0001e29c(iVar14);\n        if ((iVar11 != 0) && (iVar11 = FUN_0001e0f0(), 0 < iVar11)) {\n          piVar18 = (int *)(iVar14 * 0x400 + 0x81124);\n          piVar8 = piVar15 + iVar14 * 0x100;\n          piVar9 = aiStack_2040 + iVar14 * 0x100;\n          do {\n            piVar10 = piVar9 + 1;\n            piVar18 = piVar18 + 1;\n            *piVar8 = *piVar18 - *piVar9;\n            piVar8 = piVar8 + 1;\n            piVar9 = piVar10;\n          } while (piVar10 != aiStack_2040 + iVar11 + iVar14 * 0x100);\n        }\n        iVar14 = iVar14 + 1;\n      } while (iVar14 != 4);\n      iVar11 = 0;\n      FUN_00026bd4(iVar13,piVar15);\n      iVar14 = local_2a90;\n      do {\n        iVar5 = FUN_0001e29c(iVar11);\n        if (iVar5 != 0) {\n          fVar19 = (float)FUN_00026f7c(iVar11,piVar15);\n          *(int *)((int)local_2a20 + iVar14) = (int)fVar19;\n          iVar5 = FUN_0001e0f0();\n          if (iVar5 < 1) {\n            iVar17 = 0;\n          }\n          else {\n            iVar17 = 0;\n            iVar12 = 0;\n            piVar8 = &iStack_1044 + iVar11 * 0x100;\n            do {\n              iVar12 = iVar12 + 1;\n              piVar8 = piVar8 + 1;\n              iVar17 = iVar17 + *piVar8;\n            } while (iVar5 != iVar12);\n          }\n          *(int *)((int)local_2930 + iVar14) = iVar17;\n          if (3 < DAT_0007eb9c) {\n            snprintf((char *)&local_2840,0x800,\"chain %d, nonce_stdev %d, nonce_num %d\\n\",iVar11,\n                     (int)fVar19,iVar17);\n            FUN_0002e584(3,&local_2840,0);\n          }\n        }\n        iVar11 = iVar11 + 1;\n        iVar14 = iVar14 + 0x3c;\n      } while (iVar11 != 4);\n      uVar6 = FUN_0001e0f0();\n      uVar7 = FUN_0001e130();\n      lVar2 = (longlong)iVar13 * 180000000 * (longlong)(int)uVar6;\n      lVar1 = (ulonglong)uVar7 *\n              ((ulonglong)uVar6 * ((longlong)iVar13 * 180000000 & 0xffffffffU) & 0xffffffff);\n      dVar20 = (double)FUN_000600b4((int)lVar1,\n                                    uVar7 * (int)((ulonglong)lVar2 >> 0x20) +\n                                    (int)lVar2 * ((int)uVar7 >> 0x1f) +\n                                    (int)((ulonglong)lVar1 >> 0x20));\n      iVar14 = (int)(longlong)(dVar20 * 1.455191522836685e-11);\n      local_2a5c[iVar4] = iVar14;\n      if (3 < DAT_0007eb9c) {\n        snprintf((char *)&local_2840,0x800,\"ideal_nonce_num %d\\n\",iVar14);\n        FUN_0002e584(3,&local_2840,0);\n      }\n      iVar12 = 0;\n      iVar11 = iVar13 - DAT_0007eb6c;\n      iVar5 = 0;\n      iVar17 = local_2a90;\n      do {\n        iVar16 = iVar5 + 1;\n        iVar5 = FUN_0001e29c(iVar5);\n        if ((iVar5 != 0) && (*(int *)((int)local_2a20 + iVar17) < 0x28)) {\n          dVar21 = (double)(longlong)iVar14 * 0.98;\n          dVar20 = (double)(longlong)*(int *)((int)local_2930 + iVar17);\n          if (dVar20 != dVar21 && dVar20 < dVar21 == (NAN(dVar20) || NAN(dVar21))) {\n            iVar12 = iVar12 + 1;\n          }\n        }\n        iVar17 = iVar17 + 0x3c;\n        iVar5 = iVar16;\n      } while (iVar16 != 4);\n      iVar14 = FUN_0001e28c();\n      iVar4 = iVar4 + 1;\n      if (iVar14 <= iVar12) break;\n      if ((DAT_0007eb68 <= iVar4) || (local_2a90 = local_2a90 + 4, iVar14 = iVar13, iVar4 == 0xf))\n      goto LAB_00027694;\n    }\n    if (3 < DAT_0007eb9c) {\n      local_2840._0_1_ = 'a';\n      local_2840._1_1_ = 'l';\n      local_2840._2_1_ = 'l';\n      local_2840._3_1_ = ' ';\n      uStack_283c._0_1_ = 'c';\n      uStack_283c._1_1_ = 'h';\n      uStack_283c._2_1_ = 'a';\n      uStack_283c._3_1_ = 'i';\n      uStack_2838._0_1_ = 'n';\n      uStack_2838._1_1_ = ' ';\n      uStack_2838._2_1_ = 't';\n      uStack_2838._3_1_ = 'u';\n      uStack_2834._0_1_ = 'i';\n      uStack_2834._1_1_ = 'n';\n      uStack_2834._2_1_ = 'g';\n      uStack_2834._3_1_ = ' ';\n      local_2830._0_1_ = 'd';\n      local_2830._1_1_ = 'o';\n      local_2830._2_1_ = 'n';\n      local_2830._3_1_ = 'e';\n      local_282c = 10;\n      FUN_0002e584(3,&local_2840,0);\n    }\n  }\nLAB_00027694:\n  local_2a84 = local_2930;\n  iVar14 = 0;\n  piVar15 = local_2a5c + 0xe;\n  FUN_0001ead4(0xff);\n  do {\n    iVar11 = FUN_0001e29c(iVar14);\n    if (iVar11 != 0) {\n      iVar11 = iVar4 + -1;\n      if (0 < iVar4) {\n        iVar5 = 0x7fffffff;\n        piVar8 = piVar15;\n        do {\n          piVar8 = piVar8 + 1;\n          if (*piVar8 <= iVar5) {\n            iVar5 = *piVar8;\n          }\n        } while (piVar8 != piVar15 + iVar4);\n        iVar17 = 0;\n        piVar8 = piVar15;\n        do {\n          piVar8 = piVar8 + 1;\n          iVar11 = iVar17;\n          if (*piVar8 < 0x28) {\n            dVar21 = (double)(longlong)local_2a5c[iVar17] * 0.98;\n            dVar20 = (double)(longlong)local_2a84[iVar17];\n            if (dVar20 != dVar21 && dVar20 < dVar21 == (NAN(dVar20) || NAN(dVar21))) break;\n          }\n          if ((double)(longlong)*piVar8 < (double)(longlong)iVar5 * 1.25) {\n            dVar21 = (double)(longlong)local_2a5c[iVar17] * 0.98;\n            dVar20 = (double)(longlong)local_2a84[iVar17];\n            if (dVar20 != dVar21 && dVar20 < dVar21 == (NAN(dVar20) || NAN(dVar21))) break;\n          }\n          iVar17 = iVar17 + 1;\n          iVar11 = iVar4 + -1;\n        } while (iVar4 != iVar17);\n      }\n      iVar5 = DAT_00482a6c - DAT_0007eb6c * iVar11;\n      if (3 < DAT_0007eb9c) {\n        snprintf((char *)&local_2840,0x800,\"chain %d best level %d, best freq %d\\n\",iVar14,iVar11,\n                 iVar5);\n        FUN_0002e584(3,&local_2840,0);\n      }\n      FUN_0001aae4(DAT_0007edd0,iVar14,DAT_00482a70,iVar13,iVar5,0);\n    }\n    iVar14 = iVar14 + 1;\n    local_2a84 = local_2a84 + 0xf;\n    piVar15 = piVar15 + 0xf;\n    if (iVar14 == 4) {\n      DAT_0007eb78 = uVar3;\n      if (3 < DAT_0007eb9c) {\n        local_2840._0_1_ = 't';\n        local_2840._1_1_ = 'u';\n        local_2840._2_1_ = 'n';\n        local_2840._3_1_ = 'i';\n        uStack_283c._0_1_ = 'n';\n        uStack_283c._1_1_ = 'g';\n        uStack_283c._2_1_ = ' ';\n        uStack_283c._3_1_ = 'f';\n        uStack_2838._0_1_ = 'r';\n        uStack_2838._1_1_ = 'e';\n        uStack_2838._2_1_ = 'q';\n        uStack_2838._3_1_ = ' ';\n        uStack_2834._0_1_ = 'e';\n        uStack_2834._1_1_ = 'n';\n        uStack_2834._2_1_ = 'd';\n        uStack_2834._3_1_ = '\\n';\n        local_2830 = local_2830 & 0xffffff00;\n        FUN_0002e584(3,&local_2840,0);\n      }\n      return 0;\n    }\n  } while( true );\n}\n\n",
    "FUN_00027940": "\nundefined4 FUN_00027940(void)\n\n{\n  int iVar1;\n  pthread_attr_t pStack_834;\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined2 local_7fc;\n  \n  if (DAT_00080750 == (void *)0x0) {\n    pthread_attr_init(&pStack_834);\n    pthread_attr_setstacksize(&pStack_834,0x100000);\n    DAT_00080750 = calloc(1,0x40);\n    iVar1 = FUN_00030b10(DAT_00080750,&pStack_834,FUN_000259a8,DAT_00080750);\n    if (iVar1 != 0) {\n      if (3 < DAT_0007eb9c) {\n        local_810._0_1_ = 'c';\n        local_810._1_1_ = 'r';\n        local_810._2_1_ = 'e';\n        local_810._3_1_ = 'a';\n        uStack_80c._0_1_ = 't';\n        uStack_80c._1_1_ = 'e';\n        uStack_80c._2_1_ = ' ';\n        uStack_80c._3_1_ = 't';\n        uStack_808._0_1_ = 'h';\n        uStack_808._1_1_ = 'r';\n        uStack_808._2_1_ = 'e';\n        uStack_808._3_1_ = 'a';\n        uStack_804._0_1_ = 'd';\n        uStack_804._1_1_ = ' ';\n        uStack_804._2_1_ = 'f';\n        uStack_804._3_1_ = 'a';\n        uStack_800._0_1_ = 'i';\n        uStack_800._1_1_ = 'l';\n        uStack_800._2_1_ = 'e';\n        uStack_800._3_1_ = 'd';\n        local_7fc = 10;\n        FUN_0002e584(3,&local_810,0);\n        return 0xffffffff;\n      }\n      return 0xffffffff;\n    }\n    pthread_detach(*(pthread_t *)((int)DAT_00080750 + 0xc));\n    if (3 < DAT_0007eb9c) {\n      local_810._0_1_ = 'c';\n      local_810._1_1_ = 'r';\n      local_810._2_1_ = 'e';\n      local_810._3_1_ = 'a';\n      uStack_80c._0_1_ = 't';\n      uStack_80c._1_1_ = 'e';\n      uStack_80c._2_1_ = ' ';\n      uStack_80c._3_1_ = 't';\n      uStack_808._0_1_ = 'h';\n      uStack_808._1_1_ = 'r';\n      uStack_808._2_1_ = 'e';\n      uStack_808._3_1_ = 'a';\n      uStack_804 = CONCAT13(uStack_804._3_1_,0xa64);\n      FUN_0002e584(3,&local_810,0);\n      return 0;\n    }\n  }\n  return 0;\n}\n\n",
    "FUN_00027a58": "\nundefined4 FUN_00027a58(void)\n\n{\n  int iVar1;\n  pthread_attr_t pStack_834;\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined2 local_7fc;\n  \n  if (DAT_00080754 == (void *)0x0) {\n    pthread_attr_init(&pStack_834);\n    pthread_attr_setstacksize(&pStack_834,0x800000);\n    DAT_00080754 = calloc(1,0x40);\n    iVar1 = FUN_00030b10(DAT_00080754,&pStack_834,FUN_0002600c,DAT_00080754);\n    if (iVar1 != 0) {\n      if (3 < DAT_0007eb9c) {\n        local_810._0_1_ = 'c';\n        local_810._1_1_ = 'r';\n        local_810._2_1_ = 'e';\n        local_810._3_1_ = 'a';\n        uStack_80c._0_1_ = 't';\n        uStack_80c._1_1_ = 'e';\n        uStack_80c._2_1_ = ' ';\n        uStack_80c._3_1_ = 't';\n        uStack_808._0_1_ = 'h';\n        uStack_808._1_1_ = 'r';\n        uStack_808._2_1_ = 'e';\n        uStack_808._3_1_ = 'a';\n        uStack_804._0_1_ = 'd';\n        uStack_804._1_1_ = ' ';\n        uStack_804._2_1_ = 'f';\n        uStack_804._3_1_ = 'a';\n        uStack_800._0_1_ = 'i';\n        uStack_800._1_1_ = 'l';\n        uStack_800._2_1_ = 'e';\n        uStack_800._3_1_ = 'd';\n        local_7fc = 10;\n        FUN_0002e584(3,&local_810,0);\n        return 0xffffffff;\n      }\n      return 0xffffffff;\n    }\n    pthread_detach(*(pthread_t *)((int)DAT_00080754 + 0xc));\n    if (3 < DAT_0007eb9c) {\n      local_810._0_1_ = 'c';\n      local_810._1_1_ = 'r';\n      local_810._2_1_ = 'e';\n      local_810._3_1_ = 'a';\n      uStack_80c._0_1_ = 't';\n      uStack_80c._1_1_ = 'e';\n      uStack_80c._2_1_ = ' ';\n      uStack_80c._3_1_ = 't';\n      uStack_808._0_1_ = 'h';\n      uStack_808._1_1_ = 'r';\n      uStack_808._2_1_ = 'e';\n      uStack_808._3_1_ = 'a';\n      uStack_804 = CONCAT13(uStack_804._3_1_,0xa64);\n      FUN_0002e584(3,&local_810,0);\n      return 0;\n    }\n  }\n  return 0;\n}\n\n",
    "FUN_00027b70": "\nundefined4 FUN_00027b70(void)\n\n{\n  int iVar1;\n  pthread_attr_t pStack_834;\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined2 local_7fc;\n  \n  if (DAT_00080758 == (void *)0x0) {\n    pthread_attr_init(&pStack_834);\n    pthread_attr_setstacksize(&pStack_834,0x200000);\n    DAT_00080758 = calloc(1,0x40);\n    iVar1 = FUN_00030b10(DAT_00080758,&pStack_834,FUN_0002647c,DAT_00080758);\n    if (iVar1 != 0) {\n      if (3 < DAT_0007eb9c) {\n        local_810._0_1_ = 'c';\n        local_810._1_1_ = 'r';\n        local_810._2_1_ = 'e';\n        local_810._3_1_ = 'a';\n        uStack_80c._0_1_ = 't';\n        uStack_80c._1_1_ = 'e';\n        uStack_80c._2_1_ = ' ';\n        uStack_80c._3_1_ = 't';\n        uStack_808._0_1_ = 'h';\n        uStack_808._1_1_ = 'r';\n        uStack_808._2_1_ = 'e';\n        uStack_808._3_1_ = 'a';\n        uStack_804._0_1_ = 'd';\n        uStack_804._1_1_ = ' ';\n        uStack_804._2_1_ = 'f';\n        uStack_804._3_1_ = 'a';\n        uStack_800._0_1_ = 'i';\n        uStack_800._1_1_ = 'l';\n        uStack_800._2_1_ = 'e';\n        uStack_800._3_1_ = 'd';\n        local_7fc = 10;\n        FUN_0002e584(3,&local_810,0);\n        return 0xffffffff;\n      }\n      return 0xffffffff;\n    }\n    pthread_detach(*(pthread_t *)((int)DAT_00080758 + 0xc));\n    if (3 < DAT_0007eb9c) {\n      local_810._0_1_ = 'c';\n      local_810._1_1_ = 'r';\n      local_810._2_1_ = 'e';\n      local_810._3_1_ = 'a';\n      uStack_80c._0_1_ = 't';\n      uStack_80c._1_1_ = 'e';\n      uStack_80c._2_1_ = ' ';\n      uStack_80c._3_1_ = 't';\n      uStack_808._0_1_ = 'h';\n      uStack_808._1_1_ = 'r';\n      uStack_808._2_1_ = 'e';\n      uStack_808._3_1_ = 'a';\n      uStack_804 = CONCAT13(uStack_804._3_1_,0xa64);\n      FUN_0002e584(3,&local_810,0);\n      return 0;\n    }\n  }\n  return 0;\n}\n\n",
    "FUN_00027c88": "\nundefined4 FUN_00027c88(void)\n\n{\n  int iVar1;\n  pthread_attr_t pStack_834;\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined2 local_7fc;\n  \n  if (DAT_0008075c == (void *)0x0) {\n    pthread_attr_init(&pStack_834);\n    pthread_attr_setstacksize(&pStack_834,0x200000);\n    DAT_0008075c = calloc(1,0x40);\n    iVar1 = FUN_00030b10(DAT_0008075c,&pStack_834,FUN_00026b80,DAT_0008075c);\n    if (iVar1 != 0) {\n      if (3 < DAT_0007eb9c) {\n        local_810._0_1_ = 'c';\n        local_810._1_1_ = 'r';\n        local_810._2_1_ = 'e';\n        local_810._3_1_ = 'a';\n        uStack_80c._0_1_ = 't';\n        uStack_80c._1_1_ = 'e';\n        uStack_80c._2_1_ = ' ';\n        uStack_80c._3_1_ = 't';\n        uStack_808._0_1_ = 'h';\n        uStack_808._1_1_ = 'r';\n        uStack_808._2_1_ = 'e';\n        uStack_808._3_1_ = 'a';\n        uStack_804._0_1_ = 'd';\n        uStack_804._1_1_ = ' ';\n        uStack_804._2_1_ = 'f';\n        uStack_804._3_1_ = 'a';\n        uStack_800._0_1_ = 'i';\n        uStack_800._1_1_ = 'l';\n        uStack_800._2_1_ = 'e';\n        uStack_800._3_1_ = 'd';\n        local_7fc = 10;\n        FUN_0002e584(3,&local_810,0);\n        return 0xffffffff;\n      }\n      return 0xffffffff;\n    }\n    pthread_detach(*(pthread_t *)((int)DAT_0008075c + 0xc));\n    if (3 < DAT_0007eb9c) {\n      local_810._0_1_ = 'c';\n      local_810._1_1_ = 'r';\n      local_810._2_1_ = 'e';\n      local_810._3_1_ = 'a';\n      uStack_80c._0_1_ = 't';\n      uStack_80c._1_1_ = 'e';\n      uStack_80c._2_1_ = ' ';\n      uStack_80c._3_1_ = 't';\n      uStack_808._0_1_ = 'h';\n      uStack_808._1_1_ = 'r';\n      uStack_808._2_1_ = 'e';\n      uStack_808._3_1_ = 'a';\n      uStack_804 = CONCAT13(uStack_804._3_1_,0xa64);\n      FUN_0002e584(3,&local_810,0);\n      return 0;\n    }\n  }\n  return 0;\n}\n\n",
    "FUN_00027da0": "\nundefined4 FUN_00027da0(void)\n\n{\n  int iVar1;\n  pthread_attr_t pStack_834;\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined2 local_7fc;\n  \n  if (DAT_00080760 == (void *)0x0) {\n    pthread_attr_init(&pStack_834);\n    pthread_attr_setstacksize(&pStack_834,0x200000);\n    DAT_00080760 = calloc(1,0x40);\n    iVar1 = FUN_00030b10(DAT_00080760,&pStack_834,FUN_000271e8,DAT_00080760);\n    if (iVar1 != 0) {\n      if (3 < DAT_0007eb9c) {\n        local_810._0_1_ = 'c';\n        local_810._1_1_ = 'r';\n        local_810._2_1_ = 'e';\n        local_810._3_1_ = 'a';\n        uStack_80c._0_1_ = 't';\n        uStack_80c._1_1_ = 'e';\n        uStack_80c._2_1_ = ' ';\n        uStack_80c._3_1_ = 't';\n        uStack_808._0_1_ = 'h';\n        uStack_808._1_1_ = 'r';\n        uStack_808._2_1_ = 'e';\n        uStack_808._3_1_ = 'a';\n        uStack_804._0_1_ = 'd';\n        uStack_804._1_1_ = ' ';\n        uStack_804._2_1_ = 'f';\n        uStack_804._3_1_ = 'a';\n        uStack_800._0_1_ = 'i';\n        uStack_800._1_1_ = 'l';\n        uStack_800._2_1_ = 'e';\n        uStack_800._3_1_ = 'd';\n        local_7fc = 10;\n        FUN_0002e584(3,&local_810,0);\n        return 0xffffffff;\n      }\n      return 0xffffffff;\n    }\n    pthread_detach(*(pthread_t *)((int)DAT_00080760 + 0xc));\n    if (3 < DAT_0007eb9c) {\n      local_810._0_1_ = 'c';\n      local_810._1_1_ = 'r';\n      local_810._2_1_ = 'e';\n      local_810._3_1_ = 'a';\n      uStack_80c._0_1_ = 't';\n      uStack_80c._1_1_ = 'e';\n      uStack_80c._2_1_ = ' ';\n      uStack_80c._3_1_ = 't';\n      uStack_808._0_1_ = 'h';\n      uStack_808._1_1_ = 'r';\n      uStack_808._2_1_ = 'e';\n      uStack_808._3_1_ = 'a';\n      uStack_804 = CONCAT13(uStack_804._3_1_,0xa64);\n      FUN_0002e584(3,&local_810,0);\n      return 0;\n    }\n  }\n  return 0;\n}\n\n",
    "FUN_00027eb8": "\nvoid FUN_00027eb8(void)\n\n{\n  pthread_t pVar1;\n  void *pvVar2;\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined2 uStack_804;\n  undefined local_802;\n  \n  pvVar2 = DAT_00080750;\n  if ((DAT_00080750 != (void *)0x0) &&\n     (pVar1 = pthread_self(), *(pthread_t *)((int)pvVar2 + 0xc) != pVar1)) {\n    if (3 < DAT_0007eb9c) {\n      local_810._0_1_ = 'c';\n      local_810._1_1_ = 'a';\n      local_810._2_1_ = 'n';\n      local_810._3_1_ = 'c';\n      uStack_80c._0_1_ = 'e';\n      uStack_80c._1_1_ = 'l';\n      uStack_80c._2_1_ = ' ';\n      uStack_80c._3_1_ = 't';\n      uStack_808._0_1_ = 'h';\n      uStack_808._1_1_ = 'r';\n      uStack_808._2_1_ = 'e';\n      uStack_808._3_1_ = 'a';\n      uStack_804 = 0xa64;\n      local_802 = 0;\n      FUN_0002e584(3,&local_810,0);\n      pvVar2 = DAT_00080750;\n    }\n    FUN_0002fe84(pvVar2);\n    free(DAT_00080750);\n    DAT_00080750 = (void *)0x0;\n  }\n  return;\n}\n\n",
    "FUN_00027f58": "\nvoid FUN_00027f58(void)\n\n{\n  pthread_t pVar1;\n  void *pvVar2;\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined2 uStack_804;\n  undefined local_802;\n  \n  pvVar2 = DAT_00080754;\n  if ((DAT_00080754 != (void *)0x0) &&\n     (pVar1 = pthread_self(), *(pthread_t *)((int)pvVar2 + 0xc) != pVar1)) {\n    if (3 < DAT_0007eb9c) {\n      local_810._0_1_ = 'c';\n      local_810._1_1_ = 'a';\n      local_810._2_1_ = 'n';\n      local_810._3_1_ = 'c';\n      uStack_80c._0_1_ = 'e';\n      uStack_80c._1_1_ = 'l';\n      uStack_80c._2_1_ = ' ';\n      uStack_80c._3_1_ = 't';\n      uStack_808._0_1_ = 'h';\n      uStack_808._1_1_ = 'r';\n      uStack_808._2_1_ = 'e';\n      uStack_808._3_1_ = 'a';\n      uStack_804 = 0xa64;\n      local_802 = 0;\n      FUN_0002e584(3,&local_810,0);\n      pvVar2 = DAT_00080754;\n    }\n    FUN_0002fe84(pvVar2);\n    free(DAT_00080754);\n    DAT_00080754 = (void *)0x0;\n  }\n  return;\n}\n\n",
    "FUN_00027ff8": "\nvoid FUN_00027ff8(void)\n\n{\n  pthread_t pVar1;\n  void *pvVar2;\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined2 uStack_804;\n  undefined local_802;\n  \n  pvVar2 = DAT_00080758;\n  if ((DAT_00080758 != (void *)0x0) &&\n     (pVar1 = pthread_self(), *(pthread_t *)((int)pvVar2 + 0xc) != pVar1)) {\n    if (3 < DAT_0007eb9c) {\n      local_810._0_1_ = 'c';\n      local_810._1_1_ = 'a';\n      local_810._2_1_ = 'n';\n      local_810._3_1_ = 'c';\n      uStack_80c._0_1_ = 'e';\n      uStack_80c._1_1_ = 'l';\n      uStack_80c._2_1_ = ' ';\n      uStack_80c._3_1_ = 't';\n      uStack_808._0_1_ = 'h';\n      uStack_808._1_1_ = 'r';\n      uStack_808._2_1_ = 'e';\n      uStack_808._3_1_ = 'a';\n      uStack_804 = 0xa64;\n      local_802 = 0;\n      FUN_0002e584(3,&local_810,0);\n      pvVar2 = DAT_00080758;\n    }\n    FUN_0002fe84(pvVar2);\n    free(DAT_00080758);\n    DAT_00080758 = (void *)0x0;\n  }\n  return;\n}\n\n",
    "FUN_00028098": "\nvoid FUN_00028098(void)\n\n{\n  pthread_t pVar1;\n  void *pvVar2;\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined2 uStack_804;\n  undefined local_802;\n  \n  pvVar2 = DAT_0008075c;\n  if ((DAT_0008075c != (void *)0x0) &&\n     (pVar1 = pthread_self(), *(pthread_t *)((int)pvVar2 + 0xc) != pVar1)) {\n    if (3 < DAT_0007eb9c) {\n      local_810._0_1_ = 'c';\n      local_810._1_1_ = 'a';\n      local_810._2_1_ = 'n';\n      local_810._3_1_ = 'c';\n      uStack_80c._0_1_ = 'e';\n      uStack_80c._1_1_ = 'l';\n      uStack_80c._2_1_ = ' ';\n      uStack_80c._3_1_ = 't';\n      uStack_808._0_1_ = 'h';\n      uStack_808._1_1_ = 'r';\n      uStack_808._2_1_ = 'e';\n      uStack_808._3_1_ = 'a';\n      uStack_804 = 0xa64;\n      local_802 = 0;\n      FUN_0002e584(3,&local_810,0);\n      pvVar2 = DAT_0008075c;\n    }\n    FUN_0002fe84(pvVar2);\n    free(DAT_0008075c);\n    DAT_0008075c = (void *)0x0;\n  }\n  return;\n}\n\n",
    "FUN_00028138": "\nvoid FUN_00028138(int param_1)\n\n{\n  char acStack_808 [2048];\n  \n  if (3000000 < param_1) {\n    FUN_0001eb74();\n    FUN_000304d4(100);\n  }\n  if (3 < DAT_0007eb9c) {\n    snprintf(acStack_808,0x800,\"set UART baud to %d\\n\",param_1);\n    FUN_0002e584(3,acStack_808,0);\n  }\n  FUN_0001e9cc(param_1);\n  FUN_0001e160();\n  FUN_00014f20();\n  return;\n}\n\n",
    "FUN_000281b8": "\nvoid FUN_000281b8(void)\n\n{\n  FUN_00028138(12000000);\n  FUN_000304d4(100);\n  return;\n}\n\n",
    "FUN_000281d4": "\nvoid FUN_000281d4(undefined4 param_1,undefined4 param_2)\n\n{\n  undefined auStack_c [12];\n  \n  FUN_00052bf0(s_bitmain_submit_nonce_0007e2f0,param_1,param_2,auStack_c,0,0);\n  return;\n}\n\n",
    "FUN_00028208": "\nvoid FUN_00028208(undefined4 param_1,undefined4 param_2)\n\n{\n  undefined auStack_c [12];\n  \n  FUN_00052bf0(s_bitmain_api_status_0007e374,param_1,param_2,auStack_c,0,0);\n  return;\n}\n\n",
    "FUN_0002823c": "\nundefined4 FUN_0002823c(void)\n\n{\n  int iVar1;\n  \n  puts(\"bmminer_socket_init\");\n  while (iVar1 = FUN_0005261c(&DAT_0007e3f8,4), iVar1 != 0) {\n    sleep(3);\n  }\n  puts(\"regist ..\");\n  while( true ) {\n    FUN_00052930(s_bitmain_submit_nonce_0007e2f0);\n    iVar1 = FUN_00052930(s_bitmain_api_status_0007e374);\n    if (iVar1 == 0) break;\n    sleep(3);\n  }\n  puts(\"regist done!\");\n  return 0;\n}\n\n",
    "FUN_0002835c": "\nundefined4 FUN_0002835c(undefined4 param_1)\n\n{\n  FUN_0003d3d4(param_1,&DAT_00080970);\n  return 0;\n}\n\n",
    "FUN_0002838c": "\nvoid FUN_0002838c(undefined4 param_1)\n\n{\n  undefined4 uVar1;\n  \n  printf(\"%s\\nBuilt with bitmain_c5 mining support.\\n\",&DAT_00080974);\n  uVar1 = FUN_0003e370(DAT_0099ee20,param_1);\n  printf(\"%s\",uVar1);\n  fflush(stdout);\n                    /* WARNING: Subroutine does not return */\n  exit(0);\n}\n\n",
    "FUN_000288c4": "\nchar * FUN_000288c4(char *param_1)\n\n{\n  int *piVar1;\n  size_t sVar2;\n  size_t sVar3;\n  int iVar4;\n  char *pcVar5;\n  bool bVar6;\n  undefined auStack_114 [92];\n  char acStack_b8 [164];\n  \n  pcVar5 = &DAT_00080768;\n  if (DAT_00080ac0 == 0) {\n    DAT_00080ac0 = __strdup();\n  }\n  iVar4 = DAT_00080ac4 + 1;\n  bVar6 = DAT_00080ac4 + -9 < 0;\n  DAT_00080ac4 = iVar4;\n  if (10 < iVar4) {\n    pcVar5 = (char *)0x368c;\n  }\n  if (iVar4 != 10 && bVar6 == SBORROW4(iVar4,10)) {\n    pcVar5 = (char *)((uint)pcVar5 & 0xffff | 0x60000);\n  }\n  if (iVar4 != 10 && bVar6 == SBORROW4(iVar4,10)) {\n    return pcVar5;\n  }\n  piVar1 = (int *)FUN_0004d6e4(param_1,0,auStack_114);\n  if ((piVar1 != (int *)0x0) && (*piVar1 == 0)) {\n    pcVar5 = (char *)FUN_000289b8(piVar1,1);\n    return pcVar5;\n  }\n  sVar2 = strlen(param_1);\n  sVar3 = strlen(acStack_b8);\n  sVar2 = sVar2 + sVar3 + 0x23;\n  pcVar5 = (char *)FUN_0002f408(sVar2,\"bmminer.c\",\"load_config\",0x386);\n  snprintf(pcVar5,sVar2,\"JSON decode of file \\'%s\\' failed\\n %s\",param_1,acStack_b8);\n  return pcVar5;\n}\n\n",
    "FUN_000289b8": "\nundefined * FUN_000289b8(undefined4 param_1,int param_2)\n\n{\n  char *__s;\n  char *pcVar1;\n  int *piVar2;\n  int *piVar3;\n  undefined4 uVar4;\n  undefined *puVar5;\n  int *piVar6;\n  uint uVar7;\n  int iVar8;\n  char *pcVar9;\n  uint uVar10;\n  char acStack_828 [2052];\n  \n  if ((param_2 != 0) && (DAT_00080b90 == 0)) {\n    DAT_00080b90 = 1;\n  }\n  if (DAT_0007e61c != 0x10) {\n    uVar10 = DAT_0007e61c & 8;\n    piVar3 = &DAT_0007e618;\n    do {\n      if (uVar10 != 0) {\n                    /* WARNING: Subroutine does not return */\n        __assert_fail(\"!(opt->type & OPT_SUBTABLE)\",\"bmminer.c\",0x2de,\"parse_config\");\n      }\n      if (*piVar3 == 0) {\n        uVar10 = piVar3[8];\n      }\n      else {\n        __s = (char *)__strdup();\n        pcVar1 = strtok(__s,\"|\");\n        while (pcVar1 != (char *)0x0) {\n          if ((pcVar1[1] == '-') &&\n             (piVar2 = (int *)FUN_0004e234(param_1,pcVar1 + 2), piVar2 != (int *)0x0)) {\n            iVar8 = *piVar2;\n            if ((piVar3[1] & 6U) == 0) {\nLAB_00028ac4:\n              if (iVar8 - 5U < 2) {\n                if ((piVar3[1] & 1U) == 0) {\n                  if (iVar8 == 5) {\n                    FUN_0003d2f0(piVar3[5]);\n                  }\n                  else {\n                    FUN_0003d300();\n                  }\n                  goto LAB_00028a70;\n                }\n                pcVar9 = (char *)(*(code *)piVar3[2])();\n                goto LAB_00028bb4;\n              }\n              pcVar9 = \"Invalid value\";\n            }\n            else {\n              if (iVar8 != 2) {\n                if (iVar8 == 1) {\n                  uVar10 = 0;\n                  iVar8 = FUN_0004e5a0(piVar2);\n                  if (iVar8 != 0) {\n                    do {\n                      piVar6 = (int *)FUN_0004e5bc(piVar2,uVar10);\n                      if (piVar6 == (int *)0x0) break;\n                      if (*piVar6 == 2) {\n                        uVar4 = FUN_0004e768();\n                        pcVar9 = (char *)(*(code *)piVar3[3])(uVar4,piVar3[5]);\n                        if (piVar3[1] == 4) {\n                          FUN_0003d3d4(uVar4,piVar3[5]);\n                        }\nLAB_00028cdc:\n                        if (pcVar9 != (char *)0x0) goto joined_r0x00028ae0;\n                      }\n                      else if (*piVar6 == 0) {\n                        pcVar9 = (char *)FUN_000289b8();\n                        goto LAB_00028cdc;\n                      }\n                      uVar10 = uVar10 + 1;\n                      uVar7 = FUN_0004e5a0(piVar2);\n                    } while (uVar10 < uVar7);\n                  }\n                  goto LAB_00028a70;\n                }\n                goto LAB_00028ac4;\n              }\n              uVar4 = FUN_0004e768();\n              pcVar9 = (char *)(*(code *)piVar3[3])(uVar4,piVar3[5]);\n              if (piVar3[1] == 4) {\n                FUN_0003d3d4(uVar4,piVar3[5]);\n              }\nLAB_00028bb4:\n              if (pcVar9 == (char *)0x0) goto LAB_00028a70;\n            }\njoined_r0x00028ae0:\n            if (param_2 == 0) {\n              snprintf(&DAT_00080ac8,200,\"Parsing JSON option %s: %s\",pcVar1,pcVar9);\n              return &DAT_00080ac8;\n            }\n            if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (2 < DAT_0007eba0)) {\n              snprintf(acStack_828,0x800,\"Invalid config option %s: %s\",pcVar1,pcVar9);\n              FUN_0002e584(3,acStack_828,0);\n            }\n            DAT_00080b90 = -1;\n          }\nLAB_00028a70:\n          pcVar1 = strtok((char *)0x0,\"|\");\n        }\n        free(__s);\n        uVar10 = piVar3[8];\n      }\n      if (uVar10 == 0x10) break;\n      uVar10 = uVar10 & 8;\n      piVar3 = piVar3 + 7;\n    } while( true );\n  }\n  piVar3 = (int *)FUN_0004e234(param_1,\"include\");\n  if ((piVar3 != (int *)0x0) && (*piVar3 == 2)) {\n    uVar4 = FUN_0004e768();\n    puVar5 = (undefined *)FUN_000288c4(uVar4,0);\n    return puVar5;\n  }\n  return (undefined *)0x0;\n}\n\n",
    "FUN_00028d40": "\nchar * FUN_00028d40(undefined4 param_1,uint *param_2)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)FUN_0003d4f0();\n  if (pcVar1 != (char *)0x0) {\n    return pcVar1;\n  }\n  pcVar1 = (char *)0x0;\n  if (9999 < *param_2) {\n    pcVar1 = \"Value out of range\";\n  }\n  return pcVar1;\n}\n\n",
    "FUN_00028d70": "\nchar * FUN_00028d70(undefined4 param_1,uint *param_2)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)FUN_0003d4f0();\n  if (pcVar1 != (char *)0x0) {\n    return pcVar1;\n  }\n  pcVar1 = (char *)0x0;\n  if (100 < *param_2) {\n    pcVar1 = \"Value out of range\";\n  }\n  return pcVar1;\n}\n\n",
    "FUN_00028d9c": "\nchar * FUN_00028d9c(undefined4 param_1,int *param_2)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)FUN_0003d4f0();\n  if (pcVar1 != (char *)0x0) {\n    return pcVar1;\n  }\n  pcVar1 = (char *)0x0;\n  if (0xfffe < *param_2 - 1U) {\n    pcVar1 = \"Value out of range\";\n  }\n  return pcVar1;\n}\n\n",
    "FUN_00028e18": "\nvoid FUN_00028e18(undefined4 param_1,undefined4 param_2)\n\n{\n  int *piVar1;\n  char acStack_810 [2052];\n  \n  piVar1 = __errno_location();\n  snprintf(acStack_810,0x800,\"WTF RWLOCK ERROR ON UNLOCK! errno=%d in %s %s():%d\",*piVar1,\n           \"bmminer.c\",param_1,param_2);\n  FUN_0002e584(3,acStack_810,1);\n  return;\n}\n\n",
    "FUN_00028ee8": "\nvoid FUN_00028ee8(pthread_rwlock_t *param_1,undefined4 param_2,undefined4 param_3)\n\n{\n  int iVar1;\n  int *piVar2;\n  char acStack_810 [2052];\n  \n  iVar1 = pthread_rwlock_wrlock(param_1);\n  if (iVar1 == 0) {\n    return;\n  }\n  piVar2 = __errno_location();\n  snprintf(acStack_810,0x800,\"WTF WRLOCK ERROR ON LOCK! errno=%d in %s %s():%d\",*piVar2,\"bmminer.c\",\n           param_2,param_3);\n  FUN_0002e584(3,acStack_810,1);\n  return;\n}\n\n",
    "FUN_00028f5c": "\nvoid FUN_00028f5c(undefined4 param_1,undefined4 param_2)\n\n{\n  int *piVar1;\n  char acStack_810 [2052];\n  \n  piVar1 = __errno_location();\n  snprintf(acStack_810,0x800,\"WTF MUTEX ERROR ON UNLOCK! errno=%d in %s %s():%d\",*piVar1,\"bmminer.c\"\n           ,param_1,param_2);\n  FUN_0002e584(3,acStack_810,1);\n  return;\n}\n\n",
    "FUN_00028fb8": "\nvoid FUN_00028fb8(undefined4 param_1,undefined4 param_2)\n\n{\n  int *piVar1;\n  char acStack_810 [2052];\n  \n  piVar1 = __errno_location();\n  snprintf(acStack_810,0x800,\"Failed to pthread_mutex_init errno=%d in %s %s():%d\",*piVar1,\n           \"bmminer.c\",param_1,param_2);\n  FUN_0002e584(3,acStack_810,1);\n  return;\n}\n\n",
    "FUN_00029014": "\nvoid FUN_00029014(undefined4 param_1,undefined4 param_2)\n\n{\n  int *piVar1;\n  char acStack_810 [2052];\n  \n  piVar1 = __errno_location();\n  snprintf(acStack_810,0x800,\"WTF MUTEX ERROR ON LOCK! errno=%d in %s %s():%d\",*piVar1,\"bmminer.c\",\n           param_1,param_2);\n  FUN_0002e584(3,acStack_810,1);\n  return;\n}\n\n",
    "FUN_00029070": "\nvoid FUN_00029070(pthread_mutex_t *param_1,undefined4 param_2,undefined4 param_3)\n\n{\n  int *piVar1;\n  int iVar2;\n  char acStack_810 [2048];\n  \n  iVar2 = pthread_mutex_init(param_1,(pthread_mutexattr_t *)0x0);\n  if (iVar2 != 0) {\n    FUN_00028fb8(param_2,param_3);\n  }\n  iVar2 = pthread_rwlock_init((pthread_rwlock_t *)(param_1 + 1),(pthread_rwlockattr_t *)0x0);\n  if (iVar2 != 0) {\n    piVar1 = __errno_location();\n    snprintf(acStack_810,0x800,\"Failed to pthread_rwlock_init errno=%d in %s %s():%d\",*piVar1,\n             \"bmminer.c\",param_2,param_3);\n    FUN_0002e584(3,acStack_810,1);\n  }\n  return;\n}\n\n",
    "FUN_000290b4": "\nint FUN_000290b4(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  int *piVar4;\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined4 uStack_804;\n  undefined4 local_800;\n  undefined4 uStack_7fc;\n  undefined4 uStack_7f8;\n  undefined4 uStack_7f4;\n  undefined2 uStack_7f0;\n  undefined local_7ee;\n  \n  iVar1 = FUN_0002f490(1,0x1c0,\"bmminer.c\",\"make_work\",0x558);\n  if (iVar1 == 0) {\n    local_810._0_1_ = 'F';\n    local_810._1_1_ = 'a';\n    local_810._2_1_ = 'i';\n    local_810._3_1_ = 'l';\n    uStack_80c._0_1_ = 'e';\n    uStack_80c._1_1_ = 'd';\n    uStack_80c._2_1_ = ' ';\n    uStack_80c._3_1_ = 't';\n    uStack_808._0_1_ = 'o';\n    uStack_808._1_1_ = ' ';\n    uStack_808._2_1_ = 'c';\n    uStack_808._3_1_ = 'a';\n    uStack_804._0_1_ = 'l';\n    uStack_804._1_1_ = 'l';\n    uStack_804._2_1_ = 'o';\n    uStack_804._3_1_ = 'c';\n    local_800._0_1_ = ' ';\n    local_800._1_1_ = 'w';\n    local_800._2_1_ = 'o';\n    local_800._3_1_ = 'r';\n    uStack_7fc._0_1_ = 'k';\n    uStack_7fc._1_1_ = ' ';\n    uStack_7fc._2_1_ = 'i';\n    uStack_7fc._3_1_ = 'n';\n    uStack_7f8._0_1_ = ' ';\n    uStack_7f8._1_1_ = 'm';\n    uStack_7f8._2_1_ = 'a';\n    uStack_7f8._3_1_ = 'k';\n    uStack_7f4._0_1_ = 'e';\n    uStack_7f4._1_1_ = '_';\n    uStack_7f4._2_1_ = 'w';\n    uStack_7f4._3_1_ = 'o';\n    uStack_7f0 = 0x6b72;\n    local_7ee = 0;\n    FUN_0002e584(3,&local_810,1);\n  }\n  iVar2 = pthread_mutex_lock((pthread_mutex_t *)&DAT_00590408);\n  if (iVar2 == 0) {\n    iVar2 = pthread_rwlock_wrlock((pthread_rwlock_t *)&DAT_00590420);\n  }\n  else {\n    piVar4 = __errno_location();\n    snprintf((char *)&local_810,0x800,\"WTF MUTEX ERROR ON LOCK! errno=%d in %s %s():%d\",*piVar4,\n             \"bmminer.c\",\"total_work_inc\",0x54f);\n    FUN_0002e584(3,&local_810,1);\n    iVar2 = pthread_rwlock_wrlock((pthread_rwlock_t *)&DAT_00590420);\n  }\n  if (iVar2 != 0) {\n    piVar4 = __errno_location();\n    snprintf((char *)&local_810,0x800,\"WTF WRLOCK ERROR ON LOCK! errno=%d in %s %s():%d\",*piVar4,\n             \"bmminer.c\",\"total_work_inc\",0x54f);\n    FUN_0002e584(3,&local_810,1);\n  }\n  iVar2 = DAT_00080b94;\n  DAT_00080b94 = DAT_00080b94 + 1;\n  iVar3 = pthread_rwlock_unlock((pthread_rwlock_t *)&DAT_00590420);\n  if (iVar3 != 0) {\n    piVar4 = __errno_location();\n    snprintf((char *)&local_810,0x800,\"WTF RWLOCK ERROR ON UNLOCK! errno=%d in %s %s():%d\",*piVar4,\n             \"bmminer.c\",\"total_work_inc\",0x551);\n    FUN_0002e584(3,&local_810,1);\n  }\n  iVar3 = pthread_mutex_unlock((pthread_mutex_t *)&DAT_00590408);\n  if (iVar3 != 0) {\n    piVar4 = __errno_location();\n    snprintf((char *)&local_810,0x800,\"WTF MUTEX ERROR ON UNLOCK! errno=%d in %s %s():%d\",*piVar4,\n             \"bmminer.c\",\"total_work_inc\",0x551);\n    FUN_0002e584(3,&local_810,1);\n  }\n  (*DAT_0007ecc4)();\n  *(int *)(iVar1 + 0x154) = iVar2;\n  return iVar1;\n}\n\n",
    "FUN_000292e0": "\nchar * FUN_000292e0(undefined4 param_1,int *param_2,int param_3,int param_4)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)FUN_0003d4f0();\n  if (pcVar1 == (char *)0x0) {\n    pcVar1 = (char *)0x0;\n    if (param_4 < *param_2 || *param_2 < param_3) {\n      pcVar1 = \"Value out of range\";\n    }\n    return pcVar1;\n  }\n  return pcVar1;\n}\n\n",
    "FUN_0002932c": "\nvoid FUN_0002932c(char *param_1,undefined4 *param_2,undefined4 *param_3)\n\n{\n  int iVar1;\n  \n  iVar1 = sscanf(param_1,\"%d-%d\",param_2);\n  if (iVar1 == 1) {\n    *param_3 = *param_2;\n  }\n  return;\n}\n\n",
    "FUN_0002935c": "\nvoid FUN_0002935c(char *param_1)\n\n{\n  char *pcVar1;\n  size_t sVar2;\n  undefined2 *puVar3;\n  \n  if ((DAT_0058e3f0 != (char *)0x0) && (*DAT_0058e3f0 != '\\0')) {\n    strcpy(param_1,DAT_0058e3f0);\n    return;\n  }\n  pcVar1 = getenv(\"HOME\");\n  if ((pcVar1 == (char *)0x0) || (pcVar1 = getenv(\"HOME\"), *pcVar1 == '\\0')) {\n    *param_1 = '\\0';\n  }\n  else {\n    pcVar1 = getenv(\"HOME\");\n    puVar3 = (undefined2 *)stpcpy(param_1,pcVar1);\n    *puVar3 = 0x2f;\n  }\n  sVar2 = strlen(param_1);\n  *(undefined4 *)(param_1 + sVar2) = 0x6d6d622e;\n  *(undefined4 *)(param_1 + sVar2 + 4) = 0x72656e69;\n  *(undefined2 *)(param_1 + sVar2 + 8) = 0x2f;\n  mkdir(param_1,0x1ff);\n  sVar2 = strlen(param_1);\n  *(undefined4 *)(param_1 + sVar2) = 0x696d6d62;\n  *(undefined4 *)(param_1 + sVar2 + 4) = 0x2e72656e;\n  param_1[sVar2 + 0xc] = '\\0';\n  *(undefined4 *)(param_1 + sVar2 + 8) = 0x666e6f63;\n  return;\n}\n\n",
    "FUN_00029458": "\nvoid FUN_00029458(void)\n\n{\n  int iVar1;\n  \n  DAT_00080ac0 = (char *)FUN_0002f408(0x1000,\"bmminer.c\",\"load_default_config\",0x3b6);\n  FUN_0002935c();\n  iVar1 = access(DAT_00080ac0,4);\n  if (iVar1 != 0) {\n    free(DAT_00080ac0);\n    DAT_00080ac0 = (char *)0x0;\n    return;\n  }\n  FUN_000288c4();\n  return;\n}\n\n",
    "FUN_000294b8": "\nvoid FUN_000294b8(undefined4 param_1)\n\n{\n  void *__ptr;\n  double in_d0;\n  double dVar1;\n  double dVar2;\n  undefined8 uVar3;\n  undefined8 local_850;\n  undefined8 local_848;\n  undefined8 local_840;\n  undefined8 local_838;\n  undefined4 local_830;\n  undefined4 uStack_82c;\n  undefined4 uStack_828;\n  undefined4 uStack_824;\n  undefined4 local_820;\n  undefined4 uStack_81c;\n  undefined4 uStack_818;\n  undefined2 uStack_814;\n  undefined local_812;\n  \n  if (in_d0 == 0.0) {\n    if (((DAT_00590404 == '\\0') && (DAT_00482a5c == '\\0')) && (DAT_0007eba0 < 3)) {\n      local_850 = 0;\n      local_848 = 0;\n      local_840 = 0;\n      uVar3 = 0xffff0000;\n    }\n    else {\n      uVar3 = 0xffff0000;\n      local_830._0_1_ = 'D';\n      local_830._1_1_ = 'i';\n      local_830._2_1_ = 'f';\n      local_830._3_1_ = 'f';\n      uStack_82c._0_1_ = ' ';\n      uStack_82c._1_1_ = 'z';\n      uStack_82c._2_1_ = 'e';\n      uStack_82c._3_1_ = 'r';\n      uStack_828._0_1_ = 'o';\n      uStack_828._1_1_ = ' ';\n      uStack_828._2_1_ = 'p';\n      uStack_828._3_1_ = 'a';\n      uStack_824._0_1_ = 's';\n      uStack_824._1_1_ = 's';\n      uStack_824._2_1_ = 'e';\n      uStack_824._3_1_ = 'd';\n      local_820._0_1_ = ' ';\n      local_820._1_1_ = 't';\n      local_820._2_1_ = 'o';\n      local_820._3_1_ = ' ';\n      uStack_81c._0_1_ = 's';\n      uStack_81c._1_1_ = 'e';\n      uStack_81c._2_1_ = 't';\n      uStack_81c._3_1_ = '_';\n      uStack_818._0_1_ = 't';\n      uStack_818._1_1_ = 'a';\n      uStack_818._2_1_ = 'r';\n      uStack_818._3_1_ = 'g';\n      uStack_814 = 0x7465;\n      local_812 = 0;\n      FUN_0002e584(3,&local_830,0);\n      local_850 = 0;\n      local_848 = 0;\n      local_840 = 0;\n    }\n  }\n  else {\n    dVar1 = (2.695953529101131e+67 / in_d0) * 1.593091911132452e-58;\n    uVar3 = FUN_00060180(SUB84(dVar1,0),(int)((ulonglong)dVar1 >> 0x20));\n    dVar1 = (double)FUN_000600b4();\n    dVar2 = 2.695953529101131e+67 / in_d0 - dVar1 * 6.277101735386681e+57;\n    dVar1 = dVar2 * 2.938735877055719e-39;\n    local_840 = FUN_00060180(SUB84(dVar1,0),(int)((ulonglong)dVar1 >> 0x20));\n    dVar1 = (double)FUN_000600b4();\n    dVar2 = dVar2 - dVar1 * 3.402823669209385e+38;\n    dVar1 = dVar2 * 5.421010862427522e-20;\n    local_848 = FUN_00060180(SUB84(dVar1,0),(int)((ulonglong)dVar1 >> 0x20));\n    dVar1 = (double)FUN_000600b4();\n    dVar2 = dVar2 - dVar1 * 1.844674407370955e+19;\n    local_850 = FUN_00060180(SUB84(dVar2,0),(int)((ulonglong)dVar2 >> 0x20));\n  }\n  local_838 = uVar3;\n  if (DAT_00482a5d != '\\0') {\n    __ptr = (void *)FUN_0002f670(&local_850,0x20);\n    if ((DAT_00482a5d != '\\0') &&\n       (((DAT_00590404 != '\\0' || (DAT_00482a5c != '\\0')) || (6 < DAT_0007eba0)))) {\n      snprintf((char *)&local_830,0x800,\"Generated target %s\",__ptr);\n      FUN_0002e584(7,&local_830,0);\n    }\n    free(__ptr);\n  }\n  FUN_00030ea8(param_1,&local_850,0x20,\"bmminer.c\",\"set_target\",0x464);\n  return;\n}\n\n",
    "FUN_0002974c": "\nvoid FUN_0002974c(int param_1,int param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  time_t tVar3;\n  void *__ptr;\n  void *__ptr_00;\n  int *piVar4;\n  uint *puVar5;\n  uint uVar6;\n  uint *puVar7;\n  uint uVar8;\n  undefined4 uVar9;\n  char *__s;\n  pthread_mutex_t *__mutex;\n  pthread_rwlock_t *__rwlock;\n  bool bVar10;\n  double dVar11;\n  double dVar12;\n  double dVar13;\n  double dVar14;\n  double dVar15;\n  undefined8 uVar16;\n  undefined4 local_8d8;\n  uint uStack_8d4;\n  uint local_8d0 [7];\n  uint uStack_8b4;\n  uint local_8b0 [8];\n  undefined auStack_890 [28];\n  uint uStack_874;\n  uint local_870 [16];\n  undefined2 local_830 [68];\n  undefined auStack_7a8 [1916];\n  \n  __mutex = (pthread_mutex_t *)(param_1 + 0xd4);\n  iVar2 = pthread_mutex_lock(__mutex);\n  if (iVar2 != 0) {\n    piVar4 = __errno_location();\n    snprintf((char *)local_830,0x800,\"WTF MUTEX ERROR ON LOCK! errno=%d in %s %s():%d\",*piVar4,\n             \"bmminer.c\",\"gen_stratum_work\",0x4f4);\n    FUN_0002e584(3,local_830,1);\n  }\n  __rwlock = (pthread_rwlock_t *)(param_1 + 0xec);\n  iVar2 = pthread_rwlock_wrlock(__rwlock);\n  if (iVar2 != 0) {\n    piVar4 = __errno_location();\n    snprintf((char *)local_830,0x800,\"WTF WRLOCK ERROR ON LOCK! errno=%d in %s %s():%d\",*piVar4,\n             \"bmminer.c\",\"gen_stratum_work\",0x4f4);\n    FUN_0002e584(3,local_830,1);\n  }\n  local_8d8 = *(undefined4 *)(param_1 + 0x270);\n  uStack_8d4 = *(uint *)(param_1 + 0x274);\n  FUN_00030ea8(*(int *)(param_1 + 0x620) + *(int *)(param_1 + 0x628),&local_8d8,\n               *(undefined4 *)(param_1 + 0x278),\"bmminer.c\",\"gen_stratum_work\");\n  uVar8 = *(uint *)(param_1 + 0x270);\n  iVar2 = *(int *)(param_1 + 0x274);\n  *(uint *)(param_1 + 0x270) = uVar8 + 1;\n  *(uint *)(param_1 + 0x274) = iVar2 + (uint)(0xfffffffe < uVar8);\n  *(uint *)(param_2 + 0x128) = uVar8;\n  *(int *)(param_2 + 300) = iVar2;\n  *(undefined4 *)(param_2 + 0x130) = *(undefined4 *)(param_1 + 0x278);\n  iVar2 = pthread_rwlock_unlock(__rwlock);\n  if (iVar2 == 0) {\n    iVar2 = pthread_rwlock_rdlock(__rwlock);\n    if (iVar2 == 0) goto LAB_0002982c;\nLAB_0002a024:\n    piVar4 = __errno_location();\n    snprintf((char *)local_830,0x800,\"WTF RDLOCK ERROR ON LOCK! errno=%d in %s %s():%d\",*piVar4,\n             \"bmminer.c\",\"gen_stratum_work\",0x4ff);\n    FUN_0002e584(3,local_830,1);\n    iVar2 = pthread_mutex_unlock(__mutex);\n  }\n  else {\n    piVar4 = __errno_location();\n    snprintf((char *)local_830,0x800,\"WTF RWLOCK ERROR ON UNLOCK! errno=%d in %s %s():%d\",*piVar4,\n             \"bmminer.c\",\"gen_stratum_work\",0x4ff);\n    FUN_0002e584(3,local_830,1);\n    iVar2 = pthread_rwlock_rdlock(__rwlock);\n    if (iVar2 != 0) goto LAB_0002a024;\nLAB_0002982c:\n    iVar2 = pthread_mutex_unlock(__mutex);\n  }\n  if (iVar2 != 0) {\n    piVar4 = __errno_location();\n    snprintf((char *)local_830,0x800,\"WTF MUTEX ERROR ON UNLOCK! errno=%d in %s %s():%d\",*piVar4,\n             \"bmminer.c\",\"gen_stratum_work\",0x4ff);\n    FUN_0002e584(3,local_830,1);\n  }\n  FUN_0002f1ec(*(undefined4 *)(param_1 + 0x620),*(undefined4 *)(param_1 + 0x624),local_830);\n  FUN_0002f1ec(local_830,0x20,local_8d0);\n  FUN_00030ea8(local_8b0,local_8d0,0x20,\"bmminer.c\",\"gen_stratum_work\");\n  if (0 < *(int *)(param_1 + 0x6ac)) {\n    iVar2 = 0;\n    do {\n      iVar1 = iVar2 * 4;\n      iVar2 = iVar2 + 1;\n      FUN_00030ea8(auStack_890,*(undefined4 *)(*(int *)(param_1 + 0x2a4) + iVar1),0x20,\"bmminer.c\",\n                   \"gen_stratum_work\");\n      FUN_0002f1ec(local_8b0,0x40,local_830);\n      FUN_0002f1ec(local_830,0x20,local_8d0);\n      FUN_00030ea8(local_8b0,local_8d0,0x20,\"bmminer.c\",\"gen_stratum_work\");\n    } while (iVar2 < *(int *)(param_1 + 0x6ac));\n  }\n  puVar7 = &uStack_8b4;\n  puVar5 = &uStack_8d4;\n  do {\n    puVar7 = puVar7 + 1;\n    uVar8 = *puVar7;\n    puVar5 = puVar5 + 1;\n    *puVar5 = uVar8 << 0x18 | (uVar8 >> 8 & 0xff) << 0x10 | (uVar8 >> 0x10 & 0xff) << 8 |\n              uVar8 >> 0x18;\n  } while (local_8b0 + 7 != puVar7);\n  FUN_00030ea8(param_2,param_1 + 0x62c,0x70,\"bmminer.c\",\"gen_stratum_work\");\n  FUN_00030ea8(param_2 + 0x24,local_8d0,0x20,\"bmminer.c\",\"gen_stratum_work\");\n  uVar9 = *(undefined4 *)(param_1 + 0x724);\n  *(undefined4 *)(param_2 + 0x138) = *(undefined4 *)(param_1 + 0x720);\n  *(undefined4 *)(param_2 + 0x13c) = uVar9;\n  uVar9 = __strdup(*(undefined4 *)(param_1 + 0x2a0));\n  *(undefined4 *)(param_2 + 0x120) = uVar9;\n  uVar9 = __strdup(*(undefined4 *)(param_1 + 0x264));\n  *(undefined4 *)(param_2 + 0x140) = uVar9;\n  uVar9 = __strdup(param_1 + 0x70c);\n  *(undefined4 *)(param_2 + 0x134) = uVar9;\n  iVar2 = pthread_rwlock_unlock(__rwlock);\n  if (iVar2 != 0) {\n    piVar4 = __errno_location();\n    snprintf((char *)local_830,0x800,\"WTF RWLOCK ERROR ON UNLOCK! errno=%d in %s %s():%d\",*piVar4,\n             \"bmminer.c\",\"gen_stratum_work\",0x51e);\n    FUN_0002e584(3,local_830,1);\n  }\n  (*DAT_0007ecc4)();\n  if (DAT_00482a5d != '\\0') {\n    __ptr = (void *)FUN_0002f670(param_2,0x70);\n    __ptr_00 = (void *)FUN_0002f670(local_8d0,0x20);\n    if (DAT_00482a5d != '\\0') {\n      if (((DAT_00590404 == '\\0') && (DAT_00482a5c == '\\0')) && (DAT_0007eba0 < 7)) {\nLAB_00029db8:\n        if ((DAT_00482a5c == '\\0') && (DAT_0007eba0 < 7)) {\nLAB_00029e20:\n          if ((DAT_00482a5c != '\\0') || (6 < DAT_0007eba0)) {\nLAB_00029e40:\n            snprintf((char *)local_830,0x800,\"Work job_id %s nonce2 %llu ntime %s\",\n                     *(undefined4 *)(param_2 + 0x120),*(undefined4 *)(param_2 + 0x128),\n                     *(undefined4 *)(param_2 + 300),*(undefined4 *)(param_2 + 0x134));\n            FUN_0002e584(7,local_830,0);\n          }\n        }\n        else {\nLAB_00029dd8:\n          snprintf((char *)local_830,0x800,\"Generated stratum header %s\",__ptr);\n          FUN_0002e584(7,local_830,0);\n          if (DAT_00482a5d != '\\0') {\n            if (DAT_00590404 == '\\0') goto LAB_00029e20;\n            goto LAB_00029e40;\n          }\n        }\n      }\n      else {\n        snprintf((char *)local_830,0x800,\"Generated stratum merkle %s\",__ptr_00);\n        FUN_0002e584(7,local_830,0);\n        if (DAT_00482a5d != '\\0') {\n          if (DAT_00590404 == '\\0') goto LAB_00029db8;\n          goto LAB_00029dd8;\n        }\n      }\n    }\n    free(__ptr);\n    free(__ptr_00);\n  }\n  puVar5 = (uint *)(param_2 + -4);\n  puVar7 = &uStack_874;\n  do {\n    puVar5 = puVar5 + 1;\n    uVar8 = *puVar5;\n    puVar7 = puVar7 + 1;\n    *puVar7 = uVar8 << 0x18 | (uVar8 >> 8 & 0xff) << 0x10 | (uVar8 >> 0x10 & 0xff) << 8 |\n              uVar8 >> 0x18;\n  } while (local_870 + 0xf != puVar7);\n  FUN_0002f024(local_830);\n  FUN_0002f054(local_830,local_870,0x40);\n  dVar11 = 2.183533869893122e-311;\n  FUN_00030ea8(param_2 + 0x80,auStack_7a8,0x20,\"bmminer.c\");\n  FUN_000294b8((int)*(undefined8 *)(param_2 + 0x138),param_2 + 0xa0);\n  DAT_005945b4 = DAT_005945b4 + 1;\n  tVar3 = time((time_t *)0x0);\n  if (5 < tVar3 - DAT_00080b98) {\n    DAT_00080b98 = time((time_t *)0x0);\n    DAT_00080b9c = DAT_005945b4;\n  }\n  dVar15 = *(double *)(param_2 + 0x138);\n  *(undefined *)(param_2 + 0x11c) = 1;\n  *(int *)(param_2 + 0x104) = param_1;\n  *(undefined4 *)(param_2 + 0xf8) = 0;\n  *(undefined *)(param_2 + 0x118) = 0;\n  *(undefined4 *)(param_2 + 0x150) = 0;\n  *(undefined *)(param_2 + 0x1b8) = 0x53;\n  *(undefined4 *)(param_2 + 0xf4) = 0x3c;\n  if (dVar15 == 0.0) {\n    dVar14 = (double)FUN_000600b4(*(undefined4 *)(param_2 + 0xb8),*(undefined4 *)(param_2 + 0xbc));\n    dVar12 = (double)FUN_000600b4(*(undefined4 *)(param_2 + 0xb0),*(undefined4 *)(param_2 + 0xb4));\n    dVar13 = (double)FUN_000600b4(*(undefined4 *)(param_2 + 0xa8),*(undefined4 *)(param_2 + 0xac));\n    dVar15 = (double)FUN_000600b4(*(undefined4 *)(param_2 + 0xa0),*(undefined4 *)(param_2 + 0xa4));\n    dVar15 = dVar15 + dVar14 * 6.277101735386681e+57 + dVar12 * 3.402823669209385e+38 +\n                      dVar13 * 1.844674407370955e+19;\n    if (dVar15 == 0.0) {\n      dVar15 = 2.695953529101131e+67;\n      uVar16 = 0xffffffffffffffff;\n    }\n    else {\n      dVar15 = 2.695953529101131e+67 / dVar15;\n      dVar11 = round(dVar11);\n      uVar16 = FUN_00060180(SUB84(dVar11,0),(int)((ulonglong)dVar11 >> 0x20));\n    }\n    *(double *)(param_2 + 0x178) = dVar15;\n  }\n  else {\n    *(double *)(param_2 + 0x178) = dVar15;\n    dVar11 = round(dVar11);\n    uVar16 = FUN_00060180(SUB84(dVar11,0),(int)((ulonglong)dVar11 >> 0x20));\n  }\n  uVar6 = (uint)((ulonglong)uVar16 >> 0x20);\n  uVar8 = (uint)uVar16;\n  *(double *)(param_1 + 0x1e0) = dVar15;\n  bVar10 = 0xde0b6b2 < uVar6;\n  local_830[0] = 0;\n  if (uVar6 == 0xde0b6b3) {\n    bVar10 = 0xa763fffe < uVar8;\n  }\n  __s = (char *)(*(int *)(param_2 + 0x104) + 0x30);\n  if (!bVar10 || uVar6 == 0xde0b6b3 && uVar8 == 0xa763ffff) {\n    bVar10 = 0x38d7d < uVar6;\n    if (uVar6 == 0x38d7e) {\n      bVar10 = 0xa4c67ffe < uVar8;\n    }\n    if (bVar10 && (uVar6 != 0x38d7e || uVar8 != 0xa4c67fff)) {\n      iVar2 = FUN_00060120(uVar8,uVar6,0xd4a51000,0xe8);\n      local_830[0] = 0x50;\n      dVar11 = (double)(longlong)iVar2 / 1000.0;\n      uVar8 = 0x50;\n      goto LAB_00029b38;\n    }\n    bVar10 = 0xe7 < uVar6;\n    if (uVar6 == 0xe8) {\n      bVar10 = 0xd4a50ffe < uVar8;\n    }\n    if (bVar10 && (uVar6 != 0xe8 || uVar8 != 0xd4a50fff)) {\n      iVar2 = FUN_00060120(uVar8,uVar6,1000000000,0);\n      uVar8 = 0x54;\n      local_830[0] = 0x54;\n      dVar11 = (double)(longlong)iVar2 / 1000.0;\n      goto LAB_00029b38;\n    }\n    if ((uVar6 != 0 || 0x3b9ac9fe < uVar8) && (uVar6 != 0 || uVar8 != 999999999)) {\n      iVar2 = FUN_00060120(uVar8,uVar6,&DAT_000f4240,0);\n      local_830[0] = 0x47;\n      dVar11 = (double)(longlong)iVar2 / 1000.0;\n      uVar8 = 0x47;\n      goto LAB_00029b38;\n    }\n    if ((uVar6 != 0 || 0xf423e < uVar8) && (uVar6 != 0 || uVar8 != 999999)) {\n      iVar2 = FUN_00060120(uVar8,uVar6,1000,0);\n      uVar8 = 0x4d;\n      local_830[0] = 0x4d;\n      dVar11 = (double)(longlong)iVar2 / 1000.0;\n      goto LAB_00029b38;\n    }\n    if ((uVar6 != 0 || 0x3e6 < uVar8) && (uVar6 != 0 || uVar8 != 999)) {\n      local_830[0] = 0x4b;\n      dVar11 = (double)(longlong)(int)uVar8 / 1000.0;\n      uVar8 = 0x4b;\n      goto LAB_00029b38;\n    }\n    snprintf(__s,8,\"%d%s\",uVar8,local_830);\n  }\n  else {\n    iVar2 = FUN_00060120(uVar8,uVar6,0xa4c68000,0x38d7e);\n    local_830[0] = 0x45;\n    dVar11 = (double)(longlong)iVar2 / 1000.0;\n    uVar8 = 0x45;\nLAB_00029b38:\n    snprintf(__s,8,\"%.3g%s\",uVar8,dVar11,local_830);\n  }\n  dVar11 = *(double *)(param_1 + 0x1d0);\n  if (dVar11 == dVar15) {\n    uVar8 = *(int *)(param_1 + 0x1e8) + 1;\n    *(uint *)(param_1 + 0x1e8) = uVar8;\nLAB_00029b70:\n    dVar11 = *(double *)(param_1 + 0x1d8);\n  }\n  else {\n    if (dVar11 == dVar15 || dVar11 < dVar15 != (NAN(dVar11) || NAN(dVar15))) {\n      if (dVar11 != 0.0) goto LAB_00029b70;\n      *(double *)(param_1 + 0x1d0) = dVar15;\n      *(undefined4 *)(param_1 + 0x1e8) = 1;\n    }\n    else {\n      *(double *)(param_1 + 0x1d0) = dVar15;\n      *(undefined4 *)(param_1 + 0x1e8) = 1;\n    }\n    uVar8 = 1;\n    dVar11 = *(double *)(param_1 + 0x1d8);\n  }\n  if (dVar11 == dVar15) {\n    *(int *)(param_1 + 0x1ec) = *(int *)(param_1 + 0x1ec) + 1;\n  }\n  else {\n    if (dVar11 < dVar15) {\n      uVar8 = 1;\n    }\n    if (dVar11 < dVar15) {\n      *(double *)(param_1 + 0x1d8) = dVar15;\n      *(uint *)(param_1 + 0x1ec) = uVar8;\n    }\n  }\n  FUN_000302a0(param_2 + 0x108);\n  return;\n}\n\n",
    "FUN_0002a1a4": "\nvoid FUN_0002a1a4(void *param_1)\n\n{\n  free(*(void **)((int)param_1 + 0x120));\n  free(*(void **)((int)param_1 + 0x134));\n  free(*(void **)((int)param_1 + 0x148));\n  free(*(void **)((int)param_1 + 0x140));\n  memset(param_1,0,0x1c0);\n  return;\n}\n\n",
    "FUN_0002a1e0": "\nvoid FUN_0002a1e0(void **param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  void *__ptr;\n  char acStack_808 [2040];\n  \n  __ptr = *param_1;\n  if (__ptr != (void *)0x0) {\n    FUN_0002a1a4(__ptr);\n    free(__ptr);\n    *param_1 = (void *)0x0;\n    return;\n  }\n  if (((DAT_00590404 == '\\0') && (DAT_00482a5c == '\\0')) && (DAT_0007eba0 < 3)) {\n    return;\n  }\n  snprintf(acStack_808,0x800,\"Free work called with NULL work from %s %s:%d\",param_2,param_3,param_4\n          );\n  FUN_0002e584(3,acStack_808,0);\n  return;\n}\n\n",
    "FUN_0002a264": "\nvoid FUN_0002a264(undefined4 *param_1,int *param_2,int param_3,undefined4 param_4,undefined4 param_5\n                 ,undefined4 param_6,uint param_7)\n\n{\n  int iVar1;\n  pthread_mutex_t *__mutex;\n  undefined4 uVar2;\n  \n  __mutex = (pthread_mutex_t *)(param_3 + 0xd4);\n  iVar1 = FUN_000290b4();\n  *param_2 = iVar1;\n  uVar2 = *param_1;\n  iVar1 = pthread_mutex_lock(__mutex);\n  if (iVar1 != 0) {\n    FUN_00029014(\"get_work_by_nonce2\",0x58f);\n  }\n  FUN_00028ee8((pthread_rwlock_t *)(param_3 + 0xec),\"get_work_by_nonce2\",0x58f);\n  param_7 = param_7 << 0x18 | (param_7 >> 8 & 0xff) << 0x10 | (param_7 >> 0x10 & 0xff) << 8 |\n            param_7 >> 0x18;\n  *(undefined4 *)(param_3 + 0x270) = param_5;\n  *(undefined4 *)(param_3 + 0x274) = param_6;\n  FUN_00030ea8(param_3 + 0x62c,&param_7,4,\"bmminer.c\",\"get_work_by_nonce2\",0x592);\n  iVar1 = pthread_rwlock_unlock((pthread_rwlock_t *)(param_3 + 0xec));\n  if (iVar1 == 0) {\n    iVar1 = pthread_mutex_unlock(__mutex);\n  }\n  else {\n    FUN_00028e18(\"get_work_by_nonce2\",0x593);\n    iVar1 = pthread_mutex_unlock(__mutex);\n  }\n  if (iVar1 != 0) {\n    FUN_00028f5c(\"get_work_by_nonce2\",0x593);\n  }\n  (*DAT_0007ecc4)();\n  FUN_0002974c(param_3,*param_2);\n  *(undefined4 *)(*param_2 + 0x104) = param_4;\n  *(undefined4 *)(*param_2 + 0x100) = uVar2;\n  *(undefined4 *)(*param_2 + 0x150) = 0;\n  *(int *)(*(int *)(*param_2 + 0x104) + 0x44) = *(int *)(*(int *)(*param_2 + 0x104) + 0x44) + 1;\n  *(undefined *)(*param_2 + 0x110) = 1;\n  *(uint *)(*param_2 + 0x1bc) = param_7;\n  return;\n}\n\n",
    "FUN_0002a3c4": "\nvoid FUN_0002a3c4(int param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  code *pcVar3;\n  char acStack_808 [2048];\n  \n  if ((DAT_00482a5d != '\\0') &&\n     (((DAT_00590404 != '\\0' || (DAT_00482a5c != '\\0')) || (6 < DAT_0007eba0)))) {\n    snprintf(acStack_808,0x800,\"%s %d: invalid nonce - HW error\",\n             *(undefined4 *)(*(int *)(*(int *)(param_1 + 0x24) + 4) + 8),\n             *(undefined4 *)(*(int *)(param_1 + 0x24) + 8));\n    FUN_0002e584(7,acStack_808,0);\n  }\n  iVar1 = pthread_mutex_lock((pthread_mutex_t *)&DAT_005944f4);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    snprintf(acStack_808,0x800,\"WTF MUTEX ERROR ON LOCK! errno=%d in %s %s():%d\",*piVar2,\"bmminer.c\"\n             ,\"inc_hw_errors\",0x5a6);\n    FUN_0002e584(3,acStack_808,1);\n  }\n  DAT_0058e348 = DAT_0058e348 + 1;\n  *(int *)(*(int *)(param_1 + 0x24) + 0x2c) = *(int *)(*(int *)(param_1 + 0x24) + 0x2c) + 1;\n  iVar1 = pthread_mutex_unlock((pthread_mutex_t *)&DAT_005944f4);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    snprintf(acStack_808,0x800,\"WTF MUTEX ERROR ON UNLOCK! errno=%d in %s %s():%d\",*piVar2,\n             \"bmminer.c\",\"inc_hw_errors\",0x5a9);\n    FUN_0002e584(3,acStack_808,1);\n  }\n  (*DAT_0007ecc4)();\n  pcVar3 = *(code **)(*(int *)(*(int *)(param_1 + 0x24) + 4) + 0x54);\n  if (pcVar3 != (code *)0x0) {\n    (*pcVar3)(param_1);\n  }\n  return;\n}\n\n",
    "FUN_0002a574": "\nvoid FUN_0002a574(void)\n\n{\n  return;\n}\n\n",
    "FUN_0002a688": "\nvoid FUN_0002a688(void)\n\n{\n  FILE *pFVar1;\n  size_t sVar2;\n  char *pcVar3;\n  char *pcVar4;\n  char cVar5;\n  char cVar6;\n  char acStack_918 [256];\n  char acStack_818 [2052];\n  \n  pFVar1 = fopen64(DAT_00080970,\"rb\");\n  memset(acStack_918,0,0x100);\n  if (pFVar1 == (FILE *)0x0) {\n    if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (2 < DAT_0007eba0)) {\n      snprintf(acStack_818,0x800,\"Open miner version file %s error\",DAT_00080970);\n      FUN_0002e584(3,acStack_818,0);\n    }\n  }\n  else {\n    sVar2 = fread(acStack_918,1,0x100,pFVar1);\n    if ((int)sVar2 < 1) {\n      if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (2 < DAT_0007eba0)) {\n        snprintf(acStack_818,0x800,\"Read miner version file %s error %d\",DAT_00080970,sVar2);\n        FUN_0002e584(3,acStack_818,0);\n      }\n    }\n    else {\n      pcVar3 = strchr(acStack_918,10);\n      if (pcVar3 == (char *)0x0) {\n        strcpy(&DAT_00080ba0,acStack_918);\n      }\n      else {\n        FUN_00030ea8(&DAT_00080ba0,acStack_918,(int)pcVar3 - (int)acStack_918,\"bmminer.c\",\n                     \"read_version_file\",0x5eb);\n        pcVar3 = stpcpy(acStack_918,pcVar3 + 1);\n        pcVar4 = strchr(acStack_918,10);\n        if (pcVar4 == (char *)0x0) {\n          memcpy(&DAT_00080ca0,acStack_918,(size_t)(pcVar3 + (1 - (int)acStack_918)));\n        }\n        else {\n          FUN_00030ea8(&DAT_00080ca0,acStack_918,(int)pcVar4 - (int)acStack_918,\"bmminer.c\",\n                       \"read_version_file\",0x5f4);\n        }\n      }\n      sVar2 = strlen(&DAT_00080ba0);\n      cVar5 = *(char *)((int)&DAT_00080b9c + sVar2 + 3);\n      if (cVar5 == '\\n') {\n        *(undefined *)((int)&DAT_00080b9c + sVar2 + 3) = 0;\n        sVar2 = strlen(&DAT_00080ba0);\n        cVar5 = *(char *)((int)&DAT_00080b9c + sVar2 + 3);\n      }\n      if (cVar5 == '\\r') {\n        *(undefined *)((int)&DAT_00080b9c + sVar2 + 3) = 0;\n      }\n      sVar2 = strlen(&DAT_00080ca0);\n      cVar5 = (&DAT_00080c9f)[sVar2];\n      if (cVar5 == '\\n') {\n        (&DAT_00080c9f)[sVar2] = 0;\n        sVar2 = strlen(&DAT_00080ca0);\n        cVar5 = (&DAT_00080c9f)[sVar2];\n      }\n      if (cVar5 == '\\r') {\n        (&DAT_00080c9f)[sVar2] = 0;\n      }\n    }\n  }\n  pFVar1 = fopen64(\"/config/sn\",\"rb\");\n  if (pFVar1 == (FILE *)0x0) {\n    if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (cVar5 = '\\0', 2 < DAT_0007eba0)) {\n      snprintf(acStack_818,0x800,\"Open miner sn file %s error\",\"/config/sn\");\n      FUN_0002e584(3,acStack_818,0);\n      cVar5 = DAT_00590404;\n    }\n  }\n  else {\n    memset(acStack_918,0,0x100);\n    sVar2 = fread(acStack_918,1,0xfa,pFVar1);\n    if ((int)sVar2 < 1) {\n      if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (2 < DAT_0007eba0)) {\n        snprintf(acStack_818,0x800,\"Read miner sn file %s error %d\",\"/config/sn\",sVar2);\n        FUN_0002e584(3,acStack_818,0);\n      }\n    }\n    else {\n      pcVar3 = strstr(acStack_918,\"\\r\\n\");\n      if (pcVar3 == (char *)0x0) {\n        strcpy(&DAT_00080da0,acStack_918);\n      }\n      else {\n        FUN_00030ea8(&DAT_00080da0,acStack_918,(int)pcVar3 - (int)acStack_918,\"bmminer.c\",\n                     \"read_version_file\",0x624);\n      }\n    }\n    fclose(pFVar1);\n    cVar5 = DAT_00590404;\n  }\n  sVar2 = strlen(&DAT_00080da0);\n  cVar6 = (&DAT_00080d9f)[sVar2];\n  if (cVar6 == '\\n') {\n    (&DAT_00080d9f)[sVar2] = 0;\n    sVar2 = strlen(&DAT_00080da0);\n    cVar6 = (&DAT_00080d9f)[sVar2];\n  }\n  if (cVar6 == '\\r') {\n    (&DAT_00080d9f)[sVar2] = 0;\n  }\n  if (((cVar5 != '\\0') || (DAT_00482a5c != '\\0')) || (2 < DAT_0007eba0)) {\n    snprintf(acStack_818,0x800,\"Miner compile time: %s type: %s sn :%s\",&DAT_00080ba0,&DAT_00080ca0,\n             &DAT_00080da0);\n    FUN_0002e584(3,acStack_818,0);\n  }\n  return;\n}\n\n",
    "FUN_0002ab48": "\nundefined * FUN_0002ab48(size_t *param_1,void *param_2,undefined4 param_3,undefined param_4)\n\n{\n  size_t sVar1;\n  size_t sVar2;\n  size_t sVar3;\n  undefined *puVar4;\n  uint uVar5;\n  int iVar6;\n  uint __n;\n  char *__s;\n  char *__s_00;\n  int iVar7;\n  char *__s_01;\n  char acStack_828 [2052];\n  \n  __s_01 = *(char **)((int)param_2 + 0x120);\n  sVar1 = strlen(__s_01);\n  __s_00 = *(char **)((int)param_2 + 0x134);\n  sVar2 = strlen(__s_00);\n  __s = *(char **)((int)param_2 + 0x140);\n  sVar3 = strlen(__s);\n  sVar3 = sVar1 + sVar2 + 0x1cb + sVar3;\n  puVar4 = (undefined *)calloc(1,sVar3);\n  if (puVar4 != (undefined *)0x0) {\n    *(undefined4 *)(puVar4 + 1) = param_3;\n    *puVar4 = param_4;\n    memcpy(puVar4 + 5,param_2,0x1c0);\n    sVar1 = strlen(__s_01);\n    __n = sVar1 + 1 & 0xff;\n    puVar4[0x1c5] = (char)(sVar1 + 1);\n    memcpy(puVar4 + 0x1c6,__s_01,__n);\n    sVar1 = strlen(__s_00);\n    uVar5 = sVar1 + 1 & 0xff;\n    puVar4[__n + 0x1c6] = (char)(sVar1 + 1);\n    iVar6 = uVar5 + __n + 0x1c7;\n    memcpy(puVar4 + __n + 0x1c7,__s_00,uVar5);\n    iVar7 = iVar6 + 1;\n    sVar1 = strlen(__s);\n    uVar5 = sVar1 + 1 & 0xff;\n    puVar4[iVar6] = (char)(sVar1 + 1);\n    memcpy(puVar4 + iVar7,__s,uVar5);\n    if ((DAT_00482a5d != '\\0') &&\n       (((DAT_00590404 != '\\0' || (DAT_00482a5c != '\\0')) || (6 < DAT_0007eba0)))) {\n      snprintf(acStack_828,0x800,\"need data size:%d, actual size:%d\\n\",sVar3,uVar5 + iVar7);\n      FUN_0002e584(7,acStack_828,0);\n    }\n    *param_1 = sVar3;\n  }\n  return puVar4;\n}\n\n",
    "FUN_0002acec": "\nundefined4 FUN_0002acec(void)\n\n{\n  void *__ptr;\n  int iVar1;\n  undefined4 local_80c;\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined4 uStack_7fc;\n  undefined4 local_7f8;\n  undefined4 uStack_7f4;\n  undefined4 uStack_7f0;\n  undefined4 uStack_7ec;\n  undefined4 local_7e8;\n  \n  __ptr = (void *)FUN_0002ab48(&local_80c);\n  iVar1 = FUN_000281d4(__ptr,local_80c);\n  if ((iVar1 != 0) && (((DAT_00590404 != '\\0' || (DAT_00482a5c != '\\0')) || (2 < DAT_0007eba0)))) {\n    local_808._0_1_ = 'c';\n    local_808._1_1_ = 'g';\n    local_808._2_1_ = 'm';\n    local_808._3_1_ = 'i';\n    uStack_804._0_1_ = 'n';\n    uStack_804._1_1_ = 'e';\n    uStack_804._2_1_ = 'r';\n    uStack_804._3_1_ = ' ';\n    uStack_800._0_1_ = 'r';\n    uStack_800._1_1_ = 'e';\n    uStack_800._2_1_ = 't';\n    uStack_800._3_1_ = 'u';\n    uStack_7fc._0_1_ = 'r';\n    uStack_7fc._1_1_ = 'n';\n    uStack_7fc._2_1_ = ' ';\n    uStack_7fc._3_1_ = 'e';\n    local_7f8._0_1_ = 'r';\n    local_7f8._1_1_ = 'r';\n    local_7f8._2_1_ = ' ';\n    local_7f8._3_1_ = 'f';\n    uStack_7f4._0_1_ = 'o';\n    uStack_7f4._1_1_ = 'r';\n    uStack_7f4._2_1_ = ' ';\n    uStack_7f4._3_1_ = 't';\n    uStack_7f0._0_1_ = 'h';\n    uStack_7f0._1_1_ = 'i';\n    uStack_7f0._2_1_ = 's';\n    uStack_7f0._3_1_ = ' ';\n    uStack_7ec._0_1_ = 'n';\n    uStack_7ec._1_1_ = 'o';\n    uStack_7ec._2_1_ = 'n';\n    uStack_7ec._3_1_ = 'c';\n    local_7e8._0_1_ = 'e';\n    local_7e8._1_1_ = '!';\n    local_7e8._2_1_ = '\\n';\n    local_7e8._3_1_ = '\\0';\n    FUN_0002e584(3,&local_808,0);\n  }\n  free(__ptr);\n  return 1;\n}\n\n",
    "FUN_0002ada0": "\nundefined4 FUN_0002ada0(char *param_1)\n\n{\n  tm *ptVar1;\n  int iVar2;\n  int iVar3;\n  int local_cc [2];\n  char acStack_c4 [32];\n  undefined auStack_a4 [32];\n  char acStack_84 [40];\n  char acStack_5c [64];\n  \n  memset(acStack_c4,0,0x20);\n  memset(auStack_a4,0,0x20);\n  memset(acStack_84,0,0x28);\n  memset(acStack_5c,0,0x3b);\n  iVar3 = 0;\n  FUN_000302a0(local_cc);\n  do {\n    local_cc[0] = local_cc[0] - iVar3;\n    iVar3 = iVar3 + 1;\n    ptVar1 = localtime(local_cc);\n    snprintf(acStack_84,0x28,\"[%d-%02d-%02d %02d:%02d:%02d]\",ptVar1->tm_year + 0x76c,\n             ptVar1->tm_mon + 1,ptVar1->tm_mday,ptVar1->tm_hour,ptVar1->tm_min,ptVar1->tm_sec);\n    snprintf(acStack_5c,0x3b,\"%s%s\",\"BITMAIN_OPENSOURCE\",acStack_84);\n    FUN_0002f1ec(acStack_5c,0x3b,auStack_a4);\n    FUN_0002f1ec(auStack_a4,0x20,acStack_c4);\n    iVar2 = strncmp(acStack_c4,param_1,0x20);\n    if (iVar2 == 0) {\n      puts(\"socket auth pass!!!!!!!!!!!!!!!!!!!!\");\n      return 1;\n    }\n  } while (iVar3 != 4);\n  return 0;\n}\n\n",
    "FUN_0002aef4": "\nvoid FUN_0002aef4(void)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined4 uStack_7fc;\n  undefined4 uStack_7f8;\n  undefined4 uStack_7f4;\n  \n  iVar2 = DAT_00592460;\n  iVar1 = DAT_0058e354;\n  if (DAT_0058e354 != 0) {\n    *(undefined4 *)(DAT_0058e354 + 0x20) = 0;\n    *(undefined **)(iVar1 + 4) = &DAT_00080ea0;\n    *(int *)(iVar1 + 0x14) = iVar2;\n    *(undefined4 *)(iVar1 + 0x94) = 1;\n    if (iVar2 == 0) {\n      local_810._0_1_ = 'F';\n      local_810._1_1_ = 'a';\n      local_810._2_1_ = 'i';\n      local_810._3_1_ = 'l';\n      uStack_80c._0_1_ = 'e';\n      uStack_80c._1_1_ = 'd';\n      uStack_80c._2_1_ = ' ';\n      uStack_80c._3_1_ = 't';\n      uStack_808._0_1_ = 'o';\n      uStack_808._1_1_ = ' ';\n      uStack_808._2_1_ = 'c';\n      uStack_808._3_1_ = 'a';\n      uStack_804._0_1_ = 'l';\n      uStack_804._1_1_ = 'l';\n      uStack_804._2_1_ = 'o';\n      uStack_804._3_1_ = 'c';\n      uStack_800._0_1_ = ' ';\n      uStack_800._1_1_ = 'c';\n      uStack_800._2_1_ = 'g';\n      uStack_800._3_1_ = 'p';\n      uStack_7fc._0_1_ = 'u';\n      uStack_7fc._1_1_ = '_';\n      uStack_7fc._2_1_ = 'i';\n      uStack_7fc._3_1_ = 'n';\n      uStack_7f8._0_1_ = 'f';\n      uStack_7f8._1_1_ = 'o';\n      uStack_7f8._2_1_ = ' ';\n      uStack_7f8._3_1_ = 'd';\n      uStack_7f4._0_1_ = 'a';\n      uStack_7f4._1_1_ = 't';\n      uStack_7f4._2_1_ = 'a';\n      uStack_7f4._3_1_ = '\\0';\n      FUN_0002e584(3,&local_810,1);\n      iVar2 = *(int *)(iVar1 + 0x14);\n    }\n    *(undefined4 *)(iVar2 + 0x1654) = 0;\n    *(undefined4 *)(iVar2 + 0x1658) = 1;\n    *(undefined4 *)(iVar2 + 0x165c) = 2;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __assert_fail(\"cgpu\",\"bmminer.c\",0x7ea,\"bitmain_primary_init\");\n}\n\n",
    "FUN_0002b05c": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_0002b05c(void *param_1,void *param_2,int param_3)\n\n{\n  void *pvVar1;\n  int iVar2;\n  undefined4 uVar3;\n  char *pcVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 *puVar7;\n  undefined4 *puVar8;\n  int iVar9;\n  int iVar10;\n  size_t sVar11;\n  undefined4 local_828;\n  undefined4 uStack_824;\n  undefined4 uStack_820;\n  undefined4 uStack_81c;\n  undefined4 local_818;\n  undefined4 uStack_814;\n  undefined4 uStack_810;\n  undefined4 uStack_80c;\n  undefined2 local_808;\n  \n  memcpy(param_1,param_2,0x738);\n  sVar11 = *(size_t *)((int)param_1 + 0x624);\n  iVar9 = sVar11 + 0x738;\n  pvVar1 = calloc(1,sVar11);\n  pvVar1 = memcpy(pvVar1,(void *)((int)param_2 + 0x738),sVar11);\n  *(void **)((int)param_1 + 0x620) = pvVar1;\n  iVar2 = FUN_0002f408(*(int *)((int)param_1 + 0x6ac) * 4 + 1,\"bmminer.c\",\"parse_job_buf\",0x88e);\n  *(int *)((int)param_1 + 0x2a4) = iVar2;\n  if (0 < *(int *)((int)param_1 + 0x6ac)) {\n    iVar10 = 0;\n    puVar7 = (undefined4 *)((int)param_2 + iVar9);\n    while( true ) {\n      uVar3 = FUN_0002f408(0x20,\"bmminer.c\",\"parse_job_buf\",0x891);\n      *(undefined4 *)(iVar2 + iVar10 * 4) = uVar3;\n      iVar9 = sVar11 + 0x758 + iVar10 * 0x20;\n      puVar8 = *(undefined4 **)(*(int *)((int)param_1 + 0x2a4) + iVar10 * 4);\n      if (puVar8 == (undefined4 *)0x0) {\n        local_828._0_1_ = 'F';\n        local_828._1_1_ = 'a';\n        local_828._2_1_ = 'i';\n        local_828._3_1_ = 'l';\n        uStack_824._0_1_ = 'e';\n        uStack_824._1_1_ = 'd';\n        uStack_824._2_1_ = ' ';\n        uStack_824._3_1_ = 't';\n        uStack_820._0_1_ = 'o';\n        uStack_820._1_1_ = ' ';\n        uStack_820._2_1_ = 'm';\n        uStack_820._3_1_ = 'a';\n        uStack_81c._0_1_ = 'l';\n        uStack_81c._1_1_ = 'l';\n        uStack_81c._2_1_ = 'o';\n        uStack_81c._3_1_ = 'c';\n        local_818._0_1_ = ' ';\n        local_818._1_1_ = 'l';\n        local_818._2_1_ = 'o';\n        local_818._3_1_ = 'c';\n        uStack_814._0_1_ = 'a';\n        uStack_814._1_1_ = 'l';\n        uStack_814._2_1_ = ' ';\n        uStack_814._3_1_ = 'm';\n        uStack_810._0_1_ = 'e';\n        uStack_810._1_1_ = 'r';\n        uStack_810._2_1_ = 'k';\n        uStack_810._3_1_ = 'l';\n        uStack_80c._0_1_ = 'e';\n        uStack_80c._1_1_ = '_';\n        uStack_80c._2_1_ = 'b';\n        uStack_80c._3_1_ = 'i';\n        local_808 = 0x6e;\n        FUN_0002e584(3,&local_828,1);\n        puVar8 = *(undefined4 **)(*(int *)((int)param_1 + 0x2a4) + iVar10 * 4);\n      }\n      iVar10 = iVar10 + 1;\n      uVar3 = puVar7[1];\n      uVar5 = puVar7[2];\n      uVar6 = puVar7[3];\n      *puVar8 = *puVar7;\n      puVar8[1] = uVar3;\n      puVar8[2] = uVar5;\n      puVar8[3] = uVar6;\n      uVar3 = puVar7[5];\n      uVar5 = puVar7[6];\n      uVar6 = puVar7[7];\n      puVar8[4] = puVar7[4];\n      puVar8[5] = uVar3;\n      puVar8[6] = uVar5;\n      puVar8[7] = uVar6;\n      if (*(int *)((int)param_1 + 0x6ac) <= iVar10) break;\n      iVar2 = *(int *)((int)param_1 + 0x2a4);\n      puVar7 = puVar7 + 8;\n    }\n  }\n  pcVar4 = (char *)__strdup((int)param_2 + iVar9);\n  sVar11 = strlen(pcVar4);\n  *(char **)((int)param_1 + 0x2a0) = pcVar4;\n  iVar9 = sVar11 + 1 + iVar9;\n  pcVar4 = (char *)__strdup((int)param_2 + iVar9);\n  sVar11 = strlen(pcVar4);\n  iVar9 = iVar9 + sVar11;\n  *(char **)((int)param_1 + 0x264) = pcVar4;\n  puVar7 = (undefined4 *)((int)param_2 + iVar9 + 1);\n  DAT_00080f18 = *puVar7;\n  DAT_00080f1c = puVar7[1];\n  puVar7 = (undefined4 *)((int)param_2 + iVar9 + 9);\n  _DAT_0007eab0 = *puVar7;\n  DAT_0007eab4 = puVar7[1];\n  if ((DAT_00482a5d != '\\0') &&\n     (((DAT_00590404 != '\\0' || (DAT_00482a5c != '\\0')) || (6 < DAT_0007eba0)))) {\n    snprintf((char *)&local_828,0x800,\"parse job buf len:%d\\n\",iVar9 + 0x11);\n    FUN_0002e584(7,&local_828,0);\n  }\n  if (iVar9 + 0x11 != param_3) {\n    local_828._0_1_ = 'E';\n    local_828._1_1_ = 'R';\n    local_828._2_1_ = 'R';\n    local_828._3_1_ = ':';\n    uStack_824._0_1_ = ' ';\n    uStack_824._1_1_ = 'd';\n    uStack_824._2_1_ = 'a';\n    uStack_824._3_1_ = 't';\n    uStack_820._0_1_ = 'a';\n    uStack_820._1_1_ = ' ';\n    uStack_820._2_1_ = 't';\n    uStack_820._3_1_ = 'r';\n    uStack_81c._0_1_ = 'a';\n    uStack_81c._1_1_ = 'n';\n    uStack_81c._2_1_ = 's';\n    uStack_81c._3_1_ = '/';\n    local_818._0_1_ = 'r';\n    local_818._1_1_ = 'e';\n    local_818._2_1_ = 'c';\n    local_818._3_1_ = 'v';\n    uStack_814._0_1_ = ' ';\n    uStack_814._1_1_ = 'u';\n    uStack_814._2_1_ = 'n';\n    uStack_814._3_1_ = 'm';\n    uStack_810._0_1_ = 'a';\n    uStack_810._1_1_ = 't';\n    uStack_810._2_1_ = 'h';\n    uStack_810._3_1_ = 'c';\n    uStack_80c._0_1_ = 'e';\n    uStack_80c._1_1_ = 'd';\n    uStack_80c._2_1_ = '!';\n    uStack_80c._3_1_ = '\\0';\n    FUN_0002e584(3,&local_828,1);\n  }\n  return;\n}\n\n",
    "FUN_0002b2f4": "\nundefined4 FUN_0002b2f4(void)\n\n{\n  undefined4 uVar1;\n  \n  pthread_mutex_lock((pthread_mutex_t *)&DAT_00080f20);\n  uVar1 = FUN_000316d8(DAT_00080f3c,DAT_00080f38);\n  pthread_mutex_unlock((pthread_mutex_t *)&DAT_00080f20);\n  return uVar1;\n}\n\n",
    "FUN_0002b330": "\nundefined4 FUN_0002b330(void *param_1,uint param_2)\n\n{\n  int iVar1;\n  pthread_mutex_t *__mutex;\n  uint uVar2;\n  int iVar3;\n  int *piVar4;\n  int *piVar5;\n  void *local_82c;\n  undefined4 local_828;\n  undefined4 uStack_824;\n  undefined4 uStack_820;\n  undefined4 uStack_81c;\n  undefined4 local_818;\n  undefined4 uStack_814;\n  undefined4 uStack_810;\n  undefined4 uStack_80c;\n  undefined4 local_808;\n  \n  __mutex = DAT_00592460;\n  local_82c = (void *)0x0;\n  if ((DAT_00482a5d != '\\0') &&\n     (((DAT_00590404 != '\\0' || (DAT_00482a5c != '\\0')) || (6 < DAT_0007eba0)))) {\n    snprintf((char *)&local_828,0x800,\"%s, rec job data %p size: %d\\n\",\"bitmain_update_job_cb\",\n             param_1,param_2);\n    FUN_0002e584(7,&local_828,0);\n  }\n  uVar2 = FUN_00031d38();\n  if (uVar2 < 2) {\n    pthread_mutex_lock((pthread_mutex_t *)&DAT_00080f20);\n    if ((DAT_00080f3c == (void *)0x0) || (DAT_00080f38 < param_2)) {\n      DAT_00080f3c = realloc(DAT_00080f3c,param_2);\n    }\n    memcpy(DAT_00080f3c,param_1,param_2);\n    DAT_00080f38 = param_2;\n    pthread_mutex_unlock((pthread_mutex_t *)&DAT_00080f20);\n    return 0;\n  }\n  iVar3 = pthread_mutex_lock((pthread_mutex_t *)((int)__mutex + 0x70));\n  if (iVar3 != 0) {\n    piVar4 = __errno_location();\n    snprintf((char *)&local_828,0x800,\"WTF MUTEX ERROR ON LOCK! errno=%d in %s %s():%d\",*piVar4,\n             \"bmminer.c\",\"bitmain_update_job_cb\",0x8ca);\n    FUN_0002e584(3,&local_828,1);\n  }\n  piVar4 = (int *)calloc(1,0x738);\n  FUN_0002b05c(piVar4,param_1,param_2);\n  if (*(char *)(piVar4 + 0xa0) == '\\0') {\n    local_828._0_1_ = 'B';\n    local_828._1_1_ = 'i';\n    local_828._2_1_ = 't';\n    local_828._3_1_ = 'm';\n    uStack_824._0_1_ = 'a';\n    uStack_824._1_1_ = 'i';\n    uStack_824._2_1_ = 'n';\n    uStack_824._3_1_ = ' ';\n    uStack_820._0_1_ = 'S';\n    uStack_820._1_1_ = '9';\n    uStack_820._2_1_ = ' ';\n    uStack_820._3_1_ = 'h';\n    uStack_81c._0_1_ = 'a';\n    uStack_81c._1_1_ = 's';\n    uStack_81c._2_1_ = ' ';\n    uStack_81c._3_1_ = 't';\n    local_818._0_1_ = 'o';\n    local_818._1_1_ = ' ';\n    local_818._2_1_ = 'u';\n    local_818._3_1_ = 's';\n    uStack_814._0_1_ = 'e';\n    uStack_814._1_1_ = ' ';\n    uStack_814._2_1_ = 's';\n    uStack_814._3_1_ = 't';\n    uStack_810._0_1_ = 'r';\n    uStack_810._1_1_ = 'a';\n    uStack_810._2_1_ = 't';\n    uStack_810._3_1_ = 'u';\n    uStack_80c._0_1_ = 'm';\n    uStack_80c._1_1_ = ' ';\n    uStack_80c._2_1_ = 'p';\n    uStack_80c._3_1_ = 'o';\n    local_808._0_1_ = 'o';\n    local_808._1_1_ = 'l';\n    local_808._2_1_ = 's';\n    local_808._3_1_ = '\\0';\n    FUN_0002e584(3,&local_828,1);\n  }\n  iVar3 = pthread_mutex_lock(__mutex);\n  if (iVar3 != 0) {\n    piVar5 = __errno_location();\n    snprintf((char *)&local_828,0x800,\"WTF MUTEX ERROR ON LOCK! errno=%d in %s %s():%d\",*piVar5,\n             \"bmminer.c\",\"bitmain_update_job_cb\",0x8d5);\n    FUN_0002e584(3,&local_828,1);\n  }\n  iVar3 = pthread_rwlock_wrlock((pthread_rwlock_t *)(__mutex + 1));\n  if (iVar3 != 0) {\n    piVar5 = __errno_location();\n    snprintf((char *)&local_828,0x800,\"WTF WRLOCK ERROR ON LOCK! errno=%d in %s %s():%d\",*piVar5,\n             \"bmminer.c\",\"bitmain_update_job_cb\",0x8d5);\n    FUN_0002e584(3,&local_828,1);\n  }\n  __mutex[7].__data.__lock = *piVar4;\n  FUN_00033478((int)__mutex + 0xf1c,(int)__mutex + 0x7e4);\n  *(undefined4 *)((int)__mutex + 0x165c) = *(undefined4 *)((int)__mutex + 0x1658);\n  FUN_00033478((int)__mutex + 0x7e4,(int)__mutex + 0xac);\n  *(undefined4 *)((int)__mutex + 0x1658) = *(undefined4 *)((int)__mutex + 0x1654);\n  FUN_00033478((int)__mutex + 0xac,piVar4);\n  DAT_0007eab8 = DAT_0007eab8 + 1;\n  *(int *)((int)__mutex + 0x1654) = DAT_0007eab8;\n  iVar3 = pthread_rwlock_unlock((pthread_rwlock_t *)(__mutex + 1));\n  if (iVar3 != 0) {\n    piVar5 = __errno_location();\n    snprintf((char *)&local_828,0x800,\"WTF RWLOCK ERROR ON UNLOCK! errno=%d in %s %s():%d\",*piVar5,\n             \"bmminer.c\",\"bitmain_update_job_cb\",0x8e1);\n    FUN_0002e584(3,&local_828,1);\n  }\n  iVar3 = pthread_mutex_unlock(__mutex);\n  if (iVar3 != 0) {\n    piVar5 = __errno_location();\n    snprintf((char *)&local_828,0x800,\"WTF MUTEX ERROR ON UNLOCK! errno=%d in %s %s():%d\",*piVar5,\n             \"bmminer.c\",\"bitmain_update_job_cb\",0x8e1);\n    FUN_0002e584(3,&local_828,1);\n  }\n  (*DAT_0007ecc4)();\n  FUN_00032cc0(&local_82c,piVar4,*(undefined4 *)((int)__mutex + 0x1654));\n  pthread_mutex_lock((pthread_mutex_t *)&DAT_004fcaa0);\n  FUN_00032f40(local_82c);\n  pthread_mutex_unlock((pthread_mutex_t *)&DAT_004fcaa0);\n  free(local_82c);\n  iVar3 = pthread_mutex_unlock((pthread_mutex_t *)((int)__mutex + 0x70));\n  if (iVar3 != 0) {\n    piVar5 = __errno_location();\n    snprintf((char *)&local_828,0x800,\"WTF MUTEX ERROR ON UNLOCK! errno=%d in %s %s():%d\",*piVar5,\n             \"bmminer.c\",\"bitmain_update_job_cb\",0x8eb);\n    FUN_0002e584(3,&local_828,1);\n  }\n  (*DAT_0007ecc4)();\n  if (0 < piVar4[0x1ab]) {\n    iVar3 = 0;\n    do {\n      iVar1 = iVar3 * 4;\n      iVar3 = iVar3 + 1;\n      free(*(void **)(piVar4[0xa9] + iVar1));\n    } while (iVar3 < piVar4[0x1ab]);\n  }\n  free((void *)piVar4[0xa9]);\n  free((void *)piVar4[0x188]);\n  free((void *)piVar4[0xa8]);\n  free((void *)piVar4[0x99]);\n  free(piVar4);\n  return 0;\n}\n\n",
    "FUN_0002b800": "\nint FUN_0002b800(undefined4 *param_1)\n\n{\n  int iVar1;\n  size_t sVar2;\n  char acStack_808 [2056];\n  \n  switch(*param_1) {\n  case 0:\n  case 1:\n  case 2:\n    sVar2 = strlen((char *)param_1[2]);\n    return sVar2 + 1;\n  case 3:\n  case 4:\n  case 5:\n  case 6:\n  case 7:\n  case 8:\n  case 9:\n  case 0x10:\n  case 0x13:\n  case 0x16:\n  case 0x1a:\n    return 4;\n  case 10:\n  case 0xb:\n  case 0xc:\n  case 0xd:\n  case 0xf:\n  case 0x11:\n  case 0x12:\n  case 0x14:\n  case 0x15:\n  case 0x17:\n  case 0x18:\n  case 0x19:\n    iVar1 = 8;\n    break;\n  case 0xe:\n    return 1;\n  default:\n    if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (2 < DAT_0007eba0)) {\n      snprintf(acStack_808,0x800,\"Should not happen for unknown data type %d\");\n      FUN_0002e584(3,acStack_808,0);\n      return 0;\n    }\n    iVar1 = 0;\n  }\n  return iVar1;\n}\n\n",
    "FUN_0002bc2c": "\nvoid FUN_0002bc2c(int param_1,undefined4 param_2)\n\n{\n  int local_80c;\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined4 uStack_7fc;\n  undefined4 local_7f8;\n  undefined4 uStack_7f4;\n  undefined4 uStack_7f0;\n  undefined4 uStack_7ec;\n  undefined4 uStack_7e8;\n  undefined2 uStack_7e4;\n  undefined local_7e2;\n  \n  local_80c = param_1;\n  FUN_0003dc80(&DAT_0007e618,\"Options for both config file and command line\");\n  FUN_0003dc80(&DAT_0007eac0,\"Options for command line only\");\n  FUN_0003dd54(&local_80c,param_2,&DAT_000282e4);\n  if (local_80c != 1) {\n    local_808._0_1_ = 'U';\n    local_808._1_1_ = 'n';\n    local_808._2_1_ = 'e';\n    local_808._3_1_ = 'x';\n    uStack_804._0_1_ = 'p';\n    uStack_804._1_1_ = 'e';\n    uStack_804._2_1_ = 'c';\n    uStack_804._3_1_ = 't';\n    uStack_800._0_1_ = 'e';\n    uStack_800._1_1_ = 'd';\n    uStack_800._2_1_ = ' ';\n    uStack_800._3_1_ = 'e';\n    uStack_7fc._0_1_ = 'x';\n    uStack_7fc._1_1_ = 't';\n    uStack_7fc._2_1_ = 'r';\n    uStack_7fc._3_1_ = 'a';\n    local_7f8._0_1_ = ' ';\n    local_7f8._1_1_ = 'c';\n    local_7f8._2_1_ = 'o';\n    local_7f8._3_1_ = 'm';\n    uStack_7f4._0_1_ = 'm';\n    uStack_7f4._1_1_ = 'a';\n    uStack_7f4._2_1_ = 'n';\n    uStack_7f4._3_1_ = 'd';\n    uStack_7f0._0_1_ = 'l';\n    uStack_7f0._1_1_ = 'i';\n    uStack_7f0._2_1_ = 'n';\n    uStack_7f0._3_1_ = 'e';\n    uStack_7ec._0_1_ = ' ';\n    uStack_7ec._1_1_ = 'a';\n    uStack_7ec._2_1_ = 'r';\n    uStack_7ec._3_1_ = 'g';\n    uStack_7e8._0_1_ = 'u';\n    uStack_7e8._1_1_ = 'm';\n    uStack_7e8._2_1_ = 'e';\n    uStack_7e8._3_1_ = 'n';\n    uStack_7e4 = 0x7374;\n    local_7e2 = 0;\n    FUN_0002e584(3,&local_808,1);\n  }\n  FUN_00029458();\n  if (DAT_00080970 != 0) {\n    FUN_0002a688();\n  }\n  if (DAT_00080968 != (char *)0x0) {\n    DAT_00482130 = 1;\n    strcpy(&DAT_00482158,DAT_00080968);\n    if (DAT_0008096c == (char *)0x0) {\n      DAT_00482138 = 0x2b61;\n      DAT_0048213a = 0;\n    }\n    else {\n      strcpy((char *)&DAT_00482138,DAT_0008096c);\n    }\n    if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (2 < DAT_0007eba0)) {\n      snprintf((char *)&local_808,0x800,\"Log file path: %s Open flag: %s\",&DAT_00482158,\n               &DAT_00482138);\n      FUN_0002e584(3,&local_808,0);\n    }\n  }\n  return;\n}\n\n",
    "FUN_0002bdc4": "\nvoid FUN_0002bdc4(void)\n\n{\n  sem_wait((sem_t *)&DAT_00080f40);\n  return;\n}\n\n",
    "FUN_0002bdd0": "\nvoid FUN_0002bdd0(void)\n\n{\n  pthread_mutex_lock((pthread_mutex_t *)&DAT_000810dc);\n  DAT_005945b8 = 0;\n  DAT_005945bc = 0;\n  DAT_005945c0 = 0;\n  pthread_mutex_unlock((pthread_mutex_t *)&DAT_000810dc);\n  return;\n}\n\n",
    "FUN_0002be08": "\nvoid FUN_0002be08(void)\n\n{\n  pthread_mutex_lock((pthread_mutex_t *)&DAT_004fcad0);\n  DAT_005955c8 = 0;\n  DAT_005955cc = 0;\n  DAT_005955d0 = 0;\n  pthread_mutex_unlock((pthread_mutex_t *)&DAT_004fcad0);\n  return;\n}\n\n",
    "FUN_0002be40": "\nundefined4 FUN_0002be40(uint param_1,uint param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  undefined4 uVar6;\n  uint uVar7;\n  uint uVar8;\n  int iVar9;\n  char acStack_828 [2052];\n  \n  iVar1 = FUN_0001e29c();\n  if (iVar1 == 0) {\n    uVar6 = 0;\n    if (3 < DAT_0007eb9c) {\n      snprintf(acStack_828,0x800,\"Chain %d is not exist.\\n\",param_1);\n      FUN_0002e584(3,acStack_828,0);\n    }\n  }\n  else {\n    if (param_2 == 0) {\n      FUN_0001e610(param_1,0);\n    }\n    iVar1 = 0;\n    FUN_0002bdd0();\n    iVar9 = 0;\n    FUN_0001ec84(param_1 & 0xff,1,0,param_2 & 0xff);\nLAB_0002bec4:\n    do {\n      while( true ) {\n        FUN_000304d4(300);\n        pthread_mutex_lock((pthread_mutex_t *)&DAT_000810dc);\n        iVar2 = DAT_005945c0;\n        iVar1 = iVar1 + DAT_005945c0;\n        if (DAT_005945c0 < 1) break;\n        iVar9 = 0;\n        do {\n          DAT_005945c0 = DAT_005945c0 + -1;\n          iVar9 = iVar9 + 1;\n          uVar7 = DAT_005945bc + 1;\n          DAT_005945bc = uVar7;\n          if (0x1fe < uVar7) {\n            DAT_005945bc = 0;\n          }\n          uVar8 = (&DAT_005945bc)[uVar7 * 2];\n          if ((*(byte *)((int)&DAT_005945c0 + uVar7 * 8 + 3) == param_1 &&\n               *(char *)((int)&DAT_005945c0 + uVar7 * 8 + 2) == '\\0') &&\n             (uVar7 = FUN_0001e110(), uVar7 == uVar8 >> 0x10)) {\n            FUN_0001e5a0(param_1);\n          }\n        } while (iVar2 != iVar9);\n        iVar2 = FUN_0001e0f0();\n        iVar3 = FUN_0001e28c();\n        iVar9 = iVar3 * iVar2 * 5;\n        if (iVar1 != iVar9 && iVar1 + iVar3 * iVar2 * -5 < 0 == SBORROW4(iVar1,iVar9)) {\nLAB_0002bf7c:\n          pthread_mutex_unlock((pthread_mutex_t *)&DAT_000810dc);\n          return 1;\n        }\n        iVar9 = 0;\n        pthread_mutex_unlock((pthread_mutex_t *)&DAT_000810dc);\n      }\n      iVar4 = FUN_0001e0f0();\n      iVar5 = FUN_0001e28c();\n      iVar3 = iVar5 * iVar4 * 5;\n      if (iVar1 != iVar3 && iVar1 + iVar5 * iVar4 * -5 < 0 == SBORROW4(iVar1,iVar3))\n      goto LAB_0002bf7c;\n      if (iVar2 != 0) {\n        if (param_2 == 0) {\n          iVar2 = FUN_0001e0f0();\n          iVar3 = FUN_0001e67c(param_1);\n          if (iVar2 == iVar3) goto LAB_0002bf7c;\n        }\n        pthread_mutex_unlock((pthread_mutex_t *)&DAT_000810dc);\n        goto LAB_0002bec4;\n      }\n      iVar9 = iVar9 + 1;\n      FUN_000304d4(100);\n      pthread_mutex_unlock((pthread_mutex_t *)&DAT_000810dc);\n    } while (iVar9 != 4);\n    uVar6 = 1;\n  }\n  return uVar6;\n}\n\n",
    "FUN_0002c06c": "\nuint FUN_0002c06c(uint param_1,uint param_2,uint param_3)\n\n{\n  int iVar1;\n  int iVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  int local_830;\n  int local_82c;\n  char acStack_828 [2052];\n  \n  local_82c = 5;\n  pthread_mutex_lock((pthread_mutex_t *)&DAT_000810f4);\n  do {\n    local_830 = 8;\n    FUN_0002bdd0();\n    FUN_0001ec84(param_3 & 0xff,0,param_2 & 0xff,param_1 & 0xff);\n    do {\n      FUN_000304d4(10);\n      pthread_mutex_lock((pthread_mutex_t *)&DAT_000810dc);\n      iVar2 = DAT_005945c0;\n      if (DAT_005945c0 != 0) {\n        iVar5 = 0;\n        do {\n          DAT_005945c0 = DAT_005945c0 + -1;\n          iVar5 = iVar5 + 1;\n          uVar4 = DAT_005945bc + 1;\n          if (0x1fe < uVar4) {\n            DAT_005945bc = 0;\n          }\n          iVar1 = uVar4 * 8;\n          if (uVar4 < 0x1ff) {\n            DAT_005945bc = uVar4;\n          }\n          uVar3 = (uint)*(byte *)((int)&DAT_005945c0 + iVar1 + 3);\n          if (((uVar3 == param_3) && (*(byte *)((int)&DAT_005945c0 + iVar1 + 1) == param_2)) &&\n             (*(byte *)((int)&DAT_005945c0 + iVar1 + 2) == param_1)) {\n            if (param_1 == 0x1c) {\n              uVar4 = (&DAT_005945bc)[uVar4 * 2];\n              if ((uVar4 & 0xe0000000) != 0) {\n                uVar4 = 0;\n              }\n              pthread_mutex_unlock((pthread_mutex_t *)&DAT_000810dc);\n              FUN_0002bdd0();\n              pthread_mutex_unlock((pthread_mutex_t *)&DAT_000810f4);\n              return uVar4;\n            }\n            pthread_mutex_unlock((pthread_mutex_t *)&DAT_000810dc);\n            FUN_0002bdd0();\n            pthread_mutex_unlock((pthread_mutex_t *)&DAT_000810f4);\n            return (&DAT_005945bc)[uVar4 * 2];\n          }\n          if (3 < DAT_0007eb9c) {\n            snprintf(acStack_828,0x800,\n                     \"read asic reg error: expect chain = %d, chip = %d, reg = %d, got chain = %d, chip = %d, reg = %d\\n\"\n                     ,param_3,param_2,param_1,uVar3,\n                     (uint)*(byte *)((int)&DAT_005945c0 + uVar4 * 8 + 1),\n                     (uint)*(byte *)((int)&DAT_005945c0 + uVar4 * 8 + 2));\n            FUN_0002e584(3,acStack_828,0);\n          }\n        } while (iVar2 != iVar5);\n      }\n      pthread_mutex_unlock((pthread_mutex_t *)&DAT_000810dc);\n      local_830 = local_830 + -1;\n    } while (local_830 != 0);\n    local_82c = local_82c + -1;\n    if (local_82c == 0) {\n      if (4 < DAT_0007eb9c) {\n        snprintf(acStack_828,0x800,\"read asic reg timeout: expect chain = %d, chip = %d, reg = %d\\n\"\n                 ,param_3,param_2,param_1);\n        FUN_0002e584(4,acStack_828,0);\n      }\n      FUN_0002bdd0();\n      pthread_mutex_unlock((pthread_mutex_t *)&DAT_000810f4);\n      return 0;\n    }\n  } while( true );\n}\n\n",
    "FUN_0002c2e8": "\nundefined4 FUN_0002c2e8(uint param_1,int param_2,uint param_3,int param_4)\n\n{\n  int iVar1;\n  undefined uVar2;\n  undefined2 uVar3;\n  int iVar4;\n  undefined4 uVar5;\n  int iVar6;\n  int extraout_r1;\n  int extraout_r1_00;\n  uint uVar7;\n  int iVar8;\n  int local_848;\n  int local_840;\n  undefined auStack_838 [8];\n  undefined auStack_830 [8];\n  char acStack_828 [2052];\n  \n  iVar4 = FUN_0001e29c(param_3);\n  if (iVar4 != 0) {\n    uVar7 = param_3 & 0xff;\n    pthread_mutex_lock((pthread_mutex_t *)&DAT_000810f4);\n    FUN_0001629c();\n    DAT_0008110c = 1;\n    FUN_0002bdd0();\n    if (param_1 == 2) {\n      iVar4 = FUN_0001e160();\n      FUN_00050dc4(uVar7,param_2 * iVar4,2);\n    }\n    else if (param_1 == 6) {\n      iVar4 = FUN_0001e160();\n      FUN_00050da8(uVar7,param_2 * iVar4);\n    }\n    else {\n      iVar4 = FUN_0001e160();\n      FUN_0005193c(uVar7,param_2 * iVar4,param_1 & 0xff);\n    }\n    local_848 = 0;\n    local_840 = 0;\n    usleep(100000);\n    do {\n      pthread_mutex_lock((pthread_mutex_t *)&DAT_000810dc);\n      iVar4 = DAT_005945c0;\n      if (DAT_005945c0 < 1) {\n        pthread_mutex_unlock((pthread_mutex_t *)&DAT_000810dc);\n        if (iVar4 == 0) {\n          usleep(1000);\n        }\n      }\n      else {\n        iVar8 = 0;\n        do {\n          DAT_005945c0 = DAT_005945c0 + -1;\n          iVar8 = iVar8 + 1;\n          uVar7 = DAT_005945bc + 1;\n          iVar1 = uVar7 * 8;\n          DAT_005945bc = uVar7;\n          if (0x1fe < uVar7) {\n            DAT_005945bc = 0;\n          }\n          if ((*(byte *)((int)&DAT_005945c0 + iVar1 + 3) == param_3) &&\n             (*(char *)((int)&DAT_005945c0 + iVar1 + 2) == '@')) {\n            uVar2 = *(undefined *)((int)&DAT_005945c0 + iVar1 + 1);\n            uVar5 = FUN_0001e160();\n            iVar6 = FUN_0005faf8(uVar2,uVar5);\n            if (iVar6 == param_2) {\n              uVar3 = *(undefined2 *)((int)&DAT_005945bc + iVar1 + 2);\n              local_848 = local_848 + 1;\n              uVar5 = FUN_0001e120();\n              FUN_0005fadc(uVar3,uVar5);\n              if (*(int *)(param_4 + extraout_r1 * 4) == 0) {\n                uVar7 = (&DAT_005945bc)[uVar7 * 2];\n                local_840 = local_840 + 1;\n                uVar5 = FUN_0001e120();\n                FUN_0005fadc(uVar7 >> 0x10,uVar5);\n                *(uint *)(param_4 + extraout_r1_00 * 4) = uVar7 & 0xffff;\n              }\n            }\n          }\n        } while (iVar4 != iVar8);\n        pthread_mutex_unlock((pthread_mutex_t *)&DAT_000810dc);\n      }\n      FUN_000302a0(auStack_830);\n      iVar4 = FUN_00030578(auStack_830,auStack_838);\n    } while (iVar4 < 200);\n    iVar4 = FUN_0001e120();\n    if ((local_840 != iVar4) && (3 < DAT_0007eb9c)) {\n      uVar5 = FUN_0001e120();\n      snprintf(acStack_828,0x800,\n               \"recv core response not enough!!!, total recv::%d, valid::%d, need::%d.\\n\",local_848,\n               local_840,uVar5);\n      FUN_0002e584(3,acStack_828,0);\n    }\n    DAT_0008110c = 0;\n    FUN_000162b0();\n    pthread_mutex_unlock((pthread_mutex_t *)&DAT_000810f4);\n    return 0;\n  }\n  if (3 < DAT_0007eb9c) {\n    snprintf(acStack_828,0x800,\"chain::%d don\\'t exist!!!\\n\",param_3);\n    FUN_0002e584(3,acStack_828,0);\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n",
    "FUN_0002c5e8": "\nvoid FUN_0002c5e8(byte *param_1)\n\n{\n  byte bVar1;\n  undefined4 uVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  int iVar6;\n  int iVar7;\n  int iVar8;\n  uint uVar9;\n  int iVar10;\n  undefined8 uVar11;\n  undefined4 local_828;\n  undefined4 uStack_824;\n  undefined4 uStack_820;\n  undefined4 uStack_81c;\n  undefined4 uStack_818;\n  undefined4 local_814;\n  undefined4 uStack_810;\n  undefined4 uStack_80c;\n  \n  if (DAT_00482a89 == '\\0') {\n    return;\n  }\n  bVar1 = *param_1;\n  if ((bVar1 & 0x80) == 0) {\n    if (3 < DAT_0007eb9c) {\n      local_828._0_1_ = '!';\n      local_828._1_1_ = '!';\n      local_828._2_1_ = '!';\n      local_828._3_1_ = ' ';\n      uStack_824._0_1_ = 'n';\n      uStack_824._1_1_ = 'o';\n      uStack_824._2_1_ = 'n';\n      uStack_824._3_1_ = 'c';\n      uStack_820._0_1_ = 'e';\n      uStack_820._1_1_ = ' ';\n      uStack_820._2_1_ = 'i';\n      uStack_820._3_1_ = 'n';\n      uStack_81c._0_1_ = 'v';\n      uStack_81c._1_1_ = 'a';\n      uStack_81c._2_1_ = 'l';\n      uStack_81c._3_1_ = 'i';\n      uStack_818 = CONCAT13(uStack_818._3_1_,0xa64);\n      FUN_0002e584(3,&local_828,0);\n      return;\n    }\n  }\n  else {\n    if ((bVar1 & 0x40) != 0) {\n      if (3 < DAT_0007eb9c) {\n        local_828._0_1_ = '!';\n        local_828._1_1_ = '!';\n        local_828._2_1_ = '!';\n        local_828._3_1_ = ' ';\n        uStack_824._0_1_ = 'n';\n        uStack_824._1_1_ = 'o';\n        uStack_824._2_1_ = 'n';\n        uStack_824._3_1_ = 'c';\n        uStack_820._0_1_ = 'e';\n        uStack_820._1_1_ = ' ';\n        uStack_820._2_1_ = 'c';\n        uStack_820._3_1_ = 'r';\n        uStack_81c._0_1_ = 'c';\n        uStack_81c._1_1_ = ' ';\n        uStack_81c._2_1_ = 'e';\n        uStack_81c._3_1_ = 'r';\n        uStack_818._0_1_ = 'r';\n        uStack_818._1_1_ = 'o';\n        uStack_818._2_1_ = 'r';\n        uStack_818._3_1_ = '\\n';\n        local_814 = local_814 & 0xffffff00;\n        FUN_0002e584(3,&local_828,0);\n      }\n      DAT_005955c0 = DAT_005955c0 + 1;\n      return;\n    }\n    pthread_mutex_lock((pthread_mutex_t *)&DAT_004fcad0);\n    uVar3 = DAT_005955c8;\n    if (DAT_005955d0 < 0x1ff) {\n      uVar9 = *(ushort *)(param_1 + 2) & 0x7fff;\n      iVar7 = DAT_005955c8 * 0x3c;\n      *(uint *)(&DAT_005955d8 + iVar7) = uVar9;\n      *(undefined4 *)(&DAT_005955e8 + iVar7) = *(undefined4 *)(param_1 + 4);\n      *(uint *)(&DAT_005955ec + iVar7) = *param_1 & 0xf;\n      uVar2 = FUN_0004466c(uVar9);\n      uVar4 = DAT_0007eb9c;\n      *(undefined4 *)(&DAT_005955d4 + iVar7) = uVar2;\n      if (4 < uVar4) {\n        snprintf((char *)&local_828,0x800,\"blk ver = 0x%x\\n\",(uint)*(ushort *)(param_1 + 9));\n        FUN_0002e584(4,&local_828,bVar1 & 0x40);\n      }\n      iVar7 = uVar3 * 0x3c;\n      uVar2 = FUN_00044680(uVar9);\n      *(undefined4 *)(&DAT_005955dc + iVar7) = uVar2;\n      uVar11 = FUN_00044654(uVar9);\n      *(undefined8 *)(&DAT_005955e0 + iVar7) = uVar11;\n      FUN_00044698(uVar9,&DAT_005955f0 + iVar7,0x20);\n      iVar8 = *(int *)(&DAT_005955e8 + iVar7);\n      iVar7 = *(int *)(&DAT_005955ec + iVar7);\n      uVar3 = FUN_00051970(iVar8);\n      uVar2 = FUN_0001e160();\n      uVar4 = FUN_00051978(iVar8,uVar2);\n      if (((iVar7 < 4) && (uVar9 = FUN_0001e0f0(), uVar4 < uVar9)) &&\n         (uVar9 = FUN_0001e120(), iVar8 != 0 && uVar3 < uVar9)) {\n        iVar8 = uVar4 + iVar7 * 0x100;\n        iVar6 = iVar8 + 4;\n        iVar10 = *(int *)(&DAT_00081118 + iVar6 * 4);\n        iVar5 = uVar3 + iVar8 * 0x400 + 0x404;\n        iVar8 = *(int *)(&DAT_00081118 + iVar5 * 4);\n        *(int *)(&DAT_00081118 + iVar7 * 4) = *(int *)(&DAT_00081118 + iVar7 * 4) + 1;\n        *(int *)(&DAT_00081118 + iVar6 * 4) = iVar10 + 1;\n        *(int *)(&DAT_00081118 + iVar5 * 4) = iVar8 + 1;\n      }\n      else if (4 < DAT_0007eb9c) {\n        snprintf((char *)&local_828,0x800,\"buf [%x] is error!\\n\",iVar8);\n        FUN_0002e584(4,&local_828,0);\n        if (4 < DAT_0007eb9c) {\n          snprintf((char *)&local_828,0x800,\"chain = %d, chip = %d, core = %d\\n\",iVar7,uVar4,uVar3);\n          FUN_0002e584(4,&local_828,0);\n        }\n      }\n      DAT_005955c8 = DAT_005955c8 + 1;\n      uVar3 = DAT_005955c8;\n      if (0x1fe < DAT_005955c8) {\n        uVar3 = 0;\n      }\n      DAT_005955d0 = DAT_005955d0 + 1;\n      if (0x1fe < DAT_005955c8) {\n        DAT_005955c8 = uVar3;\n      }\n      DAT_00081110 = 0;\n    }\n    else if (DAT_00081110 == 0) {\n      if (3 < DAT_0007eb9c) {\n        local_828._0_1_ = 'n';\n        local_828._1_1_ = 'o';\n        local_828._2_1_ = 'n';\n        local_828._3_1_ = 'c';\n        uStack_824._0_1_ = 'e';\n        uStack_824._1_1_ = '_';\n        uStack_824._2_1_ = 'r';\n        uStack_824._3_1_ = 'e';\n        uStack_820._0_1_ = 'a';\n        uStack_820._1_1_ = 'd';\n        uStack_820._2_1_ = '_';\n        uStack_820._3_1_ = 'o';\n        uStack_81c._0_1_ = 'u';\n        uStack_81c._1_1_ = 't';\n        uStack_81c._2_1_ = ' ';\n        uStack_81c._3_1_ = 'b';\n        uStack_818._0_1_ = 'u';\n        uStack_818._1_1_ = 'f';\n        uStack_818._2_1_ = 'f';\n        uStack_818._3_1_ = 'e';\n        local_814._0_1_ = 'r';\n        local_814._1_1_ = ' ';\n        local_814._2_1_ = 'i';\n        local_814._3_1_ = 's';\n        uStack_810._0_1_ = ' ';\n        uStack_810._1_1_ = 'f';\n        uStack_810._2_1_ = 'u';\n        uStack_810._3_1_ = 'l';\n        uStack_80c._0_1_ = 'l';\n        uStack_80c._1_1_ = '!';\n        uStack_80c._2_1_ = '\\n';\n        uStack_80c._3_1_ = '\\0';\n        FUN_0002e584(3,&local_828,0);\n      }\n      DAT_00081110 = 1;\n    }\n    pthread_mutex_unlock((pthread_mutex_t *)&DAT_004fcad0);\n  }\n  return;\n}\n\n",
    "FUN_0002c96c": "\nvoid FUN_0002c96c(undefined4 *param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  byte bVar4;\n  uint uVar5;\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined4 uStack_804;\n  undefined4 local_800;\n  undefined4 uStack_7fc;\n  undefined4 uStack_7f8;\n  undefined2 uStack_7f4;\n  undefined local_7f2;\n  \n  bVar4 = *(byte *)param_1;\n  if ((bVar4 & 0x40) == 0) {\n    uVar5 = *(byte *)((int)param_1 + 3) & 0x60;\n    if ((*(byte *)((int)param_1 + 3) & 0x60) == 0) {\n      pthread_mutex_lock((pthread_mutex_t *)&DAT_000810dc);\n      uVar2 = DAT_005945c0;\n      bVar4 = DAT_0008110c;\n      if (DAT_005945c0 < 0x1ff) {\n        uVar3 = DAT_005945b8 + 1;\n        iVar1 = uVar3 * 8;\n        (&DAT_005945bc)[uVar3 * 2] = param_1[1];\n        *(byte *)(&DAT_005945c0 + uVar3 * 2) =\n             (byte)(((uint)*(byte *)((int)param_1 + 3) << 0x1b) >> 0x1b);\n        *(byte *)((int)&DAT_005945c0 + iVar1 + 1) = *(byte *)((int)param_1 + 2);\n        if (*(byte *)((int)param_1 + 1) != 0x40) {\n          bVar4 = bVar4 | 1;\n        }\n        *(byte *)((int)&DAT_005945c0 + iVar1 + 2) = *(byte *)((int)param_1 + 1);\n        *(byte *)((int)&DAT_005945c0 + iVar1 + 3) = (byte)(((uint)*(byte *)param_1 << 0x1c) >> 0x1c)\n        ;\n        if (bVar4 != 0) {\n          DAT_005945c0 = uVar2 + 1;\n          DAT_005945b8 = uVar3;\n          if (0x1fe < uVar3) {\n            DAT_005945b8 = uVar5;\n          }\n        }\n      }\n      else if (3 < DAT_0007eb9c) {\n        local_810._0_1_ = 'r';\n        local_810._1_1_ = 'e';\n        local_810._2_1_ = 'g';\n        local_810._3_1_ = '_';\n        uStack_80c._0_1_ = 'v';\n        uStack_80c._1_1_ = 'a';\n        uStack_80c._2_1_ = 'l';\n        uStack_80c._3_1_ = 'u';\n        uStack_808._0_1_ = 'e';\n        uStack_808._1_1_ = '_';\n        uStack_808._2_1_ = 'b';\n        uStack_808._3_1_ = 'u';\n        uStack_804._0_1_ = 'f';\n        uStack_804._1_1_ = ' ';\n        uStack_804._2_1_ = 'b';\n        uStack_804._3_1_ = 'u';\n        local_800._0_1_ = 'f';\n        local_800._1_1_ = 'f';\n        local_800._2_1_ = 'e';\n        local_800._3_1_ = 'r';\n        uStack_7fc._0_1_ = ' ';\n        uStack_7fc._1_1_ = 'i';\n        uStack_7fc._2_1_ = 's';\n        uStack_7fc._3_1_ = ' ';\n        uStack_7f8._0_1_ = 'f';\n        uStack_7f8._1_1_ = 'u';\n        uStack_7f8._2_1_ = 'l';\n        uStack_7f8._3_1_ = 'l';\n        uStack_7f4 = 0xa21;\n        local_7f2 = 0;\n        FUN_0002e584(3,&local_810,uVar5);\n      }\n      pthread_mutex_unlock((pthread_mutex_t *)&DAT_000810dc);\n      return;\n    }\n    if (3 < DAT_0007eb9c) {\n      snprintf((char *)&local_810,0x800,\"!!! REG_TYPE = 1. %u\\n\",*param_1);\n      FUN_0002e584(3,&local_810,bVar4 & 0x40);\n      return;\n    }\n  }\n  else {\n    if (3 < DAT_0007eb9c) {\n      local_810._0_1_ = '!';\n      local_810._1_1_ = '!';\n      local_810._2_1_ = '!';\n      local_810._3_1_ = ' ';\n      uStack_80c._0_1_ = 'r';\n      uStack_80c._1_1_ = 'e';\n      uStack_80c._2_1_ = 'g';\n      uStack_80c._3_1_ = ' ';\n      uStack_808._0_1_ = 'c';\n      uStack_808._1_1_ = 'r';\n      uStack_808._2_1_ = 'c';\n      uStack_808._3_1_ = ' ';\n      uStack_804._0_1_ = 'e';\n      uStack_804._1_1_ = 'r';\n      uStack_804._2_1_ = 'r';\n      uStack_804._3_1_ = 'o';\n      local_800 = CONCAT13(local_800._3_1_,0xa72);\n      FUN_0002e584(3,&local_810,0);\n    }\n    DAT_005955bc = DAT_005955bc + 1;\n  }\n  return;\n}\n\n",
    "FUN_0002cb2c": "\nvoid FUN_0002cb2c(void)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 uVar3;\n  int extraout_r1;\n  int iVar4;\n  int *piVar5;\n  int iVar6;\n  int iVar7;\n  int iVar8;\n  int iVar9;\n  undefined4 local_828;\n  undefined4 uStack_824;\n  undefined4 uStack_820;\n  undefined4 uStack_81c;\n  undefined4 local_818;\n  undefined4 uStack_814;\n  undefined4 uStack_810;\n  undefined local_80c;\n  \n  if (4 < DAT_0007eb9c) {\n    local_828._0_1_ = '\\n';\n    local_828._1_1_ = ' ';\n    local_828._2_1_ = 'd';\n    local_828._3_1_ = 'u';\n    uStack_824._0_1_ = 'm';\n    uStack_824._1_1_ = 'p';\n    uStack_824._2_1_ = ' ';\n    uStack_824._3_1_ = 'a';\n    uStack_820._0_1_ = 's';\n    uStack_820._1_1_ = 'i';\n    uStack_820._2_1_ = 'c';\n    uStack_820._3_1_ = ' ';\n    uStack_81c._0_1_ = 'n';\n    uStack_81c._1_1_ = 'o';\n    uStack_81c._2_1_ = 'n';\n    uStack_81c._3_1_ = 'c';\n    local_818._0_1_ = 'e';\n    local_818._1_1_ = ' ';\n    local_818._2_1_ = 'n';\n    local_818._3_1_ = 'u';\n    uStack_814._0_1_ = 'm';\n    uStack_814._1_1_ = 'b';\n    uStack_814._2_1_ = 'e';\n    uStack_814._3_1_ = 'r';\n    uStack_810._0_1_ = '.';\n    uStack_810._1_1_ = '.';\n    uStack_810._2_1_ = '.';\n    uStack_810._3_1_ = '\\n';\n    local_80c = 0;\n    FUN_0002e584(4,&local_828);\n  }\n  iVar8 = 0;\n  iVar7 = 0;\n  do {\n    iVar1 = FUN_0001e29c(iVar7);\n    if (iVar1 != 0) {\n      if (4 < DAT_0007eb9c) {\n        snprintf((char *)&local_828,0x800,\"Chain[%d]:\\n\",iVar7);\n        FUN_0002e584(4,&local_828);\n      }\n      iVar1 = FUN_0001e0f0();\n      iVar9 = 0;\n      if (0 < iVar1) {\n        iVar6 = 0;\n        do {\n          iVar2 = FUN_0001e120();\n          if (iVar2 < 1) {\n            iVar4 = 0;\n          }\n          else {\n            iVar4 = 0;\n            piVar5 = (int *)((iVar6 + iVar8) * 0x1000 + 0x82124);\n            do {\n              piVar5 = piVar5 + 1;\n              iVar4 = iVar4 + *piVar5;\n            } while (piVar5 != (int *)((iVar2 + (iVar6 + iVar8) * 0x400) * 4 + 0x82124));\n            iVar9 = iVar9 + iVar4;\n          }\n          if (4 < DAT_0007eb9c) {\n            snprintf((char *)&local_828,0x800,\"IC[%03d] = %-10d \",iVar6,iVar4);\n            FUN_0002e584(4,&local_828,0);\n          }\n          iVar6 = iVar6 + 1;\n          uVar3 = FUN_0001e100();\n          FUN_0005fd8c(iVar6,uVar3);\n          if ((extraout_r1 == 0) && (4 < DAT_0007eb9c)) {\n            local_828._0_2_ = 10;\n            FUN_0002e584(4,&local_828);\n          }\n        } while (iVar6 != iVar1);\n      }\n      if (4 < DAT_0007eb9c) {\n        snprintf((char *)&local_828,0x800,\"Chain[%d] total nonce number = %d\\n\",iVar7,iVar9);\n        FUN_0002e584(4,&local_828);\n        if (4 < DAT_0007eb9c) {\n          local_828._0_2_ = 10;\n          FUN_0002e584(4,&local_828);\n        }\n      }\n    }\n    iVar7 = iVar7 + 1;\n    iVar8 = iVar8 + 0x100;\n  } while (iVar7 != 4);\n  return;\n}\n\n",
    "FUN_0002cd30": "\nint FUN_0002cd30(int param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  int extraout_r1;\n  uint uVar6;\n  int *piVar7;\n  uint uVar8;\n  uint uVar9;\n  int *piVar10;\n  \n  uVar1 = FUN_0001e120();\n  uVar2 = FUN_0001e150();\n  iVar3 = FUN_0005faf8(uVar1,uVar2);\n  uVar1 = FUN_0001e150();\n  iVar4 = FUN_0005f880(param_2,uVar1);\n  iVar5 = FUN_0001e100();\n  uVar8 = iVar4 * iVar5;\n  uVar1 = FUN_0001e150();\n  FUN_0005fadc(param_2,uVar1);\n  uVar9 = iVar3 * extraout_r1;\n  iVar4 = FUN_0001e100();\n  uVar6 = iVar4 + uVar8;\n  if (uVar6 <= uVar8) {\n    return 0;\n  }\n  iVar4 = 0;\n  piVar10 = &DAT_00081114 + uVar9 + 0x404 + (uVar8 + param_1 * 0x100) * 0x400;\n  do {\n    if (uVar9 < iVar3 + uVar9) {\n      piVar7 = piVar10;\n      do {\n        piVar7 = piVar7 + 1;\n        iVar4 = iVar4 + *piVar7;\n      } while (piVar7 != piVar10 + iVar3);\n    }\n    uVar8 = uVar8 + 1;\n    piVar10 = piVar10 + 0x400;\n  } while (uVar6 != uVar8);\n  return iVar4;\n}\n\n",
    "FUN_0002cdfc": "\nundefined4 FUN_0002cdfc(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  undefined4 uVar1;\n  bool bVar2;\n  bool bVar3;\n  \n  bVar3 = 0xfe < param_2;\n  bVar2 = param_2 == 0xff;\n  if (param_2 < 0x100) {\n    bVar3 = 2 < param_1;\n    bVar2 = param_1 == 3;\n  }\n  if (!bVar3 || bVar2) {\n    param_2 = param_2 + param_1 * 0x100;\n  }\n  if (!bVar3 || bVar2) {\n    param_4 = 0x1118;\n  }\n  if (!bVar3 || bVar2) {\n    param_4 = param_4 & 0xffff | 0x80000;\n  }\n  if (!bVar3 || bVar2) {\n    param_2 = param_2 + 4;\n  }\n  if (!bVar3 || bVar2) {\n    uVar1 = *(undefined4 *)(param_4 + param_2 * 4);\n  }\n  else {\n    uVar1 = 0;\n  }\n  return uVar1;\n}\n\n",
    "FUN_0002ce20": "\nvoid FUN_0002ce20(undefined4 param_1,uint param_2)\n\n{\n  undefined4 uVar1;\n  int iVar2;\n  int iVar3;\n  int extraout_r1;\n  uint extraout_r1_00;\n  uint extraout_r1_01;\n  int iVar4;\n  uint uVar5;\n  int iVar6;\n  undefined8 uVar7;\n  undefined4 local_828;\n  undefined4 uStack_824;\n  undefined4 uStack_820;\n  undefined4 uStack_81c;\n  undefined4 local_818;\n  undefined4 uStack_814;\n  undefined4 uStack_810;\n  undefined2 uStack_80c;\n  undefined local_80a;\n  \n  if (4 < DAT_0007eb9c) {\n    local_828._0_1_ = '\\n';\n    local_828._1_1_ = ' ';\n    local_828._2_1_ = 'd';\n    local_828._3_1_ = 'u';\n    uStack_824._0_1_ = 'm';\n    uStack_824._1_1_ = 'p';\n    uStack_824._2_1_ = ' ';\n    uStack_824._3_1_ = 'd';\n    uStack_820._0_1_ = 'o';\n    uStack_820._1_1_ = 'm';\n    uStack_820._2_1_ = 'a';\n    uStack_820._3_1_ = 'i';\n    uStack_81c._0_1_ = 'n';\n    uStack_81c._1_1_ = ' ';\n    uStack_81c._2_1_ = 'n';\n    uStack_81c._3_1_ = 'o';\n    local_818._0_1_ = 'n';\n    local_818._1_1_ = 'c';\n    local_818._2_1_ = 'e';\n    local_818._3_1_ = ' ';\n    uStack_814._0_1_ = 'n';\n    uStack_814._1_1_ = 'u';\n    uStack_814._2_1_ = 'm';\n    uStack_814._3_1_ = 'b';\n    uStack_810._0_1_ = 'e';\n    uStack_810._1_1_ = 'r';\n    uStack_810._2_1_ = '.';\n    uStack_810._3_1_ = '.';\n    uStack_80c = 0xa2e;\n    local_80a = 0;\n    FUN_0002e584(4,&local_828,0);\n    param_2 = extraout_r1_01;\n  }\n  iVar4 = 0;\n  do {\n    uVar7 = FUN_0001e29c(iVar4,param_2);\n    param_2 = (uint)((ulonglong)uVar7 >> 0x20);\n    if ((int)uVar7 != 0) {\n      if (4 < DAT_0007eb9c) {\n        snprintf((char *)&local_828,0x800,\"Chain[%d]:\\n\",iVar4);\n        FUN_0002e584(4,&local_828,0);\n      }\n      uVar5 = 0;\n      iVar6 = 0;\n      while( true ) {\n        param_2 = uVar5;\n        iVar2 = FUN_0001e0e0();\n        iVar3 = FUN_0001e150();\n        uVar5 = param_2 + 1;\n        if (iVar3 * iVar2 - param_2 == 0 || iVar3 * iVar2 < (int)param_2) break;\n        iVar2 = FUN_0002cd30(iVar4);\n        iVar3 = iVar6 + iVar2;\n        if (4 < DAT_0007eb9c) {\n          snprintf((char *)&local_828,0x800,\"D[%02d]:%-10d \",param_2,iVar2);\n          FUN_0002e584(4,&local_828,0);\n        }\n        uVar1 = FUN_0001e150();\n        FUN_0005fd8c(uVar5,uVar1);\n        iVar6 = iVar3;\n        if ((extraout_r1 == 0) && (iVar6 = 0, 4 < DAT_0007eb9c)) {\n          snprintf((char *)&local_828,0x800,\"D_BIG[%02d]:%-10d\\n\",param_2 >> 2,iVar3);\n          FUN_0002e584(4,&local_828,0);\n        }\n      }\n      if (4 < DAT_0007eb9c) {\n        local_828._0_2_ = 10;\n        FUN_0002e584(4,&local_828,0);\n        param_2 = extraout_r1_00;\n      }\n    }\n    iVar4 = iVar4 + 1;\n  } while (iVar4 != 4);\n  return;\n}\n\n",
    "FUN_0002cffc": "\nvoid FUN_0002cffc(int param_1,int param_2)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  undefined2 local_820 [1024];\n  \n  if (DAT_0007eb9c < 4) {\n    uVar1 = FUN_0001e120();\n    uVar4 = DAT_0007eb9c;\n  }\n  else {\n    snprintf((char *)local_820,0x800,\"\\n asic nonce number for chain[%d] asic[%d]...\\n\",param_1,\n             param_2);\n    FUN_0002ea54(3,local_820,0);\n    uVar1 = FUN_0001e120();\n    uVar4 = DAT_0007eb9c;\n  }\n  DAT_0007eb9c = uVar4;\n  if (0 < (int)uVar1) {\n    uVar2 = 0;\n    do {\n      while (uVar4 < 4) {\nLAB_0002d05c:\n        uVar2 = uVar2 + 1;\n        if (uVar1 == uVar2) goto LAB_0002d0ec;\n      }\n      uVar3 = uVar2 + 1;\n      snprintf((char *)local_820,0x800,\"core[%03d]=%-8d\",uVar2,\n               (&DAT_00082128)[uVar2 + (param_2 + param_1 * 0x100) * 0x400]);\n      FUN_0002ea54(3,local_820,0);\n      uVar4 = DAT_0007eb9c;\n      if ((uVar3 % 10 != 0) || (DAT_0007eb9c < 4)) goto LAB_0002d05c;\n      local_820[0] = 10;\n      FUN_0002ea54(3,local_820);\n      uVar2 = uVar3;\n      uVar4 = DAT_0007eb9c;\n    } while (uVar1 != uVar3);\n  }\nLAB_0002d0ec:\n  if (3 < uVar4) {\n    local_820[0] = 10;\n    FUN_0002ea54(3,local_820,0);\n  }\n  return;\n}\n\n",
    "FUN_0002d158": "\nvoid FUN_0002d158(void)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 uVar3;\n  int extraout_r1;\n  int iVar4;\n  int iVar5;\n  int iVar6;\n  int iVar7;\n  int iVar8;\n  int *piVar9;\n  int iVar10;\n  char *pcVar11;\n  char acStack_128 [260];\n  \n  iVar4 = 0;\n  iVar10 = 0;\n  iVar6 = 0;\n  memset(acStack_128,0,0x100);\n  do {\n    iVar2 = FUN_0001e29c(iVar10);\n    if (iVar2 != 0) {\n      if (DAT_00081114 == 0) {\n        DAT_00081114 = FUN_000536f4(\"bmminer_nonce\");\n      }\n      FUN_00054cb0(DAT_00081114,\"asic_response.c\",0xf,\"dump_nonce_info_all_core\",0x18,0x21a,0x14,\n                   \"\\n asic nonce number for chain[%d]...\\n\",iVar10);\n      iVar2 = FUN_0001e0f0();\n      if (0 < iVar2) {\n        piVar9 = (int *)(iVar10 * 0x400 + 0x81124);\n        iVar5 = 0;\n        do {\n          piVar9 = piVar9 + 1;\n          iVar8 = iVar5 + 1;\n          iVar7 = iVar6 + *piVar9;\n          iVar6 = snprintf(acStack_128 + iVar4,0x100 - iVar4,\"asic[%03d]=%-8d\",iVar5,*piVar9);\n          uVar3 = FUN_0001e100();\n          FUN_0005fd8c(iVar8,uVar3);\n          iVar4 = iVar4 + iVar6;\n          iVar6 = iVar7;\n          if (extraout_r1 == 0) {\n            if (DAT_00081114 == 0) {\n              DAT_00081114 = FUN_000536f4(\"bmminer_nonce\");\n            }\n            iVar1 = DAT_00081114;\n            uVar3 = FUN_0001e100();\n            iVar6 = 0;\n            iVar4 = 0;\n            pcVar11 = acStack_128;\n            uVar3 = FUN_0005faf8(iVar5,uVar3);\n            FUN_00054cb0(iVar1,\"asic_response.c\",0xf,\"dump_nonce_info_all_core\",0x18,0x220,0x14,\n                         \"domain %02d %s total=%-8u\",uVar3,pcVar11,iVar7);\n          }\n          iVar5 = iVar8;\n        } while (iVar8 != iVar2);\n      }\n    }\n    iVar10 = iVar10 + 1;\n  } while (iVar10 != 4);\n  return;\n}\n\n",
    "FUN_0002d340": "\nvoid FUN_0002d340(undefined4 *param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  char cVar1;\n  void *pvVar2;\n  undefined4 *puVar3;\n  undefined4 uVar4;\n  int iVar5;\n  int iVar6;\n  undefined4 *puVar7;\n  size_t __nmemb;\n  char acStack_818 [2048];\n  \n  if (*(char *)(param_1 + 1) != '\\0') {\n    snprintf(acStack_818,0x800,\"List %s store can\\'t %s() - from %s %s() line %d in %s %s():%d\",\n             *param_1,\"k_alloc_items\",param_2,param_3,param_4,\"klist.c\",\"k_alloc_items\",0x13);\n    FUN_0002e584(3,acStack_818,1);\n    FUN_0002a574(1);\n  }\n  iVar6 = param_1[10];\n  if (iVar6 < 1) {\n    __nmemb = param_1[9];\n  }\n  else {\n    iVar5 = param_1[6];\n    if (iVar6 <= iVar5) {\n      return;\n    }\n    __nmemb = param_1[9];\n    if (iVar6 < (int)(iVar5 + __nmemb)) {\n      __nmemb = iVar6 - iVar5;\n    }\n  }\n  iVar6 = param_1[0xc];\n  param_1[0xc] = iVar6 + 1;\n  pvVar2 = realloc((void *)param_1[0xd],(iVar6 + 1) * 4);\n  param_1[0xd] = pvVar2;\n  if (pvVar2 == (void *)0x0) {\n    snprintf(acStack_818,0x800,\"List %s item_memory failed to realloc count=%d in %s %s():%d\",\n             *param_1,param_1[0xc],\"klist.c\",\"k_alloc_items\",0x21);\n    FUN_0002e584(3,acStack_818,1);\n    FUN_0002a574(1);\n  }\n  puVar3 = (undefined4 *)calloc(__nmemb,0x10);\n  if (puVar3 == (undefined4 *)0x0) {\n    snprintf(acStack_818,0x800,\n             \"List %s failed to calloc %d new items - total was %d, limit was %d in %s %s():%d\",\n             *param_1,__nmemb,param_1[6],param_1[10],\"klist.c\",\"k_alloc_items\",0x26);\n    FUN_0002e584(3,acStack_818,1);\n    FUN_0002a574(1);\n  }\n  *(undefined4 **)(param_1[0xd] + (param_1[0xc] + 0x3fffffff) * 4) = puVar3;\n  uVar4 = *param_1;\n  param_1[7] = __nmemb;\n  param_1[8] = __nmemb;\n  param_1[6] = param_1[6] + __nmemb;\n  *puVar3 = uVar4;\n  puVar3[1] = 0;\n  puVar3[2] = puVar3 + 4;\n  if (2 < (int)__nmemb) {\n    puVar7 = puVar3 + 8;\n    do {\n      puVar7[-4] = uVar4;\n      puVar7[-3] = puVar7 + -8;\n      puVar7[-2] = puVar7;\n      puVar7 = puVar7 + 4;\n    } while (puVar7 != puVar3 + __nmemb * 4);\n  }\n  iVar6 = __nmemb + 0xfffffff;\n  cVar1 = *(char *)(param_1 + 0xb);\n  puVar3[iVar6 * 4] = uVar4;\n  param_1[3] = puVar3;\n  puVar7 = puVar3 + iVar6 * 4;\n  puVar7[1] = puVar3 + iVar6 * 4 + -4;\n  puVar7[2] = 0;\n  if (cVar1 != '\\0') {\n    param_1[4] = puVar7;\n  }\n  do {\n    iVar6 = param_1[0xe];\n    param_1[0xe] = iVar6 + 1;\n    pvVar2 = realloc((void *)param_1[0xf],(iVar6 + 1) * 4);\n    param_1[0xf] = pvVar2;\n    if (pvVar2 == (void *)0x0) {\n      snprintf(acStack_818,0x800,\"List %s data_memory failed to realloc count=%d in %s %s():%d\",\n               *param_1,param_1[0xe],\"klist.c\",\"k_alloc_items\",0x45);\n      FUN_0002e584(3,acStack_818,1);\n      FUN_0002a574(1);\n    }\n    pvVar2 = calloc(1,param_1[5]);\n    puVar3[3] = pvVar2;\n    if (pvVar2 == (void *)0x0) {\n      snprintf(acStack_818,0x800,\"List %s failed to calloc item data in %s %s():%d\",*param_1,\n               \"klist.c\",\"k_alloc_items\",0x49);\n      FUN_0002e584(3,acStack_818,1);\n      FUN_0002a574(1);\n      pvVar2 = (void *)puVar3[3];\n    }\n    *(void **)(param_1[0xf] + (param_1[0xe] + 0x3fffffff) * 4) = pvVar2;\n    puVar3 = (undefined4 *)puVar3[2];\n  } while (puVar3 != (undefined4 *)0x0);\n  return;\n}\n\n",
    "FUN_0002d67c": "\nundefined4 * FUN_0002d67c(undefined4 *param_1)\n\n{\n  undefined uVar1;\n  undefined4 *puVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  char acStack_810 [2052];\n  \n  puVar2 = (undefined4 *)calloc(1,0x40);\n  uVar3 = *param_1;\n  if (puVar2 == (undefined4 *)0x0) {\n    snprintf(acStack_810,0x800,\"Failed to calloc store for %s in %s %s():%d\",uVar3,\"klist.c\",\n             \"k_new_store\",0x55);\n    FUN_0002e584(3,acStack_810,1);\n    FUN_0002a574(1);\n    uVar3 = *param_1;\n  }\n  uVar4 = param_1[2];\n  uVar1 = *(undefined *)(param_1 + 0xb);\n  *puVar2 = uVar3;\n  puVar2[2] = uVar4;\n  *(undefined *)(puVar2 + 0xb) = uVar1;\n  *(undefined *)(puVar2 + 1) = 1;\n  return puVar2;\n}\n\n",
    "FUN_0002d724": "\nundefined4 *\nFUN_0002d724(undefined4 param_1,undefined4 param_2,int param_3,int param_4,undefined param_5,\n            undefined4 param_6,undefined4 param_7,undefined4 param_8)\n\n{\n  undefined4 *puVar1;\n  pthread_mutex_t *__mutex;\n  int iVar2;\n  int *piVar3;\n  char acStack_820 [2048];\n  \n  if (param_3 < 1) {\n    snprintf(acStack_820,0x800,\"Invalid new list %s with allocate %d must be > 0 in %s %s():%d\",\n             param_1,param_3,\"klist.c\",\"_k_new_list\",100);\n    FUN_0002e584(3,acStack_820,1);\n    FUN_0002a574(1);\n  }\n  if (param_4 < 0) {\n    snprintf(acStack_820,0x800,\"Invalid new list %s with limit %d must be >= 0 in %s %s():%d\",\n             param_1,param_4,\"klist.c\",\"_k_new_list\",0x67);\n    FUN_0002e584(3,acStack_820,1);\n    FUN_0002a574(1);\n  }\n  puVar1 = (undefined4 *)calloc(1,0x40);\n  if (puVar1 == (undefined4 *)0x0) {\n    snprintf(acStack_820,0x800,\"Failed to calloc list %s in %s %s():%d\",param_1,\"klist.c\",\n             \"_k_new_list\",0x6b);\n    FUN_0002e584(3,acStack_820,1);\n    FUN_0002a574(1);\n  }\n  *(undefined *)(puVar1 + 1) = 0;\n  __mutex = (pthread_mutex_t *)calloc(1,0x38);\n  puVar1[2] = __mutex;\n  if (__mutex == (pthread_mutex_t *)0x0) {\n    snprintf(acStack_820,0x800,\"Failed to calloc lock for list %s in %s %s():%d\",param_1,\"klist.c\",\n             \"_k_new_list\",0x71);\n    FUN_0002e584(3,acStack_820,1);\n    FUN_0002a574(1);\n    __mutex = (pthread_mutex_t *)puVar1[2];\n  }\n  iVar2 = pthread_mutex_init(__mutex,(pthread_mutexattr_t *)0x0);\n  if (iVar2 != 0) {\n    piVar3 = __errno_location();\n    snprintf(acStack_820,0x800,\"Failed to pthread_mutex_init errno=%d in %s %s():%d\",*piVar3,\n             \"klist.c\",\"_k_new_list\",0x73);\n    FUN_0002e584(3,acStack_820,1);\n    FUN_0002a574(1);\n  }\n  iVar2 = pthread_rwlock_init((pthread_rwlock_t *)(__mutex + 1),(pthread_rwlockattr_t *)0x0);\n  if (iVar2 != 0) {\n    piVar3 = __errno_location();\n    snprintf(acStack_820,0x800,\"Failed to pthread_rwlock_init errno=%d in %s %s():%d\",*piVar3,\n             \"klist.c\",\"_k_new_list\",0x73);\n    FUN_0002e584(3,acStack_820,1);\n    FUN_0002a574(1);\n  }\n  *puVar1 = param_1;\n  puVar1[5] = param_2;\n  puVar1[9] = param_3;\n  puVar1[10] = param_4;\n  *(undefined *)(puVar1 + 0xb) = param_5;\n  FUN_0002d340(puVar1,param_6,param_7,param_8);\n  return puVar1;\n}\n\n",
    "FUN_0002d9d4": "\nint FUN_0002d9d4(int param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  \n  iVar2 = *(int *)(param_1 + 0xc);\n  if (iVar2 == 0) {\n    if (*(char *)(param_1 + 4) == '\\0') {\n      FUN_0002d340();\n      iVar2 = *(int *)(param_1 + 0xc);\n      if (iVar2 != 0) goto LAB_0002d9e8;\n    }\n    return 0;\n  }\nLAB_0002d9e8:\n  iVar1 = *(int *)(iVar2 + 8);\n  *(int *)(param_1 + 0xc) = iVar1;\n  if (iVar1 == 0) {\n    if (*(char *)(param_1 + 0x2c) != '\\0') {\n      *(undefined4 *)(param_1 + 0x10) = 0;\n    }\n  }\n  else {\n    *(undefined4 *)(iVar1 + 4) = 0;\n  }\n  *(undefined4 *)(iVar2 + 8) = 0;\n  *(undefined4 *)(iVar2 + 4) = 0;\n  *(int *)(param_1 + 0x1c) = *(int *)(param_1 + 0x1c) + -1;\n  return iVar2;\n}\n\n",
    "FUN_0002da5c": "\nint FUN_0002da5c(int param_1)\n\n{\n  int iVar1;\n  \n  iVar1 = FUN_0002d9d4();\n  if (iVar1 != 0) {\n    memset(*(void **)(iVar1 + 0xc),0,*(size_t *)(param_1 + 0x14));\n  }\n  return iVar1;\n}\n\n",
    "FUN_0002da88": "\nvoid FUN_0002da88(undefined4 *param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int iVar1;\n  int iVar2;\n  char acStack_810 [2052];\n  \n  if (*(char *)(param_1 + 0xb) == '\\0') {\n    snprintf(acStack_810,0x800,\n             \"List %s can\\'t %s() - do_tail is false - from %s %s() line %d in %s %s():%d\",*param_1,\n             \"_k_unlink_tail\",param_2,param_3,param_4,\"klist.c\",\"_k_unlink_tail\",0xb5);\n    FUN_0002e584(3,acStack_810);\n    FUN_0002a574(1);\n  }\n  iVar1 = param_1[4];\n  if (iVar1 != 0) {\n    iVar2 = *(int *)(iVar1 + 4);\n    param_1[4] = iVar2;\n    if (iVar2 == 0) {\n      param_1[3] = 0;\n    }\n    else {\n      *(undefined4 *)(iVar2 + 8) = 0;\n    }\n    *(undefined4 *)(iVar1 + 8) = 0;\n    *(undefined4 *)(iVar1 + 4) = 0;\n    param_1[7] = param_1[7] + -1;\n  }\n  return;\n}\n\n",
    "FUN_0002db50": "\nvoid FUN_0002db50(int *param_1,int *param_2,undefined4 param_3,undefined4 param_4,undefined4 param_5\n                 )\n\n{\n  char acStack_810 [2048];\n  \n  if (*param_2 != *param_1) {\n    snprintf(acStack_810,0x800,\"List %s can\\'t %s() a %s item - from %s %s() line %d in %s %s():%d\",\n             *param_1,\"_k_add_head\",*param_2,param_3,param_4,param_5,\"klist.c\",\"_k_add_head\",0xcd);\n    FUN_0002e584(3,acStack_810,1);\n    FUN_0002a574(1);\n  }\n  param_2[1] = 0;\n  param_2[2] = param_1[3];\n  if (param_1[3] != 0) {\n    *(int **)(param_1[3] + 4) = param_2;\n  }\n  param_1[3] = (int)param_2;\n  if ((*(char *)(param_1 + 0xb) != '\\0') && (param_1[4] == 0)) {\n    param_1[4] = (int)param_2;\n  }\n  param_1[7] = param_1[7] + 1;\n  param_1[8] = param_1[8] + 1;\n  return;\n}\n\n",
    "FUN_0002dc24": "\nvoid FUN_0002dc24(int *param_1,int *param_2,undefined4 param_3,undefined4 param_4,undefined4 param_5\n                 )\n\n{\n  int iVar1;\n  char acStack_818 [2052];\n  \n  if (*param_2 != *param_1) {\n    snprintf(acStack_818,0x800,\"List %s can\\'t %s() a %s item - from %s %s() line %d in %s %s():%d\",\n             *param_1,\"_k_add_tail\",*param_2,param_3,param_4,param_5,\"klist.c\",\"_k_add_tail\",0xec);\n    FUN_0002e584(3,acStack_818,1);\n    FUN_0002a574(1);\n  }\n  if (*(char *)(param_1 + 0xb) == '\\0') {\n    snprintf(acStack_818,0x800,\n             \"List %s can\\'t %s() - do_tail is false - from %s %s() line %d in %s %s():%d\",*param_1,\n             \"_k_add_tail\",param_3,param_4,param_5,\"klist.c\",\"_k_add_tail\",0xf1);\n    FUN_0002e584(3,acStack_818,1);\n    FUN_0002a574(1);\n  }\n  iVar1 = param_1[4];\n  param_2[2] = 0;\n  param_2[1] = iVar1;\n  if (param_1[4] != 0) {\n    *(int **)(param_1[4] + 8) = param_2;\n  }\n  param_1[4] = (int)param_2;\n  if (param_1[3] == 0) {\n    param_1[3] = (int)param_2;\n  }\n  param_1[7] = param_1[7] + 1;\n  param_1[8] = param_1[8] + 1;\n  return;\n}\n\n",
    "FUN_0002dd70": "\nvoid FUN_0002dd70(int *param_1,int *param_2,int param_3,undefined4 param_4,undefined4 param_5,\n                 undefined4 param_6)\n\n{\n  char acStack_818 [2052];\n  \n  if (*param_2 != *param_1) {\n    snprintf(acStack_818,0x800,\"List %s can\\'t %s() a %s item - from %s %s() line %d in %s %s():%d\",\n             *param_1,\"_k_insert_before\",*param_2,param_4,param_5,param_6,\"klist.c\",\n             \"_k_insert_before\",0x106);\n    FUN_0002e584(3,acStack_818,1);\n    FUN_0002a574(1);\n  }\n  if (param_3 == 0) {\n    snprintf(acStack_818,0x800,\n             \"%s() (%s) can\\'t before a null item - from %s %s() line %d in %s %s():%d\",\n             \"_k_insert_before\",*param_1,param_4,param_5,param_6,\"klist.c\",\"_k_insert_before\",0x10b)\n    ;\n    FUN_0002e584(3,acStack_818,1);\n    FUN_0002a574(1);\n  }\n  param_2[2] = param_3;\n  param_2[1] = *(int *)(param_3 + 4);\n  if (*(int *)(param_3 + 4) == 0) {\n    param_1[3] = (int)param_2;\n  }\n  else {\n    *(int **)(*(int *)(param_3 + 4) + 8) = param_2;\n  }\n  *(int **)(param_3 + 4) = param_2;\n  param_1[7] = param_1[7] + 1;\n  param_1[8] = param_1[8] + 1;\n  return;\n}\n\n",
    "FUN_0002deb8": "\nvoid FUN_0002deb8(int *param_1,int *param_2,int param_3,undefined4 param_4,undefined4 param_5,\n                 undefined4 param_6)\n\n{\n  char acStack_818 [2052];\n  \n  if (*param_2 != *param_1) {\n    snprintf(acStack_818,0x800,\"List %s can\\'t %s() a %s item - from %s %s() line %d in %s %s():%d\",\n             *param_1,\"_k_insert_after\",*param_2,param_4,param_5,param_6,\"klist.c\",\"_k_insert_after\"\n             ,0x11e);\n    FUN_0002e584(3,acStack_818,1);\n    FUN_0002a574(1);\n  }\n  if (param_3 == 0) {\n    snprintf(acStack_818,0x800,\n             \"%s() (%s) can\\'t after a null item - from %s %s() line %d in %s %s():%d\",\n             \"_k_insert_after\",*param_1,param_4,param_5,param_6,\"klist.c\",\"_k_insert_after\",0x123);\n    FUN_0002e584(3,acStack_818,1);\n    FUN_0002a574(1);\n  }\n  param_2[1] = param_3;\n  param_2[2] = *(int *)(param_3 + 8);\n  if (*(int *)(param_3 + 8) == 0) {\n    if (*(char *)(param_1 + 0xb) != '\\0') {\n      param_1[4] = (int)param_2;\n    }\n  }\n  else {\n    *(int **)(*(int *)(param_3 + 8) + 4) = param_2;\n  }\n  *(int **)(param_3 + 8) = param_2;\n  param_1[7] = param_1[7] + 1;\n  param_1[8] = param_1[8] + 1;\n  return;\n}\n\n",
    "FUN_0002e00c": "\nvoid FUN_0002e00c(int *param_1,int *param_2,undefined4 param_3,undefined4 param_4,undefined4 param_5\n                 )\n\n{\n  int iVar1;\n  char acStack_810 [2048];\n  \n  if (*param_2 != *param_1) {\n    snprintf(acStack_810,0x800,\"List %s can\\'t %s() a %s item - from %s %s() line %d in %s %s():%d\",\n             *param_1,\"_k_unlink_item\",*param_2,param_3,param_4,param_5,\"klist.c\",\"_k_unlink_item\",\n             0x138);\n    FUN_0002e584(3,acStack_810,1);\n    FUN_0002a574(1);\n  }\n  iVar1 = param_2[2];\n  if (param_2[1] != 0) {\n    *(int *)(param_2[1] + 8) = iVar1;\n    iVar1 = param_2[2];\n  }\n  if (iVar1 != 0) {\n    *(int *)(iVar1 + 4) = param_2[1];\n  }\n  if ((int *)param_1[3] == param_2) {\n    param_1[3] = param_2[2];\n  }\n  if ((*(char *)(param_1 + 0xb) != '\\0') && ((int *)param_1[4] == param_2)) {\n    param_1[4] = param_2[1];\n  }\n  param_2[2] = 0;\n  param_2[1] = 0;\n  param_1[7] = param_1[7] + -1;\n  return;\n}\n\n",
    "FUN_0002e0f8": "\nvoid FUN_0002e0f8(int *param_1,int *param_2,undefined4 param_3,undefined4 param_4,undefined4 param_5\n                 )\n\n{\n  int iVar1;\n  char acStack_818 [2048];\n  \n  if (*param_1 != *param_2) {\n    snprintf(acStack_818,0x800,\n             \"List %s can\\'t %s() to a %s list - from %s %s() line %d in %s %s():%d\",*param_1,\n             \"_k_list_transfer_to_head\",*param_2,param_3,param_4,param_5,\"klist.c\",\n             \"_k_list_transfer_to_head\",0x152);\n    FUN_0002e584(3,acStack_818,1);\n    FUN_0002a574(1);\n  }\n  if (*(char *)(param_1 + 0xb) == '\\0') {\n    snprintf(acStack_818,0x800,\n             \"List %s can\\'t %s() - do_tail is false - from %s %s() line %d in %s %s():%d\",*param_1,\n             \"_k_list_transfer_to_head\",param_3,param_4,param_5,\"klist.c\",\"_k_list_transfer_to_head\"\n             ,0x157);\n    FUN_0002e584(3,acStack_818,1);\n    FUN_0002a574(1);\n  }\n  if (param_1[3] != 0) {\n    if (param_2[3] == 0) {\n      param_2[4] = param_1[4];\n      iVar1 = 0;\n    }\n    else {\n      *(int *)(param_2[3] + 4) = param_1[4];\n      iVar1 = param_2[3];\n    }\n    *(int *)(param_1[4] + 8) = iVar1;\n    param_2[3] = param_1[3];\n    param_1[4] = 0;\n    param_1[3] = 0;\n    param_2[7] = param_2[7] + param_1[7];\n    param_1[7] = 0;\n    param_2[8] = param_2[8] + param_1[8];\n    param_1[8] = 0;\n  }\n  return;\n}\n\n",
    "FUN_0002e268": "\nvoid FUN_0002e268(int *param_1,int *param_2,undefined4 param_3,undefined4 param_4,undefined4 param_5\n                 )\n\n{\n  int iVar1;\n  char acStack_818 [2048];\n  \n  if (*param_1 != *param_2) {\n    snprintf(acStack_818,0x800,\n             \"List %s can\\'t %s() to a %s list - from %s %s() line %d in %s %s():%d\",*param_1,\n             \"_k_list_transfer_to_tail\",*param_2,param_3,param_4,param_5,\"klist.c\",\n             \"_k_list_transfer_to_tail\",0x170);\n    FUN_0002e584(3,acStack_818,1);\n    FUN_0002a574(1);\n  }\n  if (*(char *)(param_1 + 0xb) == '\\0') {\n    snprintf(acStack_818,0x800,\n             \"List %s can\\'t %s() - do_tail is false - from %s %s() line %d in %s %s():%d\",*param_1,\n             \"_k_list_transfer_to_tail\",param_3,param_4,param_5,\"klist.c\",\"_k_list_transfer_to_tail\"\n             ,0x175);\n    FUN_0002e584(3,acStack_818,1);\n    FUN_0002a574(1);\n  }\n  iVar1 = param_1[3];\n  if (iVar1 != 0) {\n    if (param_2[4] == 0) {\n      param_2[3] = iVar1;\n      iVar1 = 0;\n    }\n    else {\n      *(int *)(param_2[4] + 8) = iVar1;\n      iVar1 = param_2[4];\n    }\n    *(int *)(param_1[3] + 4) = iVar1;\n    param_2[4] = param_1[4];\n    param_1[4] = 0;\n    param_1[3] = 0;\n    param_2[7] = param_2[7] + param_1[7];\n    param_1[7] = 0;\n    param_2[8] = param_2[8] + param_1[8];\n    param_1[8] = 0;\n  }\n  return;\n}\n\n",
    "FUN_0002e3d4": "\nundefined4\nFUN_0002e3d4(undefined4 *param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int iVar1;\n  int iVar2;\n  pthread_mutex_t *__mutex;\n  char acStack_810 [2052];\n  \n  if (*(char *)(param_1 + 1) != '\\0') {\n    snprintf(acStack_810,0x800,\"List %s can\\'t %s() a store - from %s %s() line %d in %s %s():%d\",\n             *param_1,\"_k_free_list\",param_2,param_3,param_4,\"klist.c\",\"_k_free_list\",400);\n    FUN_0002e584(3,acStack_810,1);\n    FUN_0002a574(1);\n  }\n  if (0 < (int)param_1[0xc]) {\n    iVar2 = 0;\n    do {\n      iVar1 = iVar2 * 4;\n      iVar2 = iVar2 + 1;\n      free(*(void **)(param_1[0xd] + iVar1));\n    } while (iVar2 < (int)param_1[0xc]);\n  }\n  free((void *)param_1[0xd]);\n  if (0 < (int)param_1[0xe]) {\n    iVar2 = 0;\n    do {\n      iVar1 = iVar2 * 4;\n      iVar2 = iVar2 + 1;\n      free(*(void **)(param_1[0xf] + iVar1));\n    } while (iVar2 < (int)param_1[0xe]);\n  }\n  free((void *)param_1[0xf]);\n  __mutex = (pthread_mutex_t *)param_1[2];\n  pthread_rwlock_destroy((pthread_rwlock_t *)(__mutex + 1));\n  pthread_mutex_destroy(__mutex);\n  free((void *)param_1[2]);\n  free(param_1);\n  return 0;\n}\n\n",
    "FUN_0002e4f0": "\nundefined4\nFUN_0002e4f0(undefined4 *param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  char acStack_810 [2052];\n  \n  if (*(char *)(param_1 + 1) == '\\0') {\n    snprintf(acStack_810,0x800,\"Store %s can\\'t %s() the list - from %s %s() line %d in %s %s():%d\",\n             *param_1,\"_k_free_store\",param_2,param_3,param_4,\"klist.c\",\"_k_free_store\",0x1a8);\n    FUN_0002e584(3,acStack_810,1);\n    FUN_0002a574(1);\n  }\n  free(param_1);\n  return 0;\n}\n\n",
    "FUN_0002e584": "\nvoid FUN_0002e584(uint param_1,char *param_2,undefined4 param_3)\n\n{\n  FILE *__s;\n  tm *ptVar1;\n  int iVar2;\n  size_t sVar3;\n  byte bVar4;\n  uint local_6c;\n  uint local_68;\n  uint local_64;\n  char acStack_60 [64];\n  \n  local_68 = (uint)DAT_00590404;\n  if (local_68 == 0) {\n    local_64 = local_68;\n    FUN_000302a0(&local_68);\n    local_6c = local_68;\n    iVar2 = (int)local_64 / 1000;\n    ptVar1 = localtime((time_t *)&local_6c);\n    snprintf(acStack_60,0x40,\" [%d-%02d-%02d %02d:%02d:%02d.%03d] \",ptVar1->tm_year + 0x76c,\n             ptVar1->tm_mon + 1,ptVar1->tm_mday,ptVar1->tm_hour,ptVar1->tm_min,ptVar1->tm_sec,iVar2)\n    ;\n    iVar2 = fileno(stderr);\n    iVar2 = isatty(iVar2);\n    if (iVar2 == 0) {\n      fprintf(stderr,\"%s%s\\n\",acStack_60,param_2);\n      fflush(stderr);\n    }\n    if ((DAT_00482130 != '\\0') &&\n       ((DAT_00482134 != (FILE *)0x0 ||\n        (DAT_00482134 = fopen64(&DAT_00482158,(char *)&DAT_00482138), DAT_00482134 != (FILE *)0x0)))\n       ) {\n      __s = DAT_00482134;\n      sVar3 = strlen(acStack_60);\n      fwrite(acStack_60,sVar3,1,__s);\n      sVar3 = strlen(param_2);\n      fwrite(param_2,sVar3,1,DAT_00482134);\n      fwrite(\"\\n\",1,1,DAT_00482134);\n      fflush(DAT_00482134);\n    }\n    if (DAT_0048212c == 0) {\n      DAT_0048212c = FUN_000536f4(\"bmminer_miner\");\n    }\n    FUN_00054cb0(DAT_0048212c,\"logging.c\",9,\"_applog\",7,0x75,0x3c,\"%s\",param_2);\n    if (param_1 == 3) {\n      bVar4 = 0;\n    }\n    else {\n      bVar4 = DAT_0058e350 & 1;\n    }\n    if (bVar4 == 0) {\n      FUN_0002e92c(acStack_60,param_2,param_3);\n      return;\n    }\n  }\n  else {\n    syslog(param_1 | 0x80,\"%s\",param_2);\n    if (DAT_0048212c == 0) {\n      DAT_0048212c = FUN_000536f4(\"bmminer_miner\");\n    }\n    FUN_00054cb0(DAT_0048212c,\"logging.c\",9,\"_applog\",7,0x47,0x3c,\"%s\",param_2);\n  }\n  return;\n}\n\n",
    "FUN_0002e828": "\nvoid FUN_0002e828(undefined4 param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  char acStack_808 [2048];\n  \n  iVar1 = pthread_mutex_unlock((pthread_mutex_t *)&DAT_0059450c);\n  if (iVar1 == 0) {\n    return;\n  }\n  piVar2 = __errno_location();\n  snprintf(acStack_808,0x800,\"WTF MUTEX ERROR ON UNLOCK! errno=%d in %s %s():%d\",*piVar2,\"logging.c\"\n           ,\"my_log_curses\",param_1);\n  FUN_0002e584(3,acStack_808,1);\n  FUN_0002a574(1);\n  return;\n}\n\n",
    "FUN_0002e8a4": "\nvoid FUN_0002e8a4(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  char acStack_808 [2056];\n  \n  iVar1 = pthread_mutex_lock((pthread_mutex_t *)&DAT_0059450c);\n  if (iVar1 == 0) {\n    return;\n  }\n  piVar2 = __errno_location();\n  snprintf(acStack_808,0x800,\"WTF MUTEX ERROR ON LOCK! errno=%d in %s %s():%d\",*piVar2,\"logging.c\",\n           \"my_log_curses\",0x35);\n  FUN_0002e584(3,acStack_808,1);\n  FUN_0002a574(1);\n  return;\n}\n\n",
    "FUN_0002e92c": "\nvoid FUN_0002e92c(undefined4 param_1,undefined4 param_2,int param_3)\n\n{\n  if (param_3 != 0) {\n    pthread_mutex_trylock((pthread_mutex_t *)&DAT_0059450c);\n    FUN_0002e828(0x2a);\n    (*DAT_0007ecc4)();\n  }\n  FUN_0002e8a4();\n  printf(\"%s%s%s\",param_1,param_2,\"                    \\n\");\n  FUN_0002e828(0x37);\n  (*DAT_0007ecc4)();\n  return;\n}\n\n",
    "FUN_0002ea54": "\nvoid FUN_0002ea54(uint param_1,char *param_2,undefined4 param_3)\n\n{\n  char cVar1;\n  FILE *pFVar2;\n  size_t sVar3;\n  size_t sVar4;\n  int iVar5;\n  char *pcVar6;\n  byte bVar7;\n  \n  sVar3 = strlen(&DAT_00482258);\n  sVar4 = strlen(param_2);\n  if (0x7ff < sVar3 + sVar4 + 1) {\n    if (DAT_00590404 == '\\0') {\n      iVar5 = fileno(stderr);\n      iVar5 = isatty(iVar5);\n      if (iVar5 == 0) {\n        fputs(&DAT_00482258,stderr);\n        fflush(stderr);\n      }\n      if ((DAT_00482130 != '\\0') &&\n         ((DAT_00482134 != (FILE *)0x0 ||\n          (DAT_00482134 = fopen64(&DAT_00482158,(char *)&DAT_00482138), DAT_00482134 != (FILE *)0x0)\n          ))) {\n        pFVar2 = DAT_00482134;\n        sVar3 = strlen(&DAT_00482258);\n        fwrite(&DAT_00482258,sVar3,1,pFVar2);\n        fflush(DAT_00482134);\n      }\n      if (DAT_00482a58 == 0) {\n        DAT_00482a58 = FUN_000536f4(\"bmminer_miner\");\n      }\n      FUN_00054cb0(DAT_00482a58,\"logging.c\",9,\"_applawlog\",10,0xc3,0x3c,\"%s\",&DAT_00482258);\n      if (param_1 == 3) {\n        bVar7 = 0;\n      }\n      else {\n        bVar7 = DAT_0058e350 & 1;\n      }\n      if (bVar7 == 0) {\n        FUN_0002e92c(\"\",&DAT_00482258,param_3);\n      }\n    }\n    else {\n      syslog(param_1 | 0x80,\"%s\",&DAT_00482258);\n      if (DAT_00482a58 == 0) {\n        DAT_00482a58 = FUN_000536f4(\"bmminer_miner\");\n      }\n      FUN_00054cb0(DAT_00482a58,\"logging.c\",9,\"_applawlog\",10,0xa7,0x3c,\"%s\",&DAT_00482258);\n    }\n    DAT_00482258 = 0;\n  }\n  strcat(&DAT_00482258,param_2);\n  pcVar6 = &DAT_00482258;\n  do {\n    cVar1 = *pcVar6;\n    if (cVar1 == '\\r' || cVar1 == '\\n') {\n      if (DAT_00590404 == '\\0') {\n        iVar5 = fileno(stderr);\n        iVar5 = isatty(iVar5);\n        if (iVar5 == 0) {\n          fputs(&DAT_00482258,stderr);\n          fflush(stderr);\n        }\n        if ((DAT_00482130 != '\\0') &&\n           ((DAT_00482134 != (FILE *)0x0 ||\n            (DAT_00482134 = fopen64(&DAT_00482158,(char *)&DAT_00482138),\n            DAT_00482134 != (FILE *)0x0)))) {\n          pFVar2 = DAT_00482134;\n          sVar3 = strlen(&DAT_00482258);\n          fwrite(&DAT_00482258,sVar3,1,pFVar2);\n          fflush(DAT_00482134);\n        }\n        if (DAT_00482a58 == 0) {\n          DAT_00482a58 = FUN_000536f4(\"bmminer_miner\");\n        }\n        FUN_00054cb0(DAT_00482a58,\"logging.c\",9,\"_applawlog\",10,0xe9,0x3c,\"%s\",&DAT_00482258);\n        if (param_1 == 3) {\n          bVar7 = 0;\n        }\n        else {\n          bVar7 = DAT_0058e350 & 1;\n        }\n        if (bVar7 == 0) {\n          FUN_0002e92c(\"\",&DAT_00482258,param_3);\n        }\n      }\n      else {\n        syslog(param_1 | 0x80,\"%s\",&DAT_00482258);\n        if (DAT_00482a58 == 0) {\n          DAT_00482a58 = FUN_000536f4(\"bmminer_miner\");\n        }\n        FUN_00054cb0(DAT_00482a58,\"logging.c\",9,\"_applawlog\",10,0xcd,0x3c,\"%s\",&DAT_00482258);\n      }\n      DAT_00482258 = 0;\n      return;\n    }\n    pcVar6 = pcVar6 + 1;\n  } while (cVar1 != '\\0');\n  return;\n}\n\n",
    "FUN_0002ee28": "\nvoid FUN_0002ee28(int param_1,byte *param_2,int param_3)\n\n{\n  byte *pbVar1;\n  uint uVar2;\n  int *piVar3;\n  int *piVar4;\n  int *piVar6;\n  int iVar7;\n  uint *puVar8;\n  uint *puVar9;\n  uint uVar10;\n  byte *local_164;\n  int local_14c;\n  int local_148 [7];\n  uint local_12c;\n  uint local_128 [65];\n  int *piVar5;\n  \n  if (0 < param_3) {\n    local_164 = param_2;\n    do {\n      puVar9 = &local_12c;\n      pbVar1 = local_164;\n      do {\n        puVar9 = puVar9 + 1;\n        *puVar9 = (uint)pbVar1[1] << 0x10 | (uint)pbVar1[2] << 8 | (uint)pbVar1[3] |\n                  (uint)*pbVar1 << 0x18;\n        pbVar1 = pbVar1 + 4;\n        puVar8 = local_128;\n      } while (local_128 + 0xf != puVar9);\n      do {\n        uVar10 = puVar8[0xe];\n        puVar9 = puVar8 + 1;\n        uVar2 = *puVar9;\n        puVar8[0x10] = ((uVar10 >> 0x13 | uVar10 << 0xd) ^ (uVar10 >> 0x11 | uVar10 << 0xf) ^\n                       uVar10 >> 10) + puVar8[9] + *puVar8 +\n                       ((uVar2 >> 0x12 | uVar2 << 0xe) ^ (uVar2 >> 7 | uVar2 << 0x19) ^ uVar2 >> 3);\n        puVar8 = puVar9;\n      } while (local_128 + 0x30 != puVar9);\n      piVar3 = &local_14c;\n      piVar4 = (int *)(param_1 + 0x88);\n      piVar6 = piVar3;\n      do {\n        piVar5 = piVar4 + 1;\n        piVar6 = piVar6 + 1;\n        *piVar6 = *piVar4;\n        piVar4 = piVar5;\n      } while ((int *)(param_1 + 0xa8) != piVar5);\n      iVar7 = 0;\n      do {\n        iVar7 = iVar7 + 1;\n        piVar4 = (int *)(param_1 + 0x88);\n      } while (iVar7 != 0x40);\n      do {\n        piVar3 = piVar3 + 1;\n        piVar6 = piVar4 + 1;\n        *piVar4 = *piVar3 + *piVar4;\n        piVar4 = piVar6;\n      } while (piVar5 != piVar6);\n      local_164 = local_164 + 0x40;\n    } while (param_2 + param_3 * 0x40 != local_164);\n    return;\n  }\n  return;\n}\n\n",
    "FUN_0002f024": "\nvoid FUN_0002f024(undefined4 *param_1)\n\n{\n  undefined4 *puVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  \n  puVar1 = (undefined4 *)0x7eca0;\n  puVar2 = param_1 + 0x22;\n  do {\n    puVar1 = puVar1 + 1;\n    puVar3 = puVar2 + 1;\n    *puVar2 = *puVar1;\n    puVar2 = puVar3;\n  } while (puVar3 != param_1 + 0x2a);\n  param_1[1] = 0;\n  *param_1 = 0;\n  return;\n}\n\n",
    "FUN_0002f054": "\nvoid FUN_0002f054(int *param_1,void *param_2,uint param_3)\n\n{\n  uint __n;\n  \n  __n = 0x40 - param_1[1];\n  if (param_3 <= __n) {\n    __n = param_3;\n  }\n  memcpy((void *)((int)param_1 + param_1[1] + 8),param_2,__n);\n  if (param_3 + param_1[1] < 0x40) {\n    param_1[1] = param_3 + param_1[1];\n    return;\n  }\n  param_3 = param_3 - __n;\n  FUN_0002ee28(param_1,param_1 + 2,1);\n  FUN_0002ee28(param_1,(int)param_2 + __n,param_3 >> 6);\n  memcpy(param_1 + 2,(void *)((int)param_2 + __n + (param_3 & 0xffffffc0)),param_3 & 0x3f);\n  param_1[1] = param_3 & 0x3f;\n  *param_1 = *param_1 + ((param_3 >> 6) + 1) * 0x40;\n  return;\n}\n\n",
    "FUN_0002f100": "\nvoid FUN_0002f100(int *param_1,undefined *param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  uint uVar3;\n  int iVar4;\n  int *piVar5;\n  int *piVar6;\n  int iVar7;\n  int iVar8;\n  int iVar9;\n  undefined4 uVar10;\n  bool bVar11;\n  \n  uVar3 = param_1[1];\n  piVar5 = param_1 + 2;\n  bVar11 = (uVar3 & 0x3f) < 0x38;\n  if (bVar11) {\n    iVar2 = 0x40;\n  }\n  else {\n    iVar2 = 0x80;\n  }\n  if (bVar11) {\n    iVar4 = 0x3c;\n  }\n  else {\n    iVar4 = 0x7c;\n  }\n  iVar1 = (uVar3 + *param_1) * 8;\n  if (bVar11) {\n    iVar7 = 0x3d;\n    iVar8 = 0x3e;\n    iVar9 = 0x3f;\n    uVar10 = 1;\n  }\n  else {\n    iVar7 = 0x7d;\n    iVar8 = 0x7e;\n    iVar9 = 0x7f;\n    uVar10 = 2;\n  }\n  memset((void *)((int)piVar5 + uVar3),0,iVar2 - uVar3);\n  *(undefined *)((int)param_1 + param_1[1] + 8) = 0x80;\n  *(char *)((int)piVar5 + iVar9) = (char)iVar1;\n  *(char *)((int)piVar5 + iVar8) = (char)((uint)iVar1 >> 8);\n  *(char *)((int)piVar5 + iVar7) = (char)((uint)iVar1 >> 0x10);\n  *(char *)((int)piVar5 + iVar4) = (char)((uint)iVar1 >> 0x18);\n  FUN_0002ee28(param_1,piVar5,uVar10);\n  piVar5 = param_1 + 0x22;\n  do {\n    param_2[3] = (char)*piVar5;\n    piVar6 = piVar5 + 1;\n    param_2[2] = (char)((uint)*piVar5 >> 8);\n    param_2[1] = (char)*(undefined2 *)((int)piVar5 + 2);\n    *param_2 = *(undefined *)((int)piVar5 + 3);\n    piVar5 = piVar6;\n    param_2 = param_2 + 4;\n  } while (param_1 + 0x2a != piVar6);\n  return;\n}\n\n",
    "FUN_0002f1ec": "\nvoid FUN_0002f1ec(undefined4 param_1,undefined4 param_2,undefined4 param_3)\n\n{\n  undefined4 *puVar1;\n  undefined4 *puVar2;\n  undefined4 local_b8;\n  undefined4 local_b4;\n  undefined4 auStack_30 [9];\n  \n  puVar2 = (undefined4 *)0x7eca0;\n  puVar1 = auStack_30;\n  do {\n    puVar2 = puVar2 + 1;\n    *puVar1 = *puVar2;\n    puVar1 = puVar1 + 1;\n  } while (puVar2 != (undefined4 *)0x7ecc0);\n  local_b8 = 0;\n  local_b4 = 0;\n  FUN_0002f054(&local_b8,param_1,param_2);\n  FUN_0002f100(&local_b8,param_3);\n  return;\n}\n\n",
    "FUN_0002f250": "\nundefined4 FUN_0002f250(void)\n\n{\n  return 0;\n}\n\n",
    "FUN_0002f258": "\nvoid FUN_0002f258(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int *piVar1;\n  char acStack_818 [2052];\n  \n  piVar1 = __errno_location();\n  snprintf(acStack_818,0x800,\"Failed to sem_post errno=%d cgsem=0x%p in %s %s():%d\",*piVar1,param_1,\n           param_2,param_3,param_4);\n  FUN_0002e584(3,acStack_818,1);\n  FUN_0002a574(1);\n  return;\n}\n\n",
    "FUN_0002f2c0": "\nvoid FUN_0002f2c0(pthread_mutex_t *param_1,undefined4 param_2,undefined4 param_3)\n\n{\n  int iVar1;\n  int *piVar2;\n  char acStack_810 [2052];\n  \n  iVar1 = pthread_mutex_unlock(param_1);\n  if (iVar1 == 0) {\n    return;\n  }\n  piVar2 = __errno_location();\n  snprintf(acStack_810,0x800,\"WTF MUTEX ERROR ON UNLOCK! errno=%d in %s %s():%d\",*piVar2,\"util.c\",\n           param_2,param_3);\n  FUN_0002e584(3,acStack_810,1);\n  FUN_0002a574(1);\n  return;\n}\n\n",
    "FUN_0002f33c": "\nvoid FUN_0002f33c(undefined4 param_1,undefined4 param_2)\n\n{\n  int *piVar1;\n  char acStack_810 [2052];\n  \n  piVar1 = __errno_location();\n  snprintf(acStack_810,0x800,\"WTF MUTEX ERROR ON LOCK! errno=%d in %s %s():%d\",*piVar1,\"util.c\",\n           param_1,param_2);\n  FUN_0002e584(3,acStack_810,1);\n  FUN_0002a574(1);\n  return;\n}\n\n",
    "FUN_0002f3a0": "\nvoid FUN_0002f3a0(int param_1,undefined param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = pthread_mutex_lock((pthread_mutex_t *)(param_1 + 0xc));\n  if (iVar1 != 0) {\n    FUN_0002f33c(\"tq_freezethaw\",0x454);\n  }\n  *(undefined *)(param_1 + 8) = param_2;\n  pthread_cond_signal((pthread_cond_t *)(param_1 + 0x28));\n  FUN_0002f2c0((pthread_mutex_t *)(param_1 + 0xc),\"tq_freezethaw\",0x457);\n  (*DAT_0007ecc4)();\n  return;\n}\n\n",
    "FUN_0002f408": "\nvoid * FUN_0002f408(uint param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  void *pvVar1;\n  char acStack_818 [2048];\n  \n  if ((param_1 & 3) != 0) {\n    param_1 = (param_1 & 0xfffffffc) + 4;\n  }\n  pvVar1 = malloc(param_1);\n  if (pvVar1 == (void *)0x0) {\n    snprintf(acStack_818,0x800,\"Failed to malloc size %d from %s %s:%d\",param_1,param_2,param_3,\n             param_4);\n    FUN_0002e584(3,acStack_818,1);\n    FUN_0002a574(1);\n    return (void *)0x0;\n  }\n  return pvVar1;\n}\n\n",
    "FUN_0002f490": "\nvoid * FUN_0002f490(size_t param_1,uint param_2,undefined4 param_3,undefined4 param_4,\n                   undefined4 param_5)\n\n{\n  void *pvVar1;\n  char acStack_818 [2048];\n  \n  if ((param_2 & 3) != 0) {\n    param_2 = (param_2 & 0xfffffffc) + 4;\n  }\n  pvVar1 = calloc(param_1,param_2);\n  if (pvVar1 == (void *)0x0) {\n    snprintf(acStack_818,0x800,\"Failed to calloc memb %d size %d from %s %s:%d\",param_1,param_2,\n             param_3,param_4,param_5);\n    FUN_0002e584(3,acStack_818,1);\n    FUN_0002a574(1);\n    return (void *)0x0;\n  }\n  return pvVar1;\n}\n\n",
    "FUN_0002f670": "\nvoid FUN_0002f670(int param_1,int param_2)\n\n{\n  char *pcVar1;\n  uint uVar2;\n  char *pcVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  uint uVar6;\n  \n  uVar2 = param_2 * 2 + 1;\n  uVar6 = uVar2 & 3;\n  if ((int)uVar2 < 1) {\n    uVar6 = -(-uVar2 & 3);\n  }\n  pcVar3 = (char *)FUN_0002f490((4 - uVar6) + uVar2,1,\"util.c\",\"bin2hex\",0x315);\n  if (0 < param_2) {\n    pbVar5 = (byte *)(param_1 + -1);\n    pbVar4 = pbVar5 + param_2;\n    pcVar1 = pcVar3;\n    do {\n      pbVar5 = pbVar5 + 1;\n      *pcVar1 = \"0123456789abcdefbin2hex\"[*pbVar5 >> 4];\n      pcVar1[1] = \"0123456789abcdefbin2hex\"[*pbVar5 & 0xf];\n      pcVar1 = pcVar1 + 2;\n    } while (pbVar5 != pbVar4);\n    pcVar3 = pcVar3 + param_2 * 2;\n  }\n  *pcVar3 = '\\0';\n  return;\n}\n\n",
    "FUN_0002f724": "\nundefined4 FUN_0002f724(byte *param_1,byte *param_2,int param_3)\n\n{\n  byte *pbVar1;\n  byte *pbVar2;\n  uint uVar3;\n  uint uVar4;\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined4 uStack_804;\n  undefined4 local_800;\n  undefined2 local_7fc;\n  \n  if (*param_2 == 0) {\n    if (param_3 == 0) {\n      return 1;\n    }\n  }\n  else if (param_3 != 0) {\n    if (param_2[1] == 0) {\nLAB_0002f83c:\n      if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (2 < DAT_0007eba0)) {\n        local_810._0_1_ = 'h';\n        local_810._1_1_ = 'e';\n        local_810._2_1_ = 'x';\n        local_810._3_1_ = '2';\n        uStack_80c._0_1_ = 'b';\n        uStack_80c._1_1_ = 'i';\n        uStack_80c._2_1_ = 'n';\n        uStack_80c._3_1_ = ' ';\n        uStack_808._0_1_ = 's';\n        uStack_808._1_1_ = 't';\n        uStack_808._2_1_ = 'r';\n        uStack_808._3_1_ = ' ';\n        uStack_804._0_1_ = 't';\n        uStack_804._1_1_ = 'r';\n        uStack_804._2_1_ = 'u';\n        uStack_804._3_1_ = 'n';\n        local_800._0_1_ = 'c';\n        local_800._1_1_ = 'a';\n        local_800._2_1_ = 't';\n        local_800._3_1_ = 'e';\n        local_7fc = 100;\n        FUN_0002e584(3,&local_810,0);\n      }\n    }\n    else {\n      uVar3 = *(uint *)(&DAT_0006551c + (uint)param_2[1] * 4);\n      uVar4 = *(uint *)(&DAT_0006551c + (uint)*param_2 * 4);\n      if (-1 < (int)(uVar3 | uVar4)) {\n        param_2 = param_2 + 4;\n        do {\n          param_3 = param_3 + -1;\n          *param_1 = (byte)uVar3 | (byte)(uVar4 << 4);\n          pbVar1 = param_2 + -2;\n          if (*pbVar1 == 0) {\n            if (param_3 != 0) {\n              return 0;\n            }\n            return 1;\n          }\n          if (param_3 == 0) {\n            return 0;\n          }\n          pbVar2 = param_2 + -1;\n          param_2 = param_2 + 2;\n          if (*pbVar2 == 0) goto LAB_0002f83c;\n          uVar4 = *(uint *)(&DAT_0006551c + (uint)*pbVar1 * 4);\n          uVar3 = *(uint *)(&DAT_0006551c + (uint)*pbVar2 * 4);\n          param_1 = param_1 + 1;\n        } while (-1 < (int)(uVar4 | uVar3));\n      }\n      if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (2 < DAT_0007eba0)) {\n        local_810._0_1_ = 'h';\n        local_810._1_1_ = 'e';\n        local_810._2_1_ = 'x';\n        local_810._3_1_ = '2';\n        uStack_80c._0_1_ = 'b';\n        uStack_80c._1_1_ = 'i';\n        uStack_80c._2_1_ = 'n';\n        uStack_80c._3_1_ = ' ';\n        uStack_808._0_1_ = 's';\n        uStack_808._1_1_ = 'c';\n        uStack_808._2_1_ = 'a';\n        uStack_808._3_1_ = 'n';\n        uStack_804._0_1_ = ' ';\n        uStack_804._1_1_ = 'f';\n        uStack_804._2_1_ = 'a';\n        uStack_804._3_1_ = 'i';\n        local_800._0_1_ = 'l';\n        local_800._1_1_ = 'e';\n        local_800._2_1_ = 'd';\n        local_800._3_1_ = '\\0';\n        FUN_0002e584(3,&local_810,0);\n        return 0;\n      }\n    }\n    return 0;\n  }\n  return 0;\n}\n\n",
    "FUN_0002f8e8": "\nvoid FUN_0002f8e8(undefined *param_1,char *param_2)\n\n{\n  longlong lVar1;\n  size_t sVar2;\n  uint uVar3;\n  uint *puVar4;\n  uint *puVar5;\n  uint uVar6;\n  byte *pbVar7;\n  byte *pbVar8;\n  uint uStack_38;\n  undefined4 local_34;\n  uint local_30;\n  uint local_2c [5];\n  \n  local_30 = 0;\n  local_34 = 0;\n  local_2c[0] = 0;\n  local_2c[1] = 0;\n  local_2c[2] = 0;\n  local_2c[3] = 0;\n  local_2c[4] = 0;\n  sVar2 = strlen(param_2);\n  if (sVar2 == 0) {\n    local_34._0_1_ = 0;\n    uVar3 = 0;\n  }\n  else {\n    pbVar8 = (byte *)(param_2 + -1);\n    pbVar7 = pbVar8 + sVar2;\n    uVar3 = 0;\n    do {\n      pbVar8 = pbVar8 + 1;\n      uVar6 = *(uint *)(&DAT_0006591c + (uint)*pbVar8 * 4);\n      puVar4 = local_2c + 4;\n      while( true ) {\n        lVar1 = (ulonglong)uVar3 * 0x3a + (ulonglong)uVar6;\n        uVar6 = (uint)((ulonglong)lVar1 >> 0x20);\n        puVar5 = puVar4 + -1;\n        *puVar4 = (uint)lVar1;\n        if (&uStack_38 == puVar5) break;\n        uVar3 = *puVar5;\n        puVar4 = puVar5;\n      }\n      uVar3 = local_2c[4];\n    } while (pbVar7 != pbVar8);\n    uVar3 = local_30 << 0x18 | (local_30 >> 8 & 0xff) << 0x10 | (local_30 >> 0x10 & 0xff) << 8 |\n            local_30 >> 0x18;\n  }\n  puVar5 = &local_30;\n  *param_1 = (undefined)local_34;\n  puVar4 = (uint *)(param_1 + 1);\n  while( true ) {\n    *puVar4 = uVar3;\n    if (puVar4 + 1 == (uint *)(param_1 + 0x19)) break;\n    puVar5 = puVar5 + 1;\n    uVar3 = *puVar5;\n    uVar3 = uVar3 << 0x18 | (uVar3 >> 8 & 0xff) << 0x10 | (uVar3 >> 0x10 & 0xff) << 8 |\n            uVar3 >> 0x18;\n    puVar4 = puVar4 + 1;\n  }\n  return;\n}\n\n",
    "FUN_0002fa0c": "\nint FUN_0002fa0c(uint *param_1,uint *param_2)\n\n{\n  void *__ptr;\n  void *__ptr_00;\n  uint *puVar1;\n  uint *puVar2;\n  char *pcVar3;\n  int iVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  uint uVar8;\n  uint local_858;\n  uint local_854;\n  uint local_850;\n  uint local_84c;\n  uint local_848;\n  uint local_844;\n  uint local_840;\n  uint local_83c;\n  uint local_838;\n  uint local_834;\n  uint local_830;\n  uint local_82c;\n  uint local_828;\n  uint local_824;\n  uint local_820;\n  uint uStack_81c;\n  char acStack_818 [2052];\n  \n  puVar2 = param_1 + 8;\n  puVar1 = param_2 + 8;\n  do {\n    puVar2 = puVar2 + -1;\n    puVar1 = puVar1 + -1;\n    if (*puVar1 < *puVar2) {\n      iVar4 = 0;\n      goto LAB_0002fa40;\n    }\n  } while ((*puVar1 <= *puVar2) && (param_1 != puVar2));\n  iVar4 = 1;\nLAB_0002fa40:\n  if (DAT_00482a5d != '\\0') {\n    uVar5 = param_1[6];\n    uVar6 = param_1[7];\n    uVar8 = param_1[5];\n    uVar7 = param_1[4];\n    local_854 = uVar5 << 0x18 | (uVar5 >> 8 & 0xff) << 0x10 | (uVar5 >> 0x10 & 0xff) << 8 |\n                uVar5 >> 0x18;\n    local_858 = uVar6 << 0x18 | (uVar6 >> 8 & 0xff) << 0x10 | (uVar6 >> 0x10 & 0xff) << 8 |\n                uVar6 >> 0x18;\n    uVar5 = param_1[2];\n    local_850 = uVar8 << 0x18 | (uVar8 >> 8 & 0xff) << 0x10 | (uVar8 >> 0x10 & 0xff) << 8 |\n                uVar8 >> 0x18;\n    local_84c = uVar7 << 0x18 | (uVar7 >> 8 & 0xff) << 0x10 | (uVar7 >> 0x10 & 0xff) << 8 |\n                uVar7 >> 0x18;\n    uVar6 = param_1[3];\n    uVar7 = *param_1;\n    uVar8 = param_1[1];\n    local_844 = uVar5 << 0x18 | (uVar5 >> 8 & 0xff) << 0x10 | (uVar5 >> 0x10 & 0xff) << 8 |\n                uVar5 >> 0x18;\n    local_848 = uVar6 << 0x18 | (uVar6 >> 8 & 0xff) << 0x10 | (uVar6 >> 0x10 & 0xff) << 8 |\n                uVar6 >> 0x18;\n    uVar5 = param_2[7];\n    local_840 = uVar8 << 0x18 | (uVar8 >> 8 & 0xff) << 0x10 | (uVar8 >> 0x10 & 0xff) << 8 |\n                uVar8 >> 0x18;\n    local_83c = uVar7 << 0x18 | (uVar7 >> 8 & 0xff) << 0x10 | (uVar7 >> 0x10 & 0xff) << 8 |\n                uVar7 >> 0x18;\n    local_838 = uVar5 << 0x18 | (uVar5 >> 8 & 0xff) << 0x10 | (uVar5 >> 0x10 & 0xff) << 8 |\n                uVar5 >> 0x18;\n    uVar5 = param_2[6];\n    uVar7 = param_2[5];\n    local_834 = uVar5 << 0x18 | (uVar5 >> 8 & 0xff) << 0x10 | (uVar5 >> 0x10 & 0xff) << 8 |\n                uVar5 >> 0x18;\n    uVar5 = param_2[4];\n    uVar6 = param_2[3];\n    local_830 = uVar7 << 0x18 | (uVar7 >> 8 & 0xff) << 0x10 | (uVar7 >> 0x10 & 0xff) << 8 |\n                uVar7 >> 0x18;\n    local_82c = uVar5 << 0x18 | (uVar5 >> 8 & 0xff) << 0x10 | (uVar5 >> 0x10 & 0xff) << 8 |\n                uVar5 >> 0x18;\n    uVar7 = param_2[2];\n    local_828 = uVar6 << 0x18 | (uVar6 >> 8 & 0xff) << 0x10 | (uVar6 >> 0x10 & 0xff) << 8 |\n                uVar6 >> 0x18;\n    uVar5 = *param_2;\n    uVar6 = param_2[1];\n    local_824 = uVar7 << 0x18 | (uVar7 >> 8 & 0xff) << 0x10 | (uVar7 >> 0x10 & 0xff) << 8 |\n                uVar7 >> 0x18;\n    uStack_81c = uVar5 << 0x18 | (uVar5 >> 8 & 0xff) << 0x10 | (uVar5 >> 0x10 & 0xff) << 8 |\n                 uVar5 >> 0x18;\n    local_820 = uVar6 << 0x18 | (uVar6 >> 8 & 0xff) << 0x10 | (uVar6 >> 0x10 & 0xff) << 8 |\n                uVar6 >> 0x18;\n    __ptr = (void *)FUN_0002f670(&local_858,0x20);\n    __ptr_00 = (void *)FUN_0002f670(&local_838,0x20);\n    if ((DAT_00482a5d != '\\0') &&\n       (((DAT_00590404 != '\\0' || (DAT_00482a5c != '\\0')) || (6 < DAT_0007eba0)))) {\n      pcVar3 = \"YES (hash <= target)\";\n      if (iVar4 == 0) {\n        pcVar3 = \"no (false positive; hash > target)\";\n      }\n      snprintf(acStack_818,0x800,\" Proof: %s\\nTarget: %s\\nTrgVal? %s\",__ptr,__ptr_00,pcVar3);\n      FUN_0002e584(7,acStack_818,0);\n    }\n    free(__ptr);\n    free(__ptr_00);\n    return iVar4;\n  }\n  return iVar4;\n}\n\n",
    "FUN_0002fbfc": "\nint FUN_0002fbfc(void)\n\n{\n  int iVar1;\n  \n  iVar1 = FUN_0002f490(1,0x58,\"util.c\",\"tq_new\",0x435);\n  *(int *)iVar1 = iVar1;\n  *(int *)(iVar1 + 4) = iVar1;\n  pthread_mutex_init((pthread_mutex_t *)(iVar1 + 0xc),(pthread_mutexattr_t *)0x0);\n  pthread_cond_init((pthread_cond_t *)(iVar1 + 0x28),(pthread_condattr_t *)0x0);\n  return iVar1;\n}\n\n",
    "FUN_0002fc58": "\nvoid FUN_0002fc58(int **param_1)\n\n{\n  int **ppiVar1;\n  int **ppiVar2;\n  int **ppiVar3;\n  int *piVar4;\n  \n  if (param_1 != (int **)0x0) {\n    ppiVar3 = (int **)**param_1;\n    ppiVar2 = (int **)*param_1;\n    while (ppiVar1 = ppiVar3, param_1 != ppiVar2) {\n      piVar4 = ppiVar2[1];\n      ppiVar1[1] = piVar4;\n      *piVar4 = (int)ppiVar1;\n      free(ppiVar2 + -1);\n      ppiVar3 = (int **)*ppiVar1;\n      ppiVar2 = ppiVar1;\n    }\n    pthread_cond_destroy((pthread_cond_t *)(param_1 + 10));\n    pthread_mutex_destroy((pthread_mutex_t *)(param_1 + 3));\n    free(param_1);\n    return;\n  }\n  return;\n}\n\n",
    "FUN_0002fcd0": "\nbool FUN_0002fcd0(int param_1,undefined4 param_2)\n\n{\n  undefined4 *__ptr;\n  int iVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  bool bVar4;\n  \n  __ptr = (undefined4 *)FUN_0002f490(1,0xc,\"util.c\",\"tq_push\",0x469);\n  puVar3 = __ptr + 1;\n  *__ptr = param_2;\n  __ptr[1] = puVar3;\n  __ptr[2] = puVar3;\n  iVar1 = pthread_mutex_lock((pthread_mutex_t *)(param_1 + 0xc));\n  if (iVar1 != 0) {\n    FUN_0002f33c(\"tq_push\",0x46d);\n  }\n  bVar4 = *(char *)(param_1 + 8) != '\\0';\n  if (bVar4) {\n    free(__ptr);\n  }\n  else {\n    puVar2 = *(undefined4 **)(param_1 + 4);\n    *(undefined4 **)(param_1 + 4) = puVar3;\n    __ptr[1] = param_1;\n    __ptr[2] = puVar2;\n    *puVar2 = puVar3;\n  }\n  pthread_cond_signal((pthread_cond_t *)(param_1 + 0x28));\n  FUN_0002f2c0((pthread_mutex_t *)(param_1 + 0xc),\"tq_push\",0x47a);\n  (*DAT_0007ecc4)();\n  return !bVar4;\n}\n\n",
    "FUN_0002fda4": "\nint * FUN_0002fda4(int **param_1,timespec *param_2)\n\n{\n  int iVar1;\n  int *piVar2;\n  int **ppiVar3;\n  int **ppiVar4;\n  int *piVar5;\n  pthread_mutex_t *__mutex;\n  \n  __mutex = (pthread_mutex_t *)(param_1 + 3);\n  iVar1 = pthread_mutex_lock(__mutex);\n  if (iVar1 != 0) {\n    FUN_0002f33c(\"tq_pop\",0x486);\n  }\n  ppiVar4 = (int **)*param_1;\n  ppiVar3 = ppiVar4;\n  if (param_1 == ppiVar4) {\n    if (param_2 == (timespec *)0x0) {\n      iVar1 = pthread_cond_wait((pthread_cond_t *)(param_1 + 10),__mutex);\n    }\n    else {\n      iVar1 = pthread_cond_timedwait((pthread_cond_t *)(param_1 + 10),__mutex,param_2);\n    }\n    if (iVar1 != 0) {\n      piVar5 = (int *)0x0;\n      goto LAB_0002fdf8;\n    }\n    ppiVar3 = (int **)*param_1;\n    if (ppiVar4 == ppiVar3) {\n      piVar5 = (int *)0x0;\n      goto LAB_0002fdf8;\n    }\n  }\n  ppiVar4 = (int **)ppiVar3[1];\n  piVar2 = *ppiVar3;\n  piVar5 = ppiVar3[-1];\n  piVar2[1] = (int)ppiVar4;\n  *ppiVar4 = piVar2;\n  *ppiVar3 = (int *)0x0;\n  ppiVar3[1] = (int *)0x0;\n  free(ppiVar3 + -1);\nLAB_0002fdf8:\n  FUN_0002f2c0(__mutex,\"tq_pop\",0x4a0);\n  (*DAT_0007ecc4)();\n  return piVar5;\n}\n\n",
    "FUN_0002fe84": "\nvoid FUN_0002fe84(int param_1)\n\n{\n  if (param_1 == 0) {\n    return;\n  }\n  if (*(pthread_t *)(param_1 + 0xc) == 0) {\n    sem_destroy((sem_t *)(param_1 + 0x10));\n    return;\n  }\n  pthread_cancel(*(pthread_t *)(param_1 + 0xc));\n  *(undefined4 *)(param_1 + 0xc) = 0;\n  sem_destroy((sem_t *)(param_1 + 0x10));\n  return;\n}\n\n",
    "FUN_0002ffec": "\nvoid FUN_0002ffec(undefined4 *param_1)\n\n{\n  undefined4 in_stack_ffffffe0;\n  undefined4 in_stack_ffffffe4;\n  undefined4 local_18;\n  \n  lldiv((lldiv_t *)&stack0xffffffe0,1000000,CONCAT44(in_stack_ffffffe4,in_stack_ffffffe0));\n  *param_1 = in_stack_ffffffe0;\n  param_1[1] = local_18;\n  return;\n}\n\n",
    "FUN_00030024": "\nvoid FUN_00030024(undefined4 *param_1)\n\n{\n  undefined4 in_stack_ffffffe0;\n  undefined4 in_stack_ffffffe4;\n  int local_18;\n  \n  lldiv((lldiv_t *)&stack0xffffffe0,1000000,CONCAT44(in_stack_ffffffe4,in_stack_ffffffe0));\n  *param_1 = in_stack_ffffffe0;\n  param_1[1] = local_18 * 1000;\n  return;\n}\n\n",
    "FUN_00030064": "\nvoid FUN_00030064(undefined4 *param_1)\n\n{\n  undefined4 in_stack_ffffffe0;\n  undefined4 in_stack_ffffffe4;\n  int local_18;\n  \n  lldiv((lldiv_t *)&stack0xffffffe0,1000,CONCAT44(in_stack_ffffffe4,in_stack_ffffffe0));\n  *param_1 = in_stack_ffffffe0;\n  param_1[1] = local_18 * 1000000;\n  return;\n}\n\n",
    "FUN_000300a4": "\nvoid FUN_000300a4(undefined4 *param_1)\n\n{\n  undefined4 in_stack_ffffffe0;\n  undefined4 in_stack_ffffffe4;\n  int local_18;\n  \n  lldiv((lldiv_t *)&stack0xffffffe0,1000,CONCAT44(in_stack_ffffffe4,in_stack_ffffffe0));\n  *param_1 = in_stack_ffffffe0;\n  param_1[1] = local_18 * 1000;\n  return;\n}\n\n",
    "FUN_00030258": "\nchar * FUN_00030258(char **param_1,char *param_2)\n\n{\n  char *pcVar1;\n  char *__s;\n  \n  __s = *param_1;\n  if ((__s != (char *)0x0) && (pcVar1 = strpbrk(__s,param_2), pcVar1 != (char *)0x0)) {\n    *pcVar1 = '\\0';\n    *param_1 = pcVar1 + 1;\n    return __s;\n  }\n  *param_1 = (char *)0x0;\n  return __s;\n}\n\n",
    "FUN_000302a0": "\nint FUN_000302a0(__time_t *param_1)\n\n{\n  timespec local_10;\n  \n  clock_gettime(1,&local_10);\n  *param_1 = local_10.tv_sec;\n  param_1[1] = local_10.tv_nsec / 1000;\n  return local_10.tv_nsec * 0x10624dd3;\n}\n\n",
    "FUN_0003035c": "\nvoid FUN_0003035c(int *param_1,int param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  bool bVar3;\n  bool bVar4;\n  timespec local_10;\n  \n  FUN_00030064(&local_10,param_2,param_2,param_2 >> 0x1f);\n  iVar2 = local_10.tv_nsec + param_1[1];\n  iVar1 = local_10.tv_sec + *param_1;\n  local_10.tv_nsec = iVar2;\n  local_10.tv_sec = iVar1;\n  if (iVar2 < 1000000000) {\n    for (; local_10.tv_nsec < 0; local_10.tv_nsec = local_10.tv_nsec + 1000000000) {\n      local_10.tv_sec = local_10.tv_sec + -1;\n    }\n  }\n  else {\n    local_10.tv_sec = iVar1 + 1;\n    local_10.tv_nsec = iVar2 + -1000000000;\n    bVar4 = SBORROW4(local_10.tv_nsec,999999999);\n    bVar3 = local_10.tv_nsec != 999999999;\n    if (999999999 < local_10.tv_nsec) {\n      local_10.tv_sec = iVar1 + 2;\n      local_10.tv_nsec = -2000000000;\n    }\n    if (bVar3 && iVar2 + -1999999999 < 0 == bVar4) {\n      local_10.tv_nsec = iVar2 + local_10.tv_nsec;\n    }\n  }\n  do {\n    iVar1 = clock_nanosleep(1,1,&local_10,(timespec *)0x0);\n  } while (iVar1 == 4);\n  return;\n}\n\n",
    "FUN_0003041c": "\nvoid FUN_0003041c(int *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  bool bVar3;\n  bool bVar4;\n  timespec local_10;\n  \n  FUN_00030024(&local_10);\n  iVar2 = local_10.tv_nsec + param_1[1];\n  iVar1 = local_10.tv_sec + *param_1;\n  local_10.tv_nsec = iVar2;\n  local_10.tv_sec = iVar1;\n  if (iVar2 < 1000000000) {\n    for (; local_10.tv_nsec < 0; local_10.tv_nsec = local_10.tv_nsec + 1000000000) {\n      local_10.tv_sec = local_10.tv_sec + -1;\n    }\n  }\n  else {\n    local_10.tv_sec = iVar1 + 1;\n    local_10.tv_nsec = iVar2 + -1000000000;\n    bVar4 = SBORROW4(local_10.tv_nsec,999999999);\n    bVar3 = local_10.tv_nsec != 999999999;\n    if (999999999 < local_10.tv_nsec) {\n      local_10.tv_sec = iVar1 + 2;\n      local_10.tv_nsec = -2000000000;\n    }\n    if (bVar3 && iVar2 + -1999999999 < 0 == bVar4) {\n      local_10.tv_nsec = iVar2 + local_10.tv_nsec;\n    }\n  }\n  do {\n    iVar1 = clock_nanosleep(1,1,&local_10,(timespec *)0x0);\n  } while (iVar1 == 4);\n  return;\n}\n\n",
    "FUN_000304d4": "\nvoid FUN_000304d4(undefined4 param_1)\n\n{\n  timespec tStack_10;\n  \n  clock_gettime(1,&tStack_10);\n  FUN_0003035c(&tStack_10,param_1);\n  return;\n}\n\n",
    "FUN_00030500": "\nvoid FUN_00030500(void)\n\n{\n  timespec tStack_18;\n  \n  clock_gettime(1,&tStack_18);\n  FUN_0003041c(&tStack_18);\n  return;\n}\n\n",
    "FUN_00030578": "\nundefined * FUN_00030578(int *param_1,int *param_2)\n\n{\n  if (*param_1 - *param_2 < 0xe11) {\n    return (undefined *)((*param_1 - *param_2) * 1000 + (param_1[1] - param_2[1]) / 1000);\n  }\n  return &DAT_0036ee80;\n}\n\n",
    "FUN_00030a54": "\nvoid FUN_00030a54(undefined4 param_1)\n\n{\n  char acStack_18 [24];\n  \n  snprintf(acStack_18,0x10,\"cg@%s\",param_1);\n  prctl(0xf,acStack_18,0,0,0);\n  return;\n}\n\n",
    "FUN_00030a94": "\nvoid FUN_00030a94(sem_t *param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  char acStack_818 [2052];\n  \n  iVar1 = sem_init(param_1,0,0);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    snprintf(acStack_818,0x800,\"Failed to sem_init ret=%d errno=%d in %s %s():%d\",iVar1,*piVar2,\n             param_2,param_3,param_4);\n    FUN_0002e584(3,acStack_818,1);\n    FUN_0002a574(1);\n  }\n  return;\n}\n\n",
    "FUN_00030b10": "\nvoid FUN_00030b10(int param_1,pthread_attr_t *param_2,__start_routine *param_3,void *param_4)\n\n{\n  FUN_00030a94(param_1 + 0x10,\"util.c\",\"thr_info_create\",0x4a7);\n  pthread_create((pthread_t *)(param_1 + 0xc),param_2,param_3,param_4);\n  return;\n}\n\n",
    "FUN_00030b58": "\nvoid FUN_00030b58(sem_t *param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int iVar1;\n  \n  iVar1 = sem_post(param_1);\n  if (iVar1 == 0) {\n    return;\n  }\n  FUN_0002f258(param_1,param_2,param_3,param_4);\n  return;\n}\n\n",
    "FUN_00030b90": "\nundefined4 FUN_00030b90(int param_1)\n\n{\n  pthread_setcanceltype(1,(int *)0x0);\n  (**(code **)(param_1 + 0x10))(*(undefined4 *)(param_1 + 0x14));\n  FUN_00030b58(param_1,\"util.c\",\"completion_thread\",0xe36);\n  return 0;\n}\n\n",
    "FUN_00030bd4": "\nvoid FUN_00030bd4(sem_t *param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  char acStack_818 [2052];\n  \n  do {\n    iVar1 = sem_wait(param_1);\n    if (iVar1 == 0) {\n      return;\n    }\n    piVar2 = __errno_location();\n  } while (*piVar2 == 4);\n  snprintf(acStack_818,0x800,\"Failed to sem_wait errno=%d cgsem=0x%p in %s %s():%d\",*piVar2,param_1,\n           param_2,param_3,param_4);\n  FUN_0002e584(3,acStack_818,1);\n  FUN_0002a574(1);\n  return;\n}\n\n",
    "FUN_00030c54": "\nundefined4\nFUN_00030c54(sem_t *param_1,int param_2,undefined4 param_3,undefined4 param_4,undefined4 param_5)\n\n{\n  int *piVar1;\n  int iVar2;\n  int iVar3;\n  timespec local_830;\n  timespec local_828 [256];\n  \n  clock_gettime(1,local_828);\n  FUN_00030064(&local_830,local_828[0].tv_nsec / 1000,param_2,param_2 >> 0x1f);\n  do {\n    iVar3 = (local_828[0].tv_nsec / 1000) * 1000 + local_830.tv_nsec;\n    iVar2 = local_828[0].tv_sec + local_830.tv_sec;\n    local_830.tv_nsec = iVar3;\n    local_830.tv_sec = iVar2;\n    if (iVar3 < 1000000000) {\n      for (; local_830.tv_nsec < 0; local_830.tv_nsec = local_830.tv_nsec + 1000000000) {\n        local_830.tv_sec = local_830.tv_sec + -1;\n      }\n    }\n    else {\n      local_830.tv_nsec = iVar3 + -1000000000;\n      local_830.tv_sec = iVar2 + 1;\n      if (999999999 < local_830.tv_nsec) {\n        local_830.tv_nsec = iVar3 + -2000000000;\n        local_830.tv_sec = iVar2 + 2;\n      }\n    }\n    iVar2 = sem_timedwait(param_1,&local_830);\n    if (iVar2 == 0) {\n      return 0;\n    }\n    piVar1 = __errno_location();\n    iVar2 = *piVar1;\n    if (iVar2 == 0x6e) {\n      return 0x6e;\n    }\n  } while (iVar2 == 4);\n  snprintf((char *)local_828,0x800,\"Failed to sem_timedwait errno=%d cgsem=0x%p in %s %s():%d\",iVar2\n           ,param_1,param_3,param_4,param_5);\n  FUN_0002e584(3,local_828,1);\n  FUN_0002a574(1);\n  return 0;\n}\n\n",
    "FUN_00030da4": "\nvoid FUN_00030da4(sem_t *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  do {\n    while( true ) {\n      iVar1 = sem_trywait(param_1);\n      if (-1 < iVar1) break;\n      piVar2 = __errno_location();\n      if (*piVar2 != 4) {\n        return;\n      }\n    }\n  } while (iVar1 == 0);\n  return;\n}\n\n",
    "FUN_00030ea8": "\nvoid FUN_00030ea8(void *param_1,void *param_2,size_t param_3,undefined4 param_4,undefined4 param_5,\n                 undefined4 param_6)\n\n{\n  char *__format;\n  char acStack_810 [2048];\n  \n  if ((int)(param_3 - 1) < 0) {\n    if (((DAT_00590404 == '\\0') && (DAT_00482a5c == '\\0')) && (DAT_0007eba0 < 3)) {\n      return;\n    }\n    __format = \"ERR: Asked to memcpy %u bytes from %s %s():%d\";\n  }\n  else if (param_1 == (void *)0x0) {\n    if (((DAT_00590404 == '\\0') && (DAT_00482a5c == '\\0')) && (DAT_0007eba0 < 3)) {\n      return;\n    }\n    __format = \"ERR: Asked to memcpy %u bytes to NULL from %s %s():%d\";\n  }\n  else {\n    if (param_2 != (void *)0x0) {\n      memcpy(param_1,param_2,param_3);\n      return;\n    }\n    if (((DAT_00590404 == '\\0') && (DAT_00482a5c == '\\0')) && (DAT_0007eba0 < 3)) {\n      return;\n    }\n    __format = \"ERR: Asked to memcpy %u bytes from NULL from %s %s():%d\";\n  }\n  snprintf(acStack_810,0x800,__format,param_3,param_4,param_5,param_6);\n  FUN_0002e584(3,acStack_810,0);\n  return;\n}\n\n",
    "FUN_00031018": "\nvoid FUN_00031018(undefined *param_1)\n\n{\n  undefined4 local_24;\n  undefined4 local_20;\n  undefined4 local_1c;\n  undefined4 local_18;\n  undefined4 local_14;\n  undefined4 local_10;\n  undefined local_c;\n  \n  local_20 = 0;\n  local_24 = 0;\n  local_1c = 0;\n  local_18 = 0;\n  local_14 = 0;\n  local_10 = 0;\n  local_c = 0;\n  FUN_0002f8e8(&local_24);\n  *param_1 = 0x76;\n  param_1[1] = 0xa9;\n  param_1[2] = 0x14;\n  FUN_00030ea8(param_1 + 3,(int)&local_24 + 1,0x14,\"util.c\",\"address_to_pubkeyhash\",0x3c6);\n  param_1[0x17] = 0x88;\n  param_1[0x18] = 0xac;\n  return;\n}\n\n",
    "FUN_000310a4": "\nundefined * FUN_000310a4(char *param_1,int *param_2)\n\n{\n  size_t sVar1;\n  undefined *puVar2;\n  \n  sVar1 = strlen(param_1);\n  puVar2 = (undefined *)FUN_0002f408(sVar1 + 9,\"util.c\",\"ser_string\",0x3e4);\n  if (sVar1 < 0xfd) {\n    *puVar2 = (char)sVar1;\n    FUN_00030ea8(puVar2 + 1,param_1,sVar1,\"util.c\",\"ser_string\",1000);\n    *param_2 = sVar1 + 1;\n    return puVar2;\n  }\n  if (0xffff < sVar1) {\n    *puVar2 = 0xfe;\n    *(size_t *)(puVar2 + 1) =\n         sVar1 << 0x18 | (sVar1 >> 8 & 0xff) << 0x10 | (sVar1 >> 0x10 & 0xff) << 8 | sVar1 >> 0x18;\n    FUN_00030ea8(puVar2 + 5,param_1,sVar1,\"util.c\",\"ser_string\",0x3fb);\n    *param_2 = sVar1 + 5;\n    return puVar2;\n  }\n  *puVar2 = 0xfd;\n  *(ushort *)(puVar2 + 1) = (ushort)((sVar1 & 0xff) << 8) | (ushort)(sVar1 >> 8) & 0xff;\n  FUN_00030ea8(puVar2 + 3,param_1,sVar1,\"util.c\",\"ser_string\",0x3f1);\n  *param_2 = sVar1 + 3;\n  return puVar2;\n}\n\n",
    "FUN_00031268": "\nvoid FUN_00031268(int param_1,int param_2)\n\n{\n  undefined uVar1;\n  undefined *puVar2;\n  uint uVar3;\n  undefined *puVar4;\n  \n  if (param_2 == 1) {\n    return;\n  }\n  puVar4 = (undefined *)(param_1 + -1);\n  uVar3 = 0;\n  puVar2 = (undefined *)(param_1 + param_2);\n  do {\n    uVar3 = uVar3 + 1;\n    puVar4 = puVar4 + 1;\n    uVar1 = *puVar4;\n    puVar2 = puVar2 + -1;\n    *puVar4 = *puVar2;\n    *puVar2 = uVar1;\n  } while (uVar3 < ~uVar3 + param_2);\n  return;\n}\n\n",
    "FUN_00031590": "\nuint FUN_00031590(int param_1,int param_2)\n\n{\n  byte *pbVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  \n  if (param_2 != 0) {\n    uVar2 = 0xff;\n    pbVar1 = (byte *)(param_1 + -1);\n    uVar4 = 0xff;\n    do {\n      pbVar1 = pbVar1 + 1;\n      uVar3 = uVar2 ^ *pbVar1;\n      uVar2 = (byte)(&DAT_00065da4)[uVar3] ^ uVar4;\n      uVar4 = (uint)(byte)(&DAT_00065ea4)[uVar3];\n    } while ((byte *)(param_1 + (param_2 - 1U & 0xffff)) != pbVar1);\n    return uVar2 | uVar4 << 8;\n  }\n  return 0xffff;\n}\n\n",
    "FUN_000315ec": "\nuint FUN_000315ec(byte *param_1,int param_2)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  uint uVar10;\n  int iVar11;\n  uint uVar12;\n  \n  if (param_2 == 0) {\n    uVar5 = 1;\n    uVar12 = 0x1c;\n  }\n  else {\n    iVar11 = 0;\n    iVar6 = 0;\n    uVar12 = 0x80;\n    uVar4 = 1;\n    uVar3 = 1;\n    uVar1 = 1;\n    uVar5 = 1;\n    uVar2 = 1;\n    do {\n      uVar10 = uVar2;\n      uVar9 = uVar5;\n      uVar8 = uVar1;\n      uVar7 = uVar3;\n      iVar11 = iVar11 + 1;\n      iVar6 = iVar6 + 1;\n      uVar3 = *param_1 & uVar12;\n      uVar12 = uVar12 >> 1;\n      uVar5 = uVar4;\n      if (uVar3 != 0) {\n        uVar5 = uVar4 ^ 1;\n      }\n      if (iVar11 == 8) {\n        param_1 = param_1 + 1;\n        iVar11 = 0;\n        uVar12 = 0x80;\n      }\n      uVar4 = uVar8;\n      uVar3 = uVar9;\n      uVar1 = uVar10;\n      uVar2 = uVar5 ^ uVar7;\n    } while (param_2 != iVar6);\n    if (uVar8 == 0) {\n      uVar12 = 0;\n    }\n    else {\n      uVar12 = 0x10;\n    }\n    if (uVar10 != 0) {\n      uVar12 = uVar12 | 8;\n    }\n    if (uVar5 != uVar7) {\n      uVar12 = uVar12 | 4;\n    }\n    if (uVar9 == 0) goto LAB_00031694;\n  }\n  uVar12 = uVar12 | 2;\nLAB_00031694:\n  if (uVar5 != 0) {\n    uVar12 = uVar12 | 1;\n  }\n  return uVar12;\n}\n\n",
    "FUN_000316b0": "\nvoid FUN_000316b0(int param_1,uint *param_2,uint param_3)\n\n{\n  uint *puVar1;\n  uint *puVar2;\n  uint uVar4;\n  uint *puVar3;\n  \n  if (param_3 >> 2 == 0) {\n    return;\n  }\n  puVar1 = (uint *)(param_1 + -4);\n  puVar2 = param_2;\n  do {\n    puVar3 = puVar2 + 1;\n    uVar4 = *puVar2;\n    puVar1 = puVar1 + 1;\n    *puVar1 = uVar4 << 0x18 | (uVar4 >> 8 & 0xff) << 0x10 | (uVar4 >> 0x10 & 0xff) << 8 |\n              uVar4 >> 0x18;\n    puVar2 = puVar3;\n  } while (puVar3 != (uint *)((int)param_2 + (param_3 & 0xfffffffc)));\n  return;\n}\n\n",
    "FUN_000316d8": "\nuint FUN_000316d8(byte *param_1,int param_2)\n\n{\n  byte *pbVar1;\n  uint uVar3;\n  byte *pbVar2;\n  \n  if (param_2 != 0) {\n    uVar3 = 0xffffffff;\n    pbVar2 = param_1;\n    do {\n      pbVar1 = pbVar2 + 1;\n      uVar3 = *(uint *)(&DAT_00065fa4 + ((*pbVar2 ^ uVar3) & 0xff) * 4) ^ uVar3 >> 8;\n      pbVar2 = pbVar1;\n    } while (pbVar1 != param_1 + param_2);\n    return ~uVar3;\n  }\n  return 0;\n}\n\n",
    "FUN_00031720": "\nvoid FUN_00031720(uint *param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  char cVar3;\n  uint uVar4;\n  uint *puVar5;\n  uint uVar6;\n  char acStack_828 [2052];\n  \n  if (((DAT_00590404 == '\\0') && (DAT_00482a5c == '\\0')) && (DAT_0007eba0 < 5)) {\n    if (DAT_0007eba0 < 5) goto LAB_000317c8;\n  }\n  else {\n    memcpy(acStack_828,\"==========================capability start==========================\\n\",0x46\n          );\n    FUN_0002e584(5,acStack_828,0);\n    if (((DAT_00590404 == '\\0') && (DAT_00482a5c == '\\0')) && (DAT_0007eba0 < 5)) goto LAB_000317c8;\n  }\n  snprintf(acStack_828,0x800,\"board num = %d\\n\",*param_1);\n  FUN_0002e584(5,acStack_828,0);\nLAB_000317c8:\n  cVar3 = DAT_00590404;\n  if (*param_1 != 0) {\n    uVar6 = 0;\n    puVar5 = param_1;\n    do {\n      if (((cVar3 != '\\0') || (DAT_00482a5c != '\\0')) || (cVar3 = DAT_00482a5c, 4 < DAT_0007eba0)) {\n        snprintf(acStack_828,0x800,\"board id = %d, chain num = %d\\n\",puVar5[1],puVar5[2]);\n        FUN_0002e584(5,acStack_828,0);\n        cVar3 = DAT_00590404;\n      }\n      uVar2 = puVar5[2];\n      if (uVar2 != 0) {\n        uVar4 = 0;\n        do {\n          if (cVar3 == '\\0') {\n            while ((DAT_00482a5c == '\\0' && (DAT_0007eba0 < 5))) {\n              uVar4 = uVar4 + 1;\n              cVar3 = DAT_00482a5c;\n              if (uVar2 <= uVar4) goto LAB_00031854;\n            }\n          }\n          iVar1 = uVar4 + 3;\n          uVar4 = uVar4 + 1;\n          snprintf(acStack_828,0x800,\"\\tchain id = %d\\n\",puVar5[iVar1]);\n          FUN_0002e584(5,acStack_828,0);\n          uVar2 = puVar5[2];\n          cVar3 = DAT_00590404;\n        } while (uVar4 < uVar2);\n      }\nLAB_00031854:\n      uVar6 = uVar6 + 1;\n      puVar5 = puVar5 + 0x12;\n    } while (uVar6 < *param_1);\n  }\n  if (((cVar3 != '\\0') || (DAT_00482a5c != '\\0')) || (4 < DAT_0007eba0)) {\n    memcpy(acStack_828,\"==========================capability end============================\\n\",0x46\n          );\n    FUN_0002e584(5,acStack_828,0);\n  }\n  return;\n}\n\n",
    "FUN_00031980": "\nvoid FUN_00031980(char *param_1,int param_2)\n\n{\n  int iVar1;\n  size_t sVar2;\n  char *__dest;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  int iVar6;\n  int iVar7;\n  int iVar8;\n  undefined4 local_83c;\n  undefined4 local_838;\n  undefined4 local_834;\n  undefined4 local_830;\n  undefined4 local_82c;\n  undefined4 local_828;\n  undefined auStack_824 [2048];\n  \n  iVar7 = 0;\n  do {\n    iVar8 = iVar7 + 1;\n    iVar1 = FUN_0001e29c(iVar7);\n    if (iVar1 != 0) {\n      local_828 = 0x7b;\n      memset(auStack_824,0,0x7fc);\n      local_83c = 0;\n      local_838 = 0;\n      local_834 = 0;\n      local_830 = 0;\n      local_82c = 0;\n      sprintf((char *)&local_83c,\"Chain%d:{\",iVar8);\n      __dest = stpcpy((char *)((int)&local_828 + 1),(char *)&local_83c);\n      iVar6 = 0;\n      iVar5 = DAT_00482a60 % 0x3c + -1;\n      iVar1 = iVar5 - param_2;\n      do {\n        iVar3 = iVar5;\n        if (iVar5 < 0) {\n          iVar3 = iVar5 + 0x3c;\n        }\n        iVar5 = iVar5 + -1;\n        iVar6 = iVar6 + *(int *)(&DAT_00483aa0 + (iVar7 * 0x3c00 + iVar3) * 8);\n      } while (iVar5 != iVar1);\n      sprintf((char *)&local_83c,\"N%d=%d\",0,iVar6);\n      strcpy(__dest,(char *)&local_83c);\n      iVar5 = 1;\n      iVar1 = FUN_0001e0f0();\n      if (1 < iVar1) {\n        do {\n          iVar3 = 0;\n          iVar6 = DAT_00482a60 % 0x3c + -1;\n          iVar1 = iVar6 - param_2;\n          do {\n            iVar4 = iVar6;\n            if (iVar6 < 0) {\n              iVar4 = iVar6 + 0x3c;\n            }\n            iVar6 = iVar6 + -1;\n            iVar3 = iVar3 + *(int *)(&DAT_00483aa0 + (iVar7 * 0x3c00 + iVar5 * 0x3c + iVar4) * 8);\n          } while (iVar1 != iVar6);\n          sprintf((char *)&local_83c,\",N%d=%d\",iVar5,iVar3);\n          iVar5 = iVar5 + 1;\n          strcat((char *)&local_828,(char *)&local_83c);\n          iVar1 = FUN_0001e0f0();\n        } while (iVar5 < iVar1);\n      }\n      sVar2 = strlen((char *)&local_828);\n      *(undefined2 *)((int)&local_828 + sVar2) = 0x2c7d;\n      auStack_824[sVar2 - 2] = 0;\n      strcat(param_1,(char *)&local_828);\n    }\n    iVar7 = iVar8;\n  } while (iVar8 != 4);\n  sVar2 = strlen(param_1);\n  param_1[sVar2 - 1] = '\\0';\n  return;\n}\n\n",
    "FUN_00031bac": "\nuint FUN_00031bac(void)\n\n{\n  int iVar1;\n  int iVar2;\n  uint uVar3;\n  uint local_814;\n  char acStack_810 [2048];\n  \n  uVar3 = 0;\n  iVar2 = 0;\n  do {\n    iVar1 = FUN_0001e29c(iVar2);\n    if (((iVar1 != 0) &&\n        (iVar1 = FUN_00018654(iVar2,(undefined)DAT_00080fb4,&local_814), iVar1 == 0)) &&\n       (uVar3 < local_814)) {\n      uVar3 = local_814;\n    }\n    iVar2 = iVar2 + 1;\n  } while (iVar2 != 4);\n  if (4 < DAT_0007eb9c) {\n    snprintf(acStack_810,0x800,\"max voltage in eeprom = %d\\n\",uVar3);\n    FUN_0002e584(4,acStack_810,0);\n  }\n  if (uVar3 == 0) {\n    uVar3 = 0xffffffff;\n  }\n  return uVar3;\n}\n\n",
    "FUN_00031c64": "\nvoid FUN_00031c64(void)\n\n{\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined4 uStack_7fc;\n  undefined4 local_7f8;\n  undefined4 uStack_7f4;\n  undefined2 local_7f0;\n  \n  local_808._0_1_ = 'T';\n  local_808._1_1_ = 'h';\n  local_808._2_1_ = 'i';\n  local_808._3_1_ = 's';\n  uStack_804._0_1_ = ' ';\n  uStack_804._1_1_ = 'i';\n  uStack_804._2_1_ = 's';\n  uStack_804._3_1_ = ' ';\n  uStack_800._0_1_ = 'f';\n  uStack_800._1_1_ = 'i';\n  uStack_800._2_1_ = 'x';\n  uStack_800._3_1_ = '-';\n  uStack_7fc._0_1_ = 'f';\n  uStack_7fc._1_1_ = 'r';\n  uStack_7fc._2_1_ = 'e';\n  uStack_7fc._3_1_ = 'q';\n  local_7f8._0_1_ = ' ';\n  local_7f8._1_1_ = 'v';\n  local_7f8._2_1_ = 'e';\n  local_7f8._3_1_ = 'r';\n  uStack_7f4._0_1_ = 's';\n  uStack_7f4._1_1_ = 'i';\n  uStack_7f4._2_1_ = 'o';\n  uStack_7f4._3_1_ = 'n';\n  local_7f0 = 10;\n  FUN_0002e584(3,&local_808,0);\n  return;\n}\n\n",
    "FUN_00031cac": "\nvoid FUN_00031cac(void)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined4 uStack_7fc;\n  undefined4 local_7f8;\n  undefined4 uStack_7f4;\n  undefined4 uStack_7f0;\n  undefined local_7ec;\n  \n  if (3 < DAT_0007eb9c) {\n    local_808._0_1_ = '*';\n    local_808._1_1_ = '*';\n    local_808._2_1_ = '*';\n    local_808._3_1_ = '*';\n    uStack_804._0_1_ = 'p';\n    uStack_804._1_1_ = 'o';\n    uStack_804._2_1_ = 'w';\n    uStack_804._3_1_ = 'e';\n    uStack_800._0_1_ = 'r';\n    uStack_800._1_1_ = ' ';\n    uStack_800._2_1_ = 'o';\n    uStack_800._3_1_ = 'f';\n    uStack_7fc._0_1_ = 'f';\n    uStack_7fc._1_1_ = ' ';\n    uStack_7fc._2_1_ = 'h';\n    uStack_7fc._3_1_ = 'a';\n    local_7f8._0_1_ = 's';\n    local_7f8._1_1_ = 'h';\n    local_7f8._2_1_ = 'b';\n    local_7f8._3_1_ = 'o';\n    uStack_7f4._0_1_ = 'a';\n    uStack_7f4._1_1_ = 'r';\n    uStack_7f4._2_1_ = 'd';\n    uStack_7f4._3_1_ = '*';\n    uStack_7f0._0_1_ = '*';\n    uStack_7f0._1_1_ = '*';\n    uStack_7f0._2_1_ = '*';\n    uStack_7f0._3_1_ = '\\n';\n    local_7ec = 0;\n    FUN_0002e584(3,&local_808,0);\n  }\n  uVar2 = 0;\n  do {\n    iVar1 = FUN_0001e29c(uVar2);\n    if (iVar1 != 0) {\n      thunk_FUN_00046900(uVar2 & 0xff);\n    }\n    uVar2 = uVar2 + 1;\n  } while (uVar2 != 4);\n  FUN_000194dc();\n  FUN_000447d8();\n  return;\n}\n\n",
    "FUN_00031d38": "\nundefined4 FUN_00031d38(void)\n\n{\n  return DAT_00482a64;\n}\n\n",
    "FUN_00031d48": "\nundefined4 FUN_00031d48(void)\n\n{\n  return DAT_00482a68;\n}\n\n",
    "FUN_00031d58": "\nvoid FUN_00031d58(uint param_1,int param_2)\n\n{\n  undefined *puVar1;\n  undefined4 local_818;\n  undefined4 uStack_814;\n  undefined local_810;\n  \n  DAT_00482a64 = param_1;\n  if (param_2 == 0) {\n    if (DAT_0007eb9c < 4) goto LAB_00031e30;\n    if (param_1 < 0x12) {\n      puVar1 = (&PTR_s_STATUS_INIT_000666c0)[param_1];\n    }\n    else {\n      puVar1 = (undefined *)0x0;\n    }\n    snprintf((char *)&local_818,0x800,\"%s\\n\",puVar1);\n    FUN_0002e584(3,&local_818,0);\nLAB_00031dd0:\n    if (param_1 == 3) goto LAB_00031de0;\n  }\n  else {\n    if (3 < DAT_0007eb9c) {\n      if (param_1 < 0x12) {\n        puVar1 = (&PTR_s_STATUS_INIT_000666c0)[param_1];\n      }\n      else {\n        puVar1 = (undefined *)0x0;\n      }\n      snprintf((char *)&local_818,0x800,\"%s: %s\\n\",puVar1,param_2);\n      FUN_0002e584(3,&local_818,0);\n      goto LAB_00031dd0;\n    }\nLAB_00031e30:\n    if (param_1 == 3) {\n      return;\n    }\n  }\n  DAT_00482a68 = param_1;\nLAB_00031de0:\n  switch(DAT_00482a64) {\n  case 4:\n  case 5:\n  case 7:\n  case 8:\n  case 9:\n  case 10:\n  case 0xc:\n  case 0xe:\n  case 0xf:\n  case 0x10:\n  case 0x11:\n    if (1 < DAT_0007eb9c) {\n      snprintf((char *)&local_818,0x800,\"%s: %s\\n\",\"stop_mining\",param_2);\n      FUN_0002e584(1,&local_818,0);\n    }\n    FUN_00015150();\n    FUN_00027ff8();\n    FUN_00027f58();\n    FUN_00027eb8();\n    FUN_00031cac();\n    FUN_00042728();\n    FUN_00042784();\n    return;\n  case 6:\n  case 0xb:\n  case 0xd:\n    if (1 < DAT_0007eb9c) {\n      snprintf((char *)&local_818,0x800,\"%s: %s\\n\",\"stop_mining_and_restart\",param_2);\n      FUN_0002e584(1,&local_818,0);\n    }\n    break;\n  default:\n    return;\n  }\n  FUN_00015150();\n  FUN_00027ff8();\n  FUN_00027f58();\n  FUN_00027eb8();\n  FUN_00031cac();\n  FUN_00042728();\n  FUN_00042784();\n  local_818._0_1_ = 'r';\n  local_818._1_1_ = 'e';\n  local_818._2_1_ = 's';\n  local_818._3_1_ = 't';\n  uStack_814._0_1_ = 'a';\n  uStack_814._1_1_ = 'r';\n  uStack_814._2_1_ = 't';\n  uStack_814._3_1_ = '\\n';\n  local_810 = 0;\n  FUN_0002e584(0,&local_818);\n                    /* WARNING: Subroutine does not return */\n  __assert_fail(\"0\",\"driver-btm-api.c\",0x98,\"stop_mining_and_restart\");\n}\n\n",
    "FUN_00032010": "\nundefined4 FUN_00032010(uint param_1)\n\n{\n  int iVar1;\n  char acStack_808 [2040];\n  \n  iVar1 = FUN_000191dc(param_1 & 0xff);\n  if (iVar1 != 0) {\n    FUN_00019214();\n    thunk_FUN_00046900(param_1 & 0xff);\n    return 0;\n  }\n  if (3 < DAT_0007eb9c) {\n    snprintf(acStack_808,0x800,\"Chain %d PIC reset failed.\\n\",param_1);\n    FUN_0002e584(3,acStack_808,0);\n  }\n  FUN_0001e200(param_1,0);\n  FUN_000356c4(4,param_1);\n  FUN_00031d58(8,\"PIC reset failed.\\n\");\n  return 0xffffffff;\n}\n\n",
    "FUN_0003204c": "\nuint FUN_0003204c(void)\n\n{\n  int iVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  \n  iVar3 = 0;\n  uVar4 = 0;\n  do {\n    iVar1 = FUN_0001e29c(iVar3);\n    if (iVar1 != 0) {\n      uVar2 = FUN_00032010(iVar3);\n      uVar4 = uVar4 | uVar2;\n    }\n    iVar3 = iVar3 + 1;\n  } while (iVar3 != 4);\n  return uVar4;\n}\n\n",
    "FUN_0003208c": "\nfloat FUN_0003208c(void)\n\n{\n  uint uVar1;\n  int iVar2;\n  uint *puVar3;\n  int iVar5;\n  uint *puVar4;\n  \n  if (DAT_0007edc8 == 2) {\n    iVar5 = 0;\n    do {\n      iVar2 = FUN_0001e29c(iVar5);\n      if ((iVar2 != 0) && (iVar2 = FUN_0001e0f0(), uVar1 = DAT_00482a6c, 0 < iVar2)) {\n        puVar3 = &DAT_004fbaa0 + iVar5 * 0x100;\n        do {\n          puVar4 = puVar3 + 1;\n          *puVar3 = uVar1;\n          puVar3 = puVar4;\n        } while (puVar4 != &DAT_004fbaa0 + iVar2 + iVar5 * 0x100);\n      }\n      iVar5 = iVar5 + 1;\n    } while (iVar5 != 4);\n    if (DAT_0007eb74 != 0.0 && DAT_0007eb74 < 0.0 == NAN(DAT_0007eb74)) {\n      FUN_0001a870(DAT_00482a70,DAT_0007edcc,DAT_00482a6c);\n      if (DAT_0007eb74 == 0.0 || DAT_0007eb74 < 0.0 != NAN(DAT_0007eb74)) goto LAB_00032138;\n      goto LAB_000320c4;\n    }\n  }\n  if (DAT_0007eb74 == 0.0 || DAT_0007eb74 < 0.0 != NAN(DAT_0007eb74)) {\nLAB_00032138:\n    DAT_00482a6c = FUN_0001ad08(DAT_0007edd0,&DAT_004fbaa0,DAT_00482a70,1);\n    return (float)(ulonglong)DAT_00482a6c;\n  }\nLAB_000320c4:\n  return (float)(ulonglong)DAT_00482a6c;\n}\n\n",
    "FUN_000321b8": "\nvoid FUN_000321b8(int param_1,int param_2,int param_3)\n\n{\n  code *UNRECOVERED_JUMPTABLE;\n  int iVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  undefined4 local_820;\n  undefined4 uStack_81c;\n  undefined4 uStack_818;\n  undefined4 uStack_814;\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined4 uStack_804;\n  undefined4 local_800;\n  undefined4 uStack_7fc;\n  undefined4 uStack_7f8;\n  undefined4 uStack_7f4;\n  undefined2 uStack_7f0;\n  undefined local_7ee;\n  \n  if (((param_1 == 0) || (iVar1 = FUN_0001e160(), iVar1 == 0)) ||\n     (iVar1 = FUN_0001e120(), iVar1 == 0)) {\n    if (3 < DAT_0007eb9c) {\n      local_820._0_1_ = 'N';\n      local_820._1_1_ = 'o';\n      local_820._2_1_ = 't';\n      local_820._3_1_ = 'e';\n      uStack_81c._0_1_ = ':';\n      uStack_81c._1_1_ = ' ';\n      uStack_81c._2_1_ = 'a';\n      uStack_81c._3_1_ = 'd';\n      uStack_818._0_1_ = 'd';\n      uStack_818._1_1_ = 'r';\n      uStack_818._2_1_ = 'I';\n      uStack_818._3_1_ = 'n';\n      uStack_814._0_1_ = 't';\n      uStack_814._1_1_ = 'e';\n      uStack_814._2_1_ = 'r';\n      uStack_814._3_1_ = 'v';\n      local_810._0_1_ = 'a';\n      local_810._1_1_ = 'l';\n      local_810._2_1_ = ' ';\n      local_810._3_1_ = 'o';\n      uStack_80c._0_1_ = 'r';\n      uStack_80c._1_1_ = ' ';\n      uStack_80c._2_1_ = 'c';\n      uStack_80c._3_1_ = 'o';\n      uStack_808._0_1_ = 'r';\n      uStack_808._1_1_ = 'e';\n      uStack_808._2_1_ = 'n';\n      uStack_808._3_1_ = 'u';\n      uStack_804._0_1_ = 'm';\n      uStack_804._1_1_ = ' ';\n      uStack_804._2_1_ = 'i';\n      uStack_804._3_1_ = 's';\n      local_800._0_1_ = ' ';\n      local_800._1_1_ = 'n';\n      local_800._2_1_ = 'o';\n      local_800._3_1_ = 't';\n      uStack_7fc._0_1_ = ' ';\n      uStack_7fc._1_1_ = 'i';\n      uStack_7fc._2_1_ = 'n';\n      uStack_7fc._3_1_ = 'i';\n      uStack_7f8._0_1_ = 't';\n      uStack_7f8._1_1_ = 'i';\n      uStack_7f8._2_1_ = 'a';\n      uStack_7f8._3_1_ = 'l';\n      uStack_7f4._0_1_ = 'i';\n      uStack_7f4._1_1_ = 'z';\n      uStack_7f4._2_1_ = 'e';\n      uStack_7f4._3_1_ = 'd';\n      uStack_7f0 = 0xa2e;\n      local_7ee = 0;\n      FUN_0002e584(3,&local_820,0);\n    }\n    DAT_0099eddc = 0x1ffff;\n    return;\n  }\n  iVar1 = FUN_0001e160();\n  uVar2 = FUN_0001e130();\n  if (uVar2 != 0) {\n    iVar1 = iVar1 << 0x18;\n    if (uVar2 != 1) {\n      uVar4 = 1;\n      do {\n        uVar4 = uVar4 * 2;\n      } while (uVar4 < uVar2);\n      iVar1 = FUN_0005faf8();\n    }\n    iVar1 = param_3 * iVar1 * param_2;\n    iVar3 = FUN_0005faf8(iVar1 / 100,param_1,iVar1 * 0x51eb851f);\n    DAT_0099eddc = iVar3;\n    iVar1 = FUN_0001e160();\n    uVar2 = FUN_0001e130();\n    if (uVar2 != 0) {\n      iVar1 = iVar1 << 0x18;\n      if (uVar2 != 1) {\n        uVar4 = 1;\n        do {\n          uVar4 = uVar4 * 2;\n        } while (uVar4 < uVar2);\n        iVar1 = FUN_0005faf8(iVar1);\n      }\n      if ((((byte)DAT_0099edbc & 4) != 0) && (DAT_0099edc8._2_2_ != 0)) {\n        DAT_0099eddc = (uint)DAT_0099edc8._2_1_ * 1000 + (uint)DAT_0099edc8._3_1_;\n      }\n      FUN_00044c84(iVar3);\n      if (DAT_0007eb9c < 4) {\n        return;\n      }\n      iVar1 = FUN_0005faf8(iVar1 * 0x19,param_1);\n      snprintf((char *)&local_820,0x800,\"freq = %d, percent = %d, hcn = %d, timeout = %d\\n\",param_1,\n               param_3,param_2 * iVar1,iVar3);\n      FUN_0002e584(3,&local_820,0);\n      return;\n    }\n  }\n                    /* WARNING: Treating indirect jump as call */\n  UNRECOVERED_JUMPTABLE = (code *)software_udf(0,0x323a0);\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
    "FUN_000323dc": "\nvoid FUN_000323dc(void)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  int iVar3;\n  char acStack_818 [2052];\n  \n  iVar3 = 0;\n  do {\n    iVar1 = FUN_0001e29c(iVar3);\n    if ((iVar1 != 0) && (3 < DAT_0007eb9c)) {\n      uVar2 = FUN_00018094(iVar3);\n      snprintf(acStack_818,0x800,\"Chain [%d] PCB Version: 0x%04x\\n\",iVar3,uVar2);\n      FUN_0002e584(3,acStack_818,0);\n      if (3 < DAT_0007eb9c) {\n        uVar2 = FUN_00018128(iVar3);\n        snprintf(acStack_818,0x800,\"Chain [%d] BOM Version: 0x%04x\\n\",iVar3,uVar2);\n        FUN_0002e584(3,acStack_818,0);\n      }\n    }\n    iVar3 = iVar3 + 1;\n  } while (iVar3 != 4);\n  return;\n}\n\n",
    "FUN_000324a8": "\nvoid FUN_000324a8(void)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint *puVar3;\n  uint *puVar4;\n  uint uVar5;\n  uint local_13c [74];\n  \n  FUN_0003fe98(local_13c);\n  FUN_00031720(local_13c);\n  if (local_13c[0] != 0) {\n    puVar4 = local_13c;\n    uVar5 = 0;\n    uVar1 = local_13c[0];\n    do {\n      if (puVar4[2] != 0) {\n        puVar3 = puVar4 + 2;\n        uVar2 = 0;\n        do {\n          puVar3 = puVar3 + 1;\n          FUN_0001e200(*puVar3,1);\n          uVar2 = uVar2 + 1;\n          uVar1 = local_13c[0];\n        } while (uVar2 < puVar4[2]);\n      }\n      uVar5 = uVar5 + 1;\n      puVar4 = puVar4 + 0x12;\n    } while (uVar5 < uVar1);\n  }\n  return;\n}\n\n",
    "FUN_00032520": "\nvoid FUN_00032520(void)\n\n{\n  FUN_00042728();\n  FUN_00042778();\n  return;\n}\n\n",
    "FUN_00032530": "\nvoid FUN_00032530(void)\n\n{\n  int iVar1;\n  \n  iVar1 = FUN_00036548();\n  if (DAT_0007edc8 == 0) {\n    if (iVar1 == 0) {\nswitchD_000325a0_caseD_11:\n      FUN_00042728();\n      FUN_00042784();\n      return;\n    }\n    if (iVar1 == 1) {\n      DAT_0007edd4 = DAT_0007edd4 ^ 1;\n      if (DAT_0007edd4 == 0) {\n        FUN_00042734();\n      }\n      else {\n        FUN_00042728();\n      }\n    }\n    else {\nswitchD_000325a0_caseD_2:\n      FUN_00042734();\n    }\n    DAT_0007edd4 = DAT_0007edd4 ^ 1;\n    if (DAT_0007edd4 != 0) {\n      FUN_00042778();\n      return;\n    }\nLAB_00032588:\n    FUN_00042784();\n    return;\n  }\n  switch(DAT_00482a64) {\n  case 0:\n  case 1:\n    return;\n  case 2:\n    goto switchD_000325a0_caseD_2;\n  default:\n    DAT_0007edd4 = DAT_0007edd4 ^ 1;\n    if (DAT_0007edd4 == 0) {\n      FUN_00042734();\n    }\n    else {\n      FUN_00042728();\n    }\n    goto LAB_00032588;\n  case 0x11:\n    goto switchD_000325a0_caseD_11;\n  }\n}\n\n",
    "FUN_0003264c": "\nvoid FUN_0003264c(void)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  uint uVar4;\n  int extraout_r1;\n  int iVar5;\n  uint uVar6;\n  undefined4 *puVar7;\n  undefined4 *puVar8;\n  int iVar9;\n  int iVar10;\n  char acStack_828 [2052];\n  \n  iVar5 = 0;\n  do {\n    iVar1 = FUN_0001e29c(iVar5);\n    if (iVar1 != 0) {\n      FUN_0001e0f0();\n      uVar6 = 0;\n      puVar7 = &DAT_0099cd98 + iVar5 * 0x200;\n      while( true ) {\n        uVar4 = FUN_0001e0f0();\n        uVar2 = DAT_0007eb9c;\n        if (uVar4 <= uVar6) break;\n        uVar3 = puVar7[1];\n        iVar1 = (iVar5 * 0x3c00 + uVar6 * 0x3c + DAT_00482a60 % 0x3c) * 8;\n        *(undefined4 *)(&DAT_00483aa0 + iVar1) = *puVar7;\n        *(undefined4 *)(&DAT_00483aa4 + iVar1) = uVar3;\n        if (4 < uVar2) {\n          snprintf(acStack_828,0x800,\"chain %u asic %u asic_nonce_num %llu\\n\",iVar5,uVar6);\n          FUN_0002e584(4,acStack_828,0);\n        }\n        uVar6 = uVar6 + 1;\n        puVar7 = puVar7 + 2;\n      }\n    }\n    iVar5 = iVar5 + 1;\n  } while (iVar5 != 4);\n  DAT_00482a60 = DAT_00482a60 + 1;\n  memset(&DAT_005924f4,0,0x2000);\n  memset(&DAT_00590440,0,0x2000);\n  memset(&DAT_0058e3f8,0,0x2000);\n  puVar7 = &DAT_00482aa0;\n  FUN_00031980(&DAT_005924f4,10);\n  FUN_00031980(&DAT_00590440,0x1e);\n  iVar5 = 0;\n  FUN_00031980(&DAT_0058e3f8,0x3c);\n  do {\n    iVar1 = FUN_0001e29c(iVar5);\n    if (iVar1 != 0) {\n      iVar1 = 0;\n      uVar6 = 0;\n      puVar8 = &DAT_0099cd98 + iVar5 * 0x200;\n      while( true ) {\n        uVar2 = FUN_0001e0f0();\n        iVar9 = iVar1 + uVar6;\n        if (uVar2 <= uVar6) break;\n        uVar3 = FUN_0001e100();\n        FUN_0005fadc(uVar6,uVar3);\n        iVar10 = iVar9;\n        if (extraout_r1 == 0) {\n          iVar1 = iVar1 + 1;\n          iVar10 = iVar1 + uVar6;\n          FUN_0001e820(iVar5,iVar9,0x20);\n        }\n        iVar9 = DAT_00482a60 % 0x3c + -1;\n        if (iVar9 < 0) {\n          iVar9 = DAT_00482a60 % 0x3c + 0x3b;\n        }\n        if (*(int *)(&DAT_00483aa0 + (iVar5 * 0x3c00 + uVar6 * 0x3c + iVar9) * 8) < 2) {\n          FUN_0001e820(iVar5,iVar10,0x78);\n          puVar7[uVar6] = puVar7[uVar6] + 1;\n        }\n        else {\n          FUN_0001e820(iVar5,iVar10,0x6f);\n        }\n        uVar6 = uVar6 + 1;\n        *puVar8 = 0;\n        puVar8[1] = 0;\n        puVar8 = puVar8 + 2;\n      }\n      FUN_0001e820(iVar5,iVar9,0);\n    }\n    iVar5 = iVar5 + 1;\n    puVar7 = puVar7 + 0x100;\n  } while (iVar5 != 4);\n  return;\n}\n\n",
    "FUN_00032924": "\nvoid FUN_00032924(undefined4 param_1)\n\n{\n  uint uVar1;\n  int iVar2;\n  char acStack_810 [2052];\n  \n  FUN_0001ed08();\n  FUN_000304d4(10);\n  uVar1 = FUN_0001e0f0();\n  do {\n    uVar1 = uVar1 - 1 & 0xff;\n    if (uVar1 == 0) {\n      return;\n    }\n    FUN_0001e9b4(param_1,uVar1);\n    FUN_0002be40(param_1,0);\n    iVar2 = FUN_0001e67c(param_1);\n  } while (iVar2 < 1);\n  if (DAT_0007eb9c < 4) {\n    return;\n  }\n  snprintf(acStack_810,0x800,\"bad asic is %d\\n\",uVar1);\n  FUN_0002e584(3,acStack_810,0);\n  return;\n}\n\n",
    "FUN_000329dc": "\nundefined4 FUN_000329dc(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  uint uVar4;\n  uint uVar5;\n  undefined4 local_82c;\n  char acStack_828 [2052];\n  \n  uVar4 = 0;\n  local_82c = 0;\n  do {\n    iVar1 = FUN_0001e29c(uVar4);\n    if (iVar1 != 0) {\n      uVar5 = uVar4 & 0xff;\n      iVar1 = 0;\n      do {\n        FUN_0004594c(uVar4);\n        sleep(3);\n        thunk_FUN_0004672c(uVar5);\n        FUN_000304d4(1000);\n        if (DAT_00080fb0 != '\\0') {\n          if (3 < DAT_0007eb9c) {\n            snprintf(acStack_828,0x800,\"pic enabled for chain %d, press anykey to continue...\",uVar4\n                    );\n            FUN_0002e584(3,acStack_828,0);\n          }\n          _IO_getc(stdin);\n        }\n        FUN_00045990(uVar4);\n        FUN_000304d4(200);\n        FUN_0004594c(uVar4);\n        sleep(1);\n        FUN_00045990(uVar4);\n        FUN_000304d4(200);\n        FUN_0002be40(uVar4,0);\n        iVar2 = FUN_0001e67c(uVar4);\n        if (3 < DAT_0007eb9c) {\n          snprintf(acStack_828,0x800,\"Chain[%d]: find %d asic, times %d\\n\",uVar4,iVar2,iVar1);\n          FUN_0002e584(3,acStack_828,0);\n        }\n        iVar3 = FUN_0001e0f0();\n        iVar1 = iVar1 + 1;\n      } while ((iVar2 != iVar3) && (thunk_FUN_00046900(uVar5), iVar1 != 3));\n      iVar1 = FUN_0001e67c(uVar4);\n      iVar2 = FUN_0001e0f0();\n      if (iVar2 != iVar1) {\n        if (3 < DAT_0007eb9c) {\n          snprintf(acStack_828,0x800,\"Chain %d only find %d asic, will power off hash board %d\\n\",\n                   uVar4,iVar1,uVar4);\n          FUN_0002e584(3,acStack_828,0);\n        }\n        local_82c = 0xffffffff;\n        thunk_FUN_00046900(uVar5);\n        FUN_0001e200(uVar4,0);\n      }\n    }\n    uVar4 = uVar4 + 1;\n  } while (uVar4 != 4);\n  return local_82c;\n}\n\n",
    "FUN_00032bd0": "\nvoid FUN_00032bd0(void)\n\n{\n  uint uVar1;\n  char acStack_810 [2052];\n  \n  FUN_00044b54(&DAT_0099ede0,0x20);\n  if (3 < DAT_0007eb9c) {\n    snprintf(acStack_810,0x800,\"miner ID : %s\\n\",&DAT_0099ede0);\n    FUN_0002e584(3,acStack_810,0);\n  }\n  uVar1 = FUN_00045c98();\n  if (3 < DAT_0007eb9c) {\n    snprintf(acStack_810,0x800,\"FPGA Version = 0x%04X\\n\",uVar1 & 0xffff);\n    FUN_0002e584(3,acStack_810,0);\n  }\n  sprintf(&DAT_00080fdc,\"%d.%d.%d.%d\",uVar1 & 0xff,(uVar1 << 8) >> 0x18,1,3);\n  return;\n}\n\n",
    "FUN_00032ca8": "\nvoid FUN_00032ca8(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  char *pcVar3;\n  sysinfo local_948;\n  char acStack_908 [256];\n  char acStack_808 [2048];\n  \n  FUN_000302a0(&DAT_00482a74);\n  iVar1 = sysinfo(&local_948);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    iVar1 = *piVar2;\n    pcVar3 = strerror(iVar1);\n    sprintf(acStack_908,\"Failed to get sysinfo, errno:%u, reason:%s\\n\",iVar1,pcVar3);\n    DAT_0058e344 = time((time_t *)0x0);\n    DAT_005903f8 = DAT_0058e344 + 1;\n    return;\n  }\n  DAT_005903f8 = local_948.uptime + 1;\n  DAT_0058e344 = local_948.uptime;\n  sprintf(acStack_908,\"set_start_time_point total_tv_start_sys=%ld total_tv_end_sys=%ld\\n\",\n          local_948.uptime,DAT_005903f8);\n  if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (4 < DAT_0007eba0)) {\n    snprintf(acStack_808,0x800,\"%s\",acStack_908);\n    FUN_0002e584(5,acStack_808,0);\n  }\n  return;\n}\n\n",
    "FUN_00032cc0": "\nsize_t FUN_00032cc0(void **param_1,int param_2,undefined4 param_3)\n\n{\n  undefined2 uVar1;\n  void *__s;\n  undefined4 uVar2;\n  undefined4 *puVar3;\n  undefined4 uVar4;\n  undefined4 *puVar5;\n  size_t __n;\n  size_t __size;\n  void *pvVar6;\n  int iVar7;\n  int iVar8;\n  undefined4 uVar9;\n  int *piVar10;\n  int *piVar11;\n  bool bVar13;\n  undefined4 local_890;\n  undefined4 uStack_88c;\n  undefined2 local_888 [2];\n  int local_884;\n  undefined local_880;\n  byte local_87f;\n  undefined local_87e;\n  undefined4 local_87c;\n  undefined auStack_878 [4];\n  undefined auStack_874 [32];\n  undefined auStack_854 [4];\n  undefined auStack_850 [4];\n  undefined2 local_84c;\n  undefined2 local_84a;\n  undefined2 local_848;\n  undefined2 local_846;\n  undefined4 local_840;\n  undefined4 uStack_83c;\n  undefined local_838;\n  undefined4 local_834;\n  undefined4 uStack_830;\n  undefined4 local_828;\n  undefined4 uStack_824;\n  undefined4 uStack_820;\n  undefined4 uStack_81c;\n  undefined4 local_818;\n  undefined4 uStack_814;\n  undefined local_810;\n  int *piVar12;\n  \n  local_87f = local_87f & 0xfe | *(byte *)(param_2 + 0x2a8) & 1 | 2;\n  local_880 = (undefined)DAT_00482a80;\n  local_888[0] = 0x52;\n  local_890 = 0;\n  uStack_88c = 0;\n  local_87e = 0xf;\n  if (DAT_00482a88 != '\\0') {\n    local_838 = *(undefined *)(param_2 + 0x284);\n    local_834 = *(undefined4 *)(param_2 + 0x288);\n    uStack_830 = *(undefined4 *)(param_2 + 0x28c);\n  }\n  local_87c = param_3;\n  FUN_0002f724(auStack_878,param_2 + 0x6f4);\n  FUN_0002f724(auStack_874,param_2 + 0x6b0,0x20);\n  FUN_0002f724(auStack_850,param_2 + 0x700,4);\n  FUN_0002f724(auStack_854,param_2 + 0x70c,4);\n  pvVar6 = *(void **)(param_2 + 0x620);\n  __n = *(size_t *)(param_2 + 0x624);\n  puVar3 = (undefined4 *)((int)pvVar6 + *(int *)(param_2 + 0x628));\n  local_84a = (undefined2)*(int *)(param_2 + 0x628);\n  local_84c = (undefined2)__n;\n  local_848 = (undefined2)*(size_t *)(param_2 + 0x278);\n  local_840 = *puVar3;\n  uStack_83c = puVar3[1];\n  local_890 = *(undefined4 *)(param_2 + 0x270);\n  uStack_88c = *(undefined4 *)(param_2 + 0x274);\n  memcpy(&local_840,&local_890,*(size_t *)(param_2 + 0x278));\n  iVar7 = *(int *)(param_2 + 0x6ac);\n  local_846 = (undefined2)iVar7;\n  iVar8 = __n + iVar7 * 0x20;\n  __size = iVar8 + 0x62;\n  __s = malloc(__size);\n  if (__s == (void *)0x0) {\n    local_828._0_1_ = 'F';\n    local_828._1_1_ = 'a';\n    local_828._2_1_ = 'i';\n    local_828._3_1_ = 'l';\n    uStack_824._0_1_ = 'e';\n    uStack_824._1_1_ = 'd';\n    uStack_824._2_1_ = ' ';\n    uStack_824._3_1_ = 't';\n    uStack_820._0_1_ = 'o';\n    uStack_820._1_1_ = ' ';\n    uStack_820._2_1_ = 'm';\n    uStack_820._3_1_ = 'a';\n    uStack_81c._0_1_ = 'l';\n    uStack_81c._1_1_ = 'l';\n    uStack_81c._2_1_ = 'o';\n    uStack_81c._3_1_ = 'c';\n    local_818._0_1_ = ' ';\n    local_818._1_1_ = 't';\n    local_818._2_1_ = 'm';\n    local_818._3_1_ = 'p';\n    uStack_814._0_1_ = '_';\n    uStack_814._1_1_ = 'b';\n    uStack_814._2_1_ = 'u';\n    uStack_814._3_1_ = 'f';\n    local_810 = 0;\n    FUN_0002e584(3,&local_828,1);\n    FUN_0002a574(1);\n    iVar7 = *(int *)(param_2 + 0x6ac);\n    pvVar6 = *(void **)(param_2 + 0x620);\n    __n = *(size_t *)(param_2 + 0x624);\n  }\n  local_884 = iVar8 + 0x5a;\n  memset(__s,0,__size);\n  memcpy(__s,local_888,0x60);\n  memcpy((void *)((int)__s + 0x60),pvVar6,__n);\n  if (0 < iVar7) {\n    piVar10 = *(int **)(param_2 + 0x2a4);\n    puVar3 = (undefined4 *)((int)__s + __n + 0x60);\n    piVar11 = piVar10;\n    do {\n      piVar12 = piVar11 + 1;\n      puVar5 = (undefined4 *)*piVar11;\n      uVar9 = puVar5[1];\n      uVar2 = puVar5[2];\n      uVar4 = puVar5[3];\n      *puVar3 = *puVar5;\n      puVar3[1] = uVar9;\n      puVar3[2] = uVar2;\n      puVar3[3] = uVar4;\n      uVar9 = puVar5[5];\n      uVar2 = puVar5[6];\n      uVar4 = puVar5[7];\n      puVar3[4] = puVar5[4];\n      puVar3[5] = uVar9;\n      puVar3[6] = uVar2;\n      puVar3[7] = uVar4;\n      puVar3 = puVar3 + 8;\n      piVar11 = piVar12;\n    } while (piVar12 != piVar10 + iVar7);\n  }\n  uVar1 = FUN_00031590(__s,iVar8 + 0x60U & 0xffff);\n  *(undefined2 *)((int)__s + iVar8 + 0x60) = uVar1;\n  bVar13 = 0xfffffffe < DAT_00482a80;\n  DAT_00482a80 = DAT_00482a80 + 1;\n  DAT_00482a84 = DAT_00482a84 + (uint)bVar13;\n  pvVar6 = malloc(__size);\n  *param_1 = pvVar6;\n  memcpy(pvVar6,__s,__size);\n  free(__s);\n  return __size;\n}\n\n",
    "FUN_00032f40": "\nundefined4 FUN_00032f40(byte *param_1)\n\n{\n  byte bVar1;\n  void *__dest;\n  uint uVar2;\n  int iVar3;\n  size_t __nmemb;\n  undefined4 local_878;\n  int local_874;\n  byte *local_870;\n  uint local_86c;\n  byte *local_868;\n  uint local_864;\n  undefined4 local_860;\n  undefined4 local_85c;\n  undefined4 local_858;\n  undefined4 local_854;\n  int local_850;\n  int local_84c;\n  undefined4 local_848;\n  uint local_844;\n  uint local_840;\n  undefined4 local_838;\n  undefined4 uStack_834;\n  undefined4 local_830;\n  uint local_82c;\n  undefined4 local_828;\n  undefined4 uStack_824;\n  undefined4 uStack_820;\n  undefined4 uStack_81c;\n  undefined4 uStack_818;\n  undefined4 uStack_814;\n  \n  if (*param_1 != 0x52) {\n    if ((DAT_00482a5d != '\\0') &&\n       (((DAT_00590404 != '\\0' || (DAT_00482a5c != '\\0')) || (6 < DAT_0007eba0)))) {\n      snprintf((char *)&local_828,0x800,\"%s: SEND_JOB_TYPE is wrong : 0x%x\\n\",\"dhash_chip_send_job\",\n               (uint)*param_1);\n      FUN_0002e584(7,&local_828,0);\n      return 0xffffffff;\n    }\n    return 0xffffffff;\n  }\n  iVar3 = *(int *)(param_1 + 4);\n  if ((DAT_00482a5d != '\\0') &&\n     (((DAT_00590404 != '\\0' || (DAT_00482a5c != '\\0')) || (6 < DAT_0007eba0)))) {\n    snprintf((char *)&local_828,0x800,\"%s: len = 0x%x\\n\",\"dhash_chip_send_job\",iVar3);\n    FUN_0002e584(7,&local_828,0);\n  }\n  __nmemb = iVar3 + 8;\n  __dest = calloc(__nmemb,1);\n  if (__dest == (void *)0x0) {\n    if ((DAT_00482a5d != '\\0') &&\n       (((DAT_00590404 != '\\0' || (DAT_00482a5c != '\\0')) || (6 < DAT_0007eba0)))) {\n      snprintf((char *)&local_828,0x800,\"%s: malloc buffer failed.\\n\",\"dhash_chip_send_job\");\n      FUN_0002e584(7,&local_828,0);\n      return 0xfffffffe;\n    }\n    return 0xfffffffe;\n  }\n  memcpy(__dest,param_1,__nmemb);\n  if (DAT_00482a88 == '\\0') {\n    if (3 < DAT_0007eb9c) {\n      local_828._0_1_ = 'o';\n      local_828._1_1_ = 'n';\n      local_828._2_1_ = 'l';\n      local_828._3_1_ = 'y';\n      uStack_824._0_1_ = ' ';\n      uStack_824._1_1_ = 's';\n      uStack_824._2_1_ = 'u';\n      uStack_824._3_1_ = 'p';\n      uStack_820._0_1_ = 'p';\n      uStack_820._1_1_ = 'o';\n      uStack_820._2_1_ = 'r';\n      uStack_820._3_1_ = 't';\n      uStack_81c._0_1_ = ' ';\n      uStack_81c._1_1_ = 'a';\n      uStack_81c._2_1_ = 's';\n      uStack_81c._3_1_ = 'i';\n      uStack_818._0_1_ = 'c';\n      uStack_818._1_1_ = ' ';\n      uStack_818._2_1_ = 'b';\n      uStack_818._3_1_ = 'o';\n      uStack_814._0_1_ = 'o';\n      uStack_814._1_1_ = 's';\n      uStack_814._2_1_ = 't';\n      uStack_814._3_1_ = '\\0';\n      FUN_0002e584(3,&local_828,0);\n    }\n    goto LAB_00033354;\n  }\n  if (*(char *)((int)__dest + 0x50) == '\\0') {\n    DAT_0007eb58 = 1;\n    DAT_00080f98 = 0;\n    if (DAT_0007edd8 == 1) goto LAB_00033354;\nLAB_000330e4:\n    if (3 < DAT_0007eb9c) {\n      snprintf((char *)&local_828,0x800,\"Version num %d\\n\");\n      FUN_0002e584(3,&local_828,0);\n    }\n    DAT_0007edd8 = DAT_0007eb58;\n  }\n  else {\n    DAT_0007eb58 = *(int *)((int)__dest + 0x54);\n    DAT_00080f98 = *(int *)((int)__dest + 0x58);\n    if (DAT_0007eb58 != DAT_0007edd8) goto LAB_000330e4;\n  }\n  if ((DAT_0007edd8 - 4U & 0xfffffffb) == 0) {\n    if (DAT_0007eddc != DAT_00080f98) {\n      iVar3 = DAT_0007edd8;\n      if (3 < DAT_0007eb9c) {\n        snprintf((char *)&local_828,0x800,\"Mask num 0x%x\\n\");\n        FUN_0002e584(3,&local_828,0);\n        iVar3 = DAT_0007eb58;\n      }\n      DAT_0007eddc = DAT_00080f98;\n      FUN_000321b8(DAT_00482a6c,iVar3,0x5a);\n    }\n    bVar1 = *(byte *)((int)__dest + 9);\n    if ((bVar1 & 2) != 0) {\n      FUN_00044e1c(*(undefined *)((int)__dest + 10));\n      bVar1 = *(byte *)((int)__dest + 9);\n    }\n    local_86c = (uint)*(ushort *)((int)__dest + 0x3c);\n    local_82c = bVar1 & 1;\n    local_868 = param_1 + local_86c + 0x60;\n    local_830 = DAT_0099eddc;\n    local_870 = param_1 + 0x60;\n    local_858 = *(undefined4 *)((int)__dest + 0xc);\n    local_864 = (uint)*(ushort *)((int)__dest + 0x42);\n    local_85c = *(undefined4 *)((int)__dest + 0x38);\n    local_840 = (uint)*(ushort *)((int)__dest + 0x40);\n    local_844 = (uint)*(ushort *)((int)__dest + 0x3e);\n    local_84c = (int)__dest + 0x14;\n    local_850 = DAT_00080f98;\n    local_854 = *(undefined4 *)((int)__dest + 0x10);\n    local_838 = *(undefined4 *)((int)__dest + 0x48);\n    uStack_834 = *(undefined4 *)((int)__dest + 0x4c);\n    local_860 = *(undefined4 *)((int)__dest + 0x34);\n    local_874 = DAT_0007eb58;\n    local_848 = 0x20;\n    local_878 = 0;\n    if (DAT_00482a89 == '\\0') {\n      uVar2 = FUN_000452b0();\n      FUN_000452d0(uVar2 | 0x10000);\n      uVar2 = FUN_0004476c();\n      FUN_00044794(uVar2 | 0x80);\n      DAT_00482a89 = '\\x01';\n    }\n    if (4 < DAT_0007eb9c) {\n      snprintf((char *)&local_828,0x800,\"start to send job, mid_auto_gen = %d\",local_878);\n      FUN_0002e584(4,&local_828,0);\n    }\n    FUN_00045334(&local_878);\n    free(__dest);\n    if ((DAT_00482a5d != '\\0') &&\n       (((DAT_00590404 != '\\0' || (DAT_00482a5c != '\\0')) || (6 < DAT_0007eba0)))) {\n      snprintf((char *)&local_828,0x800,\"--- %s end\\n\",\"dhash_chip_send_job\");\n      FUN_0002e584(7,&local_828,0);\n    }\n    FUN_000302a0(&DAT_00482a74);\n    FUN_000304d4(1);\n    return 0;\n  }\nLAB_00033354:\n  free(__dest);\n  return 0;\n}\n\n",
    "FUN_0003345c": "\nvoid FUN_0003345c(void)\n\n{\n  FUN_00044ae4();\n  FUN_000458e4(0xf);\n  sleep(2);\n  return;\n}\n\n",
    "FUN_00033478": "\nvoid FUN_00033478(undefined4 *param_1,undefined4 *param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  void *pvVar3;\n  void *pvVar4;\n  int *piVar5;\n  undefined4 uVar6;\n  undefined4 *puVar7;\n  undefined4 *puVar8;\n  size_t __nmemb;\n  int iVar9;\n  undefined4 uVar10;\n  undefined4 uVar11;\n  undefined4 local_828;\n  undefined4 uStack_824;\n  undefined4 uStack_820;\n  undefined4 uStack_81c;\n  undefined4 local_818;\n  undefined4 uStack_814;\n  undefined4 uStack_810;\n  undefined4 uStack_80c;\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  ushort local_7fc;\n  undefined local_7fa;\n  \n  if (param_2[0xa8] == 0) {\n    return;\n  }\n  iVar9 = param_2[0x1ab];\n  __nmemb = param_2[0x189];\n  iVar2 = pthread_mutex_lock((pthread_mutex_t *)(param_1 + 0x35));\n  if (iVar2 != 0) {\n    piVar5 = __errno_location();\n    snprintf((char *)&local_828,0x800,\"WTF MUTEX ERROR ON LOCK! errno=%d in %s %s():%d\",*piVar5,\n             \"driver-btm-api.c\",\"copy_pool_stratum\",0x474);\n    FUN_0002e584(3,&local_828,1);\n    FUN_0002a574(1);\n  }\n  iVar2 = pthread_rwlock_wrlock((pthread_rwlock_t *)(param_1 + 0x3b));\n  if (iVar2 != 0) {\n    piVar5 = __errno_location();\n    snprintf((char *)&local_828,0x800,\"WTF WRLOCK ERROR ON LOCK! errno=%d in %s %s():%d\",*piVar5,\n             \"driver-btm-api.c\",\"copy_pool_stratum\",0x474);\n    FUN_0002e584(3,&local_828,1);\n    FUN_0002a574(1);\n  }\n  free((void *)param_1[0xa8]);\n  free((void *)param_1[0x99]);\n  free((void *)param_1[0x188]);\n  if ((__nmemb & 3) != 0) {\n    __nmemb = (__nmemb & 0xfffffffc) + 4;\n  }\n  pvVar3 = calloc(__nmemb,1);\n  param_1[0x188] = pvVar3;\n  if (pvVar3 == (void *)0x0) {\n    local_828._0_1_ = 'F';\n    local_828._1_1_ = 'a';\n    local_828._2_1_ = 'i';\n    local_828._3_1_ = 'l';\n    uStack_824._0_1_ = 'e';\n    uStack_824._1_1_ = 'd';\n    uStack_824._2_1_ = ' ';\n    uStack_824._3_1_ = 't';\n    uStack_820._0_1_ = 'o';\n    uStack_820._1_1_ = ' ';\n    uStack_820._2_1_ = 'c';\n    uStack_820._3_1_ = 'a';\n    uStack_81c._0_1_ = 'l';\n    uStack_81c._1_1_ = 'l';\n    uStack_81c._2_1_ = 'o';\n    uStack_81c._3_1_ = 'c';\n    local_818._0_1_ = ' ';\n    local_818._1_1_ = 'p';\n    local_818._2_1_ = 'o';\n    local_818._3_1_ = 'o';\n    uStack_814._0_1_ = 'l';\n    uStack_814._1_1_ = '_';\n    uStack_814._2_1_ = 's';\n    uStack_814._3_1_ = 't';\n    uStack_810._0_1_ = 'r';\n    uStack_810._1_1_ = 'a';\n    uStack_810._2_1_ = 't';\n    uStack_810._3_1_ = 'u';\n    uStack_80c._0_1_ = 'm';\n    uStack_80c._1_1_ = ' ';\n    uStack_80c._2_1_ = 'c';\n    uStack_80c._3_1_ = 'o';\n    local_808._0_1_ = 'i';\n    local_808._1_1_ = 'n';\n    local_808._2_1_ = 'b';\n    local_808._3_1_ = 'a';\n    uStack_804._0_1_ = 's';\n    uStack_804._1_1_ = 'e';\n    uStack_804._2_1_ = ' ';\n    uStack_804._3_1_ = 'i';\n    uStack_800._0_1_ = 'n';\n    uStack_800._1_1_ = ' ';\n    uStack_800._2_1_ = 'c';\n    uStack_800._3_1_ = '5';\n    local_7fc = local_7fc & 0xff00;\n    FUN_0002e584(3,&local_828,1);\n    FUN_0002a574(1);\n    pvVar3 = (void *)param_1[0x188];\n  }\n  memcpy(pvVar3,(void *)param_2[0x188],__nmemb);\n  if (0 < (int)param_1[0x1ab]) {\n    iVar2 = 0;\n    do {\n      iVar1 = iVar2 * 4;\n      iVar2 = iVar2 + 1;\n      free(*(void **)(param_1[0xa9] + iVar1));\n    } while (iVar2 < (int)param_1[0x1ab]);\n  }\n  if (iVar9 != 0) {\n    pvVar3 = realloc((void *)param_1[0xa9],iVar9 * 4 + 1);\n    param_1[0xa9] = pvVar3;\n    if (0 < iVar9) {\n      iVar2 = 0;\n      while( true ) {\n        iVar1 = iVar2 * 4;\n        pvVar4 = malloc(0x20);\n        *(void **)((int)pvVar3 + iVar2 * 4) = pvVar4;\n        puVar8 = *(undefined4 **)(param_1[0xa9] + iVar2 * 4);\n        if (puVar8 == (undefined4 *)0x0) {\n          local_828._0_1_ = 'F';\n          local_828._1_1_ = 'a';\n          local_828._2_1_ = 'i';\n          local_828._3_1_ = 'l';\n          uStack_824._0_1_ = 'e';\n          uStack_824._1_1_ = 'd';\n          uStack_824._2_1_ = ' ';\n          uStack_824._3_1_ = 't';\n          uStack_820._0_1_ = 'o';\n          uStack_820._1_1_ = ' ';\n          uStack_820._2_1_ = 'm';\n          uStack_820._3_1_ = 'a';\n          uStack_81c._0_1_ = 'l';\n          uStack_81c._1_1_ = 'l';\n          uStack_81c._2_1_ = 'o';\n          uStack_81c._3_1_ = 'c';\n          local_818._0_1_ = ' ';\n          local_818._1_1_ = 'p';\n          local_818._2_1_ = 'o';\n          local_818._3_1_ = 'o';\n          uStack_814._0_1_ = 'l';\n          uStack_814._1_1_ = '_';\n          uStack_814._2_1_ = 's';\n          uStack_814._3_1_ = 't';\n          uStack_810._0_1_ = 'r';\n          uStack_810._1_1_ = 'a';\n          uStack_810._2_1_ = 't';\n          uStack_810._3_1_ = 'u';\n          uStack_80c._0_1_ = 'm';\n          uStack_80c._1_1_ = ' ';\n          uStack_80c._2_1_ = 's';\n          uStack_80c._3_1_ = 'w';\n          local_808._0_1_ = 'o';\n          local_808._1_1_ = 'r';\n          local_808._2_1_ = 'k';\n          local_808._3_1_ = ' ';\n          uStack_804._0_1_ = 'm';\n          uStack_804._1_1_ = 'e';\n          uStack_804._2_1_ = 'r';\n          uStack_804._3_1_ = 'k';\n          uStack_800._0_1_ = 'l';\n          uStack_800._1_1_ = 'e';\n          uStack_800._2_1_ = '_';\n          uStack_800._3_1_ = 'b';\n          local_7fc = 0x6e69;\n          local_7fa = 0;\n          FUN_0002e584(3,&local_828,1);\n          FUN_0002a574(1);\n          puVar8 = *(undefined4 **)(param_1[0xa9] + iVar2 * 4);\n        }\n        iVar2 = iVar2 + 1;\n        puVar7 = *(undefined4 **)(param_2[0xa9] + iVar1);\n        uVar10 = puVar7[1];\n        uVar6 = puVar7[2];\n        uVar11 = puVar7[3];\n        *puVar8 = *puVar7;\n        puVar8[1] = uVar10;\n        puVar8[2] = uVar6;\n        puVar8[3] = uVar11;\n        uVar10 = puVar7[5];\n        uVar6 = puVar7[6];\n        uVar11 = puVar7[7];\n        puVar8[4] = puVar7[4];\n        puVar8[5] = uVar10;\n        puVar8[6] = uVar6;\n        puVar8[7] = uVar11;\n        if (iVar9 == iVar2) break;\n        pvVar3 = (void *)param_1[0xa9];\n      }\n    }\n  }\n  *param_1 = *param_2;\n  uVar6 = param_2[0x1c9];\n  param_1[0x1c8] = param_2[0x1c8];\n  param_1[0x1c9] = uVar6;\n  param_1[0x189] = param_2[0x189];\n  param_1[0x18a] = param_2[0x18a];\n  param_1[0x9e] = param_2[0x9e];\n  param_1[0x1ab] = param_2[0x1ab];\n  uVar6 = __strdup(param_2[0xa8]);\n  param_1[0xa8] = uVar6;\n  uVar6 = __strdup(param_2[0x99]);\n  param_1[0x99] = uVar6;\n  uVar11 = param_2[0x1c4];\n  uVar6 = param_2[0x1c5];\n  param_1[0x1c3] = param_2[0x1c3];\n  param_1[0x1c4] = uVar11;\n  param_1[0x1c5] = uVar6;\n  memcpy(param_1 + 0x18b,param_2 + 0x18b,0x80);\n  iVar2 = pthread_rwlock_unlock((pthread_rwlock_t *)(param_1 + 0x3b));\n  if (iVar2 != 0) {\n    piVar5 = __errno_location();\n    snprintf((char *)&local_828,0x800,\"WTF RWLOCK ERROR ON UNLOCK! errno=%d in %s %s():%d\",*piVar5,\n             \"driver-btm-api.c\",\"copy_pool_stratum\",0x49a);\n    FUN_0002e584(3,&local_828,1);\n    FUN_0002a574(1);\n  }\n  iVar2 = pthread_mutex_unlock((pthread_mutex_t *)(param_1 + 0x35));\n  if (iVar2 != 0) {\n    piVar5 = __errno_location();\n    snprintf((char *)&local_828,0x800,\"WTF MUTEX ERROR ON UNLOCK! errno=%d in %s %s():%d\",*piVar5,\n             \"driver-btm-api.c\",\"copy_pool_stratum\",0x49a);\n    FUN_0002e584(3,&local_828,1);\n    FUN_0002a574(1);\n  }\n  (*DAT_0007ecc4)();\n  return;\n}\n\n",
    "FUN_0003388c": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nuint FUN_0003388c(void)\n\n{\n  char local_810 [2052];\n  \n  _DAT_0007ede0 = CONCAT11((char)DAT_00080fa8,DAT_0007ede0);\n  _DAT_0007ede0 = CONCAT22(CONCAT11(DAT_0007ede0_3,(char)DAT_00080fac),_DAT_0007ede0);\n  if (3 < DAT_0007eb9c) {\n    snprintf(local_810,0x800,\"pulse_mode = %d, ccdly_sel = %d, pwth_sel = %d\\n\",_DAT_0007ede0 & 0xff\n             ,DAT_00080fac & 0xff,DAT_00080fa8 & 0xff);\n    FUN_0002e584(3,local_810,0);\n  }\n  return _DAT_0007ede0 & 0xffffff;\n}\n\n",
    "FUN_00033950": "\n/* WARNING: Removing unreachable block (ram,0x0001eaac) */\n\nvoid FUN_00033950(void)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  undefined2 uVar4;\n  \n  uVar2 = FUN_0003388c();\n  uVar2 = uVar2 & 0xffffff;\n  FUN_0001e970();\n  FUN_000304d4(200);\n  FUN_0001ed08();\n  FUN_000304d4(10);\n  FUN_0001ef94(0xff,uVar2 & 0xff);\n  uVar4 = (undefined2)(uVar2 >> 0x10);\n  FUN_000304d4(10);\n  FUN_0001efe0(0xff,(char)uVar4,(char)((ushort)uVar4 >> 8),0);\n  FUN_000304d4(10);\n  FUN_0001ead4(0xff);\n  FUN_000304d4(10);\n  FUN_0001ea18(0xff,0,1,3);\n  uVar2 = 0;\n  do {\n    while( true ) {\n      uVar3 = uVar2 + 1;\n      iVar1 = FUN_0001e29c(uVar2);\n      if (iVar1 != 0) break;\n      uVar2 = uVar3;\n      if (uVar3 == 4) {\n        return;\n      }\n    }\n    FUN_000513fc(uVar2 & 0xff);\n    uVar2 = uVar3;\n  } while (uVar3 != 4);\n  return;\n}\n\n",
    "FUN_000339ec": "\nundefined4 FUN_000339ec(void)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  uint uVar3;\n  uint uVar4;\n  undefined *puVar5;\n  undefined4 local_818;\n  undefined4 uStack_814;\n  undefined4 uStack_810;\n  undefined4 uStack_80c;\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined4 uStack_7fc;\n  undefined local_7f8;\n  \n  DAT_0007edc8 = 2;\n  DAT_00482a71 = 1;\n  if ((DAT_0007eb9c < 4) || (FUN_00031c64(), DAT_0007eb9c < 4)) {\n    if (DAT_00080da0 == '\\0') goto LAB_00033af0;\nLAB_00033a40:\n    iVar1 = FUN_0003fd74();\n  }\n  else {\n    puVar5 = &DAT_00080ca0;\n    snprintf((char *)&local_818,0x800,\"Miner compile time: %s type: %s\\n\",&DAT_00080ba0,\n             &DAT_00080ca0);\n    FUN_0002e584(3,&local_818,0);\n    if (DAT_00080da0 != '\\0') {\n      if (DAT_0007eb9c < 4) goto LAB_00033a40;\n      snprintf((char *)&local_818,0x800,\"Miner sn: %s\\n\",&DAT_00080da0,puVar5);\n      FUN_0002e584(3,&local_818,0);\n    }\nLAB_00033af0:\n    if (DAT_0007eb9c < 4) goto LAB_00033a40;\n    memcpy(&local_818,\n           \"commit version: dd076742 2022-10-27 22:42:25, build by: jenkins 2022-12-06 16:28:38\\n\",\n           0x55);\n    FUN_0002e584(3,&local_818,0);\n    if (DAT_0007eb9c < 4) goto LAB_00033a40;\n    snprintf((char *)&local_818,0x800,\"opt_multi_version     = %d\\n\",DAT_0007eb58);\n    FUN_0002e584(3,&local_818,0);\n    if (DAT_0007eb9c < 4) goto LAB_00033a40;\n    snprintf((char *)&local_818,0x800,\"opt_bitmain_ab        = %d\\n\",(uint)DAT_0007eb5c);\n    FUN_0002e584(3,&local_818,0);\n    if (DAT_0007eb9c < 4) goto LAB_00033a40;\n    snprintf((char *)&local_818,0x800,\"mid_auto_gen          = %d\\n\",0);\n    FUN_0002e584(3,&local_818,0);\n    if (DAT_0007eb9c < 4) goto LAB_00033a40;\n    snprintf((char *)&local_818,0x800,\"opt_bitmain_work_mode = %d\\n\",DAT_00080fb4);\n    FUN_0002e584(3,&local_818,0);\n    iVar1 = FUN_0003fd74();\n  }\n  if (iVar1 != 0) {\n    return 0;\n  }\n  FUN_000140e4();\n  FUN_000141b4();\n  FUN_00042728();\n  FUN_00042778();\n  DAT_0007eb5c = 1;\n  FUN_00024364();\n  FUN_00025284();\n  iVar1 = FUN_0001b4ac();\n  if (iVar1 != 0) {\n    return 0;\n  }\n  FUN_0003345c();\n  FUN_00013fb0(100);\n  FUN_00032bd0();\n  FUN_00045b74();\n  FUN_000324a8();\n  iVar1 = FUN_0001e28c();\n  if (iVar1 == 0) {\n    if (DAT_0007eb9c < 4) {\n      return 0xffffffff;\n    }\n    local_818._0_1_ = 'N';\n    local_818._1_1_ = 'o';\n    local_818._2_1_ = ' ';\n    local_818._3_1_ = 'c';\n    uStack_814._0_1_ = 'h';\n    uStack_814._1_1_ = 'a';\n    uStack_814._2_1_ = 'i';\n    uStack_814._3_1_ = 'n';\n    uStack_810._0_1_ = ' ';\n    uStack_810._1_1_ = 'e';\n    uStack_810._2_1_ = 'x';\n    uStack_810._3_1_ = 'i';\n    uStack_80c._0_1_ = 's';\n    uStack_80c._1_1_ = 't';\n    uStack_80c._2_1_ = ',';\n    uStack_80c._3_1_ = ' ';\n    local_808._0_1_ = 'e';\n    local_808._1_1_ = 'x';\n    local_808._2_1_ = 'i';\n    local_808._3_1_ = 't';\n    uStack_804 = CONCAT13(uStack_804._3_1_,0xa2e);\n    FUN_0002e584(3,&local_818,0);\n    return 0xffffffff;\n  }\n  if (((DAT_00590404 != '\\0') || (DAT_00482a5c != '\\0')) || (4 < DAT_0007eba0)) {\n    uVar2 = FUN_0001e28c();\n    snprintf((char *)&local_818,0x800,\"chain num = %d\",uVar2);\n    FUN_0002e584(5,&local_818,0);\n  }\n  uVar3 = 0;\n  do {\n    uVar4 = uVar3 + 1;\n    iVar1 = FUN_0001e29c(uVar3);\n    if (iVar1 != 0) {\n      thunk_FUN_0005198c(uVar3 & 0xff);\n    }\n    uVar3 = uVar4;\n  } while (uVar4 != 4);\n  FUN_00017ef8();\n  iVar1 = FUN_00017f7c();\n  if (iVar1 == 0) {\n    if (DAT_0007edc8 == 1) {\n      if (DAT_0007eb9c < 4) {\n        return 0;\n      }\n    }\n    else {\n      FUN_000356c4(3,0xff);\n      if (DAT_0007eb9c < 4) goto LAB_00033dac;\n    }\n    local_818._0_1_ = 'F';\n    local_818._1_1_ = 'i';\n    local_818._2_1_ = 'x';\n    local_818._3_1_ = 't';\n    uStack_814._0_1_ = 'u';\n    uStack_814._1_1_ = 'r';\n    uStack_814._2_1_ = 'e';\n    uStack_814._3_1_ = ' ';\n    uStack_810._0_1_ = 'd';\n    uStack_810._1_1_ = 'a';\n    uStack_810._2_1_ = 't';\n    uStack_810._3_1_ = 'a';\n    uStack_80c._0_1_ = ' ';\n    uStack_80c._1_1_ = 'l';\n    uStack_80c._2_1_ = 'o';\n    uStack_80c._3_1_ = 'a';\n    local_808._0_1_ = 'd';\n    local_808._1_1_ = ' ';\n    local_808._2_1_ = 'f';\n    local_808._3_1_ = 'a';\n    uStack_804._0_1_ = 'i';\n    uStack_804._1_1_ = 'l';\n    uStack_804._2_1_ = 'e';\n    uStack_804._3_1_ = 'd';\n    uStack_800._0_1_ = ',';\n    uStack_800._1_1_ = ' ';\n    uStack_800._2_1_ = 'e';\n    uStack_800._3_1_ = 'x';\n    uStack_7fc._0_1_ = 'i';\n    uStack_7fc._1_1_ = 't';\n    uStack_7fc._2_1_ = '.';\n    uStack_7fc._3_1_ = '\\n';\n    local_7f8 = 0;\n    FUN_0002e584(3,&local_818,0);\n  }\nLAB_00033dac:\n  if (((DAT_0007edc8 == 0) && (iVar1 = FUN_00036218(), iVar1 != 0)) &&\n     ((iVar1 = FUN_00017f90(), iVar1 == 0 && (3 < DAT_0007eb9c)))) {\n    local_818._0_1_ = 'M';\n    local_818._1_1_ = 'i';\n    local_818._2_1_ = 'n';\n    local_818._3_1_ = 'e';\n    uStack_814._0_1_ = 'r';\n    uStack_814._1_1_ = ' ';\n    uStack_814._2_1_ = 'd';\n    uStack_814._3_1_ = 'a';\n    uStack_810._0_1_ = 't';\n    uStack_810._1_1_ = 'a';\n    uStack_810._2_1_ = ' ';\n    uStack_810._3_1_ = 'l';\n    uStack_80c._0_1_ = 'o';\n    uStack_80c._1_1_ = 'a';\n    uStack_80c._2_1_ = 'd';\n    uStack_80c._3_1_ = ' ';\n    local_808._0_1_ = 'f';\n    local_808._1_1_ = 'a';\n    local_808._2_1_ = 'i';\n    local_808._3_1_ = 'l';\n    uStack_804._0_1_ = 'e';\n    uStack_804._1_1_ = 'd';\n    uStack_804._2_1_ = ',';\n    uStack_804._3_1_ = ' ';\n    uStack_800._0_1_ = 'e';\n    uStack_800._1_1_ = 'x';\n    uStack_800._2_1_ = 'i';\n    uStack_800._3_1_ = 't';\n    uStack_7fc = CONCAT13(uStack_7fc._3_1_,0xa2e);\n    FUN_0002e584(3,&local_818,0);\n    return 0;\n  }\n  return 0;\n}\n\n",
    "FUN_00033e34": "\nint FUN_00033e34(void)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 uVar3;\n  char *__s1;\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined4 uStack_804;\n  undefined2 uStack_800;\n  undefined local_7fe;\n  \n  FUN_000323dc();\n  FUN_000446dc();\n  iVar1 = FUN_00013da4(4000,1);\n  if (iVar1 != 0) {\n    return iVar1;\n  }\n  if (DAT_0007eb9c < 4) {\n    iVar1 = FUN_0003204c();\n  }\n  else {\n    local_810._0_1_ = 'F';\n    local_810._1_1_ = 'a';\n    local_810._2_1_ = 'n';\n    local_810._3_1_ = ' ';\n    uStack_80c._0_1_ = 'c';\n    uStack_80c._1_1_ = 'h';\n    uStack_80c._2_1_ = 'e';\n    uStack_80c._3_1_ = 'c';\n    uStack_808._0_1_ = 'k';\n    uStack_808._1_1_ = ' ';\n    uStack_808._2_1_ = 'p';\n    uStack_808._3_1_ = 'a';\n    uStack_804._0_1_ = 's';\n    uStack_804._1_1_ = 's';\n    uStack_804._2_1_ = 'e';\n    uStack_804._3_1_ = 'd';\n    uStack_800 = 0xa2e;\n    local_7fe = 0;\n    FUN_0002e584(3,&local_810,0);\n    iVar1 = FUN_0003204c();\n  }\n  if (iVar1 != 0) {\n    iVar2 = FUN_0001e28c();\n    if (iVar2 == 0) {\n      return iVar1;\n    }\n    if (DAT_0007edc8 == 0) {\n      return iVar1;\n    }\n  }\n  FUN_00027940();\n  FUN_00014fa4();\n  if (DAT_0007eb79 == '\\0') {\n    if (DAT_00482a8c < 1) goto LAB_00033eac;\n    iVar1 = FUN_00019698();\n  }\n  else {\n    __s1 = (char *)FUN_0001e0c0();\n    iVar1 = strcmp(__s1,\"BHB28601\");\n    if (iVar1 == 0) {\n      uVar3 = 0x76c;\n    }\n    else {\n      uVar3 = 0x5dc;\n    }\n    iVar1 = FUN_00019698(uVar3);\n  }\n  if (iVar1 != 0) {\n    FUN_000356c4(0xc,0);\n    FUN_00031d58(9,\"get power type version failed!\");\n    return iVar1;\n  }\nLAB_00033eac:\n  if (3 < DAT_0007eb9c) {\n    uVar3 = FUN_0001572c();\n    snprintf((char *)&local_810,0x800,\"start up min temp by 75a = %d\",uVar3);\n    FUN_0002e584(3,&local_810,0);\n  }\n  FUN_000448c8();\n  FUN_000449e0();\n  FUN_00044a50();\n  FUN_000304d4(10);\n  FUN_00028138(0x1c200);\n  FUN_000304d4(10);\n  iVar1 = FUN_000329dc();\n  if ((iVar1 == 0) || ((iVar2 = FUN_0001e28c(), iVar2 != 0 && (DAT_0007edc8 != 0)))) {\n    FUN_00033950();\n    iVar1 = 0;\n    DAT_0007f8d4 = 0;\n    DAT_0007f8dc = 0;\n    DAT_0007f8d8 = 0;\n  }\n  return iVar1;\n}\n\n",
    "FUN_0003403c": "\nvoid FUN_0003403c(void)\n\n{\n  undefined uVar1;\n  byte bVar2;\n  bool bVar3;\n  bool bVar4;\n  undefined4 uVar5;\n  int iVar6;\n  int iVar7;\n  undefined4 uVar8;\n  int iVar9;\n  int iVar10;\n  uint uVar11;\n  short *psVar12;\n  int iVar13;\n  uint uVar14;\n  undefined4 uVar15;\n  int local_864;\n  int local_85c;\n  int local_84c;\n  undefined auStack_838 [8];\n  char acStack_830 [2052];\n  \n  uVar14 = 0;\n  local_85c = 0;\n  uVar5 = FUN_0003388c();\n  FUN_0001629c();\n  do {\n    iVar6 = FUN_0001e29c(uVar14);\n    if (iVar6 != 0) {\n      local_84c = 0;\n      FUN_0001f0e0(uVar14,1,0,DAT_00482a70);\n      do {\n        DAT_0008110c = 1;\n        FUN_0002bdd0();\n        memset(&DAT_0059cd98 + uVar14 * 0x100000,0,0x100000);\n        iVar6 = FUN_0001e0f0();\n        if (0 < iVar6) {\n          local_864 = 0;\n          do {\n            iVar7 = FUN_0001e160();\n            FUN_00050da8(uVar14 & 0xff,local_864 * iVar7);\n            FUN_000302a0(auStack_838);\n            do {\n              pthread_mutex_lock((pthread_mutex_t *)&DAT_000810dc);\n              iVar7 = DAT_005945c0;\n              if (0 < DAT_005945c0) {\n                iVar13 = 0;\n                do {\n                  DAT_005945c0 = DAT_005945c0 + -1;\n                  iVar13 = iVar13 + 1;\n                  uVar11 = DAT_005945bc + 1;\n                  if (uVar11 < 0x1ff) {\n                    DAT_005945bc = uVar11;\n                  }\n                  iVar10 = uVar11 * 8;\n                  if (0x1fe < uVar11) {\n                    DAT_005945bc = 0;\n                  }\n                  if ((*(byte *)((int)&DAT_005945c0 + iVar10 + 3) == uVar14) &&\n                     (*(char *)((int)&DAT_005945c0 + iVar10 + 2) == '@')) {\n                    uVar1 = *(undefined *)((int)&DAT_005945c0 + iVar10 + 1);\n                    uVar15 = (&DAT_005945bc)[uVar11 * 2];\n                    uVar8 = FUN_0001e160();\n                    iVar9 = FUN_0005faf8(uVar1,uVar8);\n                    uVar1 = *(undefined *)((int)&DAT_005945c0 + iVar10 + 1);\n                    bVar2 = *(byte *)((int)&DAT_005945c0 + iVar10 + 3);\n                    *(short *)(&DAT_0059cd9a +\n                              ((*(ushort *)((int)&DAT_005945bc + iVar10 + 2) & 0x3ff) +\n                              ((uVar14 & 3) * 0x100 + iVar9) * 0x400) * 4) = (short)uVar15;\n                    uVar8 = FUN_0001e160();\n                    iVar9 = FUN_0005faf8(uVar1,uVar8);\n                    *(undefined2 *)\n                     (&DAT_0059cd98 +\n                     ((*(ushort *)((int)&DAT_005945bc + iVar10 + 2) & 0x3ff) +\n                     (iVar9 + (bVar2 & 3) * 0x100) * 0x400) * 4) = 1;\n                  }\n                } while (iVar7 != iVar13);\n              }\n              pthread_mutex_unlock((pthread_mutex_t *)&DAT_000810dc);\n              usleep(1000);\n              FUN_000302a0(acStack_830);\n              iVar7 = FUN_00030578(acStack_830,auStack_838);\n            } while (iVar7 < 100);\n            local_864 = local_864 + 1;\n          } while (iVar6 != local_864);\n        }\n        iVar6 = FUN_0001e0f0();\n        if (iVar6 < 1) {\n          if (3 < DAT_0007eb9c) {\n            iVar7 = 0;\n            bVar4 = false;\n            goto LAB_00034608;\n          }\n          iVar7 = 0;\nLAB_000345b0:\n          if (3 < DAT_0007eb9c) {\n            snprintf(acStack_830,0x800,\"bad count is acceptable = %d\",iVar7);\n            FUN_0002e584(3,acStack_830,0);\n          }\n          usleep(1000000);\n          break;\n        }\n        bVar4 = false;\n        iVar13 = 0;\n        iVar7 = 0;\n        do {\n          iVar10 = FUN_0001e120();\n          if (0 < iVar10) {\n            bVar3 = false;\n            iVar9 = 0;\n            psVar12 = (short *)(&DAT_0059cd98 + (iVar13 + local_85c) * 0x1000);\n            do {\n              if (psVar12[1] == 0) {\n                if (*psVar12 == 0) {\n                  if (3 < DAT_0007eb9c) {\n                    snprintf(acStack_830,0x800,\"core %8d in asic %d not returned\",iVar9,iVar13);\n                    FUN_0002e584(3,acStack_830,0);\n                  }\n                }\n                else if (3 < DAT_0007eb9c) {\n                  snprintf(acStack_830,0x800,\"core %8d data in asic %d is zero\",iVar9,iVar13);\n                  FUN_0002e584(3,acStack_830,0);\n                }\n                bVar3 = true;\n                iVar7 = iVar7 + 1;\n                bVar4 = true;\n              }\n              iVar9 = iVar9 + 1;\n              psVar12 = psVar12 + 2;\n            } while (iVar10 != iVar9);\n            if (bVar3) {\n              if (3 < DAT_0007eb9c) {\n                snprintf(acStack_830,0x800,\"reopen asic %d\",iVar13);\n                FUN_0002e584(3,acStack_830,0);\n              }\n              uVar11 = uVar14 & 0xff;\n              iVar10 = FUN_0001e160();\n              FUN_00050cc4(uVar11,iVar13 * iVar10,1);\n              usleep(10000);\n              iVar10 = FUN_0001e160();\n              FUN_00050cc4(uVar11,iVar13 * iVar10,0);\n              usleep(10000);\n              iVar10 = FUN_0001e160();\n              FUN_000515d0(uVar11,iVar13 * iVar10,(char)uVar5,0);\n              FUN_000304d4(10);\n              iVar10 = FUN_0001e160();\n              FUN_00051668(uVar11,iVar13 * iVar10,(char)((uint)uVar5 >> 8),\n                           (char)((uint)uVar5 >> 0x10),0);\n              iVar10 = FUN_0001e160();\n              FUN_00050df8(uVar11,iVar13 * iVar10);\n              usleep(10000);\n              if (3 < DAT_0007eb9c) {\n                snprintf(acStack_830,0x800,\"reset clock asic %d\",iVar13);\n                FUN_0002e584(3,acStack_830,0);\n              }\n              iVar10 = FUN_0001e160();\n              FUN_000517f8(uVar11,iVar13 * iVar10,0);\n              iVar10 = FUN_0001e160();\n              FUN_00051794(uVar11,iVar13 * iVar10);\n              usleep(100000);\n              iVar10 = FUN_0001e160();\n              FUN_000517f8(uVar11,iVar13 * iVar10,1);\n            }\n          }\n          iVar13 = iVar13 + 1;\n        } while (iVar6 != iVar13);\n        if (3 < DAT_0007eb9c) {\nLAB_00034608:\n          local_84c = local_84c + 1;\n          snprintf(acStack_830,0x800,\n                   \"chain %d, bad core num %8d, rate = %.2f ========================round %d\",uVar14\n                   ,iVar7);\n          FUN_0002e584(3,acStack_830,0);\n        }\n        if (iVar7 < 0x9c) goto LAB_000345b0;\n        usleep(1000000);\n        if (1 < local_84c) {\n          bVar4 = false;\n        }\n      } while (bVar4);\n    }\n    uVar14 = uVar14 + 1;\n    local_85c = local_85c + 0x100;\n    if (uVar14 == 4) {\n      DAT_0008110c = 0;\n      FUN_000162b0();\n      return;\n    }\n  } while( true );\n}\n\n",
    "FUN_00034750": "\nvoid FUN_00034750(uint param_1,int param_2)\n\n{\n  uint uVar1;\n  int iVar2;\n  \n  uVar1 = FUN_0003388c();\n  iVar2 = FUN_0001e29c(param_1);\n  if (iVar2 != 0) {\n    param_1 = param_1 & 0xff;\n    iVar2 = FUN_0001e160();\n    FUN_00050cc4(param_1,param_2 * iVar2,1);\n    usleep(10000);\n    iVar2 = FUN_0001e160();\n    FUN_00050cc4(param_1,param_2 * iVar2,0);\n    usleep(10000);\n    iVar2 = FUN_0001e160();\n    FUN_000515d0(param_1,param_2 * iVar2,uVar1 & 0xff,DAT_00482a70);\n    usleep(10000);\n    iVar2 = FUN_0001e160();\n    FUN_00051668(param_1,param_2 * iVar2,(char)(uVar1 >> 8),(char)(uVar1 >> 0x10),0);\n  }\n  return;\n}\n\n",
    "FUN_00034828": "\nundefined4\nFUN_00034828(uint param_1,uint param_2,uint param_3,uint param_4,undefined4 param_5,\n            undefined4 param_6,undefined4 param_7,uint param_8)\n\n{\n  longlong lVar1;\n  char cVar2;\n  int iVar3;\n  int iVar4;\n  undefined4 uVar5;\n  uint uVar6;\n  int extraout_r1;\n  char *pcVar7;\n  uint uVar8;\n  uint uVar9;\n  int iVar10;\n  int iVar11;\n  undefined4 *puVar12;\n  double dVar13;\n  undefined8 uVar14;\n  uint local_85c;\n  undefined4 local_838;\n  undefined4 uStack_834;\n  undefined4 uStack_830;\n  undefined4 uStack_82c;\n  undefined4 local_828;\n  undefined4 uStack_824;\n  undefined4 uStack_820;\n  undefined4 uStack_81c;\n  undefined4 local_818;\n  undefined4 uStack_814;\n  undefined4 uStack_810;\n  undefined local_80c;\n  \n  DAT_0099edc8 = param_5;\n  DAT_0099edcc = param_6;\n  DAT_0099edd0 = param_7;\n  DAT_0099edd4 = param_8;\n  uVar6 = param_1 & 0xff;\n  DAT_0099edb8 = param_1;\n  DAT_0099edbc = param_2;\n  DAT_0099edc0 = param_3;\n  DAT_0099edc4 = param_4;\n  if (uVar6 != 0x51) {\n    if (DAT_0007eb9c < 5) {\n      return 0;\n    }\n    pcVar7 = \"config_parameter.token_type != 0x%x, it is 0x%x\\n\";\n    uVar9 = 0x51;\nLAB_000348c4:\n    snprintf((char *)&local_838,0x800,pcVar7,uVar9,uVar6);\n    FUN_0002e584(4,&local_838,0);\n    return 0;\n  }\n  uVar6 = FUN_00031590(&DAT_0099edb8,0x1e);\n  uVar9 = DAT_0099edd4 >> 0x10;\n  if (uVar6 != uVar9) {\n    if (DAT_0007eb9c < 5) {\n      return 0;\n    }\n    pcVar7 = \"config_parameter.crc = 0x%x, but we calculate it as 0x%x\\n\";\n    goto LAB_000348c4;\n  }\n  if (3 < DAT_0007eb9c) {\n    snprintf((char *)&local_838,0x800,\"fan_eft : %d  fan_pwm : %d\\n\",(DAT_0099edbc << 0x1e) >> 0x1f,\n             DAT_0099edc0 >> 0x10 & 0xff);\n    FUN_0002e584(3,&local_838);\n  }\n  if (DAT_0007edc8 == 0) {\n    cVar2 = FUN_000362a0(0xa1);\n    uVar6 = 0;\n    do {\n      uVar9 = uVar6 + 1;\n      iVar3 = FUN_0001e29c(uVar6);\n      if (iVar3 != 0) {\n        thunk_FUN_0005198c(uVar6 & 0xff);\n      }\n      uVar6 = uVar9;\n    } while (uVar9 != 4);\n    if (cVar2 != '\\0') {\n      return 0;\n    }\n  }\n  cVar2 = FUN_00027a58();\n  if (cVar2 != '\\0') {\n    return 0;\n  }\n  if ((DAT_00482a71 == '\\0') || ((DAT_0099edbc & 0x10) == 0)) {\n    uVar6 = FUN_00031bac();\n    if (0 < (int)uVar6) goto LAB_000349b8;\n    if ((uVar6 & 0xff) != 0) {\n      return 0;\n    }\n  }\n  else {\n    DAT_00482a8c = DAT_0099edc4 >> 0x10;\n    uVar6 = FUN_00031bac();\nLAB_000349b8:\n    DAT_00482a8c = uVar6;\n    if (3 < DAT_0007eb9c) {\n      snprintf((char *)&local_838,0x800,\"fixed working voltage = %d\\n\",DAT_00482a8c);\n      FUN_0002e584(3,&local_838);\n    }\n  }\n  cVar2 = FUN_00033e34();\n  if (cVar2 != '\\0') {\n    return 0;\n  }\n  if ((DAT_00482a71 == '\\0') || ((DAT_0099edbc & 8) == 0)) {\n    DAT_00482a6c = 200;\n    iVar3 = 0;\n    uVar6 = DAT_00482a6c;\n  }\n  else {\n    DAT_00482a6c = DAT_0099edc4 & 0xffff;\n    iVar4 = 0;\n    uVar9 = 0;\n    do {\n      iVar3 = FUN_0001e29c(iVar4);\n      uVar6 = uVar9;\n      if ((((iVar3 != 0) && (iVar3 = FUN_000183fc(iVar4,DAT_00080fb4 & 0xff), iVar3 == 0)) &&\n          (uVar6 = local_85c, uVar9 != 0)) && (uVar6 = uVar9, local_85c <= uVar9)) {\n        uVar6 = local_85c;\n      }\n      iVar4 = iVar4 + 1;\n      uVar9 = uVar6;\n    } while (iVar4 != 4);\n    if (3 < DAT_0007eb9c) {\n      snprintf((char *)&local_838,0x800,\"min freq in eeprom = %d\\n\",uVar6);\n      iVar3 = FUN_0002e584(3,&local_838);\n    }\n    if ((uVar6 == 0) || ((int)uVar6 < 1)) {\n      if (3 < DAT_0007eb9c) {\n        local_838._0_1_ = 'f';\n        local_838._1_1_ = 'a';\n        local_838._2_1_ = 'i';\n        local_838._3_1_ = 'l';\n        uStack_834._0_1_ = 'e';\n        uStack_834._1_1_ = 'd';\n        uStack_834._2_1_ = ' ';\n        uStack_834._3_1_ = 't';\n        uStack_830._0_1_ = 'o';\n        uStack_830._1_1_ = ' ';\n        uStack_830._2_1_ = 'l';\n        uStack_830._3_1_ = 'o';\n        uStack_82c._0_1_ = 'a';\n        uStack_82c._1_1_ = 'd';\n        uStack_82c._2_1_ = ' ';\n        uStack_82c._3_1_ = 'f';\n        local_828._0_1_ = 'r';\n        local_828._1_1_ = 'e';\n        local_828._2_1_ = 'q';\n        local_828._3_1_ = ' ';\n        uStack_824._0_1_ = 'i';\n        uStack_824._1_1_ = 'n';\n        uStack_824._2_1_ = ' ';\n        uStack_824._3_1_ = 'e';\n        uStack_820._0_1_ = 'e';\n        uStack_820._1_1_ = 'p';\n        uStack_820._2_1_ = 'r';\n        uStack_820._3_1_ = 'o';\n        uStack_81c._0_1_ = 'm';\n        uStack_81c._1_1_ = ',';\n        uStack_81c._2_1_ = ' ';\n        uStack_81c._3_1_ = 'u';\n        local_818._0_1_ = 's';\n        local_818._1_1_ = 'i';\n        local_818._2_1_ = 'n';\n        local_818._3_1_ = 'g';\n        uStack_814._0_1_ = ' ';\n        uStack_814._1_1_ = 'd';\n        uStack_814._2_1_ = 'e';\n        uStack_814._3_1_ = 'f';\n        uStack_810._0_1_ = 'a';\n        uStack_810._1_1_ = 'u';\n        uStack_810._2_1_ = 'l';\n        uStack_810._3_1_ = 't';\n        local_80c = 0;\n        iVar3 = FUN_0002e584(3,&local_838,0);\n      }\n      DAT_00482a6c = 200;\n      uVar6 = DAT_00482a6c;\n    }\n  }\n  DAT_00482a6c = uVar6;\n  if (3 < DAT_0007eb9c) {\n    snprintf((char *)&local_838,0x800,\"fixed frequency is %d\\n\",DAT_00482a6c);\n    iVar3 = FUN_0002e584(3,&local_838);\n  }\n  uVar6 = DAT_00482a8c;\n  if (DAT_00080fb4 == 3) {\n    pcVar7 = (char *)FUN_0001e0c0();\n    iVar3 = strcmp(pcVar7,\"NBS1902\");\n    if (iVar3 != 0) {\n      pcVar7 = (char *)FUN_0001e0c0();\n      iVar3 = strcmp(pcVar7,\"NBS1902L\");\n      if (iVar3 != 0) {\n        pcVar7 = (char *)FUN_0001e0c0();\n        iVar3 = strcmp(pcVar7,\"NBT1903\");\n        if (iVar3 != 0) {\n          pcVar7 = (char *)FUN_0001e0c0();\n          iVar3 = strcmp(pcVar7,\"NBP1901\");\n          if (iVar3 != 0) {\n            pcVar7 = (char *)FUN_0001e0c0();\n            iVar3 = strcmp(pcVar7,\"NBP1901L\");\n            if (iVar3 != 0) goto LAB_00034a64;\n          }\n          if ((float)(longlong)(int)DAT_00482a8c * 0.91 < 1200.0) {\n            DAT_00482a8c = 0x4b0;\n          }\n          else {\n            DAT_00482a8c = (uint)((float)(longlong)(int)DAT_00482a8c * 0.91);\n          }\n          iVar3 = 10;\n          DAT_00482a6c = DAT_00482a6c + ((int)(uVar6 - DAT_00482a8c) / 10) * -10;\n          goto LAB_00034a64;\n        }\n      }\n    }\n    if ((float)(longlong)(int)DAT_00482a8c * 0.91 < 1200.0) {\n      DAT_00482a8c = 0x4b0;\n    }\n    else {\n      DAT_00482a8c = (uint)((float)(longlong)(int)DAT_00482a8c * 0.91);\n    }\n    iVar4 = uVar6 - DAT_00482a8c;\n    iVar3 = iVar4 * 0x66666667;\n    dVar13 = (double)(ulonglong)DAT_00482a6c - (double)(longlong)(iVar4 / 10) * 12.5;\n    DAT_00482a6c = (uint)(0.0 < dVar13) * (int)(longlong)dVar13;\n  }\nLAB_00034a64:\n  if ((DAT_00080fb4 == 1) || ((int)DAT_00482a8c < 1)) {\n    FUN_000194dc();\n    FUN_00013fb0(0);\n    FUN_000304d4(2000);\n  }\n  else {\n    FUN_0001e160(iVar3);\n    cVar2 = FUN_00015210();\n    if (cVar2 == '\\0') {\n      FUN_00020a38();\n    }\n    else {\n      FUN_00020a38(1);\n      FUN_00031d58(0xe,\"Can\\'t get temperature sensor type!\");\n    }\n  }\n  DAT_0099edd8 = FUN_0001572c();\n  if (DAT_0007eb9c < 4) {\n    if (DAT_00080fb0 == '\\0') goto LAB_00034abc;\n  }\n  else {\n    snprintf((char *)&local_838,0x800,\"Bring up temperature is %d\\n\",DAT_0099edd8);\n    FUN_0002e584(3,&local_838,0);\n    if (DAT_00080fb0 == '\\0') goto LAB_00034abc;\n    if (3 < DAT_0007eb9c) {\n      local_838._0_1_ = 'p';\n      local_838._1_1_ = 'r';\n      local_838._2_1_ = 'e';\n      local_838._3_1_ = 's';\n      uStack_834._0_1_ = 's';\n      uStack_834._1_1_ = ' ';\n      uStack_834._2_1_ = 'a';\n      uStack_834._3_1_ = 'n';\n      uStack_830._0_1_ = 'y';\n      uStack_830._1_1_ = ' ';\n      uStack_830._2_1_ = 'k';\n      uStack_830._3_1_ = 'e';\n      uStack_82c._0_1_ = 'y';\n      uStack_82c._1_1_ = ' ';\n      uStack_82c._2_1_ = 't';\n      uStack_82c._3_1_ = 'o';\n      local_828._0_1_ = ' ';\n      local_828._1_1_ = 's';\n      local_828._2_1_ = 't';\n      local_828._3_1_ = 'a';\n      uStack_824._0_1_ = 'r';\n      uStack_824._1_1_ = 't';\n      uStack_824._2_1_ = ' ';\n      uStack_824._3_1_ = 'r';\n      uStack_820._0_1_ = 'i';\n      uStack_820._1_1_ = 's';\n      uStack_820._2_1_ = 'i';\n      uStack_820._3_1_ = 'n';\n      uStack_81c._0_1_ = 'g';\n      uStack_81c._1_1_ = ' ';\n      uStack_81c._2_1_ = 'f';\n      uStack_81c._3_1_ = 'r';\n      local_818._0_1_ = 'e';\n      local_818._1_1_ = 'q';\n      local_818._2_1_ = 'u';\n      local_818._3_1_ = 'e';\n      uStack_814._0_1_ = 'n';\n      uStack_814._1_1_ = 'c';\n      uStack_814._2_1_ = 'y';\n      uStack_814._3_1_ = '.';\n      uStack_810._0_3_ = 0x2e2e;\n      FUN_0002e584(3,&local_838,0);\n    }\n  }\n  _IO_getc(stdin);\nLAB_00034abc:\n  pthread_mutex_lock((pthread_mutex_t *)&DAT_0007f7ec);\n  FUN_00028138(12000000);\n  pthread_mutex_unlock((pthread_mutex_t *)&DAT_0007f7ec);\n  if (DAT_0007eb79 == '\\0') {\n    FUN_0003403c();\n  }\n  else if ((0 < (int)DAT_00482a8c) && (uVar6 = FUN_00019ab4(), uVar6 != DAT_00482a8c)) {\n    uVar14 = FUN_0001572c();\n    iVar3 = (int)uVar14;\n    if (iVar3 < 0x14) {\n      uVar6 = DAT_0007eb78 & 1;\n    }\n    else {\n      uVar6 = 0;\n    }\n    if (uVar6 != 0) {\n      uVar9 = 100;\n      uVar8 = (0x14 - iVar3) * 100;\n      if ((int)uVar8 < 4000) {\n        uVar6 = 0xcccccccd;\n      }\n      lVar1 = CONCAT44(uVar6,uVar8);\n      if ((int)uVar8 < 4000) {\n        lVar1 = (ulonglong)uVar6 * (ulonglong)uVar8;\n      }\n      if ((int)uVar8 < 4000) {\n        uVar9 = (uint)((ulonglong)lVar1 >> 0x25);\n      }\n      iVar4 = uVar9 + DAT_00482a8c;\n      iVar3 = FUN_00019ac4(iVar3,(int)((ulonglong)uVar14 >> 0x20),(int)lVar1);\n      if (iVar3 < iVar4) {\n        FUN_00019ac4(iVar3);\n      }\n    }\n    FUN_000195a8();\n    FUN_000304d4(4000);\n  }\n  FUN_000304d4(1000);\n  iVar3 = FUN_0001e100();\n  if (iVar3 == 2) {\n    uVar6 = 0;\n    do {\n      uVar9 = uVar6 + 1;\n      iVar3 = FUN_0001e29c(uVar6);\n      if (iVar3 != 0) {\n        iVar3 = FUN_0001e160();\n        FUN_00050a80(uVar6 & 0xff,iVar3 * 0x13,0);\n        iVar3 = FUN_0001e160();\n        FUN_00050a80(uVar6 & 0xff,iVar3 * 0x37,0);\n      }\n      uVar6 = uVar9;\n    } while (uVar9 != 4);\n  }\n  FUN_00031d58(1,\"soc init done!\");\n  cVar2 = FUN_00027c88();\n  if (cVar2 != '\\0') {\n    return 0;\n  }\n  iVar3 = 0;\n  do {\n    iVar4 = FUN_0001e29c(iVar3);\n    if (iVar4 != 0) {\n      iVar4 = 0;\n      uVar6 = 0;\n      puVar12 = &DAT_0099cd98 + iVar3 * 0x200;\n      while( true ) {\n        iVar10 = uVar6 + iVar4;\n        uVar9 = FUN_0001e67c(iVar3);\n        if (uVar9 <= uVar6) break;\n        uVar5 = FUN_0001e100();\n        FUN_0005fadc(uVar6,uVar5);\n        iVar11 = iVar10;\n        if (extraout_r1 == 0) {\n          iVar4 = iVar4 + 1;\n          iVar11 = uVar6 + iVar4;\n          FUN_0001e820(iVar3,iVar10,0x20);\n        }\n        uVar6 = uVar6 + 1;\n        FUN_0001e820(iVar3,iVar11,0x6f);\n        *puVar12 = 0;\n        puVar12[1] = 0;\n        puVar12 = puVar12 + 2;\n      }\n      FUN_0001e820(iVar3,iVar10,0x6f);\n    }\n    iVar3 = iVar3 + 1;\n  } while (iVar3 != 4);\n  cVar2 = FUN_00027b70();\n  if (cVar2 != '\\0') {\n    return 0;\n  }\n  if (DAT_00080fa4 != '\\0') {\n    FUN_00027da0();\n  }\n  FUN_0002bdc4();\n  FUN_0003208c();\n  FUN_000304d4(500);\n  if (DAT_0007eb9c < 4) {\n    return 1;\n  }\n  local_838._0_1_ = 'I';\n  local_838._1_1_ = 'n';\n  local_838._2_1_ = 'i';\n  local_838._3_1_ = 't';\n  uStack_834._0_1_ = ' ';\n  uStack_834._1_1_ = 'd';\n  uStack_834._2_1_ = 'o';\n  uStack_834._3_1_ = 'n';\n  uStack_830._0_1_ = 'e';\n  uStack_830._1_1_ = '!';\n  uStack_830._2_1_ = '\\n';\n  uStack_830._3_1_ = '\\0';\n  FUN_0002e584(3,&local_838,0);\n  return 1;\n}\n\n",
    "FUN_000350e8": "\nundefined4 FUN_000350e8(void)\n\n{\n  short sVar1;\n  short sVar2;\n  ushort uVar3;\n  int iVar4;\n  int iVar5;\n  char *__s1;\n  int iVar6;\n  int iVar7;\n  int iVar8;\n  char acStack_820 [2048];\n  \n  uVar3 = FUN_0001572c();\n  sVar1 = uVar3 - 10;\n  iVar6 = (int)sVar1;\n  sVar2 = sVar1;\n  if ((DAT_0007ede4 == 0xff) || (sVar2 = DAT_0007ede4, DAT_0007ede4 - iVar6 < 6)) {\n    DAT_0007ede4 = sVar2;\n    DAT_00482a90 = 0;\n  }\n  else {\n    DAT_00482a90 = DAT_00482a90 + 1;\n  }\n  if (DAT_00482a8c < 1) {\n    return 0;\n  }\n  if (DAT_00080fb4 == 1) {\n    return 0;\n  }\n  if ((iVar6 < 0x14) || ((1 < DAT_00482a90 && (uVar3 - 0x15 < 9)))) {\n    iVar4 = FUN_00019ab4();\n    iVar7 = 100;\n    iVar6 = (0x14 - iVar6) * 100;\n    if (iVar6 < 4000) {\n      iVar7 = iVar6 / 0x28;\n    }\n    if (4 < DAT_0007eb9c) {\n      iVar6 = (iVar4 - DAT_00482a8c) + iVar7;\n      if (iVar6 < 0) {\n        iVar6 = -iVar6;\n      }\n      snprintf(acStack_820,0x800,\"curr_vol = %d, g_voltage = %d,compensate_voltage = %d, abs = %d\",\n               iVar4,DAT_00482a8c,iVar7,iVar6);\n      FUN_0002e584(4,acStack_820,0);\n    }\n    iVar5 = iVar7 + DAT_00482a8c;\n    iVar6 = iVar4 - iVar5;\n    if (iVar6 < 0) {\n      iVar6 = -iVar6;\n    }\n    if (iVar6 < 0x14) {\n      DAT_0007ede4 = sVar1;\n      return 0;\n    }\n    iVar6 = iVar4 + 0x31;\n    if (iVar6 < iVar5) {\n      do {\n        iVar5 = FUN_00019ac4();\n        iVar8 = iVar6 + 0x14;\n        if (iVar5 <= iVar6) {\n          iVar5 = iVar7 + DAT_00482a8c;\n          break;\n        }\n        iVar4 = iVar4 + 0x14;\n        FUN_000195a8(iVar4);\n        usleep(200000);\n        iVar5 = iVar7 + DAT_00482a8c;\n        iVar6 = iVar8;\n      } while (iVar8 < iVar5);\n    }\n    if (iVar4 == iVar5) {\n      DAT_0007ede4 = sVar1;\n      return 0;\n    }\n  }\n  else if (uVar3 - 0x1e < 0x16) {\n    iVar7 = FUN_00019ab4();\n    iVar6 = iVar7;\n    if (DAT_00482a8c < iVar7 + -0x13) {\n      do {\n        iVar7 = iVar6 + -0x14;\n        FUN_000195a8(iVar7);\n        usleep(200000);\n        iVar4 = iVar6 + -0x27;\n        iVar6 = iVar7;\n      } while (DAT_00482a8c < iVar4);\n    }\n    iVar5 = DAT_00482a8c;\n    if (DAT_00482a8c == iVar7) {\n      DAT_0007ede4 = sVar1;\n      return 0;\n    }\n  }\n  else {\n    __s1 = (char *)FUN_0001e0c0();\n    iVar7 = strcmp(__s1,\"NBS1902L\");\n    if (iVar7 != 0) {\n      iVar6 = iVar6 + 10;\n    }\n    if (iVar6 < 0x32) {\n      DAT_0007ede4 = sVar1;\n      return 0;\n    }\n    iVar6 = FUN_00019ab4();\n    iVar5 = DAT_00482a8c + -0x14;\n    if (iVar5 == iVar6) {\n      DAT_0007ede4 = sVar1;\n      return 0;\n    }\n  }\n  FUN_000195a8(iVar5);\n  DAT_0007ede4 = sVar1;\n  return 0;\n}\n\n",
    "FUN_00035344": "\nvoid FUN_00035344(void)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 uVar3;\n  int iVar4;\n  uint uVar5;\n  uint uVar6;\n  int iVar7;\n  bool bVar8;\n  bool bVar9;\n  float fVar10;\n  char acStack_820 [2052];\n  \n  if ((((byte)DAT_0099edbc & 2) != 0) && (DAT_0099edc0._2_1_ < 0x65)) {\n    FUN_00013fb0();\n    if (DAT_00482a94 != 0) {\n      return;\n    }\n    if (3 < DAT_0007eb9c) {\n      snprintf(acStack_820,0x800,\"fan_etf: Set fixed fan speed=%d\\n\",(uint)DAT_0099edc0._2_1_);\n      FUN_0002e584(3,acStack_820,0);\n    }\n    DAT_00482a94 = 1;\n    return;\n  }\n  iVar1 = FUN_0001572c();\n  iVar2 = FUN_00015508();\n  uVar3 = FUN_000155c4();\n  iVar4 = FUN_0001572c();\n  uVar5 = iVar2 - iVar4;\n  if (DAT_0007ede8 != 0xff) {\n    iVar4 = DAT_0007ede8 - iVar1;\n    if (iVar4 < 0) {\n      iVar4 = -iVar4;\n    }\n    if (4 < iVar4) {\n      uVar6 = DAT_00482a98 + 1;\n      if (1 < (int)uVar6) {\n        uVar6 = 2;\n      }\n      bVar8 = (int)DAT_00482a98 < 1;\n      DAT_00482a98 = uVar6;\n      goto LAB_000353e4;\n    }\n  }\n  bVar8 = (int)DAT_00482a98 < 2;\n  DAT_00482a98 = DAT_00482a98 - 1 & ~((int)(DAT_00482a98 - 1) >> 0x1f);\nLAB_000353e4:\n  DAT_00482a9c = (uint)!bVar8;\n  DAT_0007ede8 = iVar1;\n  if (iVar2 < 0x49) {\n    iVar7 = (uVar5 ^ (int)uVar5 >> 0x1f) - ((int)uVar5 >> 0x1f);\n    bVar9 = SBORROW4(iVar7,0x20);\n    iVar4 = iVar7 + -0x20;\n    bVar8 = iVar7 == 0x20;\n    if (iVar7 < 0x21) {\n      bVar9 = SBORROW4(iVar1,0x32);\n      iVar4 = iVar1 + -0x32;\n      bVar8 = iVar1 == 0x32;\n    }\n    if ((bVar8 || iVar4 < 0 != bVar9) && (DAT_00482a9c == 0)) {\n      DAT_00482a94 = DAT_00482a9c;\n      if (iVar7 < 0x1c) {\n        if (0x16 < iVar7) {\n          if (DAT_0007eb9c < 5) {\n            return;\n          }\n          uVar3 = FUN_0001e4b0();\n          snprintf(acStack_820,0x800,\"max temp = %04d, diff = %04d, = pwm %04d\\n\",iVar2,iVar7,uVar3)\n          ;\n          FUN_0002e584(4,acStack_820,0);\n          return;\n        }\n        iVar1 = FUN_0001e4b0();\n        fVar10 = ((25.0 - (float)(longlong)iVar7) / 25.0) * 10.0;\n        uVar5 = (uint)(0.0 < fVar10) * (int)fVar10 & 0xff;\n        if ((int)(iVar1 - uVar5) < 0x28) {\n          uVar5 = 0x28;\n        }\n        else {\n          iVar1 = FUN_0001e4b0();\n          uVar5 = iVar1 - uVar5 & 0xff;\n        }\n        if (4 < DAT_0007eb9c) {\n          uVar3 = FUN_0001e4b0();\n          snprintf(acStack_820,0x800,\"max temp = %04d, diff = %04d, - pwm form %04d to %04d\\n\",iVar2\n                   ,iVar7,uVar3,uVar5);\n          FUN_0002e584(4,acStack_820,0);\n        }\n        if (0x43 < iVar2) {\n          return;\n        }\n      }\n      else {\n        iVar1 = FUN_0001e4b0();\n        fVar10 = (((float)(longlong)iVar7 - 25.0) / 25.0) * 10.0;\n        uVar5 = (uint)(0.0 < fVar10) * (int)fVar10 & 0xff;\n        if ((int)(uVar5 + iVar1) < 100) {\n          iVar1 = FUN_0001e4b0();\n          uVar5 = uVar5 + iVar1 & 0xff;\n        }\n        else {\n          uVar5 = 100;\n        }\n        if (4 < DAT_0007eb9c) {\n          uVar3 = FUN_0001e4b0();\n          snprintf(acStack_820,0x800,\"max temp = %04d, diff = %04d, + pwm form %04d to %04d\\n\",iVar2\n                   ,iVar7,uVar3,uVar5);\n          FUN_0002e584(4,acStack_820,0);\n        }\n      }\n      FUN_00013fb0(uVar5);\n      return;\n    }\n  }\n  if (DAT_00482a94 == 0) {\n    if (4 < DAT_0007eb9c) {\n      snprintf(acStack_820,0x800,\n               \"min pic temp = %d max pic temp = %d pic diff = %d, max chip temp = %d, last diff continuous_time = %d\"\n               ,iVar1,iVar2,uVar5,uVar3,DAT_00482a98);\n      FUN_0002e584(4,acStack_820,0);\n    }\n    DAT_00482a94 = 1;\n  }\n  FUN_00013fb0(100);\n  return;\n}\n\n",
    "FUN_000356c4": "\nvoid FUN_000356c4(undefined4 param_1,undefined4 param_2)\n\n{\n  char acStack_808 [2056];\n  \n  switch(param_1) {\n  case 0:\n    snprintf((char *)&DAT_004fcae8,0x40,\"J%d:1\",param_2);\n    break;\n  case 1:\n    snprintf((char *)&DAT_004fcae8,0x40,\"J%d:2\",param_2);\n    break;\n  case 2:\n    snprintf((char *)&DAT_004fcae8,0x40,\"J%d:8\",param_2);\n    break;\n  case 3:\n    snprintf((char *)&DAT_004fcae8,0x40,\"J%d:4\",param_2);\n    break;\n  case 4:\n    snprintf((char *)&DAT_004fcae8,0x40,\"J%d:5\",param_2);\n    break;\n  case 5:\n    DAT_004fcae8 = &DAT_00313a52;\n    break;\n  case 6:\n    DAT_004fcae8 = &DAT_00323a52;\n    break;\n  case 7:\n    snprintf((char *)&DAT_004fcae8,0x40,\"T:%d\",param_2);\n    break;\n  case 8:\n    DAT_004fcae8 = &DAT_00313a50;\n    break;\n  case 9:\n    DAT_004fcae8 = &DAT_00323a50;\n    break;\n  case 10:\n    DAT_004fcae8 = &DAT_00313a46;\n    break;\n  case 0xb:\n    snprintf((char *)&DAT_004fcae8,0x40,\"J%d:6\",param_2);\n    break;\n  case 0xc:\n    DAT_004fcae8 = &DAT_00313a56;\n    break;\n  case 0xd:\n    DAT_004fcae8 = &DAT_00313a4d;\n    break;\n  case 0xe:\n    DAT_004fcae8 = &DAT_00313a4e;\n    break;\n  case 0xf:\n    DAT_004fcae8 = &DAT_00343a50;\n    break;\n  default:\n    DAT_004fcae8 = (undefined *)0x6e6b6e75;\n    DAT_004fcaec._0_1_ = 'o';\n    DAT_004fcaec._1_1_ = 'w';\n    DAT_004fcaec._2_1_ = 'n';\n    DAT_004fcaec._3_1_ = '\\0';\n    break;\n  case 0x11:\n    DAT_004fcae8 = &DAT_00333a52;\n    break;\n  case 0x12:\n    DAT_004fcae8 = &DAT_00313a43;\n    break;\n  case 0x13:\n    DAT_004fcae8 = &DAT_00323a4e;\n    break;\n  case 0x14:\n    DAT_004fcae8 = &DAT_00303a53;\n    break;\n  case 0x15:\n    DAT_004fcae8 = &DAT_00333a4e;\n    break;\n  case 0x16:\n    DAT_004fcae8 = &DAT_00353a50;\n  }\n  FUN_00036558(1);\n  if (3 < DAT_0007eb9c) {\n    snprintf(acStack_808,0x800,\"Sweep error string = %s.\\n\",&DAT_004fcae8);\n    FUN_0002e584(3,acStack_808,0);\n  }\n  return;\n}\n\n",
    "FUN_000359ec": "\nundefined4 * FUN_000359ec(void)\n\n{\n  return &DAT_004fcae8;\n}\n\n",
    "FUN_00035b1c": "\nundefined4 FUN_00035b1c(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined4 uVar4;\n  float fVar5;\n  float fVar6;\n  char acStack_820 [2052];\n  \n  uVar4 = 0;\n  iVar3 = 0;\n  do {\n    iVar2 = FUN_0001e29c(iVar3);\n    iVar1 = (iVar3 + 0x408) * 4;\n    if (iVar2 != 0) {\n      fVar5 = *(float *)(DAT_004fcb28 + iVar1);\n      fVar6 = *(float *)(*(int *)(DAT_004fcb28 + 8) + 0x14);\n      if (3 < DAT_0007eb9c) {\n        snprintf(acStack_820,0x800,\n                 \"chain = %d, nonce_rate_max = %.4f, nonce_rate_threshold = %.4f\\n\",iVar3,\n                 (double)fVar5,(double)fVar6);\n        FUN_0002e584(3,acStack_820,0);\n        fVar5 = *(float *)(DAT_004fcb28 + iVar1);\n        fVar6 = *(float *)(*(int *)(DAT_004fcb28 + 8) + 0x14);\n      }\n      if (fVar5 < fVar6) {\n        uVar4 = 1;\n        *(undefined4 *)(DAT_004fcb28 + (iVar3 + 0x410) * 4) = 1;\n      }\n    }\n    iVar3 = iVar3 + 1;\n  } while (iVar3 != 4);\n  return uVar4;\n}\n\n",
    "FUN_00035c04": "\nuint FUN_00035c04(int param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  uint uVar5;\n  int *piVar6;\n  int iVar7;\n  \n  uVar5 = 0;\n  iVar3 = 0;\n  do {\n    iVar1 = FUN_0001e29c(iVar3);\n    if ((iVar1 != 0) && (iVar1 = FUN_0001e0f0(), iVar1 != 0)) {\n      piVar6 = (int *)(param_1 + -4 + iVar3 * 0x400);\n      iVar4 = 0;\n      do {\n        piVar6 = piVar6 + 1;\n        iVar7 = *piVar6;\n        iVar4 = iVar4 + 1;\n        iVar2 = FUN_0001e130();\n        uVar5 = iVar7 * iVar2 + uVar5;\n      } while (iVar1 != iVar4);\n    }\n    iVar3 = iVar3 + 1;\n  } while (iVar3 != 4);\n  return uVar5 / 1000;\n}\n\n",
    "FUN_00035c74": "\nvoid FUN_00035c74(void)\n\n{\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined4 uStack_7fc;\n  undefined4 uStack_7f8;\n  undefined4 local_7f4;\n  undefined4 uStack_7f0;\n  undefined4 uStack_7ec;\n  \n  if (4 < DAT_0007eb9c) {\n    local_808._0_1_ = '[';\n    local_808._1_1_ = 'D';\n    local_808._2_1_ = 'E';\n    local_808._3_1_ = 'B';\n    uStack_804._0_1_ = 'U';\n    uStack_804._1_1_ = 'G';\n    uStack_804._2_1_ = ']';\n    uStack_804._3_1_ = ' ';\n    uStack_800._0_1_ = 'S';\n    uStack_800._1_1_ = 'w';\n    uStack_800._2_1_ = 'e';\n    uStack_800._3_1_ = 'e';\n    uStack_7fc._0_1_ = 'p';\n    uStack_7fc._1_1_ = ' ';\n    uStack_7fc._2_1_ = 'e';\n    uStack_7fc._3_1_ = 'x';\n    uStack_7f8._0_1_ = 'i';\n    uStack_7f8._1_1_ = 't';\n    uStack_7f8._2_1_ = '.';\n    uStack_7f8._3_1_ = '\\n';\n    local_7f4 = local_7f4 & 0xffffff00;\n    FUN_0002e584(4,&local_808,0);\n    if (4 < DAT_0007eb9c) {\n      local_808._0_1_ = '[';\n      local_808._1_1_ = 'D';\n      local_808._2_1_ = 'E';\n      local_808._3_1_ = 'B';\n      uStack_804._0_1_ = 'U';\n      uStack_804._1_1_ = 'G';\n      uStack_804._2_1_ = ']';\n      uStack_804._3_1_ = ' ';\n      uStack_800._0_1_ = 'F';\n      uStack_800._1_1_ = 'r';\n      uStack_800._2_1_ = 'e';\n      uStack_800._3_1_ = 'e';\n      uStack_7fc._0_1_ = ' ';\n      uStack_7fc._1_1_ = 'm';\n      uStack_7fc._2_1_ = 'e';\n      uStack_7fc._3_1_ = 'm';\n      uStack_7f8._0_1_ = 'o';\n      uStack_7f8._1_1_ = 'r';\n      uStack_7f8._2_1_ = 'y';\n      uStack_7f8._3_1_ = ' ';\n      local_7f4._0_1_ = 'f';\n      local_7f4._1_1_ = 'o';\n      local_7f4._2_1_ = 'r';\n      local_7f4._3_1_ = ' ';\n      uStack_7f0._0_1_ = 's';\n      uStack_7f0._1_1_ = 'w';\n      uStack_7f0._2_1_ = 'e';\n      uStack_7f0._3_1_ = 'e';\n      uStack_7ec._0_1_ = 'p';\n      uStack_7ec._1_1_ = '.';\n      uStack_7ec._2_1_ = '\\n';\n      uStack_7ec._3_1_ = '\\0';\n      FUN_0002e584(4,&local_808,0);\n    }\n  }\n  if (DAT_004fcb28 != (void *)0x0) {\n    free(DAT_004fcb28);\n    DAT_004fcb28 = (void *)0x0;\n  }\n  return;\n}\n\n",
    "FUN_00035d24": "\nint FUN_00035d24(int **param_1,undefined4 param_2,undefined4 param_3)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  int *piVar5;\n  uint *puVar6;\n  int iVar7;\n  uint uVar8;\n  uint uVar9;\n  int *piVar10;\n  int local_834;\n  uint local_82c;\n  undefined4 local_828;\n  undefined4 uStack_824;\n  undefined4 uStack_820;\n  undefined4 uStack_81c;\n  undefined4 local_818;\n  \n  if (3 < DAT_0007eb9c) {\n    local_828 = CONCAT22(local_828._2_2_,10);\n    FUN_0002ea54(3,&local_828,0);\n    if (3 < DAT_0007eb9c) {\n      snprintf((char *)&local_828,0x800,\">>>> Get ideal hash rate, round %d.\\n\",param_3);\n      FUN_0002e584(3,&local_828,0);\n    }\n  }\n  iVar1 = FUN_00039fb4(param_2);\n  if (iVar1 == 0) {\n    FUN_00039a7c();\n    piVar5 = *param_1;\n    DAT_004fcb2c = *piVar5;\n    if (piVar5[4] < DAT_004fcb2c) {\n      *piVar5 = piVar5[4];\n      DAT_004fcb2c = **param_1;\n    }\n    FUN_0001ad08((float)(longlong)DAT_0007edd0,DAT_004fcb28 + 0xc,DAT_00482a70,\n                 *(undefined *)(*(int *)(DAT_004fcb28 + 8) + 8));\n    iVar2 = FUN_00019ab4();\n    if ((iVar2 != DAT_004fcb2c) && (iVar2 = FUN_000195a8(DAT_004fcb2c), iVar2 != 0)) {\n      return iVar2;\n    }\n    uVar9 = 0xffffff;\n    iVar2 = 0;\n    do {\n      iVar3 = FUN_0001e29c(iVar2);\n      if ((iVar3 != 0) && (iVar3 = FUN_0001e0f0(), iVar3 != 0)) {\n        puVar6 = (uint *)(DAT_004fcb28 + iVar2 * 0x400 + 8);\n        do {\n          puVar6 = puVar6 + 1;\n          if (*puVar6 <= uVar9) {\n            uVar9 = *puVar6;\n          }\n        } while (puVar6 != (uint *)(DAT_004fcb28 + 8 + (iVar3 + iVar2 * 0x100) * 4));\n      }\n      iVar2 = iVar2 + 1;\n    } while (iVar2 != 4);\n    if (3 < DAT_0007eb9c) {\n      snprintf((char *)&local_828,0x800,\"chain = %d, freq_min = %d\\n\",0xff,uVar9);\n      FUN_0002e584(3,&local_828,0);\n    }\n    uVar8 = 0;\n    iVar2 = 0;\n    do {\n      iVar3 = FUN_0001e29c(iVar2);\n      if ((iVar3 != 0) && (iVar3 = FUN_0001e0f0(), iVar3 != 0)) {\n        puVar6 = (uint *)(DAT_004fcb28 + iVar2 * 0x400 + 8);\n        do {\n          puVar6 = puVar6 + 1;\n          if (uVar8 < *puVar6) {\n            uVar8 = *puVar6;\n          }\n        } while (puVar6 != (uint *)(DAT_004fcb28 + 8 + (iVar3 + iVar2 * 0x100) * 4));\n      }\n      iVar2 = iVar2 + 1;\n    } while (iVar2 != 4);\n    if (3 < DAT_0007eb9c) {\n      snprintf((char *)&local_828,0x800,\"chain = %d, freq_max = %d\\n\",0xff,uVar8);\n      FUN_0002e584(3,&local_828,0);\n    }\n    iVar2 = 0;\n    local_82c = uVar8;\n    FUN_000321b8(uVar9,DAT_0007eb58,0x14);\n    do {\n      iVar3 = FUN_0001e29c(iVar2);\n      if (iVar3 != 0) {\n        FUN_0003962c(iVar2,1);\n      }\n      iVar2 = iVar2 + 1;\n    } while (iVar2 != 4);\n    iVar3 = 0;\n    FUN_0003a86c(&local_82c);\n    iVar2 = FUN_000391f4();\n    do {\n      iVar4 = FUN_0001e29c(iVar3);\n      if (iVar4 != 0) {\n        FUN_0003a054(iVar3,iVar2);\n      }\n      iVar3 = iVar3 + 1;\n    } while (iVar3 != 4);\n    iVar3 = 0;\n    local_834 = 0;\n    do {\n      iVar4 = FUN_0001e29c(iVar3);\n      if (iVar4 != 0) {\n        iVar4 = FUN_0001e0f0();\n        uVar9 = DAT_0007eb9c;\n        if (iVar4 != 0) {\n          iVar7 = iVar4 + iVar3 * 0x100;\n          iVar4 = 0;\n          piVar5 = (int *)(DAT_004fcb28 + iVar3 * 0x400 + 8);\n          piVar10 = (int *)(&DAT_00808ffc + iVar3 * 0x400 + iVar2);\n          do {\n            piVar5 = piVar5 + 1;\n            piVar10 = piVar10 + 1;\n            iVar4 = iVar4 + (uint)(*piVar10 * *piVar5) / 8000;\n          } while ((int *)(DAT_004fcb28 + 8 + iVar7 * 4) != piVar5);\n          local_834 = local_834 + iVar4;\n        }\n        *(int *)(DAT_004fcb28 + (iVar3 + 0x402) * 4 + 4) = iVar4;\n        if (3 < uVar9) {\n          snprintf((char *)&local_828,0x800,\"chain = %d, ideal_hash_rate_GH = %d\\n\",iVar3,iVar4);\n          FUN_0002e584(3,&local_828,0);\n        }\n      }\n      iVar3 = iVar3 + 1;\n    } while (iVar3 != 4);\n    if (3 < DAT_0007eb9c) {\n      snprintf((char *)&local_828,0x800,\"hash_rate_total_GH = %d\\n\",local_834);\n      FUN_0002e584(3,&local_828,0);\n    }\n  }\n  else if (3 < DAT_0007eb9c) {\n    local_828._0_1_ = 'B';\n    local_828._1_1_ = 'o';\n    local_828._2_1_ = 'a';\n    local_828._3_1_ = 'r';\n    uStack_824._0_1_ = 'd';\n    uStack_824._1_1_ = ' ';\n    uStack_824._2_1_ = 'i';\n    uStack_824._3_1_ = 'n';\n    uStack_820._0_1_ = 'i';\n    uStack_820._1_1_ = 't';\n    uStack_820._2_1_ = ' ';\n    uStack_820._3_1_ = 'f';\n    uStack_81c._0_1_ = 'a';\n    uStack_81c._1_1_ = 'i';\n    uStack_81c._2_1_ = 'l';\n    uStack_81c._3_1_ = 'e';\n    local_818._0_1_ = 'd';\n    local_818._1_1_ = '.';\n    local_818._2_1_ = '\\n';\n    local_818._3_1_ = '\\0';\n    FUN_0002e584(3,&local_828,0);\n    return iVar1;\n  }\n  return iVar1;\n}\n\n",
    "FUN_00036174": "\nundefined4 * FUN_00036174(undefined4 *param_1)\n\n{\n  char acStack_808 [2048];\n  \n  FUN_000356c4(0xf,0xff);\n  if (3 < DAT_0007eb9c) {\n    snprintf(acStack_808,0x800,\"Unknown miner type(%d).\\n\",2);\n    FUN_0002e584(3,acStack_808,0);\n  }\n  *param_1 = 3000;\n  param_1[1] = 2000;\n  param_1[2] = &LAB_000359f8;\n  return param_1;\n}\n\n",
    "FUN_000361e4": "\nvoid FUN_000361e4(undefined4 param_1)\n\n{\n  DAT_004fcb2c = param_1;\n  return;\n}\n\n",
    "FUN_000361f4": "\nundefined4 FUN_000361f4(void)\n\n{\n  return DAT_004fcb2c;\n}\n\n",
    "FUN_00036208": "\nvoid FUN_00036208(void)\n\n{\n  FUN_000195a8(DAT_004fcb2c);\n  return;\n}\n\n",
    "FUN_00036218": "\nFILE * FUN_00036218(void)\n\n{\n  FILE *__stream;\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined4 uStack_7fc;\n  undefined4 local_7f8;\n  undefined4 uStack_7f4;\n  undefined4 uStack_7f0;\n  undefined4 uStack_7ec;\n  undefined4 local_7e8;\n  undefined4 uStack_7e4;\n  undefined local_7e0;\n  \n  __stream = fopen64(\"/config/scanfreqdone\",\"r\");\n  if (4 < DAT_0007eb9c) {\n    local_808._0_1_ = '[';\n    local_808._1_1_ = 'D';\n    local_808._2_1_ = 'E';\n    local_808._3_1_ = 'B';\n    uStack_804._0_1_ = 'U';\n    uStack_804._1_1_ = 'G';\n    uStack_804._2_1_ = ']';\n    uStack_804._3_1_ = ' ';\n    uStack_800._0_1_ = 'C';\n    uStack_800._1_1_ = 'h';\n    uStack_800._2_1_ = 'e';\n    uStack_800._3_1_ = 'c';\n    uStack_7fc._0_1_ = 'k';\n    uStack_7fc._1_1_ = ' ';\n    uStack_7fc._2_1_ = 'i';\n    uStack_7fc._3_1_ = 'f';\n    local_7f8._0_1_ = ' ';\n    local_7f8._1_1_ = 's';\n    local_7f8._2_1_ = 'w';\n    local_7f8._3_1_ = 'e';\n    uStack_7f4._0_1_ = 'e';\n    uStack_7f4._1_1_ = 'p';\n    uStack_7f4._2_1_ = ' ';\n    uStack_7f4._3_1_ = 'i';\n    uStack_7f0._0_1_ = 's';\n    uStack_7f0._1_1_ = ' ';\n    uStack_7f0._2_1_ = 'a';\n    uStack_7f0._3_1_ = 'l';\n    uStack_7ec._0_1_ = 'r';\n    uStack_7ec._1_1_ = 'e';\n    uStack_7ec._2_1_ = 'a';\n    uStack_7ec._3_1_ = 'd';\n    local_7e8._0_1_ = 'y';\n    local_7e8._1_1_ = ' ';\n    local_7e8._2_1_ = 'd';\n    local_7e8._3_1_ = 'o';\n    uStack_7e4._0_1_ = 'n';\n    uStack_7e4._1_1_ = 'e';\n    uStack_7e4._2_1_ = '.';\n    uStack_7e4._3_1_ = '\\n';\n    local_7e0 = 0;\n    FUN_0002e584(4,&local_808,0);\n  }\n  if (__stream != (FILE *)0x0) {\n    fclose(__stream);\n    __stream = (FILE *)0x1;\n  }\n  return __stream;\n}\n\n",
    "FUN_000362a0": "\nundefined4 FUN_000362a0(int param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  int *piVar5;\n  undefined4 uVar6;\n  int *piVar7;\n  undefined4 *puVar8;\n  char *pcVar9;\n  undefined auStack_820 [8];\n  undefined4 local_818;\n  undefined4 uStack_814;\n  undefined4 uStack_810;\n  undefined4 uStack_80c;\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 local_800;\n  undefined4 uStack_7fc;\n  undefined4 local_7f8;\n  \n  puVar8 = &local_818;\n  iVar1 = FUN_00036218();\n  if (iVar1 != 0) {\n    if (3 < DAT_0007eb9c) {\n      local_818._0_1_ = 'S';\n      local_818._1_1_ = 'w';\n      local_818._2_1_ = 'e';\n      local_818._3_1_ = 'e';\n      uStack_814._0_1_ = 'p';\n      uStack_814._1_1_ = ' ';\n      uStack_814._2_1_ = 'a';\n      uStack_814._3_1_ = 'l';\n      uStack_810._0_1_ = 'r';\n      uStack_810._1_1_ = 'e';\n      uStack_810._2_1_ = 'a';\n      uStack_810._3_1_ = 'd';\n      uStack_80c._0_1_ = 'y';\n      uStack_80c._1_1_ = ' ';\n      uStack_80c._2_1_ = 'd';\n      uStack_80c._3_1_ = 'o';\n      local_808._0_1_ = 'n';\n      local_808._1_1_ = 'e';\n      local_808._2_1_ = ',';\n      local_808._3_1_ = ' ';\n      uStack_804._0_1_ = 'e';\n      uStack_804._1_1_ = 'x';\n      uStack_804._2_1_ = 'i';\n      uStack_804._3_1_ = 't';\n      local_800 = CONCAT13(local_800._3_1_,0xa2e);\n      FUN_0002e584(3,&local_818,0);\n      return 0;\n    }\n    return 0;\n  }\n  FUN_000302a0(auStack_820);\n  DAT_004fcb30 = 2;\n  if (DAT_0007eb9c < 5) {\n    if (1 < param_1 - 0xa0U) {\nLAB_00036360:\n      FUN_000356c4(0x14,0xff);\n      if (DAT_0007eb9c < 4) {\n        DAT_004fcb30 = 1;\n        return 0xffffffff;\n      }\n      pcVar9 = \"Sweep type error, exit.\\n\";\n      goto LAB_00036490;\n    }\n  }\n  else {\n    snprintf((char *)&local_818,0x800,\"[DEBUG] Sweep init, sweep_type = 0x%X.\\n\",param_1);\n    FUN_0002e584(4,&local_818,0);\n    if (1 < param_1 - 0xa0U) goto LAB_00036360;\n    if (4 < DAT_0007eb9c) {\n      local_818._0_1_ = '[';\n      local_818._1_1_ = 'D';\n      local_818._2_1_ = 'E';\n      local_818._3_1_ = 'B';\n      uStack_814._0_1_ = 'U';\n      uStack_814._1_1_ = 'G';\n      uStack_814._2_1_ = ']';\n      uStack_814._3_1_ = ' ';\n      uStack_810._0_1_ = 'A';\n      uStack_810._1_1_ = 'l';\n      uStack_810._2_1_ = 'l';\n      uStack_810._3_1_ = 'o';\n      uStack_80c._0_1_ = 'c';\n      uStack_80c._1_1_ = 'a';\n      uStack_80c._2_1_ = 't';\n      uStack_80c._3_1_ = 'e';\n      local_808._0_1_ = ' ';\n      local_808._1_1_ = 'm';\n      local_808._2_1_ = 'e';\n      local_808._3_1_ = 'm';\n      uStack_804._0_1_ = 'o';\n      uStack_804._1_1_ = 'r';\n      uStack_804._2_1_ = 'y';\n      uStack_804._3_1_ = ' ';\n      local_800._0_1_ = 'f';\n      local_800._1_1_ = 'o';\n      local_800._2_1_ = 'r';\n      local_800._3_1_ = ' ';\n      uStack_7fc._0_1_ = 's';\n      uStack_7fc._1_1_ = 'w';\n      uStack_7fc._2_1_ = 'e';\n      uStack_7fc._3_1_ = 'e';\n      local_7f8._0_1_ = 'p';\n      local_7f8._1_1_ = '.';\n      local_7f8._2_1_ = '\\n';\n      local_7f8._3_1_ = '\\0';\n      FUN_0002e584(4,&local_818,0);\n    }\n  }\n  if ((DAT_004fcb28 != (int *)0x0) ||\n     (DAT_004fcb28 = (int *)calloc(0x107c,1), DAT_004fcb28 != (int *)0x0)) {\n    piVar5 = DAT_004fcb28;\n    *DAT_004fcb28 = param_1;\n    iVar1 = 0;\n    piVar5[1] = 0x477fff00;\n    do {\n      iVar2 = FUN_0001e29c(iVar1);\n      if ((iVar2 != 0) && (iVar2 = FUN_0001e0f0(), 0 < iVar2)) {\n        piVar5 = DAT_004fcb28 + iVar2 + iVar1 * 0x100 + 2;\n        piVar7 = DAT_004fcb28 + iVar1 * 0x100 + 2;\n        do {\n          piVar7 = piVar7 + 1;\n          *piVar7 = 300;\n        } while (piVar7 != piVar5);\n      }\n      iVar1 = iVar1 + 1;\n    } while (iVar1 != 4);\n    FUN_000356c4(0xf,0xff);\n    if (DAT_0007eb9c < 4) {\n      DAT_004fcb30 = 1;\n      return 0xffffffff;\n    }\n    snprintf((char *)&local_818,0x800,\"Unknown miner type(%d).\\n\",2);\n    FUN_0002e584(3,&local_818,0);\n    DAT_004fcb30 = 1;\n    return 0xffffffff;\n  }\n  FUN_000356c4(0xd,0xff);\n  if (DAT_0007eb9c < 4) {\n    DAT_004fcb30 = 1;\n    return 0xffffffff;\n  }\n  local_818._0_1_ = 'F';\n  local_818._1_1_ = 'a';\n  local_818._2_1_ = 'i';\n  local_818._3_1_ = 'l';\n  uStack_814._0_1_ = ' ';\n  uStack_814._1_1_ = 't';\n  uStack_814._2_1_ = 'o';\n  uStack_814._3_1_ = ' ';\n  uStack_810._0_1_ = 'a';\n  uStack_810._1_1_ = 'l';\n  uStack_810._2_1_ = 'l';\n  uStack_810._3_1_ = 'o';\n  uStack_80c._0_1_ = 'c';\n  uStack_80c._1_1_ = 'a';\n  uStack_80c._2_1_ = 't';\n  uStack_80c._3_1_ = 'e';\n  pcVar9 = \" memory for sweep ctxt.\\n\";\n  puVar8 = &local_808;\nLAB_00036490:\n  uVar3 = *(undefined4 *)((int)pcVar9 + 4);\n  uVar4 = *(undefined4 *)((int)pcVar9 + 8);\n  uVar6 = *(undefined4 *)((int)pcVar9 + 0xc);\n  *puVar8 = *(undefined4 *)pcVar9;\n  puVar8[1] = uVar3;\n  puVar8[2] = uVar4;\n  puVar8[3] = uVar6;\n  uVar3 = *(undefined4 *)((int)pcVar9 + 0x14);\n  uVar4 = *(undefined4 *)((int)pcVar9 + 0x18);\n  puVar8[4] = *(undefined4 *)((int)pcVar9 + 0x10);\n  puVar8[5] = uVar3;\n  *(char *)(puVar8 + 6) = (char)uVar4;\n  FUN_0002e584(3,&local_818,0);\n  DAT_004fcb30 = 1;\n  return 0xffffffff;\n}\n\n",
    "FUN_00036538": "\nundefined4 FUN_00036538(undefined4 *param_1)\n\n{\n  *param_1 = 1000;\n  return 0;\n}\n\n",
    "FUN_00036548": "\nundefined4 FUN_00036548(void)\n\n{\n  return DAT_004fcb30;\n}\n\n",
    "FUN_00036558": "\nvoid FUN_00036558(undefined4 param_1)\n\n{\n  DAT_004fcb30 = param_1;\n  return;\n}\n\n",
    "FUN_00036680": "\nundefined4 FUN_00036680(int param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined4 uVar4;\n  uint uVar5;\n  int iVar6;\n  char acStack_838 [2052];\n  \n  if (4 < DAT_0007eb9c) {\n    snprintf(acStack_838,0x800,\"[DEBUG] Check if is unbalanche happen, chain = %d\\n\",param_1);\n    FUN_0002e584(4,acStack_838,0);\n  }\n  iVar1 = FUN_0001e0f0();\n  if (iVar1 == 0) {\n    uVar4 = 0;\n  }\n  else {\n    uVar4 = 0;\n    iVar3 = 0;\n    do {\n      while( true ) {\n        iVar6 = param_1 * 0x100 + iVar3 + 0x202402;\n        uVar5 = *(uint *)(DAT_004fcb34 + iVar6 * 4);\n        iVar2 = FUN_0001e130();\n        if (uVar5 <= (uint)(iVar2 * 8)) break;\n        uVar4 = 1;\n        if (DAT_0007eb9c < 4) goto LAB_00036700;\nLAB_0003676c:\n        iVar2 = iVar3 + 1;\n        snprintf(acStack_838,0x800,\"Unbalance happened: chain = %d, asic = %d\\n\",param_1,iVar3);\n        uVar4 = 1;\n        FUN_0002e584(3,acStack_838,0);\n        iVar3 = iVar2;\n        if (iVar1 == iVar2) {\n          return 1;\n        }\n      }\n      uVar5 = *(uint *)(DAT_004fcb34 + iVar6 * 4);\n      iVar2 = FUN_0001e130();\n      if (((double)(ulonglong)uVar5 < (double)(longlong)(iVar2 << 3) * 0.75) &&\n         (uVar4 = 1, 3 < DAT_0007eb9c)) goto LAB_0003676c;\nLAB_00036700:\n      iVar3 = iVar3 + 1;\n    } while (iVar1 != iVar3);\n  }\n  return uVar4;\n}\n\n",
    "FUN_00036908": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nvoid FUN_00036908(void)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  undefined4 local_818;\n  undefined4 uStack_814;\n  undefined4 uStack_810;\n  undefined4 uStack_80c;\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined4 uStack_7fc;\n  undefined4 local_7f8;\n  undefined4 uStack_7f4;\n  undefined4 uStack_7f0;\n  undefined4 uStack_7ec;\n  undefined4 local_7e8;\n  \n  if (4 < DAT_0007eb9c) {\n    local_818._0_1_ = '[';\n    local_818._1_1_ = 'D';\n    local_818._2_1_ = 'E';\n    local_818._3_1_ = 'B';\n    uStack_814._0_1_ = 'U';\n    uStack_814._1_1_ = 'G';\n    uStack_814._2_1_ = ']';\n    uStack_814._3_1_ = ' ';\n    uStack_810._0_1_ = 'S';\n    uStack_810._1_1_ = 'e';\n    uStack_810._2_1_ = 'n';\n    uStack_810._3_1_ = 'd';\n    uStack_80c._0_1_ = ' ';\n    uStack_80c._1_1_ = '1';\n    uStack_80c._2_1_ = '-';\n    uStack_80c._3_1_ = 'm';\n    local_808._0_1_ = 'i';\n    local_808._1_1_ = 'd';\n    local_808._2_1_ = 's';\n    local_808._3_1_ = 't';\n    uStack_804._0_1_ = 'a';\n    uStack_804._1_1_ = 't';\n    uStack_804._2_1_ = 'e';\n    uStack_804._3_1_ = ' ';\n    uStack_800._0_1_ = 'w';\n    uStack_800._1_1_ = 'o';\n    uStack_800._2_1_ = 'r';\n    uStack_800._3_1_ = 'k';\n    uStack_7fc = CONCAT13(uStack_7fc._3_1_,0xa2e);\n    FUN_0002e584(4,&local_818,0);\n  }\n  uVar3 = 0;\n  memset(&local_818,0,0x34);\n  local_818 = CONCAT31(local_818._1_3_,1);\n  do {\n    iVar1 = FUN_0001e29c(uVar3);\n    if (iVar1 != 0) {\n      while (uVar2 = FUN_00044ed4(), (uVar2 & 1 << (uVar3 & 0xff)) == 0) {\n        FUN_000304d4(1);\n      }\n      local_818 = CONCAT22(local_818._2_2_,CONCAT11((char)uVar3,(char)local_818)) | 0x8000;\n      FUN_0001edf0(local_818,uStack_814,uStack_810,uStack_80c,local_808,uStack_804,uStack_800,\n                   uStack_7fc,local_7f8,uStack_7f4,uStack_7f0,uStack_7ec,local_7e8);\n      FUN_000304d4(10);\n    }\n    uVar3 = uVar3 + 1;\n  } while (uVar3 != 4);\n  return;\n}\n\n",
    "FUN_00036a0c": "\nvoid FUN_00036a0c(void)\n\n{\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined4 uStack_7fc;\n  undefined4 local_7f8;\n  undefined4 uStack_7f4;\n  undefined4 uStack_7f0;\n  undefined4 uStack_7ec;\n  undefined2 uStack_7e8;\n  undefined local_7e6;\n  \n  if (4 < DAT_0007eb9c) {\n    local_808._0_1_ = '[';\n    local_808._1_1_ = 'D';\n    local_808._2_1_ = 'E';\n    local_808._3_1_ = 'B';\n    uStack_804._0_1_ = 'U';\n    uStack_804._1_1_ = 'G';\n    uStack_804._2_1_ = ']';\n    uStack_804._3_1_ = ' ';\n    uStack_800._0_1_ = 'F';\n    uStack_800._1_1_ = 'r';\n    uStack_800._2_1_ = 'e';\n    uStack_800._3_1_ = 'e';\n    uStack_7fc._0_1_ = ' ';\n    uStack_7fc._1_1_ = 'm';\n    uStack_7fc._2_1_ = 'e';\n    uStack_7fc._3_1_ = 'm';\n    local_7f8._0_1_ = 'o';\n    local_7f8._1_1_ = 'r';\n    local_7f8._2_1_ = 'y';\n    local_7f8._3_1_ = ' ';\n    uStack_7f4._0_1_ = 'f';\n    uStack_7f4._1_1_ = 'o';\n    uStack_7f4._2_1_ = 'r';\n    uStack_7f4._3_1_ = ' ';\n    uStack_7f0._0_1_ = 'h';\n    uStack_7f0._1_1_ = 'w';\n    uStack_7f0._2_1_ = ' ';\n    uStack_7f0._3_1_ = 's';\n    uStack_7ec._0_1_ = 'w';\n    uStack_7ec._1_1_ = 'e';\n    uStack_7ec._2_1_ = 'e';\n    uStack_7ec._3_1_ = 'p';\n    uStack_7e8 = 0xa2e;\n    local_7e6 = 0;\n    FUN_0002e584(4,&local_808,0);\n  }\n  if (DAT_004fcb34 != (void *)0x0) {\n    if (*(void **)((int)DAT_004fcb34 + 4) != (void *)0x0) {\n      free(*(void **)((int)DAT_004fcb34 + 4));\n    }\n    free(DAT_004fcb34);\n    DAT_004fcb34 = (void *)0x0;\n  }\n  return;\n}\n\n",
    "FUN_00036b04": "\nundefined4 FUN_00036b04(void)\n\n{\n  undefined4 uVar1;\n  void *pvVar2;\n  void *pvVar3;\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined4 uStack_804;\n  undefined4 local_800;\n  undefined4 uStack_7fc;\n  undefined4 uStack_7f8;\n  undefined4 uStack_7f4;\n  undefined4 local_7f0;\n  undefined4 uStack_7ec;\n  undefined4 uStack_7e8;\n  undefined4 uStack_7e4;\n  undefined4 local_7e0;\n  \n  if (4 < DAT_0007eb9c) {\n    local_810._0_1_ = '[';\n    local_810._1_1_ = 'D';\n    local_810._2_1_ = 'E';\n    local_810._3_1_ = 'B';\n    uStack_80c._0_1_ = 'U';\n    uStack_80c._1_1_ = 'G';\n    uStack_80c._2_1_ = ']';\n    uStack_80c._3_1_ = ' ';\n    uStack_808._0_1_ = 'H';\n    uStack_808._1_1_ = 'W';\n    uStack_808._2_1_ = ' ';\n    uStack_808._3_1_ = 's';\n    uStack_804._0_1_ = 'w';\n    uStack_804._1_1_ = 'e';\n    uStack_804._2_1_ = 'e';\n    uStack_804._3_1_ = 'p';\n    local_800._0_1_ = ' ';\n    local_800._1_1_ = 'i';\n    local_800._2_1_ = 'n';\n    local_800._3_1_ = 'i';\n    uStack_7fc._0_1_ = 't';\n    uStack_7fc._1_1_ = '.';\n    uStack_7fc._2_1_ = '\\n';\n    uStack_7fc._3_1_ = '\\0';\n    FUN_0002e584(4,&local_810,0);\n    if (4 < DAT_0007eb9c) {\n      local_810._0_1_ = '[';\n      local_810._1_1_ = 'D';\n      local_810._2_1_ = 'E';\n      local_810._3_1_ = 'B';\n      uStack_80c._0_1_ = 'U';\n      uStack_80c._1_1_ = 'G';\n      uStack_80c._2_1_ = ']';\n      uStack_80c._3_1_ = ' ';\n      uStack_808._0_1_ = 'A';\n      uStack_808._1_1_ = 'l';\n      uStack_808._2_1_ = 'l';\n      uStack_808._3_1_ = 'o';\n      uStack_804._0_1_ = 'c';\n      uStack_804._1_1_ = 'a';\n      uStack_804._2_1_ = 't';\n      uStack_804._3_1_ = 'e';\n      local_800._0_1_ = ' ';\n      local_800._1_1_ = 'm';\n      local_800._2_1_ = 'e';\n      local_800._3_1_ = 'm';\n      uStack_7fc._0_1_ = 'o';\n      uStack_7fc._1_1_ = 'r';\n      uStack_7fc._2_1_ = 'y';\n      uStack_7fc._3_1_ = ' ';\n      uStack_7f8._0_1_ = 'f';\n      uStack_7f8._1_1_ = 'o';\n      uStack_7f8._2_1_ = 'r';\n      uStack_7f8._3_1_ = ' ';\n      uStack_7f4._0_1_ = 'h';\n      uStack_7f4._1_1_ = 'w';\n      uStack_7f4._2_1_ = ' ';\n      uStack_7f4._3_1_ = 's';\n      local_7f0._0_1_ = 'w';\n      local_7f0._1_1_ = 'e';\n      local_7f0._2_1_ = 'e';\n      local_7f0._3_1_ = 'p';\n      uStack_7ec = CONCAT13(uStack_7ec._3_1_,0xa2e);\n      FUN_0002e584(4,&local_810,0);\n    }\n  }\n  if (DAT_004fcb34 == (void *)0x0) {\n    pvVar2 = calloc(0x8114ac,1);\n    DAT_004fcb34 = pvVar2;\n    if (pvVar2 == (void *)0x0) {\n      FUN_000356c4(0xd,0xff);\n      if (3 < DAT_0007eb9c) {\n        local_810._0_1_ = 'F';\n        local_810._1_1_ = 'a';\n        local_810._2_1_ = 'i';\n        local_810._3_1_ = 'l';\n        uStack_80c._0_1_ = ' ';\n        uStack_80c._1_1_ = 't';\n        uStack_80c._2_1_ = 'o';\n        uStack_80c._3_1_ = ' ';\n        uStack_808._0_1_ = 'a';\n        uStack_808._1_1_ = 'l';\n        uStack_808._2_1_ = 'l';\n        uStack_808._3_1_ = 'o';\n        uStack_804._0_1_ = 'c';\n        uStack_804._1_1_ = 'a';\n        uStack_804._2_1_ = 't';\n        uStack_804._3_1_ = 'e';\n        local_800._0_1_ = ' ';\n        local_800._1_1_ = 'm';\n        local_800._2_1_ = 'e';\n        local_800._3_1_ = 'm';\n        uStack_7fc._0_1_ = 'o';\n        uStack_7fc._1_1_ = 'r';\n        uStack_7fc._2_1_ = 'y';\n        uStack_7fc._3_1_ = ' ';\n        uStack_7f8._0_1_ = 'f';\n        uStack_7f8._1_1_ = 'o';\n        uStack_7f8._2_1_ = 'r';\n        uStack_7f8._3_1_ = ' ';\n        uStack_7f4._0_1_ = 'h';\n        uStack_7f4._1_1_ = 'w';\n        uStack_7f4._2_1_ = ' ';\n        uStack_7f4._3_1_ = 's';\n        local_7f0._0_1_ = 'w';\n        local_7f0._1_1_ = 'e';\n        local_7f0._2_1_ = 'e';\n        local_7f0._3_1_ = 'p';\n        uStack_7ec._0_1_ = ' ';\n        uStack_7ec._1_1_ = 'c';\n        uStack_7ec._2_1_ = 't';\n        uStack_7ec._3_1_ = 'x';\n        uStack_7e8._0_1_ = 't';\n        uStack_7e8._1_1_ = '.';\n        uStack_7e8._2_1_ = '\\n';\n        uStack_7e8._3_1_ = '\\0';\n        FUN_0002e584(3,&local_810,0);\n        return 0xffffffff;\n      }\n    }\n    else {\n      pvVar3 = malloc(0x400);\n      *(void **)((int)pvVar2 + 4) = pvVar3;\n      if (pvVar3 != (void *)0x0) goto LAB_00036b34;\n      FUN_00036a0c();\n      FUN_000356c4(0xd,0xff);\n      if (3 < DAT_0007eb9c) {\n        local_810._0_1_ = 'F';\n        local_810._1_1_ = 'a';\n        local_810._2_1_ = 'i';\n        local_810._3_1_ = 'l';\n        uStack_80c._0_1_ = ' ';\n        uStack_80c._1_1_ = 't';\n        uStack_80c._2_1_ = 'o';\n        uStack_80c._3_1_ = ' ';\n        uStack_808._0_1_ = 'a';\n        uStack_808._1_1_ = 'l';\n        uStack_808._2_1_ = 'l';\n        uStack_808._3_1_ = 'o';\n        uStack_804._0_1_ = 'c';\n        uStack_804._1_1_ = 'a';\n        uStack_804._2_1_ = 't';\n        uStack_804._3_1_ = 'e';\n        local_800._0_1_ = ' ';\n        local_800._1_1_ = 'm';\n        local_800._2_1_ = 'e';\n        local_800._3_1_ = 'm';\n        uStack_7fc._0_1_ = 'o';\n        uStack_7fc._1_1_ = 'r';\n        uStack_7fc._2_1_ = 'y';\n        uStack_7fc._3_1_ = ' ';\n        uStack_7f8._0_1_ = 'f';\n        uStack_7f8._1_1_ = 'o';\n        uStack_7f8._2_1_ = 'r';\n        uStack_7f8._3_1_ = ' ';\n        uStack_7f4._0_1_ = 'h';\n        uStack_7f4._1_1_ = 'w';\n        uStack_7f4._2_1_ = ' ';\n        uStack_7f4._3_1_ = 's';\n        local_7f0._0_1_ = 'w';\n        local_7f0._1_1_ = 'e';\n        local_7f0._2_1_ = 'e';\n        local_7f0._3_1_ = 'p';\n        uStack_7ec._0_1_ = ' ';\n        uStack_7ec._1_1_ = 'p';\n        uStack_7ec._2_1_ = 'r';\n        uStack_7ec._3_1_ = 'i';\n        uStack_7e8._0_1_ = 'v';\n        uStack_7e8._1_1_ = 'a';\n        uStack_7e8._2_1_ = 't';\n        uStack_7e8._3_1_ = 'e';\n        uStack_7e4._0_1_ = ' ';\n        uStack_7e4._1_1_ = 'd';\n        uStack_7e4._2_1_ = 'a';\n        uStack_7e4._3_1_ = 't';\n        local_7e0._0_1_ = 'a';\n        local_7e0._1_1_ = '.';\n        local_7e0._2_1_ = '\\n';\n        local_7e0._3_1_ = '\\0';\n        FUN_0002e584(3,&local_810,0);\n      }\n    }\n    uVar1 = 0xffffffff;\n  }\n  else {\nLAB_00036b34:\n    uVar1 = 0;\n  }\n  return uVar1;\n}\n\n",
    "FUN_00036dbc": "\nvoid FUN_00036dbc(byte *param_1)\n\n{\n  uint uVar1;\n  byte bVar2;\n  byte bVar3;\n  undefined4 uVar4;\n  int iVar5;\n  uint uVar6;\n  uint uVar7;\n  int *piVar8;\n  int iVar9;\n  int iVar10;\n  uint uVar11;\n  int iVar12;\n  uint uVar13;\n  bool bVar14;\n  bool bVar15;\n  bool bVar16;\n  undefined8 uVar17;\n  char acStack_828 [2064];\n  \n  bVar2 = param_1[2];\n  uVar11 = *param_1 & 0xf;\n  uVar4 = FUN_0001e160();\n  if (uVar11 < 4) {\n    bVar3 = param_1[1];\n    iVar5 = FUN_0001e29c(uVar11);\n    if (iVar5 != 0) {\n      uVar6 = FUN_0005faf8(bVar2,uVar4);\n      uVar7 = FUN_0001e0f0();\n      if (uVar6 < uVar7) {\n        if (bVar3 == 0x90) {\n          if ((*(uint *)(param_1 + 4) & 0x88) == 0) {\n            return;\n          }\n          *(undefined *)(*(int *)(DAT_004fcb34 + 4) + uVar11 * 0x100 + uVar6) = 1;\n          return;\n        }\n        if (bVar3 == 0xe0) {\n          iVar9 = DAT_004fcb34 + 8;\n          uVar1 = *(uint *)(param_1 + 4) >> 0x10;\n          iVar10 = iVar9 + (uVar11 * 0x100 + uVar6) * 4;\n          piVar8 = (int *)(&DAT_00809000 + iVar10);\n          uVar13 = *(uint *)(param_1 + 4) & 0xffff;\n          iVar12 = *(int *)(DAT_004fcb34 + 4);\n          *piVar8 = *piVar8 + uVar1;\n          uVar17 = FUN_0001e130();\n          iVar5 = (int)((ulonglong)uVar17 >> 0x20);\n          uVar7 = (int)uVar17 * 8;\n          bVar16 = SBORROW4(uVar1,uVar7);\n          bVar14 = (int)(uVar1 + (int)uVar17 * -8) < 0;\n          bVar15 = uVar1 == uVar7;\n          if (bVar15 || bVar14 != bVar16) {\n            piVar8 = (int *)(iVar9 + uVar11 * 4);\n          }\n          iVar9 = iVar9 + uVar11 * 4;\n          if (bVar15 || bVar14 != bVar16) {\n            piVar8 = piVar8 + 0x200000;\n          }\n          if (bVar15 || bVar14 != bVar16) {\n            piVar8 = piVar8 + 0x2800;\n          }\n          if (bVar15 || bVar14 != bVar16) {\n            iVar5 = *piVar8;\n          }\n          if (bVar15 || bVar14 != bVar16) {\n            iVar5 = iVar5 + uVar1;\n          }\n          if (bVar15 || bVar14 != bVar16) {\n            *piVar8 = iVar5;\n          }\n          *(uint *)(&DAT_0080a860 + iVar9) = *(int *)(&DAT_0080a860 + iVar9) + (uVar13 - uVar1);\n          *(undefined *)(iVar12 + uVar11 * 0x100 + uVar6) = 1;\n          iVar5 = FUN_0001e130();\n          if ((uVar1 != iVar5 * 8 && (int)(uVar1 + iVar5 * -8) < 0 == SBORROW4(uVar1,iVar5 * 8)) &&\n             (3 < DAT_0007eb9c)) {\n            snprintf(acStack_828,0x800,\n                     \"Nonce counter overflow: chain = %d, asic = %d, nonce_return = %d, nonce_match = %d, nonce_accumulate = %d\\n\"\n                     ,uVar11,uVar6,uVar13,uVar1,*(undefined4 *)(&DAT_00809000 + iVar10));\n            FUN_0002e584(3,acStack_828,0);\n            return;\n          }\n          return;\n        }\n      }\n    }\n  }\n  FUN_000390b0(param_1);\n  return;\n}\n\n",
    "FUN_00036e7c": "\nbool FUN_00036e7c(int param_1)\n\n{\n  int iVar1;\n  char *pcVar2;\n  char *pcVar3;\n  char *pcVar4;\n  int iVar5;\n  char acStack_810 [2048];\n  \n  iVar5 = *(int *)(DAT_004fcb34 + 4);\n  if (4 < DAT_0007eb9c) {\n    snprintf(acStack_810,0x800,\"[DEBUG] Check if read reg done, chain = %d, done_threshold = %d.\\n\",\n             param_1,1);\n    FUN_0002e584(4,acStack_810,0);\n  }\n  iVar1 = FUN_0001e0f0();\n  if (iVar1 != 0) {\n    pcVar2 = (char *)(iVar5 + param_1 * 0x100);\n    pcVar4 = pcVar2 + iVar1;\n    iVar1 = 0;\n    do {\n      pcVar3 = pcVar2 + 1;\n      if (*pcVar2 != '\\0') {\n        iVar1 = iVar1 + 1;\n      }\n      pcVar2 = pcVar3;\n    } while (pcVar3 != pcVar4);\n  }\n  iVar5 = FUN_0001e0f0();\n  return iVar5 == iVar1;\n}\n\n",
    "FUN_00036f2c": "\nundefined4 FUN_00036f2c(void)\n\n{\n  int iVar1;\n  int iVar2;\n  \n  iVar2 = 0;\n  while ((iVar1 = FUN_0001e29c(iVar2), iVar1 == 0 || (iVar1 = FUN_00036e7c(iVar2), iVar1 != 0))) {\n    iVar2 = iVar2 + 1;\n    if (iVar2 == 4) {\n      return 1;\n    }\n  }\n  return 0;\n}\n\n",
    "FUN_00036f6c": "\nundefined4 FUN_00036f6c(undefined4 param_1,int *param_2)\n\n{\n  undefined4 *puVar1;\n  short sVar2;\n  int iVar3;\n  uint uVar4;\n  int iVar5;\n  int iVar6;\n  void *__s;\n  uint uVar7;\n  char *pcVar8;\n  uint uVar9;\n  undefined4 local_8c8 [34];\n  uint *local_840;\n  undefined4 *local_83c;\n  int local_838;\n  uint local_834;\n  undefined local_82c;\n  undefined local_82b;\n  undefined local_82a;\n  undefined local_828;\n  byte bStack_827;\n  undefined local_818 [2036];\n  \n  iVar3 = FUN_0003388c();\n  local_840 = (uint *)((uint)(iVar3 << 0x10) >> 0x18);\n  local_838 = *param_2;\n  local_834 = (uint)(iVar3 << 8) >> 0x18;\n  local_82c = (undefined)iVar3;\n  local_82b = (undefined)((uint)iVar3 >> 8);\n  local_82a = (undefined)((uint)iVar3 >> 0x10);\n  if (DAT_0007eb9c < 5) {\n    local_83c = (undefined4 *)&local_828;\n  }\n  else {\n    local_83c = (undefined4 *)&local_828;\n    snprintf(&local_828,0x800,\"[DEBUG] Send work, max_freq = %d\\n\",local_838);\n    FUN_0002e584(4,&local_828,0);\n  }\n  puVar1 = local_83c;\n  iVar3 = 3;\n  do {\n    if (4 < DAT_0007eb9c) {\n      *puVar1 = 0x4245445b;\n      puVar1[1] = 0x205d4755;\n      puVar1[2] = 0x20746553;\n      puVar1[3] = 0x72617473;\n      puVar1[4] = 0x6f6e2074;\n      puVar1[5] = 0x2065636e;\n      puVar1[6] = 0x7366666f;\n      puVar1[7] = 0x69207465;\n      puVar1[8] = 0x6c61766e;\n      puVar1[9] = 0xa2e6469;\n      *(undefined *)(puVar1 + 10) = 0;\n      FUN_0002e584(4,puVar1,0);\n    }\n    FUN_00040390(0x18,0);\n    uVar4 = FUN_0004476c();\n    uVar7 = 0;\n    FUN_00044794(uVar4 & 0xffff70ff | 0x8400);\n    do {\n      iVar5 = FUN_0001e29c(uVar7);\n      if (iVar5 != 0) {\n        FUN_00050288(uVar7 & 0xff,1,0);\n      }\n      uVar7 = uVar7 + 1;\n    } while (uVar7 != 4);\n    if (4 < DAT_0007eb9c) {\n      *puVar1 = 0x4245445b;\n      puVar1[1] = 0x205d4755;\n      puVar1[2] = 0x646e6553;\n      puVar1[3] = 0x6c756e20;\n      puVar1[4] = 0x6f77206c;\n      puVar1[5] = 0xa2e6b72;\n      *(undefined *)(puVar1 + 6) = 0;\n      FUN_0002e584(4,puVar1,0);\n    }\n    uVar4 = 0;\n    memset(puVar1,0,0x94);\n    local_828 = 1;\n    do {\n      iVar5 = FUN_0001e29c(uVar4);\n      if (iVar5 != 0) {\n        while (uVar7 = FUN_00044ed4(), (uVar7 & 1 << (uVar4 & 0xff)) == 0) {\n          FUN_000304d4(1);\n        }\n        bStack_827 = (byte)uVar4 | 0x80;\n        memcpy(local_8c8,local_818,0x84);\n        FUN_0001eeb8(*puVar1,puVar1[1],puVar1[2],puVar1[3]);\n        FUN_000304d4(10);\n      }\n      uVar4 = uVar4 + 1;\n    } while (uVar4 != 4);\n    sleep(1);\n    uVar4 = FUN_0004476c();\n    FUN_00044794(uVar4 & 0xffff70ff | 0x8100);\n    usleep(100000);\n    uVar4 = local_834;\n    iVar3 = iVar3 + -1;\n  } while (iVar3 != 0);\n  FUN_0001f1ec(0xff,1);\n  FUN_0001efe0(0xff,local_840,uVar4,1);\n  FUN_00036908();\n  usleep(100000);\n  FUN_00036908();\n  usleep(100000);\n  FUN_00036908();\n  usleep(100000);\n  uVar7 = 0;\n  do {\n    iVar3 = FUN_0001e29c(uVar7);\n    if (iVar3 != 0) {\n      FUN_00050bd4(uVar7 & 0xff,0);\n    }\n    uVar7 = uVar7 + 1;\n  } while (uVar7 != 4);\n  uVar7 = 0;\n  do {\n    iVar3 = FUN_0001e29c(uVar7);\n    if (iVar3 != 0) {\n      FUN_00050e78(uVar7 & 0xff);\n    }\n    uVar7 = uVar7 + 1;\n  } while (uVar7 != 4);\n  uVar7 = 3;\n  iVar3 = -((local_838 - 0xfaU) / 0x14);\n  do {\n    uVar9 = 0;\n    do {\n      iVar5 = FUN_0001e29c(uVar9);\n      if (iVar5 != 0) {\n        FUN_00050f80(uVar9 & 0xff,(iVar3 + 30000) / 0x14d);\n      }\n      uVar9 = uVar9 + 1;\n    } while (uVar9 != 4);\n    usleep(100000);\n    uVar7 = uVar7 - 1;\n  } while (uVar7 != 0);\n  do {\n    iVar5 = FUN_0001e29c(uVar7);\n    if (iVar5 != 0) {\n      FUN_00050fa4(uVar7 & 0xff,8);\n    }\n    uVar7 = uVar7 + 1;\n  } while (uVar7 != 4);\n  iVar5 = 8;\n  do {\n    uVar7 = 0;\n    do {\n      iVar6 = FUN_0001e29c(uVar7);\n      if (iVar6 != 0) {\n        FUN_00050fdc(uVar7 & 0xff);\n      }\n      uVar7 = uVar7 + 1;\n    } while (uVar7 != 4);\n    usleep(iVar3 + 31000);\n    iVar5 = iVar5 + -1;\n  } while (iVar5 != 0);\n  FUN_00036908();\n  usleep(100000);\n  FUN_00036908();\n  usleep(100000);\n  FUN_00036908();\n  usleep(100000);\n  FUN_0001efe0(0xff,local_840,uVar4,0);\n  puVar1 = local_83c;\n  if (DAT_0007eb9c < 5) {\n    __s = *(void **)(DAT_004fcb34 + 4);\n  }\n  else {\n    *local_83c = 0x4245445b;\n    local_83c[1] = 0x205d4755;\n    local_83c[2] = 0x20746547;\n    local_83c[3] = 0x636e6f6e;\n    local_83c[4] = 0x6f632065;\n    local_83c[5] = 0x65746e75;\n    local_83c[6] = 0x63202c72;\n    local_83c[7] = 0x6e696168;\n    *(undefined2 *)(local_83c + 8) = 0xa2e;\n    *(undefined *)((int)local_83c + 0x22) = 0;\n    FUN_0002e584(4,local_83c,0);\n    __s = *(void **)(DAT_004fcb34 + 4);\n    if (4 < DAT_0007eb9c) {\n      local_8c8[0] = 1;\n      snprintf((char *)puVar1,0x800,\n               \"[DEBUG] Read reg and wait done, reg = %d, done_threshold = %d.\\n\",0xe0);\n      FUN_0002e584(4,puVar1,0);\n    }\n  }\n  memset(__s,0,0x400);\n  iVar3 = 5;\n  FUN_0001ec84(0xff,1,0,0xe0);\n  do {\n    iVar5 = FUN_00036f2c();\n    if (iVar5 != 0) {\n      return 0;\n    }\n    usleep(100000);\n    iVar3 = iVar3 + -1;\n  } while (iVar3 != 0);\n  local_840 = &DAT_0007eb9c;\n  iVar3 = 0x5f;\n  while( true ) {\n    uVar4 = 0;\n    do {\n      iVar5 = FUN_0001e29c(uVar4);\n      if ((iVar5 != 0) && (iVar5 = FUN_0001e0f0(), iVar5 != 0)) {\n        iVar6 = 0;\n        pcVar8 = (char *)((int)__s + uVar4 * 0x100);\n        do {\n          if (*pcVar8 != '\\x01') {\n            sVar2 = FUN_0001e160();\n            FUN_0001ec84(uVar4 & 0xff,0,(int)sVar2 * (int)(short)iVar6 & 0xff,0xe0);\n          }\n          iVar6 = iVar6 + 1;\n          pcVar8 = pcVar8 + 1;\n        } while (iVar5 != iVar6);\n      }\n      uVar4 = uVar4 + 1;\n    } while (uVar4 != 4);\n    usleep(100000);\n    iVar5 = FUN_00036f2c();\n    puVar1 = local_83c;\n    if (iVar5 != 0) break;\n    iVar3 = iVar3 + -1;\n    if (iVar3 == 0) {\n      if (3 < *local_840) {\n        snprintf((char *)local_83c,0x800,\"Read REG[0x%X] done failed.\\n\",0xe0);\n        FUN_0002e584(3,puVar1,0);\n        return 0xffffffff;\n      }\n      return 0xffffffff;\n    }\n  }\n  return 0;\n}\n\n",
    "FUN_00037574": "\nundefined ** FUN_00037574(void)\n\n{\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined4 uStack_7fc;\n  undefined4 uStack_7f8;\n  undefined local_7f4;\n  \n  if (DAT_0007eb9c < 5) {\n    return &PTR_s_HW_Sweep_0007edf0;\n  }\n  local_808._0_1_ = '[';\n  local_808._1_1_ = 'D';\n  local_808._2_1_ = 'E';\n  local_808._3_1_ = 'B';\n  uStack_804._0_1_ = 'U';\n  uStack_804._1_1_ = 'G';\n  uStack_804._2_1_ = ']';\n  uStack_804._3_1_ = ' ';\n  uStack_800._0_1_ = 'G';\n  uStack_800._1_1_ = 'e';\n  uStack_800._2_1_ = 't';\n  uStack_800._3_1_ = ' ';\n  uStack_7fc._0_1_ = 'h';\n  uStack_7fc._1_1_ = 'w';\n  uStack_7fc._2_1_ = ' ';\n  uStack_7fc._3_1_ = 'o';\n  uStack_7f8._0_1_ = 'p';\n  uStack_7f8._1_1_ = 's';\n  uStack_7f8._2_1_ = '.';\n  uStack_7f8._3_1_ = '\\n';\n  local_7f4 = 0;\n  FUN_0002e584(4,&local_808,0);\n  return &PTR_s_HW_Sweep_0007edf0;\n}\n\n",
    "FUN_00037694": "\nundefined4 FUN_00037694(int param_1)\n\n{\n  undefined4 uVar1;\n  uint uVar2;\n  int iVar3;\n  int iVar4;\n  uint uVar5;\n  undefined4 uVar6;\n  uint uVar7;\n  int iVar8;\n  char acStack_828 [2052];\n  \n  uVar6 = *(undefined4 *)(DAT_004fcb38 + (param_1 + 0x202802) * 4);\n  uVar1 = FUN_0001e0e0();\n  uVar1 = FUN_0005f880(uVar6,uVar1);\n  uVar6 = FUN_0001e150();\n  uVar2 = FUN_0005f880(uVar1,uVar6);\n  iVar3 = FUN_0001e0e0();\n  if (iVar3 == 0) {\n    uVar1 = 0;\n  }\n  else {\n    uVar1 = 0;\n    iVar8 = 0;\n    do {\n      for (uVar7 = 0; uVar5 = FUN_0001e150(), uVar7 < uVar5; uVar7 = uVar7 + 1) {\n        iVar4 = FUN_0001e150();\n        iVar4 = iVar8 * iVar4 + uVar7;\n        uVar5 = *(uint *)(DAT_004fcb38 + (iVar4 + param_1 * 0x40 + 0x202806) * 4);\n        if ((uVar5 < uVar2 >> 1) && (uVar1 = 1, 3 < DAT_0007eb9c)) {\n          snprintf(acStack_828,0x800,\n                   \"Domain unbalance happen, chain = %d, domain = %d, nonce_num_domain = %d, threshold = %d.\\n\"\n                   ,param_1,iVar4,uVar5,uVar2 >> 1);\n          FUN_0002e584(3,acStack_828,0);\n        }\n      }\n      iVar8 = iVar8 + 1;\n    } while (iVar3 != iVar8);\n  }\n  return uVar1;\n}\n\n",
    "FUN_000377d8": "\nundefined4 FUN_000377d8(uint param_1)\n\n{\n  uint uVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 *puVar5;\n  undefined4 uVar6;\n  int iVar7;\n  undefined4 *puVar8;\n  uint uVar9;\n  int iVar10;\n  undefined4 *puVar11;\n  undefined4 *puVar12;\n  undefined4 *puVar13;\n  undefined4 *puVar14;\n  int local_9d0;\n  int local_9cc;\n  undefined4 *local_948;\n  undefined4 *local_944;\n  uint local_940;\n  uint local_93c;\n  undefined4 *local_938;\n  uint local_934;\n  int local_930;\n  uint local_92c;\n  uint local_928;\n  undefined4 *local_924;\n  uint local_920;\n  int local_91c;\n  uint local_918;\n  int local_914;\n  uint local_910;\n  int local_90c;\n  undefined *local_908;\n  uint *local_904;\n  int local_900;\n  int local_8fc;\n  int local_8f8;\n  int local_8f4;\n  undefined4 local_8f0 [5];\n  undefined4 local_8dc;\n  undefined4 uStack_8d8;\n  undefined4 uStack_8d4;\n  undefined4 uStack_8d0;\n  undefined4 local_8cc;\n  undefined4 uStack_8c8;\n  undefined4 uStack_8c4;\n  undefined4 uStack_8c0;\n  undefined4 local_8bc;\n  uint local_8b8;\n  undefined4 local_8b4;\n  undefined4 uStack_8b0;\n  undefined4 uStack_8ac;\n  undefined4 local_8a8 [32];\n  undefined2 local_828 [1026];\n  \n  local_904 = &DAT_0007eb9c;\n  local_910 = param_1;\n  FUN_000302a0(&local_900);\n  if (3 < DAT_0007eb9c) {\n    local_828[0] = 10;\n    FUN_0002ea54(3,local_828,0);\n    if (3 < *local_904) {\n      snprintf((char *)local_828,0x800,\">>>> Send work for chain %d.\\n\",local_910);\n      FUN_0002e584(3,local_828,0);\n      local_90c = FUN_0001e0f0();\n      goto joined_r0x00037c3c;\n    }\n  }\n  local_90c = FUN_0001e0f0();\njoined_r0x00037c3c:\n  if (local_90c == 0) {\n    iVar10 = 0;\n  }\n  else {\n    iVar10 = 0;\n    uVar1 = 1 << (local_910 & 0xff);\n    local_93c = 0;\n    local_914 = 0;\n    local_908 = &DAT_00202a2a;\n    local_91c = local_910 * 0x1a00 + 0x80acac;\n    do {\n      iVar7 = *(int *)(DAT_004fcb38 + (int)(local_908 + local_914) * 4 + 4);\n      local_918 = FUN_0001e130();\n      if (local_918 != 0) {\n        local_924 = (undefined4 *)(iVar7 + 0x14);\n        local_928 = 0;\n        local_920 = ~(~(local_910 << 0x19) >> 0x19) & 0xff;\n        do {\n          local_92c = local_928 & 3;\n          local_940 = 0;\n          puVar11 = local_924;\n          do {\n            while (uVar2 = FUN_00044ed4(), (uVar1 & uVar2) == 0) {\n              iVar10 = iVar10 + 1;\n              usleep(1000);\n            }\n            local_944 = puVar11 + -5;\n            puVar5 = local_8f0;\n            puVar13 = local_944;\n            do {\n              puVar12 = puVar13 + 4;\n              uVar3 = puVar13[1];\n              uVar4 = puVar13[2];\n              puVar8 = puVar5 + 4;\n              uVar6 = puVar13[3];\n              *puVar5 = *puVar13;\n              puVar5[1] = uVar3;\n              puVar5[2] = uVar4;\n              puVar5[3] = uVar6;\n              puVar5 = puVar8;\n              puVar13 = puVar12;\n            } while (puVar12 != puVar11 + 7);\n            uVar2 = 0;\n            *puVar8 = *puVar12;\n            memset((void *)((int)&local_8bc + 2),0,0x92);\n            iVar7 = local_93c * 0x34 + local_91c;\n            local_8dc = CONCAT31(local_8dc._1_3_,(char)local_8dc + '\\x01');\n            local_8b4 = puVar11[-3];\n            uStack_8b0 = puVar11[-2];\n            uStack_8ac = puVar11[-1];\n            local_948 = &uStack_8c0;\n            local_8b8 = local_93c & 0x7f | local_940;\n            local_938 = local_944 + 0xc;\n            local_8bc = CONCAT31(CONCAT21(local_8bc._2_2_,(undefined)local_920),1);\n            do {\n              if (uVar2 == local_92c) {\n                uVar4 = puVar11[1];\n                uVar6 = puVar11[2];\n                local_8a8[uVar2 * 8] = *puVar11;\n                uVar3 = puVar11[3];\n                local_8a8[uVar2 * 8 + 1] = uVar4;\n                local_8a8[uVar2 * 8 + 3] = uVar3;\n                uVar3 = puVar11[4];\n                local_8a8[uVar2 * 8 + 2] = uVar6;\n                uVar4 = puVar11[5];\n                uVar6 = puVar11[6];\n                local_8a8[uVar2 * 8 + 4] = uVar3;\n                uVar3 = puVar11[7];\n                local_8a8[uVar2 * 8 + 5] = uVar4;\n                local_8a8[uVar2 * 8 + 6] = uVar6;\n                local_8a8[uVar2 * 8 + 7] = uVar3;\n                puVar5 = local_944;\n                puVar13 = (undefined4 *)(DAT_004fcb38 + iVar7);\n                do {\n                  puVar8 = puVar5 + 4;\n                  puVar12 = puVar13 + 4;\n                  uVar3 = puVar5[1];\n                  uVar4 = puVar5[2];\n                  uVar6 = puVar5[3];\n                  *puVar13 = *puVar5;\n                  puVar13[1] = uVar3;\n                  puVar13[2] = uVar4;\n                  puVar13[3] = uVar6;\n                  puVar5 = puVar8;\n                  puVar13 = puVar12;\n                } while (puVar8 != local_938);\n                *puVar12 = *local_938;\n              }\n              else {\n                local_8a8[uVar2 * 8] = local_8dc;\n                local_8a8[uVar2 * 8 + 1] = uStack_8d8;\n                local_8a8[uVar2 * 8 + 2] = uStack_8d4;\n                local_8a8[uVar2 * 8 + 3] = uStack_8d0;\n                local_8a8[uVar2 * 8 + 4] = local_8cc;\n                local_8a8[uVar2 * 8 + 5] = uStack_8c8;\n                local_8a8[uVar2 * 8 + 6] = uStack_8c4;\n                local_8a8[uVar2 * 8 + 7] = uStack_8c0;\n                puVar5 = local_8f0;\n                puVar13 = (undefined4 *)(DAT_004fcb38 + iVar7);\n                do {\n                  puVar8 = puVar5 + 4;\n                  puVar12 = puVar13 + 4;\n                  uVar3 = puVar5[1];\n                  uVar4 = puVar5[2];\n                  uVar6 = puVar5[3];\n                  puVar14 = puVar5 + 4;\n                  *puVar13 = *puVar5;\n                  puVar13[1] = uVar3;\n                  puVar13[2] = uVar4;\n                  puVar13[3] = uVar6;\n                  puVar5 = puVar8;\n                  puVar13 = puVar12;\n                } while (puVar14 != local_948);\n                *puVar12 = *puVar8;\n              }\n              uVar2 = uVar2 + 1;\n              iVar7 = iVar7 + 0x34;\n            } while (uVar2 != 4);\n            puVar11 = puVar11 + 0xd;\n            uVar2 = local_93c + 4;\n            local_934 = uVar1;\n            local_930 = iVar10;\n            memcpy(&local_9d0,&uStack_8ac,0x84);\n            uVar9 = local_940 + 0x80;\n            local_940 = uVar9;\n            FUN_0001eeb8(local_8bc,local_8b8,local_8b4);\n            if (0x7f < uVar2) {\n              uVar2 = 0;\n            }\n            local_93c = uVar2;\n          } while (uVar9 != 0x400);\n          local_924 = local_924 + 0x68;\n          local_928 = local_928 + 1;\n        } while (local_918 != local_928);\n      }\n      local_914 = local_914 + 1;\n    } while (local_90c != local_914);\n  }\n  FUN_000302a0(&local_8f8);\n  local_9d0 = local_8f8 - local_900;\n  if (local_8f4 - local_8fc < 0) {\n    local_9d0 = local_9d0 + -1;\n  }\n  if (3 < *local_904) {\n    local_9cc = iVar10;\n    snprintf((char *)local_828,0x800,\n             \"Send work for chain %d done, time cost %lds, sleep_count = %d\\n\",local_910);\n    FUN_0002e584(3,local_828,0);\n  }\n  return 0;\n}\n\n",
    "FUN_00037c4c": "\nvoid FUN_00037c4c(byte *param_1)\n\n{\n  byte bVar1;\n  ushort uVar2;\n  undefined4 uVar3;\n  uint uVar4;\n  int iVar5;\n  int iVar6;\n  int iVar7;\n  uint uVar8;\n  uint uVar9;\n  uint uVar10;\n  int iVar11;\n  uint uVar12;\n  \n  iVar11 = *(int *)(param_1 + 4);\n  uVar3 = FUN_0001e160();\n  uVar4 = FUN_00051978(iVar11,uVar3);\n  uVar2 = *(ushort *)(param_1 + 2);\n  uVar10 = *param_1 & 0xf;\n  iVar5 = FUN_00051970(iVar11);\n  iVar6 = FUN_0001e140();\n  if ((3 < uVar10) || (iVar7 = FUN_0001e29c(uVar10), iVar7 == 0)) {\n    *(int *)(&DAT_0080a888 + DAT_004fcb38) = *(int *)(&DAT_0080a888 + DAT_004fcb38) + 1;\n    return;\n  }\n  bVar1 = *param_1;\n  if ((bVar1 & 0x20) != 0) {\n    iVar5 = DAT_004fcb38 + uVar10 * 4;\n    *(int *)(&DAT_0080a828 + iVar5) = *(int *)(&DAT_0080a828 + iVar5) + 1;\n    return;\n  }\n  if ((bVar1 & 0x40) != 0) {\n    iVar5 = DAT_004fcb38 + uVar10 * 4;\n    *(int *)(&DAT_0080a838 + iVar5) = *(int *)(&DAT_0080a838 + iVar5) + 1;\n    return;\n  }\n  if ((bVar1 & 0x80) == 0) {\n    iVar5 = DAT_004fcb38 + uVar10 * 4;\n    *(int *)(&DAT_0080a848 + iVar5) = *(int *)(&DAT_0080a848 + iVar5) + 1;\n    return;\n  }\n  uVar8 = FUN_0001e0f0();\n  if (uVar8 <= uVar4) {\n    iVar5 = DAT_004fcb38 + uVar10 * 4;\n    *(int *)(&DAT_0080a88c + iVar5) = *(int *)(&DAT_0080a88c + iVar5) + 1;\n    return;\n  }\n  uVar8 = (int)(uVar2 & 0x7fff) >> 7;\n  uVar12 = iVar6 * iVar5 + (uVar2 & 3);\n  uVar9 = FUN_0001e130();\n  iVar5 = DAT_004fcb38;\n  if (uVar9 <= uVar12 || 7 < uVar8) {\n    iVar5 = DAT_004fcb38 + uVar10 * 4;\n    *(int *)(&DAT_0080a868 + iVar5) = *(int *)(&DAT_0080a868 + iVar5) + 1;\n    return;\n  }\n  if (*(int *)(*(int *)(DAT_004fcb38 + (int)(&DAT_00202a2a + uVar4) * 4 + 4) +\n               uVar12 * 0x1a0 + uVar8 * 0x34 + 4) == iVar11) {\n    iVar11 = uVar4 + uVar10 * 0x100;\n    iVar6 = DAT_004fcb38 + (uVar12 + iVar11 * 0x400) * 4;\n    if ((*(uint *)(iVar6 + 8) & 1 << uVar8) == 0) {\n      *(uint *)(iVar6 + 8) = *(uint *)(iVar6 + 8) | 1 << uVar8;\n      iVar11 = iVar5 + iVar11 * 4;\n      iVar5 = iVar5 + uVar10 * 4;\n      *(int *)(&DAT_00409008 + iVar6) = *(int *)(&DAT_00409008 + iVar6) + 1;\n      *(int *)(&DAT_00809008 + iVar11) = *(int *)(&DAT_00809008 + iVar11) + 1;\n      *(int *)(&DAT_0080a008 + iVar5) = *(int *)(&DAT_0080a008 + iVar5) + 1;\n      return;\n    }\n    iVar5 = DAT_004fcb38 + uVar10 * 4;\n    *(int *)(&DAT_0080a818 + iVar5) = *(int *)(&DAT_0080a818 + iVar5) + 1;\n    return;\n  }\n  iVar5 = FUN_000386bc(DAT_004fcb38 + (short)(uVar2 & 0x7f) * 0x34 + uVar10 * 0x1a00 + 0x80acac,\n                       iVar11);\n  iVar6 = DAT_004fcb38 + uVar10 * 4;\n  if (iVar5 == 0) {\n    *(int *)(&DAT_0080a868 + iVar6) = *(int *)(&DAT_0080a868 + iVar6) + 1;\n  }\n  else {\n    *(int *)(iVar6 + 0x80a858) = *(int *)(iVar6 + 0x80a858) + 1;\n  }\n  return;\n}\n\n",
    "FUN_00037f08": "\nvoid FUN_00037f08(void)\n\n{\n  int iVar1;\n  void *__ptr;\n  void *__ptr_00;\n  undefined *puVar2;\n  int iVar3;\n  \n  iVar1 = FUN_0001e0f0();\n  __ptr = DAT_004fcb38;\n  if (iVar1 != 0) {\n    iVar3 = 0;\n    do {\n      puVar2 = &DAT_00202a2a + iVar3;\n      iVar3 = iVar3 + 1;\n      __ptr_00 = *(void **)((int)__ptr + (int)puVar2 * 4 + 4);\n      if (__ptr_00 != (void *)0x0) {\n        free(__ptr_00);\n        __ptr = DAT_004fcb38;\n        *(undefined4 *)((int)DAT_004fcb38 + (int)puVar2 * 4 + 4) = 0;\n      }\n    } while (iVar1 != iVar3);\n  }\n  free(__ptr);\n  DAT_004fcb38 = (void *)0x0;\n  return;\n}\n\n",
    "FUN_00037fa0": "\nint FUN_00037fa0(FILE **param_1,int param_2,int param_3,int param_4)\n\n{\n  size_t sVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  int iVar6;\n  undefined4 uStack_858;\n  undefined4 local_854;\n  undefined4 uStack_850;\n  undefined4 uStack_84c;\n  undefined4 local_848;\n  undefined4 uStack_844;\n  undefined4 uStack_840;\n  undefined4 uStack_83c;\n  undefined4 local_838;\n  undefined4 uStack_834;\n  undefined4 uStack_830;\n  undefined4 uStack_82c;\n  undefined4 local_828;\n  undefined4 uStack_824;\n  undefined4 uStack_820;\n  undefined4 uStack_81c;\n  undefined4 local_818;\n  undefined4 uStack_814;\n  undefined2 uStack_810;\n  undefined local_80e;\n  \n  if (param_4 == 0) {\n    iVar3 = 0;\n  }\n  else {\n    iVar4 = param_3 * param_4 * 0x34;\n    iVar3 = 0;\n    while( true ) {\n      iVar5 = iVar3 + 1;\n      iVar6 = *(int *)(DAT_004fcb38 + (int)(&DAT_00202a2a + param_2) * 4 + 4);\n      sVar1 = fread(&uStack_858,1,0x30,*param_1);\n      iVar2 = iVar6 + iVar4;\n      if (sVar1 != 0x30) break;\n      *(undefined4 *)(iVar2 + 4) = uStack_858;\n      *(undefined4 *)(iVar2 + 0x14) = local_848;\n      *(undefined4 *)(iVar2 + 0x18) = uStack_844;\n      *(undefined4 *)(iVar2 + 0x1c) = uStack_840;\n      *(undefined4 *)(iVar2 + 0x20) = uStack_83c;\n      *(undefined4 *)(iVar2 + 0x24) = local_838;\n      *(undefined4 *)(iVar2 + 0x28) = uStack_834;\n      *(undefined4 *)(iVar2 + 0x2c) = uStack_830;\n      *(undefined4 *)(iVar2 + 0x30) = uStack_82c;\n      *(undefined4 *)(iVar2 + 8) = local_854;\n      *(undefined4 *)(iVar2 + 0xc) = uStack_850;\n      *(undefined4 *)(iVar2 + 0x10) = uStack_84c;\n      *(int *)(iVar6 + iVar4) = iVar3;\n      iVar4 = iVar4 + 0x34;\n      iVar3 = iVar5;\n      if (iVar5 == param_4) {\n        return iVar5;\n      }\n    }\n    if (3 < DAT_0007eb9c) {\n      local_828._0_1_ = 'L';\n      local_828._1_1_ = 'o';\n      local_828._2_1_ = 'a';\n      local_828._3_1_ = 'd';\n      uStack_824._0_1_ = ' ';\n      uStack_824._1_1_ = 'c';\n      uStack_824._2_1_ = 'o';\n      uStack_824._3_1_ = 'r';\n      uStack_820._0_1_ = 'e';\n      uStack_820._1_1_ = ' ';\n      uStack_820._2_1_ = 'p';\n      uStack_820._3_1_ = 'a';\n      uStack_81c._0_1_ = 't';\n      uStack_81c._1_1_ = 't';\n      uStack_81c._2_1_ = 'e';\n      uStack_81c._3_1_ = 'r';\n      local_818._0_1_ = 'n';\n      local_818._1_1_ = ' ';\n      local_818._2_1_ = 'f';\n      local_818._3_1_ = 'a';\n      uStack_814._0_1_ = 'i';\n      uStack_814._1_1_ = 'l';\n      uStack_814._2_1_ = 'e';\n      uStack_814._3_1_ = 'd';\n      uStack_810 = 0xa21;\n      local_80e = 0;\n      FUN_0002e584(3,&local_828,0);\n      return iVar3;\n    }\n  }\n  return iVar3;\n}\n\n",
    "FUN_00038110": "\nundefined4 FUN_00038110(char *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  undefined4 uVar5;\n  char *pcVar6;\n  uint uVar7;\n  int iVar8;\n  char **ppcVar9;\n  FILE *local_82c;\n  undefined4 local_828;\n  undefined4 uStack_824;\n  undefined4 uStack_820;\n  undefined4 uStack_81c;\n  undefined4 local_818;\n  undefined4 uStack_814;\n  undefined4 uStack_810;\n  undefined4 uStack_80c;\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  \n  if (4 < DAT_0007eb9c) {\n    local_828._0_1_ = '[';\n    local_828._1_1_ = 'D';\n    local_828._2_1_ = 'E';\n    local_828._3_1_ = 'B';\n    uStack_824._0_1_ = 'U';\n    uStack_824._1_1_ = 'G';\n    uStack_824._2_1_ = ']';\n    uStack_824._3_1_ = ' ';\n    uStack_820._0_1_ = 'F';\n    uStack_820._1_1_ = 'r';\n    uStack_820._2_1_ = 'e';\n    uStack_820._3_1_ = 'e';\n    uStack_81c._0_1_ = ' ';\n    uStack_81c._1_1_ = 'm';\n    uStack_81c._2_1_ = 'e';\n    uStack_81c._3_1_ = 'm';\n    local_818._0_1_ = 'o';\n    local_818._1_1_ = 'r';\n    local_818._2_1_ = 'y';\n    local_818._3_1_ = ' ';\n    uStack_814._0_1_ = 'f';\n    uStack_814._1_1_ = 'o';\n    uStack_814._2_1_ = 'r';\n    uStack_814._3_1_ = ' ';\n    uStack_810._0_1_ = 's';\n    uStack_810._1_1_ = 'w';\n    uStack_810._2_1_ = ' ';\n    uStack_810._3_1_ = 's';\n    uStack_80c._0_1_ = 'w';\n    uStack_80c._1_1_ = 'e';\n    uStack_80c._2_1_ = 'e';\n    uStack_80c._3_1_ = 'p';\n    local_808._0_3_ = 0xa2e;\n    FUN_0002e584(4,&local_828,0);\n  }\n  ppcVar9 = DAT_004fcb38;\n  if (DAT_004fcb38 == (char **)0x0) {\n    DAT_004fcb38 = (char **)calloc(0x8114ac,1);\n    if (DAT_004fcb38 == (char **)0x0) {\n      if (3 < DAT_0007eb9c) {\n        local_828._0_1_ = 'F';\n        local_828._1_1_ = 'a';\n        local_828._2_1_ = 'i';\n        local_828._3_1_ = 'l';\n        uStack_824._0_1_ = ' ';\n        uStack_824._1_1_ = 't';\n        uStack_824._2_1_ = 'o';\n        uStack_824._3_1_ = ' ';\n        uStack_820._0_1_ = 'a';\n        uStack_820._1_1_ = 'l';\n        uStack_820._2_1_ = 'l';\n        uStack_820._3_1_ = 'o';\n        uStack_81c._0_1_ = 'c';\n        uStack_81c._1_1_ = 'a';\n        uStack_81c._2_1_ = 't';\n        uStack_81c._3_1_ = 'e';\n        local_818._0_1_ = ' ';\n        local_818._1_1_ = 'm';\n        local_818._2_1_ = 'e';\n        local_818._3_1_ = 'm';\n        uStack_814._0_1_ = 'o';\n        uStack_814._1_1_ = 'r';\n        uStack_814._2_1_ = 'y';\n        uStack_814._3_1_ = ' ';\n        uStack_810._0_1_ = 'f';\n        uStack_810._1_1_ = 'o';\n        uStack_810._2_1_ = 'r';\n        uStack_810._3_1_ = ' ';\n        uStack_80c._0_1_ = 's';\n        uStack_80c._1_1_ = 'w';\n        uStack_80c._2_1_ = ' ';\n        uStack_80c._3_1_ = 's';\n        local_808._0_1_ = 'w';\n        local_808._1_1_ = 'e';\n        local_808._2_1_ = 'e';\n        local_808._3_1_ = 'p';\n        uStack_804._0_1_ = ' ';\n        uStack_804._1_1_ = 'c';\n        uStack_804._2_1_ = 't';\n        uStack_804._3_1_ = 'x';\n        uStack_800._0_1_ = 't';\n        uStack_800._1_1_ = '.';\n        uStack_800._2_1_ = '\\n';\n        uStack_800._3_1_ = '\\0';\n        FUN_0002e584(3,&local_828,0);\nLAB_000383c0:\n        if (DAT_004fcb38 != (char **)0x0) {\nLAB_0003832c:\n          FUN_00037f08();\n        }\n      }\n      FUN_000356c4(0xd,0xff);\n      return 0xffffffff;\n    }\n    iVar1 = FUN_0001e0f0();\n    ppcVar9 = DAT_004fcb38;\n    if (iVar1 != 0) {\n      iVar8 = 0;\n      do {\n        iVar2 = FUN_0001e130();\n        ppcVar9 = DAT_004fcb38;\n        pcVar6 = (char *)malloc(iVar2 * 0x1a0);\n        iVar2 = iVar8 + 1;\n        ppcVar9[(int)(&DAT_00202a2a + iVar8 + 1)] = pcVar6;\n        if (pcVar6 == (char *)0x0) {\n          if (DAT_0007eb9c < 4) goto LAB_0003832c;\n          local_828._0_1_ = 'F';\n          local_828._1_1_ = 'a';\n          local_828._2_1_ = 'i';\n          local_828._3_1_ = 'l';\n          uStack_824._0_1_ = ' ';\n          uStack_824._1_1_ = 't';\n          uStack_824._2_1_ = 'o';\n          uStack_824._3_1_ = ' ';\n          uStack_820._0_1_ = 'a';\n          uStack_820._1_1_ = 'l';\n          uStack_820._2_1_ = 'l';\n          uStack_820._3_1_ = 'o';\n          uStack_81c._0_1_ = 'c';\n          uStack_81c._1_1_ = 'a';\n          uStack_81c._2_1_ = 't';\n          uStack_81c._3_1_ = 'e';\n          local_818._0_1_ = ' ';\n          local_818._1_1_ = 'm';\n          local_818._2_1_ = 'e';\n          local_818._3_1_ = 'm';\n          uStack_814._0_1_ = 'o';\n          uStack_814._1_1_ = 'r';\n          uStack_814._2_1_ = 'y';\n          uStack_814._3_1_ = ' ';\n          uStack_810._0_1_ = 'f';\n          uStack_810._1_1_ = 'o';\n          uStack_810._2_1_ = 'r';\n          uStack_810._3_1_ = ' ';\n          uStack_80c._0_1_ = 'w';\n          uStack_80c._1_1_ = 'o';\n          uStack_80c._2_1_ = 'r';\n          uStack_80c._3_1_ = 'k';\n          local_808._0_1_ = 's';\n          local_808._1_1_ = '.';\n          local_808._2_1_ = '\\n';\n          local_808._3_1_ = '\\0';\n          FUN_0002e584(3,&local_828,0);\n          goto LAB_000383c0;\n        }\n        iVar8 = iVar2;\n      } while (iVar1 != iVar2);\n    }\n  }\n  *ppcVar9 = param_1;\n  pcVar6 = *DAT_004fcb38;\n  local_82c = fopen64(pcVar6,\"r\");\n  if (local_82c == (FILE *)0x0) {\n    if (3 < DAT_0007eb9c) {\n      snprintf((char *)&local_828,0x800,\"Fail to open pattern file %s.\\n\",pcVar6);\n      FUN_0002e584(3,&local_828,0);\n    }\nLAB_00038234:\n    FUN_000356c4(0x16,0xff);\n    if (DAT_0007eb9c < 4) {\n      uVar5 = 0xffffffff;\n    }\n    else {\n      uVar5 = 0xffffffff;\n      local_828._0_1_ = 'L';\n      local_828._1_1_ = 'o';\n      local_828._2_1_ = 'a';\n      local_828._3_1_ = 'd';\n      uStack_824._0_1_ = ' ';\n      uStack_824._1_1_ = 'p';\n      uStack_824._2_1_ = 'a';\n      uStack_824._3_1_ = 't';\n      uStack_820._0_1_ = 't';\n      uStack_820._1_1_ = 'e';\n      uStack_820._2_1_ = 'r';\n      uStack_820._3_1_ = 'n';\n      uStack_81c._0_1_ = ' ';\n      uStack_81c._1_1_ = 'f';\n      uStack_81c._2_1_ = 'i';\n      uStack_81c._3_1_ = 'l';\n      local_818._0_1_ = 'e';\n      local_818._1_1_ = ' ';\n      local_818._2_1_ = 'f';\n      local_818._3_1_ = 'a';\n      uStack_814._0_1_ = 'i';\n      uStack_814._1_1_ = 'l';\n      uStack_814._2_1_ = 'e';\n      uStack_814._3_1_ = 'd';\n      uStack_810._0_3_ = 0xa2e;\n      FUN_0002e584(3,&local_828,0);\n    }\n  }\n  else {\n    iVar1 = FUN_0001e0f0();\n    if (iVar1 != 0) {\n      iVar8 = 0;\n      do {\n        iVar2 = FUN_0001e130();\n        if (iVar2 == 0) {\n          uVar7 = 0;\n        }\n        else {\n          uVar7 = 0;\n          iVar3 = 0;\n          do {\n            iVar4 = iVar3 + 1;\n            iVar3 = FUN_00037fa0(&local_82c,iVar8,iVar3,8);\n            uVar7 = uVar7 + iVar3;\n            iVar3 = iVar4;\n          } while (iVar2 != iVar4);\n        }\n        iVar2 = FUN_0001e130();\n        if (uVar7 < (uint)(iVar2 << 3)) {\n          if (3 < DAT_0007eb9c) {\n            iVar1 = FUN_0001e130();\n            snprintf((char *)&local_828,0x800,\n                     \"No enough work, asic = %d, work_count = %d, work_count_target = %d.\\n\",iVar8,\n                     uVar7,iVar1 << 3);\n            FUN_0002e584(3,&local_828,0);\n          }\n          fclose(local_82c);\n          goto LAB_00038234;\n        }\n        iVar8 = iVar8 + 1;\n      } while (iVar1 != iVar8);\n    }\n    uVar5 = 0;\n    fclose(local_82c);\n  }\n  FUN_00044970();\n  FUN_00044880(4);\n  return uVar5;\n}\n\n",
    "FUN_00038450": "\nundefined ** FUN_00038450(void)\n\n{\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined4 uStack_7fc;\n  undefined4 uStack_7f8;\n  undefined local_7f4;\n  \n  if (DAT_0007eb9c < 5) {\n    return &PTR_s_SW_Sweep_0007ee1c;\n  }\n  local_808._0_1_ = '[';\n  local_808._1_1_ = 'D';\n  local_808._2_1_ = 'E';\n  local_808._3_1_ = 'B';\n  uStack_804._0_1_ = 'U';\n  uStack_804._1_1_ = 'G';\n  uStack_804._2_1_ = ']';\n  uStack_804._3_1_ = ' ';\n  uStack_800._0_1_ = 'G';\n  uStack_800._1_1_ = 'e';\n  uStack_800._2_1_ = 't';\n  uStack_800._3_1_ = ' ';\n  uStack_7fc._0_1_ = 's';\n  uStack_7fc._1_1_ = 'w';\n  uStack_7fc._2_1_ = ' ';\n  uStack_7fc._3_1_ = 'o';\n  uStack_7f8._0_1_ = 'p';\n  uStack_7f8._1_1_ = 's';\n  uStack_7f8._2_1_ = '.';\n  uStack_7f8._3_1_ = '\\n';\n  local_7f4 = 0;\n  FUN_0002e584(4,&local_808,0);\n  return &PTR_s_SW_Sweep_0007ee1c;\n}\n\n",
    "FUN_000384dc": "\nundefined4 FUN_000384dc(undefined4 param_1)\n\n{\n  char acStack_808 [2056];\n  \n  snprintf(acStack_808,0x800,\"input value error: %c\\n\",param_1);\n  FUN_0002e584(1,acStack_808,0);\n  return 0xff;\n}\n\n",
    "FUN_000386bc": "\nuint FUN_000386bc(int param_1,uint param_2)\n\n{\n  uint *puVar1;\n  uint *puVar2;\n  uint uVar3;\n  uint uStack_13c;\n  uint local_138 [3];\n  undefined auStack_12c [16];\n  uint local_11c;\n  uint local_118 [8];\n  undefined4 local_f8;\n  undefined4 local_f4;\n  undefined4 local_f0;\n  undefined4 uStack_ec;\n  undefined4 uStack_e8;\n  undefined4 uStack_e4;\n  undefined4 local_e0;\n  undefined4 uStack_dc;\n  undefined4 uStack_d8;\n  undefined4 uStack_d4;\n  undefined auStack_d0 [12];\n  undefined auStack_c4 [180];\n  \n  memset(local_138,0,0x20);\n  memset(local_118,0,0x20);\n  if (param_1 == 0) {\n    local_11c = 0;\n  }\n  else {\n    local_f0 = *(undefined4 *)(param_1 + 0x14);\n    uStack_ec = *(undefined4 *)(param_1 + 0x18);\n    uStack_e8 = *(undefined4 *)(param_1 + 0x1c);\n    uStack_e4 = *(undefined4 *)(param_1 + 0x20);\n    local_e0 = *(undefined4 *)(param_1 + 0x24);\n    uStack_dc = *(undefined4 *)(param_1 + 0x28);\n    uStack_d8 = *(undefined4 *)(param_1 + 0x2c);\n    uStack_d4 = *(undefined4 *)(param_1 + 0x30);\n    FUN_00031268(&local_f0,0x20);\n    local_138[0] = *(uint *)(param_1 + 8);\n    local_f8 = 0x50;\n    local_f4 = 0;\n    local_138[1] = *(undefined4 *)(param_1 + 0xc);\n    local_138[2] = *(undefined4 *)(param_1 + 0x10);\n    FUN_00031268(local_138,0xc,local_138[2],auStack_12c);\n    FUN_000316b0(auStack_d0,local_138,0xc);\n    local_138[0] = param_2 << 0x18 | (param_2 >> 8 & 0xff) << 0x10 | (param_2 >> 0x10 & 0xff) << 8 |\n                   param_2 >> 0x18;\n    FUN_00031268(local_138,4);\n    FUN_000316b0(auStack_c4,local_138,4);\n    FUN_0002327c(&local_f8,local_138);\n    memset(&local_f8,0,0xe8);\n    FUN_00023430(local_138,0x20,local_118);\n    puVar2 = &local_11c;\n    puVar1 = &uStack_13c;\n    do {\n      puVar2 = puVar2 + 1;\n      uVar3 = *puVar2;\n      puVar1 = puVar1 + 1;\n      *puVar1 = uVar3 << 0x18 | (uVar3 >> 8 & 0xff) << 0x10 | (uVar3 >> 0x10 & 0xff) << 8 |\n                uVar3 >> 0x18;\n    } while (puVar2 != local_118 + 7);\n    if (local_11c != 0) {\n      local_11c = 1;\n    }\n  }\n  return local_11c;\n}\n\n",
    "FUN_000387f8": "\nvoid FUN_000387f8(void)\n\n{\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined4 uStack_7fc;\n  undefined local_7f8;\n  \n  local_808._0_1_ = 'H';\n  local_808._1_1_ = 'a';\n  local_808._2_1_ = 'n';\n  local_808._3_1_ = 'd';\n  uStack_804._0_1_ = 'l';\n  uStack_804._1_1_ = 'e';\n  uStack_804._2_1_ = ' ';\n  uStack_804._3_1_ = 'i';\n  uStack_800._0_1_ = 's';\n  uStack_800._1_1_ = ' ';\n  uStack_800._2_1_ = 'N';\n  uStack_800._3_1_ = 'U';\n  uStack_7fc._0_1_ = 'L';\n  uStack_7fc._1_1_ = 'L';\n  uStack_7fc._2_1_ = '.';\n  uStack_7fc._3_1_ = '\\n';\n  local_7f8 = 0;\n  FUN_0002e584(3,&local_808,0);\n  return;\n}\n\n",
    "FUN_0003883c": "\nundefined4 FUN_0003883c(undefined4 *param_1)\n\n{\n  char acStack_810 [2052];\n  \n  if (4 < DAT_0007eb9c) {\n    snprintf(acStack_810,0x800,\"[DEBUG] Send work one chain, chain = %d.\\n\",*param_1);\n    FUN_0002e584(4,acStack_810,0);\n  }\n  if ((DAT_004fcb3c == 0) || (*(int *)(DAT_004fcb3c + 4) == 0)) {\n    if (3 < DAT_0007eb9c) {\n      FUN_000387f8();\n      return 0;\n    }\n  }\n  else {\n    (**(code **)(*(int *)(DAT_004fcb3c + 4) + 0x1c))(*param_1,param_1[2]);\n    param_1[1] = 1;\n  }\n  return 0;\n}\n\n",
    "FUN_000388f4": "\nundefined4 FUN_000388f4(void)\n\n{\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined4 uStack_7fc;\n  undefined local_7f8;\n  \n  local_808._0_1_ = 'H';\n  local_808._1_1_ = 'a';\n  local_808._2_1_ = 'n';\n  local_808._3_1_ = 'd';\n  uStack_804._0_1_ = 'l';\n  uStack_804._1_1_ = 'e';\n  uStack_804._2_1_ = ' ';\n  uStack_804._3_1_ = 'i';\n  uStack_800._0_1_ = 's';\n  uStack_800._1_1_ = ' ';\n  uStack_800._2_1_ = 'N';\n  uStack_800._3_1_ = 'U';\n  uStack_7fc._0_1_ = 'L';\n  uStack_7fc._1_1_ = 'L';\n  uStack_7fc._2_1_ = '.';\n  uStack_7fc._3_1_ = '\\n';\n  local_7f8 = 0;\n  FUN_0002e584(3,&local_808,0);\n  return 1;\n}\n\n",
    "FUN_0003893c": "\nvoid FUN_0003893c(undefined4 param_1)\n\n{\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined4 uStack_804;\n  undefined4 local_800;\n  undefined4 uStack_7fc;\n  undefined4 uStack_7f8;\n  undefined4 uStack_7f4;\n  undefined local_7f0;\n  \n  if (4 < DAT_0007eb9c) {\n    local_810._0_1_ = '[';\n    local_810._1_1_ = 'D';\n    local_810._2_1_ = 'E';\n    local_810._3_1_ = 'B';\n    uStack_80c._0_1_ = 'U';\n    uStack_80c._1_1_ = 'G';\n    uStack_80c._2_1_ = ']';\n    uStack_80c._3_1_ = ' ';\n    uStack_808._0_1_ = 'S';\n    uStack_808._1_1_ = 'e';\n    uStack_808._2_1_ = 'n';\n    uStack_808._3_1_ = 'd';\n    uStack_804._0_1_ = ' ';\n    uStack_804._1_1_ = 'w';\n    uStack_804._2_1_ = 'o';\n    uStack_804._3_1_ = 'r';\n    local_800._0_1_ = 'k';\n    local_800._1_1_ = ' ';\n    local_800._2_1_ = 'f';\n    local_800._3_1_ = 'o';\n    uStack_7fc._0_1_ = 'r';\n    uStack_7fc._1_1_ = ' ';\n    uStack_7fc._2_1_ = 'h';\n    uStack_7fc._3_1_ = 'w';\n    uStack_7f8._0_1_ = ' ';\n    uStack_7f8._1_1_ = 's';\n    uStack_7f8._2_1_ = 'w';\n    uStack_7f8._3_1_ = 'e';\n    uStack_7f4._0_1_ = 'e';\n    uStack_7f4._1_1_ = 'p';\n    uStack_7f4._2_1_ = '.';\n    uStack_7f4._3_1_ = '\\n';\n    local_7f0 = 0;\n    FUN_0002e584(4,&local_810,0);\n  }\n  if ((DAT_004fcb3c == 0) || (*(int *)(DAT_004fcb3c + 4) == 0)) {\n    if (3 < DAT_0007eb9c) {\n      FUN_000387f8();\n      return;\n    }\n  }\n  else {\n    (**(code **)(*(int *)(DAT_004fcb3c + 4) + 0x1c))(0xff,param_1);\n  }\n  return;\n}\n\n",
    "FUN_000389f0": "\nvoid FUN_000389f0(int param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *__s;\n  pthread_t local_830 [4];\n  undefined4 local_820;\n  undefined4 local_81c;\n  undefined4 local_818;\n  undefined4 uStack_814;\n  undefined local_810;\n  \n  if ((DAT_004fcb3c == 0) || (*(int *)(DAT_004fcb3c + 4) == 0)) {\n    if (3 < DAT_0007eb9c) {\n      local_820._0_1_ = 'H';\n      local_820._1_1_ = 'a';\n      local_820._2_1_ = 'n';\n      local_820._3_1_ = 'd';\n      local_81c._0_1_ = 'l';\n      local_81c._1_1_ = 'e';\n      local_81c._2_1_ = ' ';\n      local_81c._3_1_ = 'i';\n      local_818._0_1_ = 's';\n      local_818._1_1_ = ' ';\n      local_818._2_1_ = 'N';\n      local_818._3_1_ = 'U';\n      uStack_814._0_1_ = 'L';\n      uStack_814._1_1_ = 'L';\n      uStack_814._2_1_ = '.';\n      uStack_814._3_1_ = '\\n';\n      local_810 = 0;\n      FUN_0002e584(3,&local_820,0);\n      return;\n    }\n  }\n  else {\n    __s = &local_820;\n    iVar2 = 0;\n    local_830[0] = 0;\n    local_830[1] = 0;\n    local_830[2] = 0;\n    local_830[3] = 0;\n    memset(__s,0,0x30);\n    do {\n      iVar1 = FUN_0001e29c(iVar2);\n      if ((iVar1 != 0) && (*(int *)(DAT_004fcb3c + (iVar2 + 2) * 4) == 1)) {\n        *__s = iVar2;\n        __s[1] = 0;\n        __s[2] = param_1;\n        pthread_create(local_830 + iVar2,(pthread_attr_t *)0x0,FUN_0003883c,__s);\n        pthread_detach(local_830[iVar2]);\n      }\n      iVar2 = iVar2 + 1;\n      __s = __s + 3;\n    } while (iVar2 != 4);\n    iVar2 = 0;\n    do {\n      while( true ) {\n        iVar1 = FUN_0001e29c(iVar2);\n        if (((iVar1 == 0) || (local_830[iVar2] == 0)) || ((&local_81c)[iVar2 * 3] != 0)) break;\n        usleep(100000);\n        iVar2 = 0;\n      }\n      iVar2 = iVar2 + 1;\n    } while (iVar2 != 4);\n  }\n  return;\n}\n\n",
    "FUN_00038b6c": "\nfloat FUN_00038b6c(int param_1,int param_2)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  int *piVar3;\n  int iVar4;\n  int iVar5;\n  double unaff_d8;\n  \n  iVar1 = FUN_0001e0f0();\n  if (iVar1 < 1) {\n    iVar4 = 0;\n  }\n  else {\n    piVar3 = (int *)(&DAT_00808ffc + param_2 + param_1 * 0x400);\n    iVar4 = 0;\n    do {\n      piVar3 = piVar3 + 1;\n      iVar4 = iVar4 + *piVar3;\n    } while (piVar3 != (int *)(&DAT_00808ffc + (iVar1 + param_1 * 0x100) * 4 + param_2));\n  }\n  uVar2 = FUN_0001e0f0();\n  iVar1 = FUN_0005faf8(iVar4,uVar2);\n  iVar4 = FUN_0001e0f0();\n  if (iVar4 < 1) {\n    FUN_0001e0f0();\n    return 0.0;\n  }\n  piVar3 = (int *)(&DAT_00808ffc + param_2 + param_1 * 0x400);\n  iVar5 = 0;\n  do {\n    piVar3 = piVar3 + 1;\n    iVar5 = (*piVar3 - iVar1) * (*piVar3 - iVar1) + iVar5;\n  } while (piVar3 != (int *)(&DAT_00808ffc + (iVar4 + param_1 * 0x100) * 4 + param_2));\n  uVar2 = FUN_0001e0f0();\n  iVar1 = FUN_0005faf8(iVar5,uVar2);\n  if ((float)(longlong)iVar1 < 0.0) {\n    sqrt(unaff_d8);\n  }\n  return SQRT((float)(longlong)iVar1);\n}\n\n",
    "FUN_00038c70": "\nundefined4 FUN_00038c70(int param_1,undefined4 param_2)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  int *piVar3;\n  undefined4 local_818;\n  undefined4 uStack_814;\n  undefined4 uStack_810;\n  undefined4 uStack_80c;\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined4 uStack_7fc;\n  undefined4 local_7f8;\n  undefined4 uStack_7f4;\n  undefined4 uStack_7f0;\n  undefined4 uStack_7ec;\n  \n  if (DAT_0007eb9c < 5) {\n    if (1 < param_1 - 0xa0U) {\nLAB_00038ca4:\n      FUN_000356c4(0x14,0xff);\n      if (DAT_0007eb9c < 4) {\n        return 0xffffffff;\n      }\n      snprintf((char *)&local_818,0x800,\"Invalid sweep type 0x%X\\n\",param_1);\n      goto LAB_00038dac;\n    }\n  }\n  else {\n    snprintf((char *)&local_818,0x800,\"[DEBUG] sweep_type = 0x%X, pattern_file_path = %s\\n\",param_1,\n             param_2);\n    FUN_0002e584(4,&local_818,0);\n    if (1 < param_1 - 0xa0U) goto LAB_00038ca4;\n    if (4 < DAT_0007eb9c) {\n      local_818._0_1_ = '[';\n      local_818._1_1_ = 'D';\n      local_818._2_1_ = 'E';\n      local_818._3_1_ = 'B';\n      uStack_814._0_1_ = 'U';\n      uStack_814._1_1_ = 'G';\n      uStack_814._2_1_ = ']';\n      uStack_814._3_1_ = ' ';\n      uStack_810._0_1_ = 'a';\n      uStack_810._1_1_ = 'l';\n      uStack_810._2_1_ = 'l';\n      uStack_810._3_1_ = 'o';\n      uStack_80c._0_1_ = 'c';\n      uStack_80c._1_1_ = 'a';\n      uStack_80c._2_1_ = 't';\n      uStack_80c._3_1_ = 'e';\n      local_808._0_1_ = ' ';\n      local_808._1_1_ = 'm';\n      local_808._2_1_ = 'e';\n      local_808._3_1_ = 'm';\n      uStack_804._0_1_ = 'o';\n      uStack_804._1_1_ = 'r';\n      uStack_804._2_1_ = 'y';\n      uStack_804._3_1_ = ' ';\n      uStack_800._0_1_ = 'f';\n      uStack_800._1_1_ = 'o';\n      uStack_800._2_1_ = 'r';\n      uStack_800._3_1_ = ' ';\n      uStack_7fc._0_1_ = 'p';\n      uStack_7fc._1_1_ = 'a';\n      uStack_7fc._2_1_ = 't';\n      uStack_7fc._3_1_ = 't';\n      local_7f8._0_1_ = 'e';\n      local_7f8._1_1_ = 'r';\n      local_7f8._2_1_ = 'n';\n      local_7f8._3_1_ = ' ';\n      uStack_7f4._0_1_ = 't';\n      uStack_7f4._1_1_ = 'e';\n      uStack_7f4._2_1_ = 's';\n      uStack_7f4._3_1_ = 't';\n      uStack_7f0._0_3_ = 0xa2e;\n      FUN_0002e584(4,&local_818,0);\n    }\n  }\n  piVar3 = DAT_004fcb3c;\n  if (DAT_004fcb3c == (int *)0x0) {\n    piVar3 = (int *)calloc(0x44,1);\n    DAT_004fcb3c = piVar3;\n    if (piVar3 == (int *)0x0) {\n      FUN_000356c4(0xd,0xff);\n      if (DAT_0007eb9c < 4) {\n        return 0xffffffff;\n      }\n      local_818._0_1_ = 'F';\n      local_818._1_1_ = 'a';\n      local_818._2_1_ = 'i';\n      local_818._3_1_ = 'l';\n      uStack_814._0_1_ = ' ';\n      uStack_814._1_1_ = 't';\n      uStack_814._2_1_ = 'o';\n      uStack_814._3_1_ = ' ';\n      uStack_810._0_1_ = 'a';\n      uStack_810._1_1_ = 'l';\n      uStack_810._2_1_ = 'l';\n      uStack_810._3_1_ = 'o';\n      uStack_80c._0_1_ = 'c';\n      uStack_80c._1_1_ = 'a';\n      uStack_80c._2_1_ = 't';\n      uStack_80c._3_1_ = 'e';\n      local_808._0_1_ = ' ';\n      local_808._1_1_ = 'm';\n      local_808._2_1_ = 'e';\n      local_808._3_1_ = 'm';\n      uStack_804._0_1_ = 'o';\n      uStack_804._1_1_ = 'r';\n      uStack_804._2_1_ = 'y';\n      uStack_804._3_1_ = ' ';\n      uStack_800._0_1_ = 'f';\n      uStack_800._1_1_ = 'o';\n      uStack_800._2_1_ = 'r';\n      uStack_800._3_1_ = ' ';\n      uStack_7fc._0_1_ = 's';\n      uStack_7fc._1_1_ = 'e';\n      uStack_7fc._2_1_ = 'n';\n      uStack_7fc._3_1_ = 'd';\n      local_7f8._0_1_ = ' ';\n      local_7f8._1_1_ = 'w';\n      local_7f8._2_1_ = 'o';\n      local_7f8._3_1_ = 'r';\n      uStack_7f4._0_1_ = 'k';\n      uStack_7f4._1_1_ = ' ';\n      uStack_7f4._2_1_ = 'c';\n      uStack_7f4._3_1_ = 'o';\n      uStack_7f0._0_1_ = 'n';\n      uStack_7f0._1_1_ = 't';\n      uStack_7f0._2_1_ = 'e';\n      uStack_7f0._3_1_ = 'x';\n      uStack_7ec._0_1_ = 't';\n      uStack_7ec._1_1_ = '.';\n      uStack_7ec._2_1_ = '\\n';\n      uStack_7ec._3_1_ = '\\0';\nLAB_00038dac:\n      FUN_0002e584(3,&local_818,0);\n      return 0xffffffff;\n    }\n    piVar3[2] = 0;\n    piVar3[3] = 0;\n    piVar3[4] = 0;\n    piVar3[5] = 0;\n  }\n  *piVar3 = param_1;\n  if (param_1 == 0xa0) {\n    iVar1 = FUN_00038450();\n    piVar3[1] = iVar1;\n  }\n  else {\n    iVar1 = FUN_00037574();\n    piVar3[1] = iVar1;\n  }\n  uVar2 = (**(code **)(DAT_004fcb3c[1] + 4))(param_2);\n  return uVar2;\n}\n\n",
    "FUN_00038e40": "\nvoid FUN_00038e40(void)\n\n{\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined4 uStack_804;\n  undefined4 local_800;\n  undefined4 uStack_7fc;\n  undefined4 uStack_7f8;\n  undefined4 uStack_7f4;\n  undefined4 uStack_7f0;\n  undefined2 uStack_7ec;\n  undefined local_7ea;\n  \n  if (DAT_0007eb9c < 5) {\n    if (DAT_004fcb3c == (void *)0x0) {\n      return;\n    }\nLAB_00038e70:\n    if (*(int *)((int)DAT_004fcb3c + 4) == 0) {\n      if (DAT_0007eb9c < 5) goto LAB_00038e9c;\n      goto LAB_00038ec0;\n    }\n    (**(code **)(*(int *)((int)DAT_004fcb3c + 4) + 8))();\n    if (4 < DAT_0007eb9c) goto LAB_00038ec0;\n  }\n  else {\n    local_810._0_1_ = '[';\n    local_810._1_1_ = 'D';\n    local_810._2_1_ = 'E';\n    local_810._3_1_ = 'B';\n    uStack_80c._0_1_ = 'U';\n    uStack_80c._1_1_ = 'G';\n    uStack_80c._2_1_ = ']';\n    uStack_80c._3_1_ = ' ';\n    uStack_808._0_1_ = 'P';\n    uStack_808._1_1_ = 'a';\n    uStack_808._2_1_ = 't';\n    uStack_808._3_1_ = 't';\n    uStack_804._0_1_ = 'e';\n    uStack_804._1_1_ = 'r';\n    uStack_804._2_1_ = 'n';\n    uStack_804._3_1_ = ' ';\n    local_800._0_1_ = 't';\n    local_800._1_1_ = 'e';\n    local_800._2_1_ = 's';\n    local_800._3_1_ = 't';\n    uStack_7fc._0_1_ = ' ';\n    uStack_7fc._1_1_ = 'e';\n    uStack_7fc._2_1_ = 'x';\n    uStack_7fc._3_1_ = 'i';\n    uStack_7f8._0_1_ = 't';\n    uStack_7f8._1_1_ = '.';\n    uStack_7f8._2_1_ = '\\n';\n    uStack_7f8._3_1_ = '\\0';\n    FUN_0002e584(4,&local_810,0);\n    if (DAT_004fcb3c != (void *)0x0) goto LAB_00038e70;\n    if (DAT_0007eb9c < 5) {\n      return;\n    }\nLAB_00038ec0:\n    local_810._0_1_ = '[';\n    local_810._1_1_ = 'D';\n    local_810._2_1_ = 'E';\n    local_810._3_1_ = 'B';\n    uStack_80c._0_1_ = 'U';\n    uStack_80c._1_1_ = 'G';\n    uStack_80c._2_1_ = ']';\n    uStack_80c._3_1_ = ' ';\n    uStack_808._0_1_ = 'F';\n    uStack_808._1_1_ = 'r';\n    uStack_808._2_1_ = 'e';\n    uStack_808._3_1_ = 'e';\n    uStack_804._0_1_ = ' ';\n    uStack_804._1_1_ = 'm';\n    uStack_804._2_1_ = 'e';\n    uStack_804._3_1_ = 'm';\n    local_800._0_1_ = 'o';\n    local_800._1_1_ = 'r';\n    local_800._2_1_ = 'y';\n    local_800._3_1_ = ' ';\n    uStack_7fc._0_1_ = 'f';\n    uStack_7fc._1_1_ = 'o';\n    uStack_7fc._2_1_ = 'r';\n    uStack_7fc._3_1_ = ' ';\n    uStack_7f8._0_1_ = 'p';\n    uStack_7f8._1_1_ = 'a';\n    uStack_7f8._2_1_ = 't';\n    uStack_7f8._3_1_ = 't';\n    uStack_7f4._0_1_ = 'e';\n    uStack_7f4._1_1_ = 'r';\n    uStack_7f4._2_1_ = 'n';\n    uStack_7f4._3_1_ = ' ';\n    uStack_7f0._0_1_ = 't';\n    uStack_7f0._1_1_ = 'e';\n    uStack_7f0._2_1_ = 's';\n    uStack_7f0._3_1_ = 't';\n    uStack_7ec = 0xa2e;\n    local_7ea = 0;\n    FUN_0002e584(4,&local_810,0);\n  }\n  if (DAT_004fcb3c == (void *)0x0) {\n    return;\n  }\nLAB_00038e9c:\n  free(DAT_004fcb3c);\n  DAT_004fcb3c = (void *)0x0;\n  return;\n}\n\n",
    "FUN_00038f58": "\nvoid FUN_00038f58(void)\n\n{\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined4 uStack_7fc;\n  undefined4 local_7f8;\n  undefined4 uStack_7f4;\n  undefined4 uStack_7f0;\n  undefined local_7ec;\n  \n  if (4 < DAT_0007eb9c) {\n    local_808._0_1_ = '[';\n    local_808._1_1_ = 'D';\n    local_808._2_1_ = 'E';\n    local_808._3_1_ = 'B';\n    uStack_804._0_1_ = 'U';\n    uStack_804._1_1_ = 'G';\n    uStack_804._2_1_ = ']';\n    uStack_804._3_1_ = ' ';\n    uStack_800._0_1_ = 'P';\n    uStack_800._1_1_ = 'a';\n    uStack_800._2_1_ = 't';\n    uStack_800._3_1_ = 't';\n    uStack_7fc._0_1_ = 'e';\n    uStack_7fc._1_1_ = 'r';\n    uStack_7fc._2_1_ = 'n';\n    uStack_7fc._3_1_ = ' ';\n    local_7f8._0_1_ = 't';\n    local_7f8._1_1_ = 'e';\n    local_7f8._2_1_ = 's';\n    local_7f8._3_1_ = 't';\n    uStack_7f4._0_1_ = ' ';\n    uStack_7f4._1_1_ = 'r';\n    uStack_7f4._2_1_ = 'e';\n    uStack_7f4._3_1_ = 's';\n    uStack_7f0._0_1_ = 'e';\n    uStack_7f0._1_1_ = 't';\n    uStack_7f0._2_1_ = '.';\n    uStack_7f0._3_1_ = '\\n';\n    local_7ec = 0;\n    FUN_0002e584(4,&local_808,0);\n  }\n  if ((DAT_004fcb3c == 0) || (*(int *)(DAT_004fcb3c + 4) == 0)) {\n    if (3 < DAT_0007eb9c) {\n      local_808._0_1_ = 'H';\n      local_808._1_1_ = 'a';\n      local_808._2_1_ = 'n';\n      local_808._3_1_ = 'd';\n      uStack_804._0_1_ = 'l';\n      uStack_804._1_1_ = 'e';\n      uStack_804._2_1_ = ' ';\n      uStack_804._3_1_ = 'i';\n      uStack_800._0_1_ = 's';\n      uStack_800._1_1_ = ' ';\n      uStack_800._2_1_ = 'N';\n      uStack_800._3_1_ = 'U';\n      uStack_7fc._0_1_ = 'L';\n      uStack_7fc._1_1_ = 'L';\n      uStack_7fc._2_1_ = '.';\n      uStack_7fc._3_1_ = '\\n';\n      local_7f8 = local_7f8 & 0xffffff00;\n      FUN_0002e584(3,&local_808,0);\n      return;\n    }\n  }\n  else {\n    (**(code **)(*(int *)(DAT_004fcb3c + 4) + 0x10))();\n  }\n  return;\n}\n\n",
    "FUN_00039018": "\nvoid FUN_00039018(void)\n\n{\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined4 uStack_7fc;\n  undefined local_7f8;\n  \n  if ((DAT_004fcb3c == 0) || (*(int *)(DAT_004fcb3c + 4) == 0)) {\n    if (3 < DAT_0007eb9c) {\n      local_808._0_1_ = 'H';\n      local_808._1_1_ = 'a';\n      local_808._2_1_ = 'n';\n      local_808._3_1_ = 'd';\n      uStack_804._0_1_ = 'l';\n      uStack_804._1_1_ = 'e';\n      uStack_804._2_1_ = ' ';\n      uStack_804._3_1_ = 'i';\n      uStack_800._0_1_ = 's';\n      uStack_800._1_1_ = ' ';\n      uStack_800._2_1_ = 'N';\n      uStack_800._3_1_ = 'U';\n      uStack_7fc._0_1_ = 'L';\n      uStack_7fc._1_1_ = 'L';\n      uStack_7fc._2_1_ = '.';\n      uStack_7fc._3_1_ = '\\n';\n      local_7f8 = 0;\n      FUN_0002e584(3,&local_808,0);\n      return;\n    }\n  }\n  else if (*(int *)(DAT_004fcb3c + 0x40) != 0) {\n    (**(code **)(*(int *)(DAT_004fcb3c + 4) + 0x14))();\n  }\n  return;\n}\n\n",
    "FUN_000390b0": "\nvoid FUN_000390b0(byte *param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  \n  uVar2 = DAT_005945b8;\n  uVar3 = DAT_005945b8 + 1;\n  iVar1 = uVar3 * 8;\n  (&DAT_005945bc)[uVar3 * 2] = *(undefined4 *)(param_1 + 4);\n  *(byte *)(&DAT_005945c0 + uVar3 * 2) = (byte)(((uint)param_1[3] << 0x1b) >> 0x1b);\n  *(byte *)((int)&DAT_005945c0 + iVar1 + 1) = param_1[2];\n  *(byte *)((int)&DAT_005945c0 + iVar1 + 2) = param_1[1];\n  if (uVar2 < 0x1fe) {\n    DAT_005945b8 = uVar3;\n  }\n  *(byte *)((int)&DAT_005945c0 + iVar1 + 3) = (byte)(((uint)*param_1 << 0x1c) >> 0x1c);\n  if (0x1fd < uVar2) {\n    DAT_005945b8 = 0;\n  }\n  if (DAT_005945c0 < 0x1ff) {\n    DAT_005945c0 = DAT_005945c0 + 1;\n  }\n  else {\n    DAT_005945c0 = 0x1ff;\n  }\n  return;\n}\n\n",
    "FUN_00039128": "\nvoid FUN_00039128(undefined4 param_1)\n\n{\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined4 uStack_804;\n  undefined local_800;\n  \n  if ((DAT_004fcb3c == 0) || (*(int *)(DAT_004fcb3c + 4) == 0)) {\n    if (3 < DAT_0007eb9c) {\n      local_810._0_1_ = 'H';\n      local_810._1_1_ = 'a';\n      local_810._2_1_ = 'n';\n      local_810._3_1_ = 'd';\n      uStack_80c._0_1_ = 'l';\n      uStack_80c._1_1_ = 'e';\n      uStack_80c._2_1_ = ' ';\n      uStack_80c._3_1_ = 'i';\n      uStack_808._0_1_ = 's';\n      uStack_808._1_1_ = ' ';\n      uStack_808._2_1_ = 'N';\n      uStack_808._3_1_ = 'U';\n      uStack_804._0_1_ = 'L';\n      uStack_804._1_1_ = 'L';\n      uStack_804._2_1_ = '.';\n      uStack_804._3_1_ = '\\n';\n      local_800 = 0;\n      FUN_0002e584(3,&local_810,0);\n      return;\n    }\n  }\n  else {\n    pthread_mutex_lock((pthread_mutex_t *)&DAT_000810dc);\n    if (*(int *)(DAT_004fcb3c + 0x40) == 0) {\n      FUN_000390b0(param_1);\n    }\n    else {\n      (**(code **)(*(int *)(DAT_004fcb3c + 4) + 0x18))(param_1);\n    }\n    pthread_mutex_unlock((pthread_mutex_t *)&DAT_000810dc);\n  }\n  return;\n}\n\n",
    "FUN_000391f4": "\nundefined4 FUN_000391f4(void)\n\n{\n  undefined4 uVar1;\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined4 uStack_7fc;\n  undefined4 local_7f8;\n  \n  if (4 < DAT_0007eb9c) {\n    local_808._0_1_ = '[';\n    local_808._1_1_ = 'D';\n    local_808._2_1_ = 'E';\n    local_808._3_1_ = 'B';\n    uStack_804._0_1_ = 'U';\n    uStack_804._1_1_ = 'G';\n    uStack_804._2_1_ = ']';\n    uStack_804._3_1_ = ' ';\n    uStack_800._0_1_ = 'G';\n    uStack_800._1_1_ = 'e';\n    uStack_800._2_1_ = 't';\n    uStack_800._3_1_ = ' ';\n    uStack_7fc._0_1_ = 's';\n    uStack_7fc._1_1_ = 't';\n    uStack_7fc._2_1_ = 'a';\n    uStack_7fc._3_1_ = 't';\n    local_7f8._0_1_ = 's';\n    local_7f8._1_1_ = '.';\n    local_7f8._2_1_ = '\\n';\n    local_7f8._3_1_ = '\\0';\n    FUN_0002e584(4,&local_808,0);\n  }\n  if ((DAT_004fcb3c == 0) || (*(int *)(DAT_004fcb3c + 4) == 0)) {\n    if (3 < DAT_0007eb9c) {\n      local_808._0_1_ = 'H';\n      local_808._1_1_ = 'a';\n      local_808._2_1_ = 'n';\n      local_808._3_1_ = 'd';\n      uStack_804._0_1_ = 'l';\n      uStack_804._1_1_ = 'e';\n      uStack_804._2_1_ = ' ';\n      uStack_804._3_1_ = 'i';\n      uStack_800._0_1_ = 's';\n      uStack_800._1_1_ = ' ';\n      uStack_800._2_1_ = 'N';\n      uStack_800._3_1_ = 'U';\n      uStack_7fc._0_1_ = 'L';\n      uStack_7fc._1_1_ = 'L';\n      uStack_7fc._2_1_ = '.';\n      uStack_7fc._3_1_ = '\\n';\n      local_7f8 = local_7f8 & 0xffffff00;\n      FUN_0002e584(3,&local_808,0);\n      return 0;\n    }\n    uVar1 = 0;\n  }\n  else {\n    uVar1 = (**(code **)(*(int *)(DAT_004fcb3c + 4) + 0x20))();\n  }\n  return uVar1;\n}\n\n",
    "FUN_000392b8": "\nvoid FUN_000392b8(undefined4 param_1)\n\n{\n  undefined4 uVar1;\n  char acStack_810 [2052];\n  \n  uVar1 = param_1;\n  if (4 < DAT_0007eb9c) {\n    snprintf(acStack_810,0x800,\"[DEBUG] Check if chain is unbalance happen, chain = %d.\\n\",param_1);\n    uVar1 = FUN_0002e584(4,acStack_810,0);\n  }\n  if ((DAT_004fcb3c == 0) || (*(int *)(DAT_004fcb3c + 4) == 0)) {\n    if (3 < DAT_0007eb9c) {\n      FUN_000388f4(uVar1);\n      return;\n    }\n  }\n  else {\n    (**(code **)(*(int *)(DAT_004fcb3c + 4) + 0x24))(param_1);\n  }\n  return;\n}\n\n",
    "FUN_00039404": "\nvoid FUN_00039404(float param_1,int param_2)\n\n{\n  char acStack_818 [2052];\n  \n  if (4 < DAT_0007eb9c) {\n    snprintf(acStack_818,0x800,\n             \"[DEBUG] Check if chain is unqualified happen, chain = %d, nonce_rate_threshold = %.2f\\n\"\n             ,param_2,(double)param_1);\n    FUN_0002e584(4,acStack_818,0);\n  }\n  if ((DAT_004fcb3c == 0) || (*(int *)(DAT_004fcb3c + 4) == 0)) {\n    if (3 < DAT_0007eb9c) {\n      FUN_000388f4(DAT_004fcb3c);\n      return;\n    }\n  }\n  else if (*(float *)(DAT_004fcb3c + param_2 * 4 + 0x30) < param_1) {\n    *(undefined *)(DAT_004fcb3c + param_2 + 0x1c) = 1;\n  }\n  return;\n}\n\n",
    "FUN_00039584": "\nvoid FUN_00039584(undefined4 param_1)\n\n{\n  undefined4 uVar1;\n  char acStack_810 [2052];\n  \n  uVar1 = param_1;\n  if (4 < DAT_0007eb9c) {\n    snprintf(acStack_810,0x800,\"[DEBUG] Check if recv nonce enough, chain = %d.\\n\",param_1);\n    uVar1 = FUN_0002e584(4,acStack_810,0);\n  }\n  if ((DAT_004fcb3c == 0) || (*(int *)(DAT_004fcb3c + 4) == 0)) {\n    if (3 < DAT_0007eb9c) {\n      FUN_000388f4(uVar1);\n      return;\n    }\n  }\n  else {\n    (**(code **)(*(int *)(DAT_004fcb3c + 4) + 0x28))(param_1);\n  }\n  return;\n}\n\n",
    "FUN_0003962c": "\nvoid FUN_0003962c(int param_1,int param_2)\n\n{\n  int iVar1;\n  char *pcVar2;\n  int iVar3;\n  undefined4 local_818;\n  undefined4 uStack_814;\n  undefined4 uStack_810;\n  undefined4 uStack_80c;\n  undefined local_808;\n  \n  if (DAT_0007eb9c < 4) {\n    if ((DAT_004fcb3c != 0) && (*(int *)(DAT_004fcb3c + 4) != 0)) goto LAB_00039714;\n  }\n  else {\n    if (param_2 == 0) {\n      pcVar2 = \"BLOCK\";\n    }\n    else if (param_2 == 1) {\n      pcVar2 = \"READY\";\n    }\n    else {\n      pcVar2 = \"DONE\";\n      if (param_2 != 2) {\n        pcVar2 = \"UNKNOWN\";\n      }\n    }\n    snprintf((char *)&local_818,0x800,\"chain = %d, status = %s\\n\",param_1,pcVar2);\n    FUN_0002e584(3,&local_818,0);\n    if ((DAT_004fcb3c != 0) && (*(int *)(DAT_004fcb3c + 4) != 0)) {\nLAB_00039714:\n      iVar3 = 0;\n      do {\n        iVar1 = FUN_0001e29c(iVar3);\n        if (iVar1 != 0) {\n          if (param_1 == 0xff) {\n            *(int *)(DAT_004fcb3c + (iVar3 + 2) * 4) = param_2;\n          }\n          else if (param_1 == iVar3) {\n            *(int *)(DAT_004fcb3c + (param_1 + 2) * 4) = param_2;\n            return;\n          }\n        }\n        iVar3 = iVar3 + 1;\n      } while (iVar3 != 4);\n      return;\n    }\n    if (3 < DAT_0007eb9c) {\n      local_818._0_1_ = 'H';\n      local_818._1_1_ = 'a';\n      local_818._2_1_ = 'n';\n      local_818._3_1_ = 'd';\n      uStack_814._0_1_ = 'l';\n      uStack_814._1_1_ = 'e';\n      uStack_814._2_1_ = ' ';\n      uStack_814._3_1_ = 'i';\n      uStack_810._0_1_ = 's';\n      uStack_810._1_1_ = ' ';\n      uStack_810._2_1_ = 'N';\n      uStack_810._3_1_ = 'U';\n      uStack_80c._0_1_ = 'L';\n      uStack_80c._1_1_ = 'L';\n      uStack_80c._2_1_ = '.';\n      uStack_80c._3_1_ = '\\n';\n      local_808 = 0;\n      FUN_0002e584(3,&local_818,0);\n    }\n  }\n  return;\n}\n\n",
    "FUN_000397a0": "\nundefined4 FUN_000397a0(int param_1)\n\n{\n  undefined4 uVar1;\n  int iVar2;\n  char *pcVar3;\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined4 uStack_804;\n  undefined local_800;\n  \n  if (4 < DAT_0007eb9c) {\n    iVar2 = *(int *)(DAT_004fcb3c + (param_1 + 2) * 4);\n    if (iVar2 == 0) {\n      pcVar3 = \"BLOCK\";\n    }\n    else if (iVar2 == 1) {\n      pcVar3 = \"READY\";\n    }\n    else {\n      pcVar3 = \"UNKNOWN\";\n      if (iVar2 == 2) {\n        pcVar3 = \"DONE\";\n      }\n    }\n    snprintf((char *)&local_810,0x800,\"[DEBUG] chain = %d, status = %s\\n\",param_1,pcVar3);\n    FUN_0002e584(4,&local_810,0);\n  }\n  if ((DAT_004fcb3c == 0) || (*(int *)(DAT_004fcb3c + 4) == 0)) {\n    if (3 < DAT_0007eb9c) {\n      local_810._0_1_ = 'H';\n      local_810._1_1_ = 'a';\n      local_810._2_1_ = 'n';\n      local_810._3_1_ = 'd';\n      uStack_80c._0_1_ = 'l';\n      uStack_80c._1_1_ = 'e';\n      uStack_80c._2_1_ = ' ';\n      uStack_80c._3_1_ = 'i';\n      uStack_808._0_1_ = 's';\n      uStack_808._1_1_ = ' ';\n      uStack_808._2_1_ = 'N';\n      uStack_808._3_1_ = 'U';\n      uStack_804._0_1_ = 'L';\n      uStack_804._1_1_ = 'L';\n      uStack_804._2_1_ = '.';\n      uStack_804._3_1_ = '\\n';\n      local_800 = 0;\n      FUN_0002e584(3,&local_810,0);\n      return 2;\n    }\n    uVar1 = 2;\n  }\n  else {\n    uVar1 = *(undefined4 *)(DAT_004fcb3c + (param_1 + 2) * 4);\n  }\n  return uVar1;\n}\n\n",
    "FUN_000398bc": "\nvoid FUN_000398bc(void)\n\n{\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined4 uStack_7fc;\n  undefined4 uStack_7f8;\n  undefined2 local_7f4;\n  \n  if (4 < DAT_0007eb9c) {\n    local_808._0_1_ = '[';\n    local_808._1_1_ = 'D';\n    local_808._2_1_ = 'E';\n    local_808._3_1_ = 'B';\n    uStack_804._0_1_ = 'U';\n    uStack_804._1_1_ = 'G';\n    uStack_804._2_1_ = ']';\n    uStack_804._3_1_ = ' ';\n    uStack_800._0_1_ = 'C';\n    uStack_800._1_1_ = 'l';\n    uStack_800._2_1_ = 'e';\n    uStack_800._3_1_ = 'a';\n    uStack_7fc._0_1_ = 'r';\n    uStack_7fc._1_1_ = ' ';\n    uStack_7fc._2_1_ = 's';\n    uStack_7fc._3_1_ = 't';\n    uStack_7f8._0_1_ = 'a';\n    uStack_7f8._1_1_ = 't';\n    uStack_7f8._2_1_ = 's';\n    uStack_7f8._3_1_ = '.';\n    local_7f4 = 10;\n    FUN_0002e584(4,&local_808,0);\n  }\n  if ((DAT_004fcb3c == 0) || (*(int *)(DAT_004fcb3c + 4) == 0)) {\n    if (3 < DAT_0007eb9c) {\n      FUN_000387f8();\n      return;\n    }\n  }\n  else {\n    (**(code **)(*(int *)(DAT_004fcb3c + 4) + 0xc))();\n  }\n  return;\n}\n\n",
    "FUN_00039954": "\nundefined4 FUN_00039954(void)\n\n{\n  int iVar1;\n  int iVar2;\n  \n  iVar2 = 0;\n  while ((iVar1 = FUN_0001e29c(iVar2), iVar1 == 0 || (iVar1 = FUN_000397a0(iVar2), iVar1 != 0))) {\n    iVar2 = iVar2 + 1;\n    if (iVar2 == 4) {\n      return 0;\n    }\n  }\n  return 1;\n}\n\n",
    "FUN_00039998": "\nundefined4 FUN_00039998(void)\n\n{\n  int iVar1;\n  int iVar2;\n  \n  iVar2 = 0;\n  while ((iVar1 = FUN_0001e29c(iVar2), iVar1 == 0 || (iVar1 = FUN_000397a0(iVar2), iVar1 != 1))) {\n    iVar2 = iVar2 + 1;\n    if (iVar2 == 4) {\n      return 0;\n    }\n  }\n  return 1;\n}\n\n",
    "FUN_00039a7c": "\nvoid FUN_00039a7c(void)\n\n{\n  int iVar1;\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined4 uStack_7fc;\n  undefined4 local_7f8;\n  undefined local_7f4;\n  \n  if (4 < DAT_0007eb9c) {\n    local_808._0_1_ = '[';\n    local_808._1_1_ = 'D';\n    local_808._2_1_ = 'E';\n    local_808._3_1_ = 'B';\n    uStack_804._0_1_ = 'U';\n    uStack_804._1_1_ = 'G';\n    uStack_804._2_1_ = ']';\n    uStack_804._3_1_ = ' ';\n    uStack_800._0_1_ = 'C';\n    uStack_800._1_1_ = 'l';\n    uStack_800._2_1_ = 'e';\n    uStack_800._3_1_ = 'a';\n    uStack_7fc._0_1_ = 'r';\n    uStack_7fc._1_1_ = ' ';\n    uStack_7fc._2_1_ = 'c';\n    uStack_7fc._3_1_ = 't';\n    local_7f8._0_1_ = 'x';\n    local_7f8._1_1_ = 't';\n    local_7f8._2_1_ = '.';\n    local_7f8._3_1_ = '\\n';\n    local_7f4 = 0;\n    FUN_0002e584(4,&local_808,0);\n  }\n  iVar1 = DAT_004fcb3c;\n  if ((DAT_004fcb3c == 0) || (*(int *)(DAT_004fcb3c + 4) == 0)) {\n    if (3 < DAT_0007eb9c) {\n      local_808._0_1_ = 'H';\n      local_808._1_1_ = 'a';\n      local_808._2_1_ = 'n';\n      local_808._3_1_ = 'd';\n      uStack_804._0_1_ = 'l';\n      uStack_804._1_1_ = 'e';\n      uStack_804._2_1_ = ' ';\n      uStack_804._3_1_ = 'i';\n      uStack_800._0_1_ = 's';\n      uStack_800._1_1_ = ' ';\n      uStack_800._2_1_ = 'N';\n      uStack_800._3_1_ = 'U';\n      uStack_7fc._0_1_ = 'L';\n      uStack_7fc._1_1_ = 'L';\n      uStack_7fc._2_1_ = '.';\n      uStack_7fc._3_1_ = '\\n';\n      local_7f8 = local_7f8 & 0xffffff00;\n      FUN_0002e584(3,&local_808,0);\n      return;\n    }\n  }\n  else {\n    *(undefined4 *)(DAT_004fcb3c + 0x18) = 0;\n    *(undefined4 *)(iVar1 + 0x1c) = 0;\n    *(undefined4 *)(iVar1 + 0x20) = 0;\n    *(undefined4 *)(iVar1 + 0x24) = 0;\n    *(undefined4 *)(iVar1 + 0x28) = 0;\n    *(undefined4 *)(iVar1 + 0x2c) = 0;\n    *(undefined4 *)(iVar1 + 0x30) = 0;\n    *(undefined4 *)(iVar1 + 0x34) = 0;\n    *(undefined4 *)(iVar1 + 0x38) = 0;\n    *(undefined4 *)(iVar1 + 0x3c) = 0;\n  }\n  return;\n}\n\n",
    "FUN_00039b60": "\nundefined4 FUN_00039b60(float param_1,float param_2,float param_3,int param_4)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  float fVar4;\n  float fVar5;\n  uint uVar6;\n  uint uVar7;\n  undefined4 local_830;\n  undefined4 uStack_82c;\n  undefined4 uStack_828;\n  undefined4 uStack_824;\n  undefined local_820;\n  \n  iVar1 = FUN_000391f4();\n  if (4 < DAT_0007eb9c) {\n    snprintf((char *)&local_830,0x800,\n             \"[DEBUG] Check if is need stop, chain = %d, hw_threshold = %.4f, nonce_rate_threshold = %.2f, nonce_rate_dec_threshold = %.2f.\\n\"\n             ,param_4,(double)param_1,(double)param_2,(double)param_3);\n    FUN_0002e584(4,&local_830,0);\n  }\n  if ((DAT_004fcb3c == 0) || (*(int *)(DAT_004fcb3c + 4) == 0)) {\n    if (3 < DAT_0007eb9c) {\n      local_830._0_1_ = 'H';\n      local_830._1_1_ = 'a';\n      local_830._2_1_ = 'n';\n      local_830._3_1_ = 'd';\n      uStack_82c._0_1_ = 'l';\n      uStack_82c._1_1_ = 'e';\n      uStack_82c._2_1_ = ' ';\n      uStack_82c._3_1_ = 'i';\n      uStack_828._0_1_ = 's';\n      uStack_828._1_1_ = ' ';\n      uStack_828._2_1_ = 'N';\n      uStack_828._3_1_ = 'U';\n      uStack_824._0_1_ = 'L';\n      uStack_824._1_1_ = 'L';\n      uStack_824._2_1_ = '.';\n      uStack_824._3_1_ = '\\n';\n      local_820 = 0;\n      FUN_0002e584(3,&local_830,0);\n      return 1;\n    }\n  }\n  else {\n    iVar2 = FUN_0001e130();\n    iVar3 = FUN_0001e0f0();\n    iVar1 = iVar1 + param_4 * 4;\n    param_1 = (float)(longlong)(iVar3 * iVar2 * 8) * param_1;\n    uVar6 = (uint)(0.0 < param_1) * (int)param_1;\n    if (*(uint *)(&DAT_0080a850 + iVar1) <= uVar6) {\n      uVar7 = *(uint *)(&DAT_0080a000 + iVar1);\n      iVar1 = FUN_0001e130();\n      iVar2 = FUN_0001e0f0();\n      uVar6 = DAT_0007eb9c;\n      iVar3 = DAT_004fcb3c + param_4 * 4;\n      fVar4 = *(float *)(iVar3 + 0x20);\n      fVar5 = (float)(ulonglong)uVar7 / (float)(longlong)(iVar2 * iVar1 * 8);\n      *(float *)(iVar3 + 0x20) = fVar5;\n      if (*(float *)(iVar3 + 0x30) < fVar5) {\n        *(float *)(iVar3 + 0x30) = fVar5;\n      }\n      if (3 < uVar6) {\n        snprintf((char *)&local_830,0x800,\n                 \"chain = %d, nonce_rate_curr = %.4f, nonce_rate_last = %.4f, nonce_rate_max = %.4f\\n\"\n                 ,param_4,(double)fVar5,(double)fVar4,(double)*(float *)(iVar3 + 0x30));\n        FUN_0002e584(3,&local_830,0);\n        return 0;\n      }\n      return 0;\n    }\n    if (3 < DAT_0007eb9c) {\n      snprintf((char *)&local_830,0x800,\"chain = %d, hw = %d, hw_threshold = %d, too much hw.\\n\",\n               param_4,*(uint *)(&DAT_0080a850 + iVar1),uVar6);\n      FUN_0002e584(3,&local_830,0);\n    }\n  }\n  return 1;\n}\n\n",
    "FUN_00039d88": "\nundefined4 FUN_00039d88(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined4 uStack_804;\n  undefined4 local_800;\n  undefined4 uStack_7fc;\n  undefined4 uStack_7f8;\n  undefined4 uStack_7f4;\n  undefined4 local_7f0;\n  undefined4 uStack_7ec;\n  undefined4 uStack_7e8;\n  undefined2 uStack_7e4;\n  undefined local_7e2;\n  \n  if (4 < DAT_0007eb9c) {\n    local_810._0_1_ = '[';\n    local_810._1_1_ = 'D';\n    local_810._2_1_ = 'E';\n    local_810._3_1_ = 'B';\n    uStack_80c._0_1_ = 'U';\n    uStack_80c._1_1_ = 'G';\n    uStack_80c._2_1_ = ']';\n    uStack_80c._3_1_ = ' ';\n    uStack_808._0_1_ = 'C';\n    uStack_808._1_1_ = 'h';\n    uStack_808._2_1_ = 'e';\n    uStack_808._3_1_ = 'c';\n    uStack_804._0_1_ = 'k';\n    uStack_804._1_1_ = ' ';\n    uStack_804._2_1_ = 'i';\n    uStack_804._3_1_ = 'f';\n    local_800._0_1_ = ' ';\n    local_800._1_1_ = 'a';\n    local_800._2_1_ = 'l';\n    local_800._3_1_ = 'l';\n    uStack_7fc._0_1_ = ' ';\n    uStack_7fc._1_1_ = 'c';\n    uStack_7fc._2_1_ = 'h';\n    uStack_7fc._3_1_ = 'a';\n    uStack_7f8._0_1_ = 'i';\n    uStack_7f8._1_1_ = 'n';\n    uStack_7f8._2_1_ = ' ';\n    uStack_7f8._3_1_ = 'p';\n    uStack_7f4._0_1_ = 'a';\n    uStack_7f4._1_1_ = 't';\n    uStack_7f4._2_1_ = 't';\n    uStack_7f4._3_1_ = 'e';\n    local_7f0._0_1_ = 'r';\n    local_7f0._1_1_ = 'n';\n    local_7f0._2_1_ = ' ';\n    local_7f0._3_1_ = 't';\n    uStack_7ec._0_1_ = 'e';\n    uStack_7ec._1_1_ = 's';\n    uStack_7ec._2_1_ = 't';\n    uStack_7ec._3_1_ = ' ';\n    uStack_7e8._0_1_ = 'd';\n    uStack_7e8._1_1_ = 'o';\n    uStack_7e8._2_1_ = 'n';\n    uStack_7e8._3_1_ = 'e';\n    uStack_7e4 = 0xa2e;\n    local_7e2 = 0;\n    FUN_0002e584(4,&local_810,0);\n  }\n  if ((DAT_004fcb3c == 0) || (*(int *)(DAT_004fcb3c + 4) == 0)) {\n    if (3 < DAT_0007eb9c) {\n      local_810._0_1_ = 'H';\n      local_810._1_1_ = 'a';\n      local_810._2_1_ = 'n';\n      local_810._3_1_ = 'd';\n      uStack_80c._0_1_ = 'l';\n      uStack_80c._1_1_ = 'e';\n      uStack_80c._2_1_ = ' ';\n      uStack_80c._3_1_ = 'i';\n      uStack_808._0_1_ = 's';\n      uStack_808._1_1_ = ' ';\n      uStack_808._2_1_ = 'N';\n      uStack_808._3_1_ = 'U';\n      uStack_804._0_1_ = 'L';\n      uStack_804._1_1_ = 'L';\n      uStack_804._2_1_ = '.';\n      uStack_804._3_1_ = '\\n';\n      local_800 = local_800 & 0xffffff00;\n      FUN_0002e584(3,&local_810,0);\n      return 1;\n    }\n  }\n  else {\n    iVar3 = 0;\n    do {\n      iVar1 = FUN_0001e29c(iVar3);\n      iVar2 = iVar3 + 2;\n      iVar3 = iVar3 + 1;\n      if ((iVar1 != 0) && (*(int *)(DAT_004fcb3c + iVar2 * 4) != 2)) {\n        return 0;\n      }\n    } while (iVar3 != 4);\n  }\n  return 1;\n}\n\n",
    "FUN_00039ea0": "\nundefined4 FUN_00039ea0(void)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined4 uStack_804;\n  undefined4 local_800;\n  undefined4 uStack_7fc;\n  undefined4 uStack_7f8;\n  undefined4 uStack_7f4;\n  undefined4 local_7f0;\n  undefined4 uStack_7ec;\n  undefined4 uStack_7e8;\n  undefined4 uStack_7e4;\n  undefined4 uStack_7e0;\n  undefined4 uStack_7dc;\n  undefined4 uStack_7d8;\n  \n  if (4 < DAT_0007eb9c) {\n    local_810._0_1_ = '[';\n    local_810._1_1_ = 'D';\n    local_810._2_1_ = 'E';\n    local_810._3_1_ = 'B';\n    uStack_80c._0_1_ = 'U';\n    uStack_80c._1_1_ = 'G';\n    uStack_80c._2_1_ = ']';\n    uStack_80c._3_1_ = ' ';\n    uStack_808._0_1_ = 'C';\n    uStack_808._1_1_ = 'h';\n    uStack_808._2_1_ = 'e';\n    uStack_808._3_1_ = 'c';\n    uStack_804._0_1_ = 'k';\n    uStack_804._1_1_ = ' ';\n    uStack_804._2_1_ = 'i';\n    uStack_804._3_1_ = 'f';\n    local_800._0_1_ = ' ';\n    local_800._1_1_ = 'a';\n    local_800._2_1_ = 'l';\n    local_800._3_1_ = 'l';\n    uStack_7fc._0_1_ = ' ';\n    uStack_7fc._1_1_ = 'c';\n    uStack_7fc._2_1_ = 'h';\n    uStack_7fc._3_1_ = 'a';\n    uStack_7f8._0_1_ = 'i';\n    uStack_7f8._1_1_ = 'n';\n    uStack_7f8._2_1_ = ' ';\n    uStack_7f8._3_1_ = 'p';\n    uStack_7f4._0_1_ = 'a';\n    uStack_7f4._1_1_ = 't';\n    uStack_7f4._2_1_ = 't';\n    uStack_7f4._3_1_ = 'e';\n    local_7f0._0_1_ = 'r';\n    local_7f0._1_1_ = 'n';\n    local_7f0._2_1_ = ' ';\n    local_7f0._3_1_ = 't';\n    uStack_7ec._0_1_ = 'e';\n    uStack_7ec._1_1_ = 's';\n    uStack_7ec._2_1_ = 't';\n    uStack_7ec._3_1_ = ' ';\n    uStack_7e8._0_1_ = 'd';\n    uStack_7e8._1_1_ = 'o';\n    uStack_7e8._2_1_ = 'n';\n    uStack_7e8._3_1_ = 'e';\n    uStack_7e4._0_1_ = ' ';\n    uStack_7e4._1_1_ = 'e';\n    uStack_7e4._2_1_ = 'x';\n    uStack_7e4._3_1_ = 'c';\n    uStack_7e0._0_1_ = 'e';\n    uStack_7e0._1_1_ = 'p';\n    uStack_7e0._2_1_ = 't';\n    uStack_7e0._3_1_ = ' ';\n    uStack_7dc._0_1_ = 'b';\n    uStack_7dc._1_1_ = 'l';\n    uStack_7dc._2_1_ = 'o';\n    uStack_7dc._3_1_ = 'c';\n    uStack_7d8._0_1_ = 'k';\n    uStack_7d8._1_1_ = '.';\n    uStack_7d8._2_1_ = '\\n';\n    uStack_7d8._3_1_ = '\\0';\n    FUN_0002e584(4,&local_810,0);\n  }\n  if ((DAT_004fcb3c == 0) || (*(int *)(DAT_004fcb3c + 4) == 0)) {\n    if (3 < DAT_0007eb9c) {\n      local_810._0_1_ = 'H';\n      local_810._1_1_ = 'a';\n      local_810._2_1_ = 'n';\n      local_810._3_1_ = 'd';\n      uStack_80c._0_1_ = 'l';\n      uStack_80c._1_1_ = 'e';\n      uStack_80c._2_1_ = ' ';\n      uStack_80c._3_1_ = 'i';\n      uStack_808._0_1_ = 's';\n      uStack_808._1_1_ = ' ';\n      uStack_808._2_1_ = 'N';\n      uStack_808._3_1_ = 'U';\n      uStack_804._0_1_ = 'L';\n      uStack_804._1_1_ = 'L';\n      uStack_804._2_1_ = '.';\n      uStack_804._3_1_ = '\\n';\n      local_800 = local_800 & 0xffffff00;\n      FUN_0002e584(3,&local_810,0);\n      return 1;\n    }\n  }\n  else {\n    iVar3 = 0;\n    do {\n      iVar1 = FUN_0001e29c(iVar3);\n      iVar2 = iVar3 + 2;\n      iVar3 = iVar3 + 1;\n      if ((iVar1 != 0) && ((*(uint *)(DAT_004fcb3c + iVar2 * 4) & 0xfffffffd) != 0)) {\n        return 0;\n      }\n    } while (iVar3 != 4);\n  }\n  return 1;\n}\n\n",
    "FUN_00039fb4": "\nundefined4 FUN_00039fb4(undefined4 param_1)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  uint uVar3;\n  char acStack_808 [2048];\n  \n  if (4 < DAT_0007eb9c) {\n    snprintf(acStack_808,0x800,\"[DEBUG] Board init, is_power_off = %d.\\n\",param_1);\n    FUN_0002e584(4,acStack_808,0);\n  }\n  uVar3 = 0;\n  do {\n    iVar1 = FUN_0001e29c(uVar3);\n    if (iVar1 != 0) {\n      thunk_FUN_0005198c(uVar3 & 0xff);\n    }\n    uVar3 = uVar3 + 1;\n  } while (uVar3 != 4);\n  FUN_0003345c();\n  uVar2 = FUN_00033e34();\n  FUN_000304d4(10);\n  FUN_000281b8();\n  FUN_000304d4(10);\n  return uVar2;\n}\n\n",
    "FUN_0003a054": "\nvoid FUN_0003a054(int param_1,int param_2)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  uint uVar3;\n  int extraout_r1;\n  int iVar4;\n  uint uVar5;\n  uint uVar6;\n  undefined4 uVar7;\n  double dVar8;\n  undefined8 in_stack_fffff7b8;\n  undefined4 local_830;\n  undefined4 uStack_82c;\n  undefined4 uStack_828;\n  undefined4 uStack_824;\n  undefined local_820;\n  \n  uVar2 = (undefined4)((ulonglong)in_stack_fffff7b8 >> 0x20);\n  if ((DAT_004fcb3c == (int *)0x0) || (DAT_004fcb3c[1] == 0)) {\n    if (DAT_0007eb9c < 4) {\n      return;\n    }\n    local_830._0_1_ = 'H';\n    local_830._1_1_ = 'a';\n    local_830._2_1_ = 'n';\n    local_830._3_1_ = 'd';\n    uStack_82c._0_1_ = 'l';\n    uStack_82c._1_1_ = 'e';\n    uStack_82c._2_1_ = ' ';\n    uStack_82c._3_1_ = 'i';\n    uStack_828._0_1_ = 's';\n    uStack_828._1_1_ = ' ';\n    uStack_828._2_1_ = 'N';\n    uStack_828._3_1_ = 'U';\n    uStack_824._0_1_ = 'L';\n    uStack_824._1_1_ = 'L';\n    uStack_824._2_1_ = '.';\n    uStack_824._3_1_ = '\\n';\n    local_820 = 0;\n    FUN_0002e584(3,&local_830,0);\n    return;\n  }\n  if (DAT_0007eb9c < 4) goto LAB_0003a0a0;\n  snprintf((char *)&local_830,0x800,\"chain %d stats:\\n\",param_1);\n  FUN_0002ea54(3,&local_830,0);\n  if (DAT_0007eb9c < 4) {\nLAB_0003a4b8:\n    if (3 < DAT_0007eb9c) {\n      snprintf((char *)&local_830,0x800,\"%-30s : %d\\n\",\"nonce_num_top_check_fail\",\n               *(undefined4 *)(param_2 + (param_1 + 0x202a08) * 4));\n      FUN_0002ea54(3,&local_830,0);\n      if (DAT_0007eb9c < 4) goto LAB_0003a0a0;\n      uVar7 = *(undefined4 *)(param_2 + (param_1 + 0x202a0c) * 4);\n      dVar8 = (double)CONCAT44(uVar2,uVar7);\n      snprintf((char *)&local_830,0x800,\"%-30s : %d\\n\",\"nonce_num_crc_err\",uVar7);\n      FUN_0002ea54(3,&local_830,0);\n      goto LAB_0003a550;\n    }\nLAB_0003a5e8:\n    if (3 < DAT_0007eb9c) {\n      snprintf((char *)&local_830,0x800,\"%-30s : %d\\n\",\"nonce_num_extra\",\n               *(undefined4 *)(param_2 + (param_1 + 0x202a18) * 4));\n      FUN_0002ea54(3,&local_830,0);\n      if (DAT_0007eb9c < 4) goto LAB_0003a0a0;\n      uVar7 = *(undefined4 *)(param_2 + (param_1 + 0x202a1c) * 4);\n      dVar8 = (double)CONCAT44(uVar2,uVar7);\n      snprintf((char *)&local_830,0x800,\"%-30s : %d\\n\",\"nonce_num_unknown_err\",uVar7);\n      FUN_0002ea54(3,&local_830,0);\n      goto LAB_0003a680;\n    }\nLAB_0003a718:\n    if (DAT_0007eb9c < 4) goto LAB_0003a0a0;\n    dVar8 = (double)*(float *)(param_2 + (param_1 + 0x202a24) * 4 + 4);\n    snprintf((char *)&local_830,0x800,\"%-30s : %.2f\\n\",\"stddev\",dVar8);\n    FUN_0002ea54(3,&local_830,0);\n    if (DAT_0007eb9c < 4) goto LAB_0003a0a0;\n    local_830 = CONCAT22(local_830._2_2_,10);\n    FUN_0002ea54(3,&local_830,0);\n  }\n  else {\n    iVar1 = FUN_0001e130();\n    iVar4 = FUN_0001e0f0();\n    snprintf((char *)&local_830,0x800,\"%-30s : %d\\n\",\"send_nonce_num\",iVar4 * iVar1 * 8);\n    FUN_0002ea54(3,&local_830,0);\n    if (DAT_0007eb9c < 4) goto LAB_0003a0a0;\n    uVar7 = *(undefined4 *)(param_2 + (param_1 + 0x202800) * 4);\n    dVar8 = (double)CONCAT44(uVar2,uVar7);\n    snprintf((char *)&local_830,0x800,\"%-30s : %d\\n\",\"recv_nonce_num\",uVar7);\n    FUN_0002ea54(3,&local_830,0);\n    if (3 < DAT_0007eb9c) {\n      uVar6 = *(uint *)(param_2 + (param_1 + 0x202800) * 4);\n      iVar1 = FUN_0001e130();\n      iVar4 = FUN_0001e0f0();\n      dVar8 = (double)((float)(ulonglong)uVar6 / (float)(longlong)(iVar4 * iVar1 * 8));\n      snprintf((char *)&local_830,0x800,\"%-30s : %f\\n\",\"nonce_return_rate\",dVar8);\n      uVar2 = (undefined4)((ulonglong)dVar8 >> 0x20);\n      FUN_0002ea54(3,&local_830,0);\n      if (DAT_0007eb9c < 4) goto LAB_0003a0a0;\n      snprintf((char *)&local_830,0x800,\"%-30s : %d\\n\",\"nonce_num_repeated\",\n               *(undefined4 *)(param_2 + (param_1 + 0x202a04) * 4));\n      FUN_0002ea54(3,&local_830,0);\n      goto LAB_0003a4b8;\n    }\nLAB_0003a550:\n    if (3 < DAT_0007eb9c) {\n      uVar2 = (undefined4)((ulonglong)dVar8 >> 0x20);\n      snprintf((char *)&local_830,0x800,\"%-30s : %d\\n\",\"nonce_num_invalid\",\n               *(undefined4 *)(param_2 + (param_1 + 0x202a10) * 4));\n      FUN_0002ea54(3,&local_830,0);\n      if (DAT_0007eb9c < 4) goto LAB_0003a0a0;\n      snprintf((char *)&local_830,0x800,\"%-30s : %d\\n\",\"nonce_num_hw\",\n               *(undefined4 *)(param_2 + (param_1 + 0x202a14) * 4));\n      FUN_0002ea54(3,&local_830,0);\n      goto LAB_0003a5e8;\n    }\nLAB_0003a680:\n    if (3 < DAT_0007eb9c) {\n      snprintf((char *)&local_830,0x800,\"%-30s : %d\\n\",\"invalid_asic_num\",\n               *(undefined4 *)(param_2 + (param_1 + 0x202a20) * 4 + 4));\n      FUN_0002ea54(3,&local_830,0);\n      if (DAT_0007eb9c < 4) goto LAB_0003a0a0;\n      snprintf((char *)&local_830,0x800,\"%-30s : %d\\n\",\"invalid_chain_num\",\n               *(undefined4 *)(&DAT_0080a880 + param_2));\n      FUN_0002ea54(3,&local_830,0);\n      goto LAB_0003a718;\n    }\n  }\n  if (3 < DAT_0007eb9c) {\n    snprintf((char *)&local_830,0x800,\"Chain %d nonce:\\n\",param_1,dVar8);\n    FUN_0002e584(3,&local_830,0);\n  }\nLAB_0003a0a0:\n  iVar1 = FUN_0001e0f0();\n  if (iVar1 != 0) {\n    iVar4 = 0;\n    do {\n      if (3 < DAT_0007eb9c) {\n        snprintf((char *)&local_830,0x800,\"IC[%03d]:%04d \",iVar4,\n                 *(undefined4 *)(&DAT_00809000 + param_2 + param_1 * 0x400 + iVar4 * 4));\n        FUN_0002ea54(3,&local_830,0);\n      }\n      iVar4 = iVar4 + 1;\n      uVar2 = FUN_0001e100();\n      FUN_0005fadc(iVar4,uVar2);\n      if ((extraout_r1 == 0) && (3 < DAT_0007eb9c)) {\n        local_830 = CONCAT22(local_830._2_2_,10);\n        FUN_0002ea54(3,&local_830);\n      }\n    } while (iVar4 != iVar1);\n  }\n  if (DAT_0007eb9c < 4) {\n    if (*DAT_004fcb3c == 0xa1) {\n      return;\n    }\n  }\n  else {\n    local_830 = CONCAT22(local_830._2_2_,10);\n    FUN_0002ea54(3,&local_830,0);\n    if (*DAT_004fcb3c == 0xa1) {\n      return;\n    }\n    if (3 < DAT_0007eb9c) {\n      snprintf((char *)&local_830,0x800,\"Chain %d domain:\\n\",param_1);\n      FUN_0002ea54(3,&local_830,0);\n    }\n  }\n  uVar6 = 0;\n  iVar1 = FUN_0001e0e0();\n  if (iVar1 != 0) {\n    do {\n      iVar1 = FUN_0001e150();\n      for (uVar5 = 0; uVar3 = FUN_0001e150(), uVar5 < uVar3; uVar5 = uVar5 + 1) {\n        if (3 < DAT_0007eb9c) {\n          snprintf((char *)&local_830,0x800,\"D[%02d]:%04d \",uVar5 + uVar6 * iVar1,\n                   *(undefined4 *)\n                    (&DAT_0080a010 + param_2 + (param_1 * 0x40 + uVar6 * iVar1) * 4 + uVar5 * 4));\n          FUN_0002ea54(3,&local_830,0);\n        }\n      }\n      iVar1 = FUN_0001e150();\n      if (iVar1 < 2) {\nLAB_0003a2c0:\n        if (3 < DAT_0007eb9c) {\n          local_830 = CONCAT22(local_830._2_2_,10);\n          FUN_0002ea54(3,&local_830,0);\n        }\n      }\n      else if (3 < DAT_0007eb9c) {\n        snprintf((char *)&local_830,0x800,\"D_BIG[%02d]:%05d\",uVar6,\n                 *(undefined4 *)(&DAT_0080a410 + param_2 + param_1 * 0x100 + uVar6 * 4));\n        FUN_0002ea54(3,&local_830,0);\n        goto LAB_0003a2c0;\n      }\n      uVar6 = uVar6 + 1;\n      uVar5 = FUN_0001e0e0();\n    } while (uVar6 < uVar5);\n  }\n  if (DAT_0007eb9c < 4) {\n    return;\n  }\n  local_830 = CONCAT13(local_830._3_1_,0xa0a);\n  FUN_0002ea54(3,&local_830,0);\n  return;\n}\n\n",
    "FUN_0003a828": "\nfloat FUN_0003a828(int param_1,int param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  uint uVar3;\n  \n  uVar3 = *(uint *)(param_2 + (param_1 + 0x202800) * 4);\n  iVar1 = FUN_0001e130();\n  iVar2 = FUN_0001e0f0();\n  return (float)(ulonglong)uVar3 / (float)(longlong)(iVar2 * iVar1 * 8);\n}\n\n",
    "FUN_0003a86c": "\nvoid FUN_0003a86c(undefined4 param_1)\n\n{\n  uint uVar1;\n  int iVar2;\n  int iVar3;\n  undefined4 uVar4;\n  int iVar5;\n  int iVar6;\n  int iVar7;\n  int iVar8;\n  int iVar9;\n  int iVar10;\n  int *piVar11;\n  int *piVar12;\n  int iVar13;\n  int iVar14;\n  int *piVar15;\n  int *piVar16;\n  int local_860;\n  undefined4 *local_844;\n  int local_838;\n  int local_834;\n  int local_830;\n  int local_82c;\n  undefined4 local_828;\n  undefined4 uStack_824;\n  undefined4 uStack_820;\n  undefined4 uStack_81c;\n  undefined4 local_818;\n  undefined2 uStack_814;\n  undefined local_812;\n  \n  if ((DAT_004fcb3c == (int *)0x0) || (DAT_004fcb3c[1] == 0)) {\n    if (3 < DAT_0007eb9c) {\n      local_828._0_1_ = 'H';\n      local_828._1_1_ = 'a';\n      local_828._2_1_ = 'n';\n      local_828._3_1_ = 'd';\n      uStack_824._0_1_ = 'l';\n      uStack_824._1_1_ = 'e';\n      uStack_824._2_1_ = ' ';\n      uStack_824._3_1_ = 'i';\n      uStack_820._0_1_ = 's';\n      uStack_820._1_1_ = ' ';\n      uStack_820._2_1_ = 'N';\n      uStack_820._3_1_ = 'U';\n      uStack_81c._0_1_ = 'L';\n      uStack_81c._1_1_ = 'L';\n      uStack_81c._2_1_ = '.';\n      uStack_81c._3_1_ = '\\n';\n      local_818 = local_818 & 0xffffff00;\n      FUN_0002e584(3,&local_828,0);\n      return;\n    }\n  }\n  else {\n    if (3 < DAT_0007eb9c) {\n      local_828._0_1_ = 'P';\n      local_828._1_1_ = 'a';\n      local_828._2_1_ = 't';\n      local_828._3_1_ = 't';\n      uStack_824._0_1_ = 'e';\n      uStack_824._1_1_ = 'r';\n      uStack_824._2_1_ = 'n';\n      uStack_824._3_1_ = ' ';\n      uStack_820._0_1_ = 't';\n      uStack_820._1_1_ = 'e';\n      uStack_820._2_1_ = 's';\n      uStack_820._3_1_ = 't';\n      uStack_81c._0_1_ = ' ';\n      uStack_81c._1_1_ = 's';\n      uStack_81c._2_1_ = 't';\n      uStack_81c._3_1_ = 'a';\n      local_818._0_1_ = 'r';\n      local_818._1_1_ = 't';\n      local_818._2_1_ = '.';\n      local_818._3_1_ = '.';\n      uStack_814 = 0xa2e;\n      local_812 = 0;\n      FUN_0002e584(3,&local_828,0);\n    }\n    local_844 = &local_828;\n    FUN_000302a0(&local_838);\n    FUN_000398bc();\n    uVar1 = FUN_000452b0();\n    FUN_000452d0(uVar1 | 0x10000);\n    iVar10 = *DAT_004fcb3c;\n    DAT_004fcb3c[0x10] = 1;\n    if (iVar10 == 0xa1) {\n      FUN_0003893c(param_1);\n    }\n    else {\n      FUN_000389f0();\n    }\n    iVar10 = 0;\n    do {\n      iVar2 = FUN_0001e29c(iVar10);\n      if ((iVar2 != 0) && (DAT_004fcb3c[iVar10 + 2] == 1)) {\n        iVar2 = 3;\n        do {\n          iVar3 = FUN_00039584(iVar10);\n          if (iVar3 != 0) break;\n          usleep(100000);\n          iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n      }\n      iVar10 = iVar10 + 1;\n    } while (iVar10 != 4);\n    iVar2 = 0;\n    DAT_004fcb3c[0x10] = 0;\n    iVar10 = FUN_000391f4();\n    do {\n      iVar3 = FUN_0001e29c(iVar2);\n      if ((iVar3 != 0) && (DAT_004fcb3c[iVar2 + 2] == 1)) {\n        iVar3 = FUN_0001e0f0();\n        if (iVar3 != 0) {\n          local_860 = 0;\n          do {\n            uVar4 = FUN_0001e100();\n            iVar5 = FUN_0005f880(local_860,uVar4);\n            iVar6 = FUN_0001e130();\n            if (iVar6 != 0) {\n              iVar13 = 0;\n              iVar14 = iVar10 + (iVar5 + iVar2 * 0x40) * 4;\n              piVar15 = (int *)(iVar10 + 0x408ffc + (local_860 + iVar2 * 0x100) * 0x1000);\n              do {\n                iVar7 = FUN_0001e150();\n                iVar8 = FUN_0001e150();\n                iVar8 = iVar13 * iVar8;\n                iVar13 = iVar13 + 1;\n                uVar4 = FUN_0001e130();\n                iVar8 = FUN_0005f880(iVar8,uVar4);\n                piVar15 = piVar15 + 1;\n                iVar9 = *piVar15;\n                iVar7 = iVar10 + (iVar8 + iVar5 * iVar7 + iVar2 * 0x40) * 4;\n                piVar11 = (int *)(iVar10 + (local_860 * 9 + iVar2 * 0x900 + iVar9) * 4 + 0x400000);\n                *(int *)(&DAT_0080a010 + iVar7) = *(int *)(&DAT_0080a010 + iVar7) + iVar9;\n                *(int *)(&DAT_0080a410 + iVar14) = *(int *)(&DAT_0080a410 + iVar14) + iVar9;\n                *piVar11 = *piVar11 + 1;\n              } while (iVar6 != iVar13);\n            }\n            local_860 = local_860 + 1;\n          } while (iVar3 != local_860);\n        }\n        iVar3 = FUN_0001e0f0();\n        if (iVar3 != 0) {\n          piVar15 = (int *)(iVar10 + 0x400000 + iVar2 * 0x2400);\n          piVar11 = piVar15 + iVar3 * 9;\n          do {\n            piVar12 = piVar15;\n            do {\n              iVar3 = *piVar12;\n              piVar16 = piVar12 + 1;\n              piVar12 = piVar12 + 1;\n              *piVar12 = *piVar16 + iVar3;\n            } while (piVar12 != piVar15 + 8);\n            piVar15 = piVar15 + 9;\n          } while (piVar15 != piVar11);\n        }\n        uVar4 = FUN_00038b6c(iVar2,iVar10);\n        *(undefined4 *)(&DAT_0080a894 + iVar10 + iVar2 * 4) = uVar4;\n      }\n      iVar2 = iVar2 + 1;\n    } while (iVar2 != 4);\n    FUN_000302a0(&local_830);\n    local_830 = local_830 - local_838;\n    if (local_82c - local_834 < 0) {\n      local_830 = local_830 + -1;\n    }\n    if (3 < DAT_0007eb9c) {\n      snprintf((char *)local_844,0x800,\"Pattern test done, time cost %lds\\n\",local_830);\n      FUN_0002e584(3,local_844,0);\n      return;\n    }\n  }\n  return;\n}\n\n",
    "FUN_0003ac6c": "\nundefined4 FUN_0003ac6c(void)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 uVar3;\n  \n  iVar1 = thunk_FUN_00019ab4();\n  iVar2 = FUN_000361f4();\n  if (iVar1 != iVar2) {\n    uVar3 = FUN_00036208();\n    return uVar3;\n  }\n  return 0;\n}\n\n",
    "FUN_0003ac94": "\nundefined4 FUN_0003ac94(void)\n\n{\n  undefined4 uVar1;\n  undefined4 local_818;\n  undefined4 uStack_814;\n  undefined4 uStack_810;\n  undefined4 uStack_80c;\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined4 uStack_7fc;\n  undefined4 local_7f8;\n  undefined4 uStack_7f4;\n  undefined4 uStack_7f0;\n  undefined4 uStack_7ec;\n  undefined4 uStack_7e8;\n  undefined4 uStack_7e4;\n  \n  if (4 < DAT_0007eb9c) {\n    local_818._0_1_ = '[';\n    local_818._1_1_ = 'D';\n    local_818._2_1_ = 'E';\n    local_818._3_1_ = 'B';\n    uStack_814._0_1_ = 'U';\n    uStack_814._1_1_ = 'G';\n    uStack_814._2_1_ = ']';\n    uStack_814._3_1_ = ' ';\n    uStack_810._0_1_ = 'F';\n    uStack_810._1_1_ = 'r';\n    uStack_810._2_1_ = 'e';\n    uStack_810._3_1_ = 'q';\n    uStack_80c._0_1_ = ' ';\n    uStack_80c._1_1_ = 't';\n    uStack_80c._2_1_ = 'u';\n    uStack_80c._3_1_ = 'n';\n    local_808._0_1_ = 'i';\n    local_808._1_1_ = 'n';\n    local_808._2_1_ = 'g';\n    local_808._3_1_ = ' ';\n    uStack_804._0_1_ = 'b';\n    uStack_804._1_1_ = 'a';\n    uStack_804._2_1_ = 's';\n    uStack_804._3_1_ = 'i';\n    uStack_800._0_1_ = 'c';\n    uStack_800._1_1_ = ' ';\n    uStack_800._2_1_ = 'i';\n    uStack_800._3_1_ = 'n';\n    uStack_7fc._0_1_ = 'i';\n    uStack_7fc._1_1_ = 't';\n    uStack_7fc._2_1_ = '.';\n    uStack_7fc._3_1_ = '\\n';\n    local_7f8 = local_7f8 & 0xffffff00;\n    FUN_0002e584(4,&local_818,0);\n    if (4 < DAT_0007eb9c) {\n      local_818._0_1_ = '[';\n      local_818._1_1_ = 'D';\n      local_818._2_1_ = 'E';\n      local_818._3_1_ = 'B';\n      uStack_814._0_1_ = 'U';\n      uStack_814._1_1_ = 'G';\n      uStack_814._2_1_ = ']';\n      uStack_814._3_1_ = ' ';\n      uStack_810._0_1_ = 'A';\n      uStack_810._1_1_ = 'l';\n      uStack_810._2_1_ = 'l';\n      uStack_810._3_1_ = 'o';\n      uStack_80c._0_1_ = 'c';\n      uStack_80c._1_1_ = 'a';\n      uStack_80c._2_1_ = 't';\n      uStack_80c._3_1_ = 'e';\n      local_808._0_1_ = ' ';\n      local_808._1_1_ = 'm';\n      local_808._2_1_ = 'e';\n      local_808._3_1_ = 'm';\n      uStack_804._0_1_ = 'o';\n      uStack_804._1_1_ = 'r';\n      uStack_804._2_1_ = 'y';\n      uStack_804._3_1_ = ' ';\n      uStack_800._0_1_ = 'f';\n      uStack_800._1_1_ = 'o';\n      uStack_800._2_1_ = 'r';\n      uStack_800._3_1_ = ' ';\n      uStack_7fc._0_1_ = 'f';\n      uStack_7fc._1_1_ = 'r';\n      uStack_7fc._2_1_ = 'e';\n      uStack_7fc._3_1_ = 'q';\n      local_7f8._0_1_ = ' ';\n      local_7f8._1_1_ = 't';\n      local_7f8._2_1_ = 'u';\n      local_7f8._3_1_ = 'n';\n      uStack_7f4._0_1_ = 'i';\n      uStack_7f4._1_1_ = 'n';\n      uStack_7f4._2_1_ = 'g';\n      uStack_7f4._3_1_ = ' ';\n      uStack_7f0._0_1_ = 'b';\n      uStack_7f0._1_1_ = 'a';\n      uStack_7f0._2_1_ = 's';\n      uStack_7f0._3_1_ = 'i';\n      uStack_7ec._0_1_ = 'c';\n      uStack_7ec._1_1_ = '.';\n      uStack_7ec._2_1_ = '\\n';\n      uStack_7ec._3_1_ = '\\0';\n      FUN_0002e584(4,&local_818,0);\n    }\n  }\n  if ((DAT_004fcb40 == (void *)0x0) && (DAT_004fcb40 = calloc(0x34,1), DAT_004fcb40 == (void *)0x0))\n  {\n    FUN_000356c4(0xd,0xff);\n    if (DAT_0007eb9c < 4) {\n      uVar1 = 0xffffffff;\n    }\n    else {\n      local_818._0_1_ = 'F';\n      local_818._1_1_ = 'a';\n      local_818._2_1_ = 'i';\n      local_818._3_1_ = 'l';\n      uStack_814._0_1_ = ' ';\n      uStack_814._1_1_ = 't';\n      uStack_814._2_1_ = 'o';\n      uStack_814._3_1_ = ' ';\n      uStack_810._0_1_ = 'a';\n      uStack_810._1_1_ = 'l';\n      uStack_810._2_1_ = 'l';\n      uStack_810._3_1_ = 'o';\n      uStack_80c._0_1_ = 'c';\n      uStack_80c._1_1_ = 'a';\n      uStack_80c._2_1_ = 't';\n      uStack_80c._3_1_ = 'e';\n      local_808._0_1_ = ' ';\n      local_808._1_1_ = 'm';\n      local_808._2_1_ = 'e';\n      local_808._3_1_ = 'm';\n      uStack_804._0_1_ = 'o';\n      uStack_804._1_1_ = 'r';\n      uStack_804._2_1_ = 'y';\n      uStack_804._3_1_ = ' ';\n      uStack_800._0_1_ = 'f';\n      uStack_800._1_1_ = 'o';\n      uStack_800._2_1_ = 'r';\n      uStack_800._3_1_ = ' ';\n      uStack_7fc._0_1_ = 'f';\n      uStack_7fc._1_1_ = 'r';\n      uStack_7fc._2_1_ = 'e';\n      uStack_7fc._3_1_ = 'q';\n      local_7f8._0_1_ = ' ';\n      local_7f8._1_1_ = 't';\n      local_7f8._2_1_ = 'u';\n      local_7f8._3_1_ = 'n';\n      uStack_7f4._0_1_ = 'i';\n      uStack_7f4._1_1_ = 'n';\n      uStack_7f4._2_1_ = 'g';\n      uStack_7f4._3_1_ = ' ';\n      uStack_7f0._0_1_ = 'b';\n      uStack_7f0._1_1_ = 'a';\n      uStack_7f0._2_1_ = 's';\n      uStack_7f0._3_1_ = 'i';\n      uStack_7ec._0_1_ = 'c';\n      uStack_7ec._1_1_ = ' ';\n      uStack_7ec._2_1_ = 'c';\n      uStack_7ec._3_1_ = 'o';\n      uStack_7e8._0_1_ = 'n';\n      uStack_7e8._1_1_ = 't';\n      uStack_7e8._2_1_ = 'e';\n      uStack_7e8._3_1_ = 'x';\n      uStack_7e4._0_1_ = 't';\n      uStack_7e4._1_1_ = '.';\n      uStack_7e4._2_1_ = '\\n';\n      uStack_7e4._3_1_ = '\\0';\n      FUN_0002e584(3,&local_818,0);\n      uVar1 = 0xffffffff;\n    }\n  }\n  else {\n    uVar1 = 0;\n  }\n  return uVar1;\n}\n\n",
    "FUN_0003adcc": "\nvoid FUN_0003adcc(void)\n\n{\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined4 uStack_7fc;\n  undefined4 local_7f8;\n  undefined4 uStack_7f4;\n  undefined4 uStack_7f0;\n  undefined4 uStack_7ec;\n  undefined4 local_7e8;\n  undefined4 uStack_7e4;\n  undefined4 uStack_7e0;\n  \n  if (4 < DAT_0007eb9c) {\n    local_808._0_1_ = '[';\n    local_808._1_1_ = 'D';\n    local_808._2_1_ = 'E';\n    local_808._3_1_ = 'B';\n    uStack_804._0_1_ = 'U';\n    uStack_804._1_1_ = 'G';\n    uStack_804._2_1_ = ']';\n    uStack_804._3_1_ = ' ';\n    uStack_800._0_1_ = 'F';\n    uStack_800._1_1_ = 'r';\n    uStack_800._2_1_ = 'e';\n    uStack_800._3_1_ = 'q';\n    uStack_7fc._0_1_ = ' ';\n    uStack_7fc._1_1_ = 't';\n    uStack_7fc._2_1_ = 'u';\n    uStack_7fc._3_1_ = 'n';\n    local_7f8._0_1_ = 'i';\n    local_7f8._1_1_ = 'n';\n    local_7f8._2_1_ = 'g';\n    local_7f8._3_1_ = ' ';\n    uStack_7f4._0_1_ = 'b';\n    uStack_7f4._1_1_ = 'a';\n    uStack_7f4._2_1_ = 's';\n    uStack_7f4._3_1_ = 'i';\n    uStack_7f0._0_1_ = 'c';\n    uStack_7f0._1_1_ = ' ';\n    uStack_7f0._2_1_ = 'e';\n    uStack_7f0._3_1_ = 'x';\n    uStack_7ec._0_1_ = 'i';\n    uStack_7ec._1_1_ = 't';\n    uStack_7ec._2_1_ = '.';\n    uStack_7ec._3_1_ = '\\n';\n    local_7e8 = local_7e8 & 0xffffff00;\n    FUN_0002e584(4,&local_808,0);\n    if (4 < DAT_0007eb9c) {\n      local_808._0_1_ = '[';\n      local_808._1_1_ = 'D';\n      local_808._2_1_ = 'E';\n      local_808._3_1_ = 'B';\n      uStack_804._0_1_ = 'U';\n      uStack_804._1_1_ = 'G';\n      uStack_804._2_1_ = ']';\n      uStack_804._3_1_ = ' ';\n      uStack_800._0_1_ = 'F';\n      uStack_800._1_1_ = 'r';\n      uStack_800._2_1_ = 'e';\n      uStack_800._3_1_ = 'e';\n      uStack_7fc._0_1_ = ' ';\n      uStack_7fc._1_1_ = 'm';\n      uStack_7fc._2_1_ = 'e';\n      uStack_7fc._3_1_ = 'm';\n      local_7f8._0_1_ = 'o';\n      local_7f8._1_1_ = 'r';\n      local_7f8._2_1_ = 'y';\n      local_7f8._3_1_ = ' ';\n      uStack_7f4._0_1_ = 'f';\n      uStack_7f4._1_1_ = 'o';\n      uStack_7f4._2_1_ = 'r';\n      uStack_7f4._3_1_ = ' ';\n      uStack_7f0._0_1_ = 'f';\n      uStack_7f0._1_1_ = 'r';\n      uStack_7f0._2_1_ = 'e';\n      uStack_7f0._3_1_ = 'q';\n      uStack_7ec._0_1_ = ' ';\n      uStack_7ec._1_1_ = 't';\n      uStack_7ec._2_1_ = 'u';\n      uStack_7ec._3_1_ = 'n';\n      local_7e8._0_1_ = 'i';\n      local_7e8._1_1_ = 'n';\n      local_7e8._2_1_ = 'g';\n      local_7e8._3_1_ = ' ';\n      uStack_7e4._0_1_ = 'b';\n      uStack_7e4._1_1_ = 'a';\n      uStack_7e4._2_1_ = 's';\n      uStack_7e4._3_1_ = 'i';\n      uStack_7e0._0_1_ = 'c';\n      uStack_7e0._1_1_ = '.';\n      uStack_7e0._2_1_ = '\\n';\n      uStack_7e0._3_1_ = '\\0';\n      FUN_0002e584(4,&local_808,0);\n    }\n  }\n  if (DAT_004fcb40 != (void *)0x0) {\n    free(DAT_004fcb40);\n    DAT_004fcb40 = (void *)0x0;\n  }\n  return;\n}\n\n",
    "FUN_0003af1c": "\nvoid FUN_0003af1c(void)\n\n{\n  char *pcVar1;\n  char acStack_818 [2052];\n  \n  if (DAT_0007eb9c < 4) {\n    return;\n  }\n  snprintf(acStack_818,0x800,\"%-40s : %d\\n\",\"voltage\",*(undefined4 *)*DAT_004fcb40);\n  FUN_0002ea54(3,acStack_818,0);\n  if (DAT_0007eb9c < 4) {\nLAB_0003b0ac:\n    if (DAT_0007eb9c < 4) goto LAB_0003b1f8;\n    pcVar1 = \"false\";\n    if (*(char *)(*DAT_004fcb40 + 0x14) != '\\0') {\n      pcVar1 = \"true\";\n    }\n    snprintf(acStack_818,0x800,\"%-40s : %s\\n\",\"is_inc_freq_with_high_vol\",pcVar1);\n    FUN_0002ea54(3,acStack_818,0);\n    if (DAT_0007eb9c < 4) {\n      return;\n    }\n    pcVar1 = \"false\";\n    if (*(char *)(*DAT_004fcb40 + 0x15) != '\\0') {\n      pcVar1 = \"true\";\n    }\n    snprintf(acStack_818,0x800,\"%-40s : %s\\n\",\"is_inc_freq_with_high_vol_runtime\",pcVar1);\n    FUN_0002ea54(3,acStack_818,0);\n  }\n  else {\n    snprintf(acStack_818,0x800,\"%-40s : %d\\n\",\"freq_base\",*(undefined4 *)(*DAT_004fcb40 + 4));\n    FUN_0002ea54(3,acStack_818,0);\n    if (DAT_0007eb9c < 4) {\n      return;\n    }\n    snprintf(acStack_818,0x800,\"%-40s : %d\\n\",\"freq_threshold\",*(undefined4 *)(*DAT_004fcb40 + 8));\n    FUN_0002ea54(3,acStack_818,0);\n    if (3 < DAT_0007eb9c) {\n      snprintf(acStack_818,0x800,\"%-40s : %d\\n\",\"freq_serial_threshold\",\n               *(undefined4 *)(*DAT_004fcb40 + 0xc));\n      FUN_0002ea54(3,acStack_818,0);\n      if (DAT_0007eb9c < 4) {\n        return;\n      }\n      snprintf(acStack_818,0x800,\"%-40s : %d\\n\",\"freq_step\",*(undefined4 *)(*DAT_004fcb40 + 0x10));\n      FUN_0002ea54(3,acStack_818,0);\n      goto LAB_0003b0ac;\n    }\n  }\n  if (DAT_0007eb9c < 4) {\n    return;\n  }\n  snprintf(acStack_818,0x800,\"%-40s : %d\\n\",\"is_board_init_with_power_off\",\n           *(undefined4 *)(*DAT_004fcb40 + 0x18));\n  FUN_0002ea54(3,acStack_818,0);\n  if (DAT_0007eb9c < 4) {\n    return;\n  }\n  snprintf(acStack_818,0x800,\"%-40s : %.4f\\n\",\"hw_threshold\",\n           (double)*(float *)(*DAT_004fcb40 + 0x1c));\n  FUN_0002ea54(3,acStack_818,0);\nLAB_0003b1f8:\n  if (3 < DAT_0007eb9c) {\n    snprintf(acStack_818,0x800,\"%-40s : %.2f\\n\",\"nonce_rate_threshold\",\n             (double)*(float *)(*DAT_004fcb40 + 0x20));\n    FUN_0002ea54(3,acStack_818,0);\n    if (3 < DAT_0007eb9c) {\n      snprintf(acStack_818,0x800,\"%-40s : %.2f\\n\",\"nonce_rate_dec_threshold\",\n               (double)*(float *)(*DAT_004fcb40 + 0x24));\n      FUN_0002ea54(3,acStack_818,0);\n      return;\n    }\n  }\n  return;\n}\n\n",
    "FUN_0003b298": "\nint FUN_0003b298(int param_1)\n\n{\n  uint uVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  int iVar6;\n  float **ppfVar7;\n  uint uVar8;\n  float **ppfVar9;\n  int iVar10;\n  uint uVar11;\n  int *piVar12;\n  bool bVar13;\n  float fVar14;\n  float *pfVar15;\n  float fVar16;\n  uint local_968;\n  uint local_964 [15];\n  float *apfStack_928 [60];\n  undefined4 local_838;\n  undefined4 uStack_834;\n  undefined4 uStack_830;\n  undefined4 uStack_82c;\n  undefined4 local_828;\n  undefined4 uStack_824;\n  undefined4 local_820;\n  undefined local_81c;\n  \n  if (3 < DAT_0007eb9c) {\n    local_838._0_1_ = 'D';\n    local_838._1_1_ = 'o';\n    local_838._2_1_ = ' ';\n    local_838._3_1_ = 'f';\n    uStack_834._0_1_ = 'r';\n    uStack_834._1_1_ = 'e';\n    uStack_834._2_1_ = 'q';\n    uStack_834._3_1_ = ' ';\n    uStack_830._0_1_ = 't';\n    uStack_830._1_1_ = 'u';\n    uStack_830._2_1_ = 'n';\n    uStack_830._3_1_ = 'i';\n    uStack_82c._0_1_ = 'n';\n    uStack_82c._1_1_ = 'g';\n    uStack_82c._2_1_ = ' ';\n    uStack_82c._3_1_ = 'b';\n    local_828._0_1_ = 'a';\n    local_828._1_1_ = 's';\n    local_828._2_1_ = 'i';\n    local_828._3_1_ = 'c';\n    uStack_824._0_3_ = 0xa2e;\n    FUN_0002e584(3,&local_838,0);\n  }\n  piVar12 = DAT_004fcb40;\n  memset(DAT_004fcb40 + 1,0,0x30);\n  *piVar12 = param_1;\n  FUN_00039a7c();\n  FUN_000361e4(*(undefined4 *)*DAT_004fcb40);\n  iVar2 = FUN_0003ac6c();\n  if (iVar2 == 0) {\n    FUN_0001a470((float)(ulonglong)*(uint *)(*DAT_004fcb40 + 4),0xff,DAT_00482a70,\n                 *(undefined *)(*DAT_004fcb40 + 0x14));\n    if (3 < DAT_0007eb9c) {\n      local_838._0_2_ = 10;\n      FUN_0002ea54(3,&local_838,0);\n      if (3 < DAT_0007eb9c) {\n        local_838._0_1_ = '>';\n        local_838._1_1_ = '>';\n        local_838._2_1_ = '>';\n        local_838._3_1_ = '>';\n        uStack_834._0_1_ = ' ';\n        uStack_834._1_1_ = 'D';\n        uStack_834._2_1_ = 'o';\n        uStack_834._3_1_ = ' ';\n        uStack_830._0_1_ = 't';\n        uStack_830._1_1_ = 'u';\n        uStack_830._2_1_ = 'n';\n        uStack_830._3_1_ = 'i';\n        uStack_82c._0_1_ = 'n';\n        uStack_82c._1_1_ = 'g';\n        uStack_82c._2_1_ = ' ';\n        uStack_82c._3_1_ = 'p';\n        local_828._0_1_ = 'a';\n        local_828._1_1_ = 'r';\n        local_828._2_1_ = 'a';\n        local_828._3_1_ = 'l';\n        uStack_824._0_1_ = 'l';\n        uStack_824._1_1_ = 'e';\n        uStack_824._2_1_ = 'l';\n        uStack_824._3_1_ = '.';\n        local_820._0_2_ = 10;\n        FUN_0002e584(3,&local_838,0);\n      }\n    }\n    iVar2 = 0;\n    do {\n      iVar3 = FUN_0001e29c(iVar2);\n      if (iVar3 != 0) {\n        FUN_0003962c(iVar2,1);\n      }\n      iVar2 = iVar2 + 1;\n    } while (iVar2 != 4);\n    iVar2 = *DAT_004fcb40;\n    uVar11 = *(uint *)(iVar2 + 4);\n    iVar3 = *(int *)(iVar2 + 0x10);\n    uVar8 = *(uint *)(iVar2 + 0xc);\n    if (3 < DAT_0007eb9c) {\n      snprintf((char *)&local_838,0x800,\n               \"freq_prev = %d, freq_start = %d, freq_step = %d, freq_min = %d\\n\",uVar11,uVar11,\n               iVar3,uVar8);\n      FUN_0002e584(3,&local_838,0);\n    }\n    local_968 = uVar11;\n    if (uVar11 < uVar8) {\n      iVar10 = 0;\n      iVar2 = 0;\n    }\n    else {\n      iVar10 = 0;\n      do {\n        if (DAT_0007eb9c < 4) {\nLAB_0003b3cc:\n          iVar2 = FUN_00039998();\n        }\n        else {\n          local_838._0_2_ = 10;\n          FUN_0002ea54(3,&local_838,0);\n          if (DAT_0007eb9c < 4) goto LAB_0003b3cc;\n          snprintf((char *)&local_838,0x800,\">>>> freq_curr = %d\\n\",local_968);\n          FUN_0002e584(3,&local_838,0);\n          iVar2 = FUN_00039998();\n        }\n        if (iVar2 == 0) {\n          iVar2 = 0;\n          if (3 < DAT_0007eb9c) {\n            local_838._0_1_ = 'A';\n            local_838._1_1_ = 'l';\n            local_838._2_1_ = 'l';\n            local_838._3_1_ = ' ';\n            uStack_834._0_1_ = 'r';\n            uStack_834._1_1_ = 'e';\n            uStack_834._2_1_ = 'a';\n            uStack_834._3_1_ = 'd';\n            uStack_830._0_1_ = 'y';\n            uStack_830._1_1_ = ' ';\n            uStack_830._2_1_ = 'c';\n            uStack_830._3_1_ = 'h';\n            uStack_82c._0_1_ = 'a';\n            uStack_82c._1_1_ = 'i';\n            uStack_82c._2_1_ = 'n';\n            uStack_82c._3_1_ = ' ';\n            local_828._0_1_ = 'd';\n            local_828._1_1_ = 'o';\n            local_828._2_1_ = 'n';\n            local_828._3_1_ = 'e';\n            uStack_824._0_1_ = ',';\n            uStack_824._1_1_ = ' ';\n            uStack_824._2_1_ = 'e';\n            uStack_824._3_1_ = 'x';\n            local_820._0_1_ = 'i';\n            local_820._1_1_ = 't';\n            local_820._2_1_ = '.';\n            local_820._3_1_ = '\\n';\n            local_81c = 0;\n            FUN_0002e584(3,&local_838,0);\n          }\n          goto LAB_0003b4e0;\n        }\n        iVar2 = 0;\n        do {\n          iVar4 = FUN_0001e29c(iVar2);\n          if ((iVar4 != 0) && (iVar4 = FUN_000397a0(iVar2), iVar4 == 1)) {\n            FUN_0001aae4((float)(longlong)DAT_0007edd0,iVar2,DAT_00482a70,uVar11,local_968,\n                         *(undefined *)(*DAT_004fcb40 + 0x15));\n          }\n          uVar1 = local_968;\n          iVar2 = iVar2 + 1;\n        } while (iVar2 != 4);\n        iVar2 = FUN_0003ac6c();\n        if (iVar2 != 0) {\n          if (3 < DAT_0007eb9c) {\n            local_838._0_1_ = 'S';\n            local_838._1_1_ = 'e';\n            local_838._2_1_ = 't';\n            local_838._3_1_ = ' ';\n            uStack_834._0_1_ = 'v';\n            uStack_834._1_1_ = 'o';\n            uStack_834._2_1_ = 'l';\n            uStack_834._3_1_ = 't';\n            uStack_830._0_1_ = 'a';\n            uStack_830._1_1_ = 'g';\n            uStack_830._2_1_ = 'e';\n            uStack_830._3_1_ = ' ';\n            uStack_82c._0_1_ = 'f';\n            uStack_82c._1_1_ = 'a';\n            uStack_82c._2_1_ = 'i';\n            uStack_82c._3_1_ = 'l';\n            local_828._0_1_ = 'e';\n            local_828._1_1_ = 'd';\n            local_828._2_1_ = ',';\n            local_828._3_1_ = ' ';\n            uStack_824._0_1_ = 'e';\n            uStack_824._1_1_ = 'x';\n            uStack_824._2_1_ = 'i';\n            uStack_824._3_1_ = 't';\n            local_820._0_3_ = 0xa2e;\n            FUN_0002e584(3,&local_838,0);\n          }\n          goto LAB_0003b4e0;\n        }\n        uVar11 = 0x14;\n        FUN_000321b8(local_968,DAT_0007eb58);\n        FUN_0003a86c(&local_968);\n        iVar4 = FUN_000391f4();\n        iVar2 = 0;\n        do {\n          iVar5 = FUN_0001e29c(iVar2);\n          if ((iVar5 != 0) && (iVar5 = FUN_000397a0(iVar2), iVar5 == 1)) {\n            FUN_0003a054(iVar2,iVar4);\n          }\n          iVar2 = iVar2 + 1;\n        } while (iVar2 != 4);\n        iVar2 = 0;\n        do {\n          iVar5 = FUN_0001e29c(iVar2);\n          if ((iVar5 != 0) && (iVar5 = FUN_000397a0(iVar2), iVar5 == 1)) {\n            iVar5 = *DAT_004fcb40;\n            iVar5 = FUN_00039b60(*(undefined4 *)(iVar5 + 0x1c),*(undefined4 *)(iVar5 + 0x20),\n                                 *(undefined4 *)(iVar5 + 0x24),iVar2);\n            if (iVar5 == 0) {\n              DAT_004fcb40[iVar2 + 5] = 1;\n            }\n            else {\n              FUN_0003962c(iVar2,2);\n            }\n            fVar14 = (float)FUN_0003a828(iVar2,iVar4);\n            fVar16 = (float)DAT_004fcb40[iVar2 + 9];\n            if (fVar14 != fVar16 && fVar14 < fVar16 == (NAN(fVar14) || NAN(fVar16))) {\n              DAT_004fcb40[iVar2 + 9] = (int)fVar14;\n            }\n          }\n          iVar2 = iVar2 + 1;\n        } while (iVar2 != 4);\n        iVar2 = 0;\n        piVar12 = (int *)(&DAT_0080a894 + iVar4);\n        ppfVar9 = apfStack_928;\n        ppfVar7 = ppfVar9 + iVar10 * 4;\n        do {\n          iVar4 = FUN_0001e29c(iVar2);\n          bVar13 = iVar4 != 0;\n          iVar2 = iVar2 + 1;\n          if (bVar13) {\n            ppfVar9 = (float **)*piVar12;\n          }\n          if (bVar13) {\n            uVar11 = local_968;\n          }\n          piVar12 = piVar12 + 1;\n          if (bVar13) {\n            *ppfVar7 = (float *)ppfVar9;\n            local_964[iVar10] = uVar11;\n          }\n          ppfVar7 = ppfVar7 + 1;\n        } while (iVar2 != 4);\n        iVar10 = iVar10 + 1;\n        local_968 = local_968 - iVar3;\n        uVar11 = uVar1;\n      } while (uVar8 <= local_968);\n      iVar2 = 0;\n    }\nLAB_0003b4e0:\n    iVar3 = 0;\n    iVar4 = FUN_0001e29c(0);\n    uVar11 = DAT_0007eb9c;\n    while( true ) {\n      DAT_0007eb9c = uVar11;\n      if (iVar4 != 0) {\n        ppfVar7 = apfStack_928 + iVar3;\n        iVar5 = 0;\n        iVar4 = 0;\n        while ((iVar6 = iVar4, iVar5 < iVar10 + -1 &&\n               (pfVar15 = *ppfVar7, iVar6 = iVar5, 5.0 <= (float)pfVar15))) {\n          ppfVar7 = ppfVar7 + 4;\n          iVar5 = iVar5 + 1;\n          fVar14 = (float)*ppfVar7 * 1.5;\n          if ((float)pfVar15 != fVar14 &&\n              (float)pfVar15 < fVar14 == (NAN((float)pfVar15) || NAN(fVar14))) {\n            iVar4 = iVar5;\n          }\n        }\n        uVar8 = local_964[iVar6];\n        DAT_004fcb40[iVar3 + 1] = uVar8;\n        if (3 < uVar11) {\n          snprintf((char *)&local_838,0x800,\"chain %d best level %d, freq %d\\n\",iVar3,iVar6,uVar8);\n          FUN_0002e584(3,&local_838,0);\n        }\n      }\n      iVar3 = iVar3 + 1;\n      if (iVar3 == 4) break;\n      iVar4 = FUN_0001e29c(iVar3);\n      uVar11 = DAT_0007eb9c;\n    }\n  }\n  return iVar2;\n}\n\n",
    "FUN_0003b8a0": "\nundefined4 FUN_0003b8a0(int param_1,int param_2)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  int *piVar3;\n  int iVar4;\n  int iVar5;\n  char acStack_810 [2052];\n  \n  iVar1 = FUN_0001e0f0();\n  if (iVar1 == 0) {\n    iVar5 = 0;\n  }\n  else {\n    iVar5 = 0;\n    iVar4 = 0;\n    piVar3 = (int *)(param_2 + param_1 * 0x400 + -4);\n    do {\n      iVar4 = iVar4 + 1;\n      piVar3 = piVar3 + 1;\n      iVar5 = iVar5 + *piVar3;\n    } while (iVar1 != iVar4);\n  }\n  uVar2 = FUN_0001e0f0();\n  uVar2 = FUN_0005f880(iVar5,uVar2);\n  if (4 < DAT_0007eb9c) {\n    snprintf(acStack_810,0x800,\"chain = %d, freq_avg = %d\\n\",param_1,uVar2);\n    FUN_0002e584(4,acStack_810,0);\n  }\n  return uVar2;\n}\n\n",
    "FUN_0003b94c": "\nuint FUN_0003b94c(int param_1,int param_2)\n\n{\n  int iVar1;\n  uint *puVar2;\n  int iVar3;\n  int iVar4;\n  uint uVar5;\n  char acStack_818 [2048];\n  \n  uVar5 = 0xffffff;\n  iVar3 = 0;\n  do {\n    iVar1 = FUN_0001e29c(iVar3);\n    if ((iVar1 != 0) && (param_1 == 0xff || param_1 == iVar3)) {\n      iVar4 = 0;\n      iVar1 = FUN_0001e0f0();\n      if (iVar1 != 0) {\n        puVar2 = (uint *)(param_2 + -4 + iVar3 * 0x400);\n        do {\n          puVar2 = puVar2 + 1;\n          iVar4 = iVar4 + 1;\n          if (*puVar2 <= uVar5) {\n            uVar5 = *puVar2;\n          }\n        } while (iVar1 != iVar4);\n      }\n    }\n    iVar3 = iVar3 + 1;\n  } while (iVar3 != 4);\n  if (4 < DAT_0007eb9c) {\n    snprintf(acStack_818,0x800,\"chain = %d, freq_min = %d\\n\",param_1,uVar5);\n    FUN_0002e584(4,acStack_818,0);\n  }\n  return uVar5;\n}\n\n",
    "FUN_0003ba18": "\nuint FUN_0003ba18(int param_1,int param_2)\n\n{\n  int iVar1;\n  uint *puVar2;\n  int iVar3;\n  uint uVar4;\n  int iVar5;\n  char acStack_818 [2048];\n  \n  uVar4 = 0;\n  iVar3 = 0;\n  do {\n    iVar1 = FUN_0001e29c(iVar3);\n    if ((iVar1 != 0) && (param_1 == 0xff || param_1 == iVar3)) {\n      iVar5 = 0;\n      iVar1 = FUN_0001e0f0();\n      if (iVar1 != 0) {\n        puVar2 = (uint *)(param_2 + -4 + iVar3 * 0x400);\n        do {\n          puVar2 = puVar2 + 1;\n          iVar5 = iVar5 + 1;\n          if (uVar4 < *puVar2) {\n            uVar4 = *puVar2;\n          }\n        } while (iVar1 != iVar5);\n      }\n    }\n    iVar3 = iVar3 + 1;\n  } while (iVar3 != 4);\n  if (4 < DAT_0007eb9c) {\n    snprintf(acStack_818,0x800,\"chain = %d, freq_max = %d\\n\",param_1,uVar4);\n    FUN_0002e584(4,acStack_818,0);\n  }\n  return uVar4;\n}\n\n",
    "FUN_0003bae4": "\nundefined4 FUN_0003bae4(undefined4 param_1)\n\n{\n  uint uVar1;\n  int iVar2;\n  int iVar3;\n  uint uVar4;\n  uint uVar5;\n  char acStack_818 [2048];\n  \n  uVar1 = FUN_0003b8a0(param_1,DAT_004fcb44 + 1);\n  iVar2 = FUN_0003b94c(param_1,DAT_004fcb44 + 1);\n  iVar3 = FUN_0003ba18(param_1,DAT_004fcb44 + 1);\n  uVar4 = FUN_0003ba18(param_1,DAT_004fcb44 + 0x405);\n  uVar5 = *(uint *)(*DAT_004fcb44 + 0x14);\n  if (uVar1 < uVar5) {\n    uVar1 = *(uint *)(*DAT_004fcb44 + 0x1c);\n    if ((uint)(iVar3 - iVar2) < uVar1) {\n      if (uVar4 <= uVar5) {\n        return 0;\n      }\n      if (3 < DAT_0007eb9c) {\n        snprintf(acStack_818,0x800,\n                 \"chain = %d, freq_max_runtime = %d, freq_threshold = %d, max freq enough\\n\",param_1\n                 ,uVar4,uVar5);\n        goto LAB_0003bc2c;\n      }\n    }\n    else if (3 < DAT_0007eb9c) {\n      snprintf(acStack_818,0x800,\n               \"chain = %d, freq_max = %d, freq_min = %d, freq_diff = %d, freq_diff_threshold = %d, freq diff enough\\n\"\n               ,param_1,iVar3,iVar2,iVar3 - iVar2,uVar1);\nLAB_0003bc2c:\n      FUN_0002e584(3,acStack_818,0);\n      return 1;\n    }\n  }\n  else if (3 < DAT_0007eb9c) {\n    snprintf(acStack_818,0x800,\"chain = %d, freq_avg = %d, freq_threshold = %d, avg freq enough\\n\",\n             param_1,uVar1,uVar5);\n    goto LAB_0003bc2c;\n  }\n  return 1;\n}\n\n",
    "FUN_0003bc48": "\nvoid FUN_0003bc48(int param_1,int param_2)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  int extraout_r1;\n  int iVar3;\n  int iVar4;\n  undefined4 local_828;\n  \n  if (4 < DAT_0007eb9c) {\n    snprintf((char *)&local_828,0x800,\"[DEBUG] Dump freq table, chain = %d.\\n\",param_1);\n    FUN_0002e584(4,&local_828,0);\n  }\n  iVar4 = 0;\n  do {\n    iVar1 = FUN_0001e29c(iVar4);\n    if ((iVar1 != 0) && (param_1 == 0xff || param_1 == iVar4)) {\n      if (3 < DAT_0007eb9c) {\n        snprintf((char *)&local_828,0x800,\"chain = %d\\n\",iVar4);\n        FUN_0002ea54(3,&local_828,0);\n      }\n      iVar1 = FUN_0001e0f0();\n      if (iVar1 != 0) {\n        iVar3 = 0;\n        do {\n          if (3 < DAT_0007eb9c) {\n            snprintf((char *)&local_828,0x800,\"[%3d]:%-3d\",iVar3,\n                     *(undefined4 *)(param_2 + iVar4 * 0x400 + iVar3 * 4));\n            FUN_0002ea54(3,&local_828,0);\n            if (3 < DAT_0007eb9c) {\n              local_828 = &DAT_00202020;\n              FUN_0002ea54(3,&local_828,0);\n            }\n          }\n          iVar3 = iVar3 + 1;\n          uVar2 = FUN_0001e100();\n          FUN_0005fadc(iVar3,uVar2);\n          if ((extraout_r1 == 0) && (3 < DAT_0007eb9c)) {\n            local_828 = (undefined *)CONCAT22(local_828._2_2_,10);\n            FUN_0002ea54(3,&local_828);\n          }\n        } while (iVar1 != iVar3);\n      }\n      if (3 < DAT_0007eb9c) {\n        local_828 = (undefined *)CONCAT22(local_828._2_2_,10);\n        FUN_0002ea54(3,&local_828,0);\n      }\n    }\n    iVar4 = iVar4 + 1;\n  } while (iVar4 != 4);\n  return;\n}\n\n",
    "FUN_0003be08": "\nvoid FUN_0003be08(void)\n\n{\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined4 uStack_7fc;\n  undefined4 local_7f8;\n  undefined4 uStack_7f4;\n  undefined4 uStack_7f0;\n  undefined4 uStack_7ec;\n  undefined2 uStack_7e8;\n  undefined local_7e6;\n  \n  if (4 < DAT_0007eb9c) {\n    local_808._0_1_ = '[';\n    local_808._1_1_ = 'D';\n    local_808._2_1_ = 'E';\n    local_808._3_1_ = 'B';\n    uStack_804._0_1_ = 'U';\n    uStack_804._1_1_ = 'G';\n    uStack_804._2_1_ = ']';\n    uStack_804._3_1_ = ' ';\n    uStack_800._0_1_ = 'f';\n    uStack_800._1_1_ = 'r';\n    uStack_800._2_1_ = 'e';\n    uStack_800._3_1_ = 'q';\n    uStack_7fc._0_1_ = ' ';\n    uStack_7fc._1_1_ = 't';\n    uStack_7fc._2_1_ = 'u';\n    uStack_7fc._3_1_ = 'n';\n    local_7f8._0_1_ = 'i';\n    local_7f8._1_1_ = 'n';\n    local_7f8._2_1_ = 'g';\n    local_7f8._3_1_ = ' ';\n    uStack_7f4._0_1_ = 'f';\n    uStack_7f4._1_1_ = 'i';\n    uStack_7f4._2_1_ = 'n';\n    uStack_7f4._3_1_ = 'e';\n    uStack_7f0._0_1_ = ' ';\n    uStack_7f0._1_1_ = 'e';\n    uStack_7f0._2_1_ = 'x';\n    uStack_7f0._3_1_ = 'i';\n    uStack_7ec._0_1_ = 't';\n    uStack_7ec._1_1_ = '.';\n    uStack_7ec._2_1_ = '\\n';\n    uStack_7ec._3_1_ = '\\0';\n    FUN_0002e584(4,&local_808,0);\n    if (4 < DAT_0007eb9c) {\n      local_808._0_1_ = '[';\n      local_808._1_1_ = 'D';\n      local_808._2_1_ = 'E';\n      local_808._3_1_ = 'B';\n      uStack_804._0_1_ = 'U';\n      uStack_804._1_1_ = 'G';\n      uStack_804._2_1_ = ']';\n      uStack_804._3_1_ = ' ';\n      uStack_800._0_1_ = 'F';\n      uStack_800._1_1_ = 'r';\n      uStack_800._2_1_ = 'e';\n      uStack_800._3_1_ = 'e';\n      uStack_7fc._0_1_ = ' ';\n      uStack_7fc._1_1_ = 'm';\n      uStack_7fc._2_1_ = 'e';\n      uStack_7fc._3_1_ = 'm';\n      local_7f8._0_1_ = 'o';\n      local_7f8._1_1_ = 'r';\n      local_7f8._2_1_ = 'y';\n      local_7f8._3_1_ = ' ';\n      uStack_7f4._0_1_ = 'f';\n      uStack_7f4._1_1_ = 'o';\n      uStack_7f4._2_1_ = 'r';\n      uStack_7f4._3_1_ = ' ';\n      uStack_7f0._0_1_ = 'p';\n      uStack_7f0._1_1_ = 'm';\n      uStack_7f0._2_1_ = ' ';\n      uStack_7f0._3_1_ = 'g';\n      uStack_7ec._0_1_ = 'r';\n      uStack_7ec._1_1_ = 'a';\n      uStack_7ec._2_1_ = 'd';\n      uStack_7ec._3_1_ = 'e';\n      uStack_7e8 = 0xa2e;\n      local_7e6 = 0;\n      FUN_0002e584(4,&local_808,0);\n    }\n  }\n  if (DAT_004fcb44 != (void *)0x0) {\n    free(DAT_004fcb44);\n    DAT_004fcb44 = (void *)0x0;\n  }\n  return;\n}\n\n",
    "FUN_0003bf94": "\nvoid FUN_0003bf94(void)\n\n{\n  int iVar1;\n  int iVar2;\n  char *pcVar3;\n  undefined8 in_stack_fffff7e0;\n  undefined8 uVar4;\n  undefined2 local_818 [1026];\n  \n  if (3 < DAT_0007eb9c) {\n    uVar4 = CONCAT44((int)((ulonglong)in_stack_fffff7e0 >> 0x20),*(undefined4 *)*DAT_004fcb44);\n    snprintf((char *)local_818,0x800,\"%-40s : %d\\n\",\"voltage\",*(undefined4 *)*DAT_004fcb44);\n    FUN_0002ea54(3,local_818,0);\n    if (3 < DAT_0007eb9c) {\n      snprintf((char *)local_818,0x800,\"%-40s : \",\"freq_base\",uVar4);\n      FUN_0002ea54(3,local_818,0);\n    }\n  }\n  iVar2 = 0;\n  do {\n    iVar1 = FUN_0001e29c(iVar2);\n    if ((iVar1 != 0) && (3 < DAT_0007eb9c)) {\n      snprintf((char *)local_818,0x800,\"[%d] = %d \",iVar2,\n               *(undefined4 *)(*DAT_004fcb44 + iVar2 * 4 + 4));\n      FUN_0002ea54(3,local_818,0);\n    }\n    iVar2 = iVar2 + 1;\n  } while (iVar2 != 4);\n  if (DAT_0007eb9c < 4) {\n    return;\n  }\n  local_818[0] = 10;\n  FUN_0002ea54(3,local_818,0);\n  if (DAT_0007eb9c < 4) {\nLAB_0003c204:\n    if (DAT_0007eb9c < 4) goto LAB_0003c358;\n    pcVar3 = \"false\";\n    if (*(char *)(*DAT_004fcb44 + 0x24) != '\\0') {\n      pcVar3 = \"true\";\n    }\n    snprintf((char *)local_818,0x800,\"%-40s : %s\\n\",\"is_inc_freq_with_high_vol\",pcVar3);\n    FUN_0002ea54(3,local_818,0);\n    if (DAT_0007eb9c < 4) {\n      return;\n    }\n    pcVar3 = \"false\";\n    if (*(char *)(*DAT_004fcb44 + 0x25) != '\\0') {\n      pcVar3 = \"true\";\n    }\n    snprintf((char *)local_818,0x800,\"%-40s : %s\\n\",\"is_inc_freq_with_high_vol_runtime\",pcVar3);\n    FUN_0002ea54(3,local_818,0);\n  }\n  else {\n    snprintf((char *)local_818,0x800,\"%-40s : %d\\n\",\"freq_threshold\",\n             *(undefined4 *)(*DAT_004fcb44 + 0x14));\n    FUN_0002ea54(3,local_818,0);\n    if (DAT_0007eb9c < 4) {\n      return;\n    }\n    snprintf((char *)local_818,0x800,\"%-40s : %d\\n\",\"freq_serial_threshold\",\n             *(undefined4 *)(*DAT_004fcb44 + 0x18));\n    FUN_0002ea54(3,local_818,0);\n    if (3 < DAT_0007eb9c) {\n      snprintf((char *)local_818,0x800,\"%-40s : %d\\n\",\"freq_diff_threshold\",\n               *(undefined4 *)(*DAT_004fcb44 + 0x1c));\n      FUN_0002ea54(3,local_818,0);\n      if (DAT_0007eb9c < 4) {\n        return;\n      }\n      snprintf((char *)local_818,0x800,\"%-40s : %d\\n\",\"freq_step\",\n               *(undefined4 *)(*DAT_004fcb44 + 0x20));\n      FUN_0002ea54(3,local_818,0);\n      goto LAB_0003c204;\n    }\n  }\n  if (DAT_0007eb9c < 4) {\n    return;\n  }\n  snprintf((char *)local_818,0x800,\"%-40s : %d\\n\",\"is_board_init_with_power_off\",\n           *(undefined4 *)(*DAT_004fcb44 + 0x28));\n  FUN_0002ea54(3,local_818,0);\n  if (DAT_0007eb9c < 4) {\n    return;\n  }\n  snprintf((char *)local_818,0x800,\"%-40s : %.4f\\n\",\"hw_threshold\",\n           (double)*(float *)(*DAT_004fcb44 + 0x2c));\n  FUN_0002ea54(3,local_818,0);\nLAB_0003c358:\n  if (3 < DAT_0007eb9c) {\n    snprintf((char *)local_818,0x800,\"%-40s : %.2f\\n\",\"nonce_rate_threshold\",\n             (double)*(float *)(*DAT_004fcb44 + 0x30));\n    FUN_0002ea54(3,local_818,0);\n    if (3 < DAT_0007eb9c) {\n      snprintf((char *)local_818,0x800,\"%-40s : %.2f\\n\",\"nonce_rate_dec_threshold\",\n               (double)*(float *)(*DAT_004fcb44 + 0x34));\n      FUN_0002ea54(3,local_818,0);\n      if (3 < DAT_0007eb9c) {\n        snprintf((char *)local_818,0x800,\"%-40s : %d\\n\",\"freq_tuning_fine_step\",\n                 *(undefined4 *)(*DAT_004fcb44 + 0x38));\n        FUN_0002ea54(3,local_818,0);\n        if (3 < DAT_0007eb9c) {\n          snprintf((char *)local_818,0x800,\"%-40s : %d\\n\",\"freq_tuning_fine_count\",\n                   *(undefined4 *)(*DAT_004fcb44 + 0x3c));\n          FUN_0002ea54(3,local_818,0);\n          return;\n        }\n      }\n    }\n  }\n  return;\n}\n\n",
    "FUN_0003c490": "\nundefined4 FUN_0003c490(undefined4 param_1)\n\n{\n  undefined4 uVar1;\n  undefined4 local_818;\n  undefined4 uStack_814;\n  undefined4 uStack_810;\n  undefined4 uStack_80c;\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined4 uStack_7fc;\n  undefined4 local_7f8;\n  undefined4 uStack_7f4;\n  undefined4 uStack_7f0;\n  undefined2 uStack_7ec;\n  undefined local_7ea;\n  \n  if (4 < DAT_0007eb9c) {\n    local_818._0_1_ = '[';\n    local_818._1_1_ = 'D';\n    local_818._2_1_ = 'E';\n    local_818._3_1_ = 'B';\n    uStack_814._0_1_ = 'U';\n    uStack_814._1_1_ = 'G';\n    uStack_814._2_1_ = ']';\n    uStack_814._3_1_ = ' ';\n    uStack_810._0_1_ = 'f';\n    uStack_810._1_1_ = 'r';\n    uStack_810._2_1_ = 'e';\n    uStack_810._3_1_ = 'q';\n    uStack_80c._0_1_ = ' ';\n    uStack_80c._1_1_ = 't';\n    uStack_80c._2_1_ = 'u';\n    uStack_80c._3_1_ = 'n';\n    local_808._0_1_ = 'i';\n    local_808._1_1_ = 'n';\n    local_808._2_1_ = 'g';\n    local_808._3_1_ = ' ';\n    uStack_804._0_1_ = 'f';\n    uStack_804._1_1_ = 'i';\n    uStack_804._2_1_ = 'n';\n    uStack_804._3_1_ = 'e';\n    uStack_800._0_1_ = ' ';\n    uStack_800._1_1_ = 'i';\n    uStack_800._2_1_ = 'n';\n    uStack_800._3_1_ = 'i';\n    uStack_7fc._0_1_ = 't';\n    uStack_7fc._1_1_ = '.';\n    uStack_7fc._2_1_ = '\\n';\n    uStack_7fc._3_1_ = '\\0';\n    FUN_0002e584(4,&local_818,0);\n    if (4 < DAT_0007eb9c) {\n      local_818._0_1_ = '[';\n      local_818._1_1_ = 'D';\n      local_818._2_1_ = 'E';\n      local_818._3_1_ = 'B';\n      uStack_814._0_1_ = 'U';\n      uStack_814._1_1_ = 'G';\n      uStack_814._2_1_ = ']';\n      uStack_814._3_1_ = ' ';\n      uStack_810._0_1_ = 'A';\n      uStack_810._1_1_ = 'l';\n      uStack_810._2_1_ = 'l';\n      uStack_810._3_1_ = 'o';\n      uStack_80c._0_1_ = 'c';\n      uStack_80c._1_1_ = 'a';\n      uStack_80c._2_1_ = 't';\n      uStack_80c._3_1_ = 'e';\n      local_808._0_1_ = ' ';\n      local_808._1_1_ = 'm';\n      local_808._2_1_ = 'e';\n      local_808._3_1_ = 'm';\n      uStack_804._0_1_ = 'o';\n      uStack_804._1_1_ = 'r';\n      uStack_804._2_1_ = 'y';\n      uStack_804._3_1_ = ' ';\n      uStack_800._0_1_ = 'f';\n      uStack_800._1_1_ = 'o';\n      uStack_800._2_1_ = 'r';\n      uStack_800._3_1_ = ' ';\n      uStack_7fc._0_1_ = 'p';\n      uStack_7fc._1_1_ = 'm';\n      uStack_7fc._2_1_ = ' ';\n      uStack_7fc._3_1_ = 'g';\n      local_7f8._0_1_ = 'r';\n      local_7f8._1_1_ = 'a';\n      local_7f8._2_1_ = 'd';\n      local_7f8._3_1_ = 'e';\n      uStack_7f4 = CONCAT13(uStack_7f4._3_1_,0xa2e);\n      FUN_0002e584(4,&local_818,0);\n    }\n  }\n  if ((DAT_004fcb44 == (undefined4 *)0x0) &&\n     (DAT_004fcb44 = (undefined4 *)calloc(0x3044,1), DAT_004fcb44 == (undefined4 *)0x0)) {\n    FUN_000356c4(0xd,0xff);\n    if (DAT_0007eb9c < 4) {\n      uVar1 = 0xffffffff;\n    }\n    else {\n      local_818._0_1_ = 'F';\n      local_818._1_1_ = 'a';\n      local_818._2_1_ = 'i';\n      local_818._3_1_ = 'l';\n      uStack_814._0_1_ = ' ';\n      uStack_814._1_1_ = 't';\n      uStack_814._2_1_ = 'o';\n      uStack_814._3_1_ = ' ';\n      uStack_810._0_1_ = 'a';\n      uStack_810._1_1_ = 'l';\n      uStack_810._2_1_ = 'l';\n      uStack_810._3_1_ = 'o';\n      uStack_80c._0_1_ = 'c';\n      uStack_80c._1_1_ = 'a';\n      uStack_80c._2_1_ = 't';\n      uStack_80c._3_1_ = 'e';\n      local_808._0_1_ = ' ';\n      local_808._1_1_ = 'm';\n      local_808._2_1_ = 'e';\n      local_808._3_1_ = 'm';\n      uStack_804._0_1_ = 'o';\n      uStack_804._1_1_ = 'r';\n      uStack_804._2_1_ = 'y';\n      uStack_804._3_1_ = ' ';\n      uStack_800._0_1_ = 'f';\n      uStack_800._1_1_ = 'o';\n      uStack_800._2_1_ = 'r';\n      uStack_800._3_1_ = ' ';\n      uStack_7fc._0_1_ = 'p';\n      uStack_7fc._1_1_ = 'm';\n      uStack_7fc._2_1_ = ' ';\n      uStack_7fc._3_1_ = 'g';\n      local_7f8._0_1_ = 'r';\n      local_7f8._1_1_ = 'a';\n      local_7f8._2_1_ = 'd';\n      local_7f8._3_1_ = 'e';\n      uStack_7f4._0_1_ = ' ';\n      uStack_7f4._1_1_ = 'c';\n      uStack_7f4._2_1_ = 'o';\n      uStack_7f4._3_1_ = 'n';\n      uStack_7f0._0_1_ = 't';\n      uStack_7f0._1_1_ = 'e';\n      uStack_7f0._2_1_ = 'x';\n      uStack_7f0._3_1_ = 't';\n      uStack_7ec = 0xa2e;\n      local_7ea = 0;\n      FUN_0002e584(3,&local_818,0);\n      uVar1 = 0xffffffff;\n    }\n  }\n  else {\n    *DAT_004fcb44 = param_1;\n    FUN_0003bf94();\n    uVar1 = 0;\n  }\n  return uVar1;\n}\n\n",
    "FUN_0003c5dc": "\nint FUN_0003c5dc(void)\n\n{\n  short sVar1;\n  short sVar2;\n  int iVar3;\n  int iVar4;\n  undefined4 uVar5;\n  int iVar6;\n  uint *puVar7;\n  int iVar8;\n  int extraout_r1;\n  uint uVar9;\n  int *piVar10;\n  int *piVar11;\n  uint *puVar12;\n  uint uVar13;\n  int *piVar14;\n  undefined4 *puVar15;\n  undefined4 *puVar16;\n  int *piVar17;\n  int iVar18;\n  int iVar19;\n  uint *puVar20;\n  float fVar21;\n  float fVar22;\n  undefined8 uVar23;\n  undefined4 local_1048;\n  undefined local_1044 [4];\n  undefined4 uStack_1040;\n  undefined4 uStack_103c;\n  undefined4 local_1038;\n  undefined4 uStack_1034;\n  undefined4 uStack_1030;\n  undefined4 uStack_102c;\n  undefined4 local_1028;\n  undefined4 local_1024;\n  undefined4 local_1020;\n  undefined4 local_101c;\n  undefined4 local_1018;\n  \n  if (3 < DAT_0007eb9c) {\n    local_1038._0_1_ = 'D';\n    local_1038._1_1_ = 'o';\n    local_1038._2_1_ = ' ';\n    local_1038._3_1_ = 'f';\n    uStack_1034._0_1_ = 'r';\n    uStack_1034._1_1_ = 'e';\n    uStack_1034._2_1_ = 'q';\n    uStack_1034._3_1_ = ' ';\n    uStack_1030._0_1_ = 't';\n    uStack_1030._1_1_ = 'u';\n    uStack_1030._2_1_ = 'n';\n    uStack_1030._3_1_ = 'i';\n    uStack_102c._0_1_ = 'n';\n    uStack_102c._1_1_ = 'g';\n    uStack_102c._2_1_ = ' ';\n    uStack_102c._3_1_ = 'f';\n    local_1028._0_1_ = 'i';\n    local_1028._1_1_ = 'n';\n    local_1028._2_1_ = 'e';\n    local_1028._3_1_ = '.';\n    local_1024._0_2_ = 10;\n    FUN_0002e584(3,&local_1038,0);\n  }\n  iVar18 = 0;\n  do {\n    iVar3 = FUN_0001e29c(iVar18);\n    if ((iVar3 != 0) && (iVar3 = FUN_0001e0f0(), iVar3 != 0)) {\n      iVar4 = *DAT_004fcb44;\n      piVar10 = DAT_004fcb44 + iVar3 + iVar18 * 0x100;\n      piVar17 = DAT_004fcb44 + iVar18 * 0x100;\n      do {\n        piVar17 = piVar17 + 1;\n        *piVar17 = *(int *)(iVar4 + iVar18 * 4 + 4);\n      } while (piVar17 != piVar10);\n    }\n    iVar18 = iVar18 + 1;\n  } while (iVar18 != 4);\n  FUN_000361e4(*(undefined4 *)*DAT_004fcb44);\n  memcpy(DAT_004fcb44 + 0x405,DAT_004fcb44 + 1,0x1000);\n  if (3 < DAT_0007eb9c) {\n    local_1038._0_2_ = 10;\n    FUN_0002ea54(3,&local_1038,0);\n    if (3 < DAT_0007eb9c) {\n      local_1038._0_1_ = '>';\n      local_1038._1_1_ = '>';\n      local_1038._2_1_ = '>';\n      local_1038._3_1_ = '>';\n      uStack_1034._0_1_ = ' ';\n      uStack_1034._1_1_ = 'D';\n      uStack_1034._2_1_ = 'o';\n      uStack_1034._3_1_ = ' ';\n      uStack_1030._0_1_ = 'f';\n      uStack_1030._1_1_ = 'r';\n      uStack_1030._2_1_ = 'e';\n      uStack_1030._3_1_ = 'q';\n      uStack_102c._0_1_ = ' ';\n      uStack_102c._1_1_ = 't';\n      uStack_102c._2_1_ = 'u';\n      uStack_102c._3_1_ = 'n';\n      local_1028._0_1_ = 'i';\n      local_1028._1_1_ = 'n';\n      local_1028._2_1_ = 'g';\n      local_1028._3_1_ = ' ';\n      local_1024._0_1_ = 'f';\n      local_1024._1_1_ = 'i';\n      local_1024._2_1_ = 'n';\n      local_1024._3_1_ = 'e';\n      local_1020._0_1_ = ' ';\n      local_1020._1_1_ = 'p';\n      local_1020._2_1_ = 'a';\n      local_1020._3_1_ = 'r';\n      local_101c._0_1_ = 'a';\n      local_101c._1_1_ = 'l';\n      local_101c._2_1_ = 'l';\n      local_101c._3_1_ = 'e';\n      local_1018._0_1_ = 'l';\n      local_1018._1_1_ = '.';\n      local_1018._2_1_ = '\\n';\n      local_1018._3_1_ = '\\0';\n      FUN_0002e584(3,&local_1038,0);\n    }\n  }\n  iVar18 = 0;\n  do {\n    iVar3 = FUN_0001e29c(iVar18);\n    if (iVar3 != 0) {\n      iVar3 = FUN_0003bae4(iVar18);\n      uVar5 = 2;\n      if (iVar3 == 0) {\n        uVar5 = 1;\n      }\n      FUN_0003962c(iVar18,uVar5);\n    }\n    iVar18 = iVar18 + 1;\n  } while (iVar18 != 4);\nLAB_0003c6a4:\n  iVar18 = FUN_00039998();\n  if (iVar18 == 0) {\n    iVar18 = 0;\n  }\n  else {\n    if (3 < DAT_0007eb9c) {\n      snprintf((char *)&local_1038,0x800,\"is_need_serial = %d\\n\",0);\n      FUN_0002e584(3,&local_1038,0);\n      if (3 < DAT_0007eb9c) {\n        local_1038._0_2_ = 10;\n        FUN_0002ea54(3,&local_1038,0);\n        if (3 < DAT_0007eb9c) {\n          local_1038._0_1_ = '>';\n          local_1038._1_1_ = '>';\n          local_1038._2_1_ = '>';\n          local_1038._3_1_ = '>';\n          uStack_1034._0_1_ = ' ';\n          uStack_1034._1_1_ = 'D';\n          uStack_1034._2_1_ = 'o';\n          uStack_1034._3_1_ = ' ';\n          uStack_1030._0_1_ = 's';\n          uStack_1030._1_1_ = 'i';\n          uStack_1030._2_1_ = 'n';\n          uStack_1030._3_1_ = 'g';\n          uStack_102c._0_1_ = 'l';\n          uStack_102c._1_1_ = 'e';\n          uStack_102c._2_1_ = ' ';\n          uStack_102c._3_1_ = 'g';\n          local_1028._0_1_ = 'r';\n          local_1028._1_1_ = 'a';\n          local_1028._2_1_ = 'd';\n          local_1028._3_1_ = 'e';\n          local_1024._0_1_ = ' ';\n          local_1024._1_1_ = 't';\n          local_1024._2_1_ = 'u';\n          local_1024._3_1_ = 'n';\n          local_1020._0_1_ = 'i';\n          local_1020._1_1_ = 'n';\n          local_1020._2_1_ = 'g';\n          local_1020._3_1_ = '.';\n          local_101c._0_2_ = 10;\n          FUN_0002e584(3,&local_1038,0);\n        }\n      }\n    }\n    iVar18 = 0;\n    do {\n      iVar3 = FUN_0001e29c(iVar18);\n      if (((iVar3 != 0) && (iVar3 = FUN_000397a0(iVar18), iVar3 == 1)) && (3 < DAT_0007eb9c)) {\n        snprintf((char *)&local_1038,0x800,\"chain = %d, grade = %d\\n\",iVar18,\n                 DAT_004fcb44[iVar18 + 0xc05]);\n        FUN_0002e584(3,&local_1038,0);\n      }\n      iVar18 = iVar18 + 1;\n    } while (iVar18 != 4);\n    if (3 < DAT_0007eb9c) {\n      local_1038._0_1_ = 'B';\n      local_1038._1_1_ = 'o';\n      local_1038._2_1_ = 'a';\n      local_1038._3_1_ = 'r';\n      uStack_1034._0_1_ = 'd';\n      uStack_1034._1_1_ = ' ';\n      uStack_1034._2_1_ = 'i';\n      uStack_1034._3_1_ = 'n';\n      uStack_1030._0_1_ = 'i';\n      uStack_1030._1_1_ = 't';\n      uStack_1030._2_1_ = ' ';\n      uStack_1030._3_1_ = 's';\n      uStack_102c._0_1_ = 't';\n      uStack_102c._1_1_ = 'a';\n      uStack_102c._2_1_ = 'r';\n      uStack_102c._3_1_ = 't';\n      local_1028._0_3_ = 0xa2e;\n      FUN_0002e584(3,&local_1038,0);\n    }\n    iVar18 = FUN_00039fb4(*(undefined4 *)(*DAT_004fcb44 + 0x28));\n    if (iVar18 == 0) {\n      FUN_00039a7c();\n      piVar10 = DAT_004fcb44;\n      DAT_004fcb44[0xc09] = 0;\n      piVar10[0xc0a] = 0;\n      piVar10[0xc0b] = 0;\n      piVar10[0xc0c] = 0;\n      memset(&local_1038,0,0x1000);\n      iVar18 = 0;\n      do {\n        iVar3 = FUN_0001e29c(iVar18);\n        if (iVar3 != 0) {\n          iVar3 = FUN_000397a0(iVar18);\n          if (iVar3 == 1) {\n            iVar3 = FUN_0001e0f0();\n            if (iVar3 != 0) {\n              piVar17 = DAT_004fcb44 + iVar18 * 0x100;\n              piVar10 = &local_1038 + iVar18 * 0x100;\n              do {\n                piVar17 = piVar17 + 1;\n                *piVar10 = *piVar17;\n                piVar10 = piVar10 + 1;\n              } while (piVar17 != DAT_004fcb44 + iVar3 + iVar18 * 0x100);\n            }\n          }\n          else {\n            uVar13 = FUN_0003b8a0(iVar18,DAT_004fcb44 + 1);\n            if (*(uint *)(*DAT_004fcb44 + 0x18) < uVar13) {\n              iVar3 = FUN_0001e0f0();\n              if (iVar3 != 0) {\n                puVar15 = &local_1038 + iVar18 * 0x100;\n                do {\n                  puVar16 = puVar15 + 1;\n                  *puVar15 = *(undefined4 *)(*DAT_004fcb44 + 0x18);\n                  puVar15 = puVar16;\n                } while (puVar16 != &local_1038 + iVar3 + iVar18 * 0x100);\n              }\n            }\n            else {\n              iVar3 = FUN_0001e0f0();\n              if (iVar3 != 0) {\n                piVar17 = DAT_004fcb44 + iVar18 * 0x100;\n                piVar10 = &local_1038 + iVar18 * 0x100;\n                do {\n                  piVar17 = piVar17 + 1;\n                  *piVar10 = *piVar17;\n                  piVar10 = piVar10 + 1;\n                } while (piVar17 != DAT_004fcb44 + iVar3 + iVar18 * 0x100);\n              }\n            }\n          }\n        }\n        iVar18 = iVar18 + 1;\n      } while (iVar18 != 4);\n      iVar18 = thunk_FUN_00019ab4();\n      iVar3 = FUN_000361f4();\n      if (iVar18 == iVar3) {\n        FUN_0001ad08((float)(longlong)DAT_0007edd0,&local_1038,DAT_00482a70,\n                     *(undefined *)(*DAT_004fcb44 + 0x24));\nLAB_0003c8f8:\n        iVar18 = FUN_00039998();\n        if (iVar18 == 0) {\n          if (DAT_0007eb9c < 4) goto LAB_0003c6a4;\n          iVar18 = 1;\nLAB_0003ce88:\n          snprintf((char *)&local_1038,0x800,\"is_single_grade_done = %d\\n\",iVar18);\n          FUN_0002e584(3,&local_1038,0);\n        }\n        else {\n          iVar18 = 0;\n          do {\n            iVar3 = FUN_0001e29c(iVar18);\n            if (((iVar3 != 0) && (iVar3 = FUN_000397a0(iVar18), iVar3 == 1)) &&\n               (uVar5 = FUN_0003b8a0(iVar18,DAT_004fcb44 + 0x405), 3 < DAT_0007eb9c)) {\n              snprintf((char *)&local_1038,0x800,\"chain = %d, freq_avg = %d, freq_threshold = %d\\n\",\n                       iVar18,uVar5,*(undefined4 *)(*DAT_004fcb44 + 0x18));\n              FUN_0002e584(3,&local_1038,0);\n            }\n            iVar18 = iVar18 + 1;\n          } while (iVar18 != 4);\n          iVar18 = 1;\n          iVar3 = 0;\n          do {\n            iVar4 = FUN_0001e29c(iVar3);\n            if ((iVar4 != 0) && (iVar4 = FUN_000397a0(iVar3), iVar4 == 1)) {\n              iVar4 = DAT_004fcb44[iVar3 + 0xc09];\n              if (3 < DAT_0007eb9c) {\n                snprintf((char *)&local_1038,0x800,\n                         \"chain = %d, grade_curr = %d, is_grade_curr_done = %d\\n\",iVar3,\n                         DAT_004fcb44[iVar3 + 0xc05],iVar4);\n                FUN_0002e584(3,&local_1038,0);\n                iVar4 = DAT_004fcb44[iVar3 + 0xc09];\n              }\n              if (iVar4 == 0) {\n                iVar18 = 0;\n              }\n            }\n            iVar3 = iVar3 + 1;\n          } while (iVar3 != 4);\n          if (3 < DAT_0007eb9c) goto LAB_0003ce88;\n        }\n        if (iVar18 == 0) {\n          iVar18 = 0;\n          do {\n            iVar3 = FUN_0001e29c(iVar18);\n            if (((iVar3 != 0) && (iVar3 = FUN_000397a0(iVar18), iVar3 == 1)) &&\n               (DAT_004fcb44[iVar18 + 0xc09] == 0)) {\n              iVar3 = FUN_0001e0f0();\n              if (iVar3 == 0) {\n                iVar4 = *DAT_004fcb44;\n                uVar13 = 0;\n              }\n              else {\n                iVar4 = *DAT_004fcb44;\n                puVar7 = (uint *)(DAT_004fcb44 + iVar3 + iVar18 * 0x100);\n                puVar12 = (uint *)(DAT_004fcb44 + iVar18 * 0x100);\n                uVar13 = 0;\n                puVar20 = (uint *)(DAT_004fcb44 + iVar18 * 0x100 + 0x405);\n                do {\n                  puVar12 = puVar12 + 1;\n                  uVar9 = *puVar12;\n                  *puVar20 = uVar9;\n                  if (puVar20[0x400] == 1) {\n                    uVar13 = uVar9 - *(int *)(iVar4 + 0x20);\n                    *puVar20 = uVar13;\n                  }\n                  puVar20 = puVar20 + 1;\n                } while (puVar12 != puVar7);\n              }\n              if (*(char *)(iVar4 + 0x25) != '\\0') {\n                FUN_0001a46c(uVar13,1);\n              }\n              FUN_000502c0((float)(ulonglong)uVar13,&uStack_1040,local_1044,0);\n              if (3 < DAT_0007eb9c) {\n                snprintf((char *)&local_1038,0x800,\"chain = %d, grade_curr = %d, freq_target = %d\\n\"\n                         ,iVar18,DAT_004fcb44[iVar18 + 0xc05],uVar13);\n                FUN_0002e584(3,&local_1038,0);\n              }\n              iVar3 = FUN_0001e0f0();\n              piVar10 = DAT_004fcb44;\n              if (iVar3 != 0) {\n                iVar4 = 0;\n                do {\n                  while (piVar10[iVar18 * 0x100 + iVar4 + 0x405] == uVar13) {\n                    if (3 < DAT_0007eb9c) {\n                      snprintf((char *)&local_1038,0x800,\"chain = %d, asic = %d, freq = %d\\n\",iVar18\n                               ,iVar4,uVar13);\n                      FUN_0002e584(3,&local_1038,0);\n                    }\n                    sVar2 = FUN_0001e160();\n                    sVar1 = (short)iVar4;\n                    iVar4 = iVar4 + 1;\n                    FUN_0001f164(iVar18,0,(int)sVar2 * (int)sVar1 & 0xff,DAT_00482a70,uStack_1040,\n                                 uStack_103c);\n                    usleep(1000000);\n                    piVar10 = DAT_004fcb44;\n                    if (iVar3 == iVar4) goto LAB_0003cdc4;\n                  }\n                  iVar4 = iVar4 + 1;\n                } while (iVar3 != iVar4);\n              }\nLAB_0003cdc4:\n              FUN_0003bc48(iVar18,piVar10 + 0x405);\n            }\n            iVar18 = iVar18 + 1;\n          } while (iVar18 != 4);\n          iVar4 = 0;\n          uVar5 = FUN_0003b94c(0xff,DAT_004fcb44 + 0x405);\n          FUN_000321b8(uVar5,DAT_0007eb58,0x14);\n          local_1048 = FUN_0003ba18(0xff,DAT_004fcb44 + 0x405);\n          FUN_0003a86c(&local_1048);\n          uVar23 = FUN_000391f4();\n          iVar18 = (int)((ulonglong)uVar23 >> 0x20);\n          iVar3 = (int)uVar23;\n          do {\n            uVar23 = FUN_0001e29c(iVar4,iVar18);\n            iVar18 = (int)((ulonglong)uVar23 >> 0x20);\n            if ((int)uVar23 != 0) {\n              uVar23 = FUN_000397a0(iVar4);\n              iVar18 = (int)((ulonglong)uVar23 >> 0x20);\n              if (((int)uVar23 == 1) && (iVar18 = iVar3, DAT_004fcb44[iVar4 + 0xc09] == 0)) {\n                FUN_0003a054(iVar4);\n                iVar18 = extraout_r1;\n              }\n            }\n            iVar4 = iVar4 + 1;\n          } while (iVar4 != 4);\n          iVar4 = 0;\n          iVar18 = FUN_0001e29c(0,iVar18);\n          do {\n            if (((iVar18 != 0) && (iVar18 = FUN_000397a0(iVar4), iVar18 == 1)) &&\n               (DAT_004fcb44[iVar4 + 0xc09] == 0)) {\n              iVar18 = FUN_0001e0f0();\n              if (0 < iVar18) {\n                puVar20 = (uint *)(&DAT_00808ffc + iVar4 * 0x400 + iVar3);\n                iVar19 = 0;\n                do {\n                  puVar20 = puVar20 + 1;\n                  uVar13 = *puVar20;\n                  iVar6 = FUN_0001e130();\n                  iVar8 = iVar4 * 0x100 + iVar19;\n                  iVar19 = iVar19 + 1;\n                  if ((double)(longlong)(iVar6 << 3) * 0.98 < (double)(ulonglong)uVar13) {\n                    DAT_004fcb44[iVar8 + 0x805] = 0;\n                  }\n                  else {\n                    DAT_004fcb44[iVar8 + 0x805] = 1;\n                  }\n                } while (iVar18 != iVar19);\n              }\n              iVar18 = FUN_0001e0f0();\n              if (iVar18 < 1) {\nLAB_0003d01c:\n                FUN_0003962c(iVar4,2);\n              }\n              else {\n                iVar19 = 0;\n                piVar10 = DAT_004fcb44 + iVar4 * 0x100 + 0x804;\n                do {\n                  piVar10 = piVar10 + 1;\n                  iVar19 = iVar19 + *piVar10;\n                } while (DAT_004fcb44 + iVar18 + iVar4 * 0x100 + 0x804 != piVar10);\n                if (iVar19 == 0) goto LAB_0003d01c;\n              }\n              iVar18 = FUN_0001e0f0();\n              piVar10 = DAT_004fcb44;\n              if (iVar18 != 0) {\n                piVar17 = DAT_004fcb44 + iVar18 + iVar4 * 0x100;\n                piVar14 = DAT_004fcb44 + iVar4 * 0x100;\n                piVar11 = DAT_004fcb44 + iVar4 * 0x100 + 0x404;\n                do {\n                  piVar11 = piVar11 + 1;\n                  piVar14 = piVar14 + 1;\n                  *piVar14 = *piVar11;\n                } while (piVar14 != piVar17);\n              }\n              uVar13 = DAT_0007eb9c;\n              piVar10[iVar4 + 0x401] = 1;\n              if (3 < uVar13) {\n                snprintf((char *)&local_1038,0x800,\n                         \"Update freq result of high grade, chain = %d, grade_curr = %d.\\n\",iVar4,\n                         piVar10[iVar4 + 0xc05]);\n                FUN_0002e584(3,&local_1038,0);\n              }\n              fVar21 = (float)FUN_0003a828(iVar4,iVar3);\n              fVar22 = (float)DAT_004fcb44[iVar4 + 0xc0d];\n              if (fVar21 != fVar22 && fVar21 < fVar22 == (NAN(fVar21) || NAN(fVar22))) {\n                DAT_004fcb44[iVar4 + 0xc0d] = (int)fVar21;\n              }\n              iVar18 = FUN_0003bae4(iVar4);\n              if (iVar18 != 0) {\n                FUN_0003962c(iVar4,2);\n              }\n            }\n            iVar4 = iVar4 + 1;\n            if (iVar4 == 4) goto LAB_0003c8f8;\n            iVar18 = FUN_0001e29c(iVar4);\n          } while( true );\n        }\n        goto LAB_0003c6a4;\n      }\n      iVar18 = FUN_00036208();\n      FUN_0001ad08((float)(longlong)DAT_0007edd0,&local_1038,DAT_00482a70,\n                   *(undefined *)(*DAT_004fcb44 + 0x24));\n      if (iVar18 == 0) goto LAB_0003c8f8;\n    }\n    else {\n      if (DAT_0007eb9c < 4) goto LAB_0003c724;\n      local_1038._0_1_ = 'B';\n      local_1038._1_1_ = 'o';\n      local_1038._2_1_ = 'a';\n      local_1038._3_1_ = 'r';\n      uStack_1034._0_1_ = 'd';\n      uStack_1034._1_1_ = ' ';\n      uStack_1034._2_1_ = 'i';\n      uStack_1034._3_1_ = 'n';\n      uStack_1030._0_1_ = 'i';\n      uStack_1030._1_1_ = 't';\n      uStack_1030._2_1_ = ' ';\n      uStack_1030._3_1_ = 'f';\n      uStack_102c._0_1_ = 'a';\n      uStack_102c._1_1_ = 'i';\n      uStack_102c._2_1_ = 'l';\n      uStack_102c._3_1_ = 'e';\n      local_1028._0_1_ = 'd';\n      local_1028._1_1_ = ',';\n      local_1028._2_1_ = ' ';\n      local_1028._3_1_ = 'e';\n      local_1024._0_1_ = 'x';\n      local_1024._1_1_ = 'i';\n      local_1024._2_1_ = 't';\n      local_1024._3_1_ = '.';\n      local_1020._0_2_ = 10;\n      FUN_0002e584(3,&local_1038,0);\n    }\n    if (DAT_0007eb9c < 4) goto LAB_0003c724;\n    local_1038._0_1_ = 'P';\n    local_1038._1_1_ = 'a';\n    local_1038._2_1_ = 'r';\n    local_1038._3_1_ = 'a';\n    uStack_1034._0_1_ = 'l';\n    uStack_1034._1_1_ = 'l';\n    uStack_1034._2_1_ = 'e';\n    uStack_1034._3_1_ = 'l';\n    uStack_1030._0_1_ = ' ';\n    uStack_1030._1_1_ = 't';\n    uStack_1030._2_1_ = 'u';\n    uStack_1030._3_1_ = 'n';\n    uStack_102c._0_1_ = 'i';\n    uStack_102c._1_1_ = 'n';\n    uStack_102c._2_1_ = 'g';\n    uStack_102c._3_1_ = ' ';\n    local_1028._0_1_ = 'f';\n    local_1028._1_1_ = 'a';\n    local_1028._2_1_ = 'i';\n    local_1028._3_1_ = 'l';\n    local_1024._0_1_ = 'e';\n    local_1024._1_1_ = 'd';\n    local_1024._2_1_ = ',';\n    local_1024._3_1_ = ' ';\n    local_1020._0_1_ = 'e';\n    local_1020._1_1_ = 'x';\n    local_1020._2_1_ = 'i';\n    local_1020._3_1_ = 't';\n    local_101c._0_3_ = 0xa2e;\n    FUN_0002e584(3,&local_1038,0);\n  }\n  if (3 < DAT_0007eb9c) {\n    local_1038._0_1_ = 'D';\n    local_1038._1_1_ = 'u';\n    local_1038._2_1_ = 'm';\n    local_1038._3_1_ = 'p';\n    uStack_1034._0_1_ = ' ';\n    uStack_1034._1_1_ = 'f';\n    uStack_1034._2_1_ = 'r';\n    uStack_1034._3_1_ = 'e';\n    uStack_1030._0_1_ = 'q';\n    uStack_1030._1_1_ = ' ';\n    uStack_1030._2_1_ = 't';\n    uStack_1030._3_1_ = 'u';\n    uStack_102c._0_1_ = 'n';\n    uStack_102c._1_1_ = 'i';\n    uStack_102c._2_1_ = 'n';\n    uStack_102c._3_1_ = 'g';\n    local_1028._0_1_ = ' ';\n    local_1028._1_1_ = 'f';\n    local_1028._2_1_ = 'i';\n    local_1028._3_1_ = 'n';\n    local_1024._0_1_ = 'e';\n    local_1024._1_1_ = ' ';\n    local_1024._2_1_ = 'r';\n    local_1024._3_1_ = 'e';\n    local_1020._0_1_ = 's';\n    local_1020._1_1_ = 'u';\n    local_1020._2_1_ = 'l';\n    local_1020._3_1_ = 't';\n    local_101c._0_3_ = 0xa3a;\n    FUN_0002e584(3,&local_1038,0);\n  }\nLAB_0003c724:\n  FUN_0003bc48(0xff,DAT_004fcb44 + 1);\n  return iVar18;\n}\n\n",
    "FUN_0003d2b4": "\nchar * FUN_0003d2b4(char *param_1,char *param_2)\n\n{\n  size_t sVar1;\n  size_t sVar2;\n  char *__s;\n  \n  sVar1 = strlen(param_1);\n  sVar2 = strlen(param_2);\n  __s = (char *)malloc(sVar1 + sVar2);\n  sprintf(__s,param_1,param_2);\n  return __s;\n}\n\n",
    "FUN_0003d2f0": "\nundefined4 FUN_0003d2f0(undefined *param_1)\n\n{\n  *param_1 = 1;\n  return 0;\n}\n\n",
    "FUN_0003d300": "\nundefined4 FUN_0003d300(undefined *param_1)\n\n{\n  *param_1 = 0;\n  return 0;\n}\n\n",
    "FUN_0003d320": "\nchar * FUN_0003d320(char *param_1,undefined *param_2)\n\n{\n  int iVar1;\n  size_t sVar2;\n  char *__s;\n  \n  iVar1 = strcasecmp(param_1,\"yes\");\n  if ((iVar1 == 0) || (iVar1 = strcasecmp(param_1,\"true\"), iVar1 == 0)) {\n    *param_2 = 1;\n    return (char *)0x0;\n  }\n  iVar1 = strcasecmp(param_1,\"no\");\n  if ((iVar1 != 0) && (iVar1 = strcasecmp(param_1,\"false\"), iVar1 != 0)) {\n    sVar2 = strlen(param_1);\n    __s = (char *)malloc(sVar2 + 0x16);\n    sprintf(__s,\"Invalid argument \\'%s\\'\",param_1);\n    return __s;\n  }\n  *param_2 = 0;\n  return (char *)0x0;\n}\n\n",
    "FUN_0003d3b4": "\nvoid FUN_0003d3b4(undefined4 param_1,byte *param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = FUN_0003d320();\n  if (iVar1 == 0) {\n    *param_2 = *param_2 ^ 1;\n  }\n  return;\n}\n\n",
    "FUN_0003d3d4": "\nundefined4 FUN_0003d3d4(undefined4 param_1,undefined4 *param_2)\n\n{\n  *param_2 = param_1;\n  return 0;\n}\n\n",
    "FUN_0003d3e0": "\nvoid FUN_0003d3e0(char *param_1,float *param_2)\n\n{\n  int *piVar1;\n  float fVar2;\n  char *local_14;\n  \n  piVar1 = __errno_location();\n  *piVar1 = 0;\n  fVar2 = strtof(param_1,&local_14);\n  *param_2 = fVar2;\n  if ((*local_14 == '\\0') && (*param_1 != '\\0')) {\n    if (*piVar1 != 0) {\n      FUN_0003d2b4(\"\\'%s\\' is out of range\",param_1);\n      return;\n    }\n  }\n  else {\n    FUN_0003d2b4(\"\\'%s\\' is not a number\",param_1);\n  }\n  return;\n}\n\n",
    "FUN_0003d468": "\nvoid FUN_0003d468(char *param_1,long *param_2)\n\n{\n  int *piVar1;\n  long lVar2;\n  char *local_14;\n  \n  piVar1 = __errno_location();\n  *piVar1 = 0;\n  lVar2 = strtol(param_1,&local_14,0);\n  *param_2 = lVar2;\n  if ((*local_14 == '\\0') && (*param_1 != '\\0')) {\n    if (*piVar1 != 0) {\n      FUN_0003d2b4(\"\\'%s\\' is out of range\",param_1);\n      return;\n    }\n  }\n  else {\n    FUN_0003d2b4(\"\\'%s\\' is not a number\",param_1);\n  }\n  return;\n}\n\n",
    "FUN_0003d4f0": "\nvoid FUN_0003d4f0(undefined4 param_1,undefined4 *param_2)\n\n{\n  int iVar1;\n  undefined4 uStack_c;\n  \n  iVar1 = FUN_0003d468(param_1,&uStack_c);\n  if (iVar1 == 0) {\n    *param_2 = uStack_c;\n  }\n  return;\n}\n\n",
    "FUN_0003d518": "\nvoid FUN_0003d518(undefined4 param_1,int *param_2)\n\n{\n  int iVar1;\n  int local_14 [2];\n  \n  iVar1 = FUN_0003d468(param_1,local_14);\n  if (iVar1 == 0) {\n    if (local_14[0] < 0) {\n      FUN_0003d2b4(\"\\'%s\\' is negative\",param_1);\n      return;\n    }\n    *param_2 = local_14[0];\n  }\n  return;\n}\n\n",
    "FUN_0003d568": "\nvoid FUN_0003d568(undefined4 param_1,int *param_2)\n\n{\n  int iVar1;\n  int local_14 [2];\n  \n  iVar1 = FUN_0003d468(param_1,local_14);\n  if (iVar1 == 0) {\n    *param_2 = local_14[0];\n    if (local_14[0] < 0) {\n      FUN_0003d2b4(\"\\'%s\\' is negative\",param_1);\n      return;\n    }\n  }\n  return;\n}\n\n",
    "FUN_0003d5d0": "\nvoid FUN_0003d5d0(char *param_1)\n\n{\n  puts(param_1);\n  fflush(stdout);\n                    /* WARNING: Subroutine does not return */\n  exit(0);\n}\n\n",
    "FUN_0003d678": "\nvoid FUN_0003d678(undefined *param_1,char **param_2)\n\n{\n  size_t __n;\n  \n  __n = strlen(*param_2);\n  *param_1 = 0x22;\n  if (0x4e < __n) {\n    strncpy(param_1 + 1,*param_2,0x4e);\n    param_1[0x4f] = 0x22;\n    return;\n  }\n  strncpy(param_1 + 1,*param_2,__n);\n  param_1[__n + 1] = 0x22;\n  if (__n != 0x4e) {\n    param_1[__n + 2] = 0;\n  }\n  return;\n}\n\n",
    "FUN_0003d754": "\nchar * FUN_0003d754(uint *param_1,size_t *param_2)\n\n{\n  size_t sVar1;\n  char *__s;\n  int iVar2;\n  int *piVar3;\n  uint uVar4;\n  \n  *param_1 = 0;\n  if (DAT_0099ee24 == 0) {\nLAB_0003d7ec:\n    __s = (char *)0x0;\n  }\n  else {\n    piVar3 = DAT_0099ee1c;\n    if (DAT_0099ee1c[1] == 8) {\n      iVar2 = 0x1c;\n      uVar4 = 1;\n      do {\n        *param_1 = uVar4;\n        if (DAT_0099ee24 <= uVar4) goto LAB_0003d7ec;\n        piVar3 = (int *)((int)DAT_0099ee1c + iVar2);\n        iVar2 = iVar2 + 0x1c;\n        uVar4 = uVar4 + 1;\n      } while (piVar3[1] == 8);\n    }\n    __s = (char *)(*piVar3 + 1);\n    sVar1 = strcspn(__s,\"|= \");\n    *param_2 = sVar1;\n  }\n  return __s;\n}\n\n",
    "FUN_0003d7f4": "\nchar * FUN_0003d7f4(int param_1,size_t *param_2)\n\n{\n  byte bVar1;\n  size_t sVar2;\n  char *__s;\n  \n  bVar1 = *(byte *)(param_1 + *param_2);\n  if ((bVar1 & 0xdf) == 0 || bVar1 == 0x3d) {\n    __s = (char *)0x0;\n  }\n  else {\n    __s = (char *)(param_1 + *param_2 + 2);\n    sVar2 = strcspn(__s,\"|= \");\n    *param_2 = sVar2;\n  }\n  return __s;\n}\n\n",
    "FUN_0003d83c": "\nchar * FUN_0003d83c(int param_1,uint *param_2,size_t *param_3)\n\n{\n  char *pcVar1;\n  size_t sVar2;\n  int *piVar3;\n  uint uVar4;\n  \n  uVar4 = *param_2;\n  if (uVar4 < DAT_0099ee24) {\n    do {\n      piVar3 = (int *)(DAT_0099ee1c + uVar4 * 0x1c);\n      if (piVar3[1] != 8) {\n        if (param_1 == 0) {\n          pcVar1 = (char *)(*piVar3 + 1);\n          sVar2 = strcspn(pcVar1,\"|= \");\n          *param_3 = sVar2;\n          return pcVar1;\n        }\n        pcVar1 = (char *)FUN_0003d7f4(param_1,param_3);\n        if (pcVar1 != (char *)0x0) {\n          return pcVar1;\n        }\n        uVar4 = *param_2;\n        param_1 = 0;\n      }\n      uVar4 = uVar4 + 1;\n      *param_2 = uVar4;\n    } while (uVar4 < DAT_0099ee24);\n  }\n  return (char *)0x0;\n}\n\n",
    "FUN_0003d8f4": "\nvoid FUN_0003d8f4(char **param_1)\n\n{\n  size_t sVar1;\n  undefined4 *puVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  char *pcVar5;\n  undefined4 uVar6;\n  char *in_r12;\n  undefined4 *puVar7;\n  bool bVar8;\n  size_t local_1c;\n  \n  pcVar5 = param_1[1];\n  bVar8 = (char *)0x3 < pcVar5;\n  if (pcVar5 != (char *)0x4) {\n    bVar8 = pcVar5 != (char *)0x1;\n  }\n  if (!bVar8 || (pcVar5 == (char *)0x4 || pcVar5 == (char *)0x2)) {\n    if (param_1[6] != (char *)0x0) {\n      if (**param_1 == '-') {\n        pcVar5 = *param_1 + 1;\n        local_1c = strcspn(pcVar5,\"|= \");\n        while (*pcVar5 == '-') {\n          sVar1 = local_1c;\n          if (local_1c == 1) goto LAB_0003da28;\n          in_r12 = param_1[1];\n          DAT_0099ee14 = DAT_0099ee14 + 1;\nLAB_0003d98c:\n          if ((in_r12 == (char *)0x1) &&\n             (sVar1 = local_1c, pcVar5[local_1c] == '=' || pcVar5[local_1c] == ' '))\n          goto LAB_0003da0c;\n          pcVar5 = (char *)FUN_0003d7f4(pcVar5,&local_1c);\n          if (pcVar5 == (char *)0x0) {\n            return;\n          }\n        }\n        if (local_1c == 1) {\n          in_r12 = param_1[1];\n          DAT_0099ee18 = DAT_0099ee18 + 1;\n          if (((uint)(in_r12 + -2) & 0xfffffffd) == 0) {\n            iRam0099ee10 = iRam0099ee10 + 1;\n          }\n          goto LAB_0003d98c;\n        }\n        pcVar5 = pcVar5 + -1;\n        sVar1 = errx(1,\"Option %s: invalid short option \\'%.*s\\'\",*param_1,local_1c + 1,pcVar5);\nLAB_0003da0c:\n        sVar1 = errx(in_r12,\"Option %s: does not take arguments \\'%s\\'\",*param_1,pcVar5 + sVar1 + 1)\n        ;\nLAB_0003da28:\n        errx(sVar1,\"Option %s: invalid long option \\'--\\'\",*param_1);\n      }\n      errx(1,\"Option %s: does not begin with \\'-\\'\");\n    }\n    errx(1,\"Option %s: description cannot be NULL\");\n  }\n  puVar2 = (undefined4 *)errx(1,\"Option %s: unknown entry type %u\");\n  DAT_0099ee1c = realloc(DAT_0099ee1c,(DAT_0099ee24 + 1) * 0x1c);\n  uVar3 = puVar2[1];\n  uVar4 = puVar2[2];\n  uVar6 = puVar2[3];\n  puVar7 = (undefined4 *)((int)DAT_0099ee1c + DAT_0099ee24 * 0x1c);\n  DAT_0099ee24 = DAT_0099ee24 + 1;\n  *puVar7 = *puVar2;\n  puVar7[1] = uVar3;\n  puVar7[2] = uVar4;\n  puVar7[3] = uVar6;\n  uVar3 = puVar2[5];\n  uVar4 = puVar2[6];\n  puVar7[4] = puVar2[4];\n  puVar7[5] = uVar3;\n  puVar7[6] = uVar4;\n  return;\n}\n\n",
    "FUN_0003da68": "\nvoid FUN_0003da68(undefined4 *param_1)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 *puVar4;\n  \n  DAT_0099ee1c = realloc(DAT_0099ee1c,(DAT_0099ee24 + 1) * 0x1c);\n  uVar1 = param_1[1];\n  uVar2 = param_1[2];\n  uVar3 = param_1[3];\n  puVar4 = (undefined4 *)((int)DAT_0099ee1c + DAT_0099ee24 * 0x1c);\n  DAT_0099ee24 = DAT_0099ee24 + 1;\n  *puVar4 = *param_1;\n  puVar4[1] = uVar1;\n  puVar4[2] = uVar2;\n  puVar4[3] = uVar3;\n  uVar1 = param_1[5];\n  uVar2 = param_1[6];\n  puVar4[4] = param_1[4];\n  puVar4[5] = uVar1;\n  puVar4[6] = uVar2;\n  return;\n}\n\n",
    "FUN_0003dacc": "\nchar * FUN_0003dacc(undefined4 param_1,int *param_2)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)FUN_0003d754();\n  while( true ) {\n    if (pcVar1 == (char *)0x0) {\n      return (char *)0x0;\n    }\n    if (*pcVar1 == '-') break;\n    pcVar1 = (char *)FUN_0003d83c(pcVar1,param_1,param_2);\n  }\n  *param_2 = *param_2 + -1;\n  return pcVar1 + 1;\n}\n\n",
    "FUN_0003db24": "\nchar * FUN_0003db24(undefined4 param_1,undefined4 param_2,int *param_3)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)FUN_0003d83c();\n  while( true ) {\n    if (pcVar1 == (char *)0x0) {\n      return (char *)0x0;\n    }\n    if (*pcVar1 == '-') break;\n    pcVar1 = (char *)FUN_0003d83c(pcVar1,param_2,param_3);\n  }\n  *param_3 = *param_3 + -1;\n  return pcVar1 + 1;\n}\n\n",
    "FUN_0003db7c": "\nchar * FUN_0003db7c(undefined4 param_1)\n\n{\n  char *pcVar1;\n  undefined4 local_14 [2];\n  \n  local_14[0] = 0;\n  pcVar1 = (char *)FUN_0003d754(param_1,local_14);\n  while( true ) {\n    if (pcVar1 == (char *)0x0) {\n      return (char *)0x0;\n    }\n    if (*pcVar1 != '-') break;\n    pcVar1 = (char *)FUN_0003d83c(pcVar1,param_1,local_14);\n  }\n  return pcVar1;\n}\n\n",
    "FUN_0003dbdc": "\nchar * FUN_0003dbdc(undefined4 param_1,undefined4 param_2)\n\n{\n  char *pcVar1;\n  undefined4 local_14 [2];\n  \n  local_14[0] = 1;\n  pcVar1 = (char *)FUN_0003d83c(param_1,param_2,local_14);\n  while( true ) {\n    if (pcVar1 == (char *)0x0) {\n      return (char *)0x0;\n    }\n    if (*pcVar1 != '-') break;\n    pcVar1 = (char *)FUN_0003d83c(pcVar1,param_2,local_14);\n  }\n  return pcVar1;\n}\n\n",
    "FUN_0003dc3c": "\nvoid FUN_0003dc3c(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 undefined4 param_5,undefined4 param_6,undefined4 param_7)\n\n{\n  undefined4 local_24;\n  undefined4 local_20;\n  undefined4 local_1c;\n  undefined4 uStack_18;\n  undefined4 local_14;\n  undefined4 local_10;\n  undefined4 local_c;\n  \n  local_14 = param_5;\n  local_10 = param_6;\n  local_c = param_7;\n  local_24 = param_1;\n  local_20 = param_2;\n  local_1c = param_3;\n  uStack_18 = param_4;\n  FUN_0003d8f4(&local_24);\n  FUN_0003da68(&local_24);\n  return;\n}\n\n",
    "FUN_0003dc80": "\nvoid FUN_0003dc80(undefined4 *param_1,int param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 local_34;\n  undefined4 local_30;\n  undefined4 local_2c;\n  undefined4 local_28;\n  undefined4 local_24;\n  undefined4 local_20;\n  int local_1c;\n  \n  iVar1 = DAT_0099ee24;\n  if (param_2 == 0) {\n    iVar2 = param_1[1];\n    if (iVar2 == 0x10) {\n      return;\n    }\n  }\n  else {\n    local_34 = 0;\n    local_2c = 0;\n    local_28 = 0;\n    local_24 = 0;\n    local_20 = 0;\n    local_30 = 8;\n    local_1c = param_2;\n    FUN_0003da68(&local_34);\n    iVar2 = param_1[1];\n    if (iVar2 == 0x10) goto LAB_0003dd08;\n  }\n  do {\n    if (iVar2 == 8) {\n      FUN_0003dc80(*param_1,param_1[6]);\n    }\n    else {\n      FUN_0003d8f4(param_1);\n      FUN_0003da68(param_1);\n    }\n    iVar2 = param_1[8];\n    param_1 = param_1 + 7;\n  } while (iVar2 != 0x10);\n  if (param_2 == 0) {\n    return;\n  }\nLAB_0003dd08:\n  *(int *)(DAT_0099ee1c + iVar1 * 0x1c + 0x14) = DAT_0099ee24 - iVar1;\n  return;\n}\n\n",
    "FUN_0003dd54": "\nbool FUN_0003dd54(undefined4 param_1,undefined4 *param_2,undefined4 param_3)\n\n{\n  int iVar1;\n  undefined4 local_1c [2];\n  \n  DAT_0099ee20 = *param_2;\n  local_1c[0] = 0;\n  do {\n    iVar1 = FUN_0003dec0(param_1,param_2,local_1c,param_3);\n  } while (iVar1 == 1);\n  return iVar1 == 0;\n}\n\n",
    "FUN_0003ddb0": "\nvoid FUN_0003ddb0(void)\n\n{\n  free(DAT_0099ee1c);\n  DAT_0099ee1c = (void *)0x0;\n  return;\n}\n\n",
    "FUN_0003de88": "\nvoid FUN_0003de88(int *param_1,int param_2,int param_3)\n\n{\n  memmove((void *)(param_2 + param_3 * 4),(void *)(param_2 + param_3 * 4 + 4),\n          (*param_1 - param_3) * 4);\n  *param_1 = *param_1 + -1;\n  return;\n}\n\n",
    "FUN_0003dec0": "\n/* WARNING: Type propagation algorithm not settling */\n\nundefined4 FUN_0003dec0(undefined4 param_1,undefined4 *param_2,int *param_3,code *param_4)\n\n{\n  char cVar1;\n  char **ppcVar2;\n  char *pcVar3;\n  char *pcVar4;\n  void *__ptr;\n  int iVar5;\n  size_t sVar6;\n  int iVar7;\n  int iVar8;\n  char **ppcVar9;\n  size_t sVar10;\n  int iVar11;\n  char *local_38;\n  int local_30;\n  size_t local_2c [2];\n  \n  pcVar3 = getenv(\"POSIXLY_CORRECT\");\n  pcVar4 = (char *)param_2[1];\n  if (pcVar3 == (char *)0x0) {\n    if (pcVar4 == (char *)0x0) {\n      return 0;\n    }\n    if (*pcVar4 == '-') {\n      ppcVar9 = (char **)(param_2 + 1);\n      iVar8 = 1;\n    }\n    else {\n      iVar8 = 1;\n      ppcVar2 = (char **)(param_2 + 2);\n      do {\n        ppcVar9 = ppcVar2;\n        pcVar4 = *ppcVar9;\n        iVar8 = iVar8 + 1;\n        if (pcVar4 == (char *)0x0) {\n          return 0;\n        }\n        ppcVar2 = ppcVar9 + 1;\n      } while (*pcVar4 != '-');\n    }\n    cVar1 = pcVar4[1];\n  }\n  else {\n    ppcVar9 = (char **)(param_2 + 1);\n    if (pcVar4 == (char *)0x0) {\n      return 0;\n    }\n    if (*pcVar4 != '-') {\n      return 0;\n    }\n    cVar1 = pcVar4[1];\n    iVar8 = 1;\n  }\n  if (cVar1 == '-') {\n    if (pcVar4[2] == '\\0') {\n      FUN_0003de88(param_1,param_2,iVar8);\n      return 0;\n    }\n    if (*param_3 != 0) {\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"*offset == 0\",\"ccan/opt/parse.c\",0x3b,\"parse_one\");\n    }\n    pcVar4 = (char *)FUN_0003dacc(&local_30,local_2c);\n    sVar6 = local_2c[0];\n    while (pcVar4 != (char *)0x0) {\n      pcVar3 = *ppcVar9;\n      local_2c[0] = sVar6;\n      iVar5 = strncmp(pcVar3 + 2,pcVar4,sVar6);\n      if (iVar5 == 0) {\n        sVar10 = sVar6 + 2;\n        if (pcVar3[sVar10] == '=') {\n          iVar5 = local_30 * 0x1c;\n          pcVar3 = pcVar3 + sVar6 + 3;\n          local_38 = pcVar4 + -2;\n          iVar7 = DAT_0099ee1c + iVar5;\n          if (*(int *)(iVar7 + 4) == 1) {\n            local_2c[0] = sVar10;\n            if (pcVar3 != (char *)0x0) {\n              (*param_4)(\"%s: %.*s: %s\",*param_2,sVar10,local_38,\"doesn\\'t allow an argument\");\n              return 0xffffffff;\n            }\n            goto LAB_0003e170;\n          }\n          local_2c[0] = sVar10;\n          if (pcVar3 != (char *)0x0) goto LAB_0003dff8;\n        }\n        else {\n          if (pcVar3[sVar10] != '\\0') goto LAB_0003e120;\n          local_38 = pcVar4 + -2;\n          iVar7 = DAT_0099ee1c + local_30 * 0x1c;\n          local_2c[0] = sVar10;\n          if (*(int *)(iVar7 + 4) == 1) goto LAB_0003e170;\n        }\n        local_38 = pcVar4 + -2;\n        iVar5 = local_30 * 0x1c;\n        iVar11 = *param_3;\n        local_2c[0] = sVar10;\n        goto LAB_0003dfe0;\n      }\nLAB_0003e120:\n      pcVar4 = (char *)FUN_0003db24(pcVar4,&local_30,local_2c);\n      sVar6 = local_2c[0];\n    }\n  }\n  else {\n    local_38 = (char *)FUN_0003db7c(&local_30);\n    if (local_38 != (char *)0x0) {\n      iVar11 = *param_3 + 1;\n      if (*local_38 != (*ppcVar9)[iVar11]) {\n        do {\n          local_38 = (char *)FUN_0003dbdc(local_38,&local_30);\n          if (local_38 == (char *)0x0) goto LAB_0003e138;\n          iVar11 = *param_3 + 1;\n        } while ((*ppcVar9)[iVar11] != *local_38);\n      }\n      local_38 = local_38 + -1;\n      *param_3 = iVar11;\n      local_2c[0] = 2;\n      iVar5 = local_30 * 0x1c;\n      iVar7 = DAT_0099ee1c + iVar5;\n      if (*(int *)(iVar7 + 4) == 1) {\nLAB_0003e170:\n        pcVar3 = (char *)0x0;\n        __ptr = (void *)(**(code **)(iVar7 + 8))(*(undefined4 *)(iVar7 + 0x14));\n      }\n      else {\nLAB_0003dfe0:\n        if ((iVar11 == 0) || (pcVar3 = *ppcVar9 + iVar11 + 1, (*ppcVar9)[iVar11 + 1] == '\\0')) {\n          pcVar3 = (char *)param_2[iVar8 + 1];\n          if (pcVar3 == (char *)0x0) {\n            (*param_4)(\"%s: %.*s: %s\",*param_2,local_2c[0],local_38,\"requires an argument\");\n            return 0xffffffff;\n          }\n        }\n        else {\n          *param_3 = 0;\n        }\nLAB_0003dff8:\n        if (*(int *)(DAT_0099ee1c + iVar5 + 4) == 4) {\n          FUN_0003d3d4(pcVar3,*(undefined4 *)(DAT_0099ee1c + iVar5 + 0x14));\n        }\n        iVar5 = DAT_0099ee1c + local_30 * 0x1c;\n        __ptr = (void *)(**(code **)(iVar5 + 0xc))(pcVar3,*(undefined4 *)(iVar5 + 0x14));\n      }\n      if (__ptr != (void *)0x0) {\n        (*param_4)(\"%s: %.*s: %s\",*param_2,local_2c[0],local_38,__ptr);\n        free(__ptr);\n        return 0xffffffff;\n      }\n      if (*param_3 != 0) {\n        if ((*ppcVar9)[*param_3 + 1] != '\\0') {\n          return 1;\n        }\n        *param_3 = 0;\n      }\n      FUN_0003de88(param_1,param_2,iVar8);\n      if ((pcVar3 != (char *)0x0) && (*ppcVar9 == pcVar3)) {\n        FUN_0003de88(param_1,param_2,iVar8);\n      }\n      return 1;\n    }\n  }\nLAB_0003e138:\n  pcVar4 = *ppcVar9;\n  sVar6 = strlen(pcVar4);\n  (*param_4)(\"%s: %.*s: %s\",*param_2,sVar6,pcVar4,\"unrecognized option\");\n  return 0xffffffff;\n}\n\n",
    "FUN_0003e370": "\nchar * FUN_0003e370(char *param_1,char *param_2)\n\n{\n  size_t sVar1;\n  size_t sVar2;\n  size_t sVar3;\n  int iVar4;\n  char *pcVar5;\n  int iVar6;\n  int iVar7;\n  int iVar8;\n  char *__s;\n  undefined2 *__s_00;\n  undefined4 *puVar9;\n  char **ppcVar10;\n  char **ppcVar11;\n  char *pcVar12;\n  uint uVar13;\n  uint uVar14;\n  char *pcVar15;\n  bool bVar16;\n  undefined2 *puVar17;\n  char *pcVar18;\n  int local_7c [20];\n  undefined *local_2c;\n  \n  sVar1 = strlen(param_1);\n  uVar14 = DAT_0099ee24;\n  ppcVar11 = DAT_0099ee1c;\n  sVar1 = DAT_0099ee18 + 0x14 + sVar1;\n  if (param_2 == (char *)0x0) {\n    if (DAT_0099ee24 == 0) {\n      param_2 = \"\";\n      goto LAB_0003e460;\n    }\n    uVar13 = 0;\n    ppcVar10 = DAT_0099ee1c;\n    do {\n      uVar13 = uVar13 + 1;\n      if ((ppcVar10[2] == &UNK_0003d5f0) && (param_2 = ppcVar10[5], param_2 != (char *)0x0)) {\n        sVar2 = strlen(param_2);\n        sVar1 = sVar1 + sVar2;\n        goto LAB_0003e3cc;\n      }\n      ppcVar10 = ppcVar10 + 7;\n    } while (uVar13 != DAT_0099ee24);\n    param_2 = \"\";\n  }\n  else {\n    sVar2 = strlen(param_2);\n    sVar1 = sVar1 + sVar2;\n    ppcVar11 = DAT_0099ee1c;\n    if (uVar14 == 0) goto LAB_0003e460;\n  }\nLAB_0003e3cc:\n  uVar13 = 0;\n  do {\n    while( true ) {\n      pcVar15 = ppcVar11[6];\n      if (ppcVar11[1] != (char *)0x8) break;\n      uVar13 = uVar13 + 1;\n      sVar2 = strlen(pcVar15);\n      sVar1 = sVar2 + sVar1 + 3;\n      ppcVar11 = ppcVar11 + 7;\n      if (uVar14 <= uVar13) goto LAB_0003e460;\n    }\n    if (pcVar15 != &DAT_0099ee28) {\n      sVar2 = strlen(*ppcVar11);\n      sVar3 = strlen(pcVar15);\n      iVar4 = sVar2 + sVar1 + 6 + sVar3;\n      iVar8 = iVar4 + 0x76;\n      if (ppcVar11[4] == (char *)0x0) {\n        iVar8 = iVar4 + 0x15;\n      }\n      sVar1 = iVar8 + 1;\n    }\n    uVar13 = uVar13 + 1;\n    ppcVar11 = ppcVar11 + 7;\n  } while (uVar13 < uVar14);\nLAB_0003e460:\n  pcVar15 = (char *)malloc(sVar1);\n  if (pcVar15 != (char *)0x0) {\n    iVar4 = sprintf(pcVar15,\"Usage: %s\",param_1);\n    pcVar12 = pcVar15 + iVar4;\n    *(undefined **)(pcVar15 + iVar4) = &DAT_002d5b20;\n    pcVar5 = (char *)FUN_0003db7c(local_7c);\n    pcVar18 = pcVar12;\n    if (pcVar5 != (char *)0x0) {\n      iVar4 = 0;\n      do {\n        if (DAT_0099ee1c[local_7c[0] * 7 + 6] != &DAT_0099ee28) {\n          pcVar12[iVar4 + 3] = *pcVar5;\n          iVar4 = iVar4 + 1;\n        }\n        pcVar5 = (char *)FUN_0003dbdc(pcVar5,local_7c);\n      } while (pcVar5 != (char *)0x0);\n      if (iVar4 != 0) {\n        pcVar18 = pcVar12 + iVar4 + 4;\n        *(undefined2 *)(pcVar12 + iVar4 + 3) = 0x5d;\n      }\n    }\n    iVar4 = sprintf(pcVar18,\" %s\",param_2);\n    puVar17 = (undefined2 *)0x6a02c;\n    pcVar5 = pcVar18 + iVar4 + 1;\n    bVar16 = DAT_0099ee24 != 0;\n    *(undefined2 *)(pcVar18 + iVar4) = 10;\n    if (bVar16) {\n      iVar4 = 0;\n      uVar14 = 0;\n      pcVar18 = \"                    \";\n      do {\n        puVar9 = (undefined4 *)((int)DAT_0099ee1c + iVar4);\n        if ((undefined *)puVar9[6] != &DAT_0099ee28) {\n          if (puVar9[1] == 8) {\n            iVar8 = sprintf(pcVar5,\"%s:\\n\");\n            pcVar5 = pcVar5 + iVar8;\n          }\n          else {\n            iVar8 = sprintf(pcVar5,\"%s\",*puVar9);\n            puVar9 = (undefined4 *)(pcVar5 + iVar8);\n            if (*(int *)((int)DAT_0099ee1c + iVar4 + 4) == 2) {\n              __s = *(char **)((int)DAT_0099ee1c + iVar4);\n              pcVar12 = strchr(__s,0x20);\n              if ((pcVar12 == (char *)0x0) && (pcVar12 = strchr(__s,0x3d), pcVar12 == (char *)0x0))\n              {\n                iVar8 = iVar8 + 6;\n                *puVar9 = 0x72613c20;\n                *(undefined2 *)(puVar9 + 1) = 0x3e67;\n                *(undefined *)((int)puVar9 + 6) = 0;\n                puVar9 = (undefined4 *)(pcVar5 + iVar8);\n              }\n            }\n            iVar6 = sprintf((char *)puVar9,\"%.*s\");\n            iVar7 = sprintf(pcVar5 + iVar6 + iVar8,\"%s\",\n                            *(undefined4 *)((int)DAT_0099ee1c + iVar4 + 0x18),\n                            (int)DAT_0099ee1c + iVar4,puVar17,pcVar18);\n            iVar7 = iVar7 + iVar6 + iVar8;\n            __s_00 = (undefined2 *)(pcVar5 + iVar7);\n            if (*(int *)((int)DAT_0099ee1c + iVar4 + 0x10) != 0) {\n              local_2c = &DAT_002e2e2e;\n              (**(code **)((int)DAT_0099ee1c + iVar4 + 0x10))\n                        (local_7c,*(undefined4 *)((int)DAT_0099ee1c + iVar4 + 0x14));\n              iVar8 = sprintf((char *)__s_00,\" (default: %s)\",local_7c);\n              __s_00 = (undefined2 *)(pcVar5 + iVar8 + iVar7);\n            }\n            pcVar5 = (char *)((int)__s_00 + 1);\n            *__s_00 = *puVar17;\n          }\n        }\n        uVar14 = uVar14 + 1;\n        iVar4 = iVar4 + 0x1c;\n      } while (uVar14 < DAT_0099ee24);\n    }\n    *pcVar5 = '\\0';\n  }\n  return pcVar15;\n}\n\n",
    "FUN_0003e8c8": "\nuint FUN_0003e8c8(int param_1,uint param_2,int *param_3)\n\n{\n  byte bVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  int iVar7;\n  int iVar8;\n  int iVar9;\n  uint uVar10;\n  bool bVar11;\n  \n  iVar7 = 1;\n  uVar2 = 0;\n  iVar9 = 1;\n  uVar10 = 0xffffffff;\n  while (uVar6 = iVar9 + uVar2, uVar4 = uVar2, iVar9 + uVar2 < param_2) {\n    while (uVar5 = uVar6, bVar1 = *(byte *)(param_1 + uVar10 + iVar9),\n          *(byte *)(param_1 + uVar5) < bVar1) {\n      iVar9 = 1;\n      iVar7 = uVar5 - uVar10;\n      uVar6 = uVar5 + 1;\n      uVar4 = uVar5;\n      if (param_2 <= uVar5 + 1) goto LAB_0003e918;\n    }\n    if (*(byte *)(param_1 + uVar5) == bVar1) {\n      bVar11 = iVar9 == iVar7;\n      iVar9 = iVar9 + 1;\n      uVar2 = uVar4;\n      if (bVar11) {\n        iVar9 = 1;\n        uVar2 = uVar5;\n      }\n    }\n    else {\n      iVar7 = 1;\n      uVar2 = uVar4 + 1;\n      iVar9 = iVar7;\n      uVar10 = uVar4;\n    }\n  }\nLAB_0003e918:\n  iVar8 = 1;\n  *param_3 = iVar7;\n  uVar2 = 0;\n  uVar6 = 0xffffffff;\n  iVar9 = 1;\n  while (uVar4 = iVar9 + uVar2, uVar5 = uVar2, iVar9 + uVar2 < param_2) {\n    while (uVar3 = uVar4, bVar1 = *(byte *)(param_1 + uVar6 + iVar9),\n          bVar1 < *(byte *)(param_1 + uVar3)) {\n      iVar9 = 1;\n      iVar8 = uVar3 - uVar6;\n      uVar4 = uVar3 + 1;\n      uVar5 = uVar3;\n      if (param_2 <= uVar3 + 1) goto LAB_0003e968;\n    }\n    if (*(byte *)(param_1 + uVar3) == bVar1) {\n      bVar11 = iVar9 == iVar8;\n      iVar9 = iVar9 + 1;\n      uVar2 = uVar5;\n      if (bVar11) {\n        iVar9 = 1;\n        uVar2 = uVar3;\n      }\n    }\n    else {\n      iVar8 = 1;\n      uVar2 = uVar5 + 1;\n      uVar6 = uVar5;\n      iVar9 = iVar8;\n    }\n  }\nLAB_0003e968:\n  uVar2 = uVar10 + 1;\n  if (uVar10 + 1 <= uVar6 + 1) {\n    *param_3 = iVar8;\n    uVar2 = uVar6 + 1;\n  }\n  return uVar2;\n}\n\n",
    "FUN_0003e9d8": "\nint FUN_0003e9d8(int param_1,int param_2,char *param_3,uint param_4)\n\n{\n  uint uVar1;\n  int iVar2;\n  int iVar3;\n  uint __n;\n  byte *pbVar4;\n  uint uVar5;\n  uint uVar6;\n  uint *puVar7;\n  uint uVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  char *pcVar12;\n  char *pcVar13;\n  bool bVar14;\n  uint local_42c;\n  uint local_428 [257];\n  \n  uVar11 = param_4 - 1;\n  if (param_4 < 3) {\n    local_42c = 1;\n    __n = uVar11;\n  }\n  else {\n    __n = FUN_0003e8c8(param_3,param_4,&local_42c);\n  }\n  uVar9 = local_42c;\n  puVar7 = &local_42c;\n  do {\n    puVar7 = puVar7 + 1;\n    *puVar7 = param_4;\n  } while (puVar7 != local_428 + 0xff);\n  if (param_4 != 0) {\n    pbVar4 = (byte *)(param_3 + -1);\n    uVar8 = uVar11;\n    do {\n      pbVar4 = pbVar4 + 1;\n      local_428[*pbVar4] = uVar8;\n      bVar14 = uVar8 != 0;\n      uVar8 = uVar8 - 1;\n    } while (bVar14);\n  }\n  iVar2 = memcmp(param_3,param_3 + local_42c,__n);\n  if (iVar2 == 0) {\n    uVar6 = __n - 1;\n    uVar8 = 0;\n    uVar10 = 0;\n    do {\n      while( true ) {\n        uVar5 = local_428[*(byte *)(param_1 + uVar8 + uVar11)];\n        if (uVar5 == 0) break;\n        if (uVar10 != 0 && uVar5 < uVar9) {\n          uVar5 = param_4 - uVar9;\n        }\n        uVar8 = uVar8 + uVar5;\nLAB_0003eab8:\n        uVar10 = 0;\n        if (param_2 - param_4 < uVar8) {\n          return 0;\n        }\n      }\n      uVar5 = __n;\n      if (__n < uVar10) {\n        uVar5 = uVar10;\n      }\n      if (uVar5 < uVar11) {\n        pcVar13 = param_3 + uVar5;\n        pcVar12 = (char *)(param_1 + uVar5 + uVar8);\n        if (*(char *)(param_1 + uVar5 + uVar8) == param_3[uVar5]) {\n          do {\n            uVar5 = uVar5 + 1;\n            if (uVar11 <= uVar5) goto LAB_0003eb30;\n            pcVar13 = pcVar13 + 1;\n            pcVar12 = pcVar12 + 1;\n          } while (*pcVar13 == *pcVar12);\n        }\n        uVar8 = uVar5 + (1 - __n) + uVar8;\n        goto LAB_0003eab8;\n      }\nLAB_0003eb30:\n      uVar5 = __n;\n      if ((uVar10 < __n) &&\n         (pcVar12 = (char *)(param_1 + uVar6 + uVar8),\n         param_3[uVar6] == *(char *)(param_1 + uVar6 + uVar8))) {\n        pcVar13 = param_3 + uVar6;\n        uVar1 = uVar6;\n        do {\n          uVar5 = uVar1;\n          if (uVar5 - 1 == uVar10 - 1) break;\n          pcVar13 = pcVar13 + -1;\n          pcVar12 = pcVar12 + -1;\n          uVar1 = uVar5 - 1;\n        } while (*pcVar13 == *pcVar12);\n      }\n      if (uVar5 < uVar10 + 1) {\n        return param_1 + uVar8;\n      }\n      uVar8 = uVar8 + uVar9;\n      uVar10 = param_4 - uVar9;\n    } while (uVar8 <= param_2 - param_4);\n  }\n  else {\n    iVar2 = __n - 1;\n    uVar9 = param_4 - __n;\n    if (param_4 - __n < __n) {\n      uVar9 = __n;\n    }\n    uVar8 = 0;\n    do {\n      iVar3 = param_1 + uVar8;\n      uVar10 = local_428[*(byte *)(iVar3 + uVar11)];\n      if (local_428[*(byte *)(iVar3 + uVar11)] == 0) {\n        if (uVar11 <= __n) {\nLAB_0003ec6c:\n          if (iVar2 == -1) {\n            return iVar3;\n          }\n          pcVar13 = (char *)(param_1 + iVar2 + uVar8);\n          pcVar12 = param_3 + iVar2;\n          uVar10 = uVar9 + 1;\n          if (*(char *)(param_1 + iVar2 + uVar8) == param_3[iVar2]) {\n            do {\n              if (pcVar12 == param_3) {\n                return iVar3;\n              }\n              pcVar12 = pcVar12 + -1;\n              pcVar13 = pcVar13 + -1;\n            } while (*pcVar12 == *pcVar13);\n          }\n          goto LAB_0003ecb0;\n        }\n        pcVar13 = (char *)(param_1 + __n + uVar8);\n        uVar10 = __n;\n        pcVar12 = param_3 + __n;\n        if (*(char *)(param_1 + __n + uVar8) == param_3[__n]) {\n          do {\n            uVar10 = uVar10 + 1;\n            if (uVar11 <= uVar10) goto LAB_0003ec6c;\n            pcVar12 = pcVar12 + 1;\n            pcVar13 = pcVar13 + 1;\n          } while (*pcVar12 == *pcVar13);\n        }\n        uVar8 = uVar10 + (1 - __n) + uVar8;\n      }\n      else {\nLAB_0003ecb0:\n        uVar8 = uVar8 + uVar10;\n      }\n    } while (uVar8 <= param_2 - param_4);\n  }\n  return 0;\n}\n\n",
    "FUN_0003eff0": "\nundefined4 FUN_0003eff0(uint param_1,int param_2)\n\n{\n  char *pcVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  uint uVar5;\n  int iVar6;\n  uint uVar7;\n  int iVar8;\n  int iVar9;\n  undefined8 *puVar10;\n  int iVar11;\n  double dVar12;\n  double dVar13;\n  double dVar14;\n  double dVar15;\n  double dVar16;\n  double dVar17;\n  undefined8 uVar18;\n  char acStack_30c0 [128];\n  undefined8 local_3040;\n  double adStack_2840 [256];\n  double adStack_2040 [1024];\n  \n  memset(adStack_2040,0,0x2000);\n  pcVar1 = (char *)FUN_0001e0c0();\n  iVar2 = strcmp(pcVar1,\"BHB28601\");\n  if (iVar2 != 0) {\n    pcVar1 = (char *)FUN_0001e0c0();\n    iVar2 = strcmp(pcVar1,\"BHB28701\");\n    if (iVar2 != 0) {\n      iVar2 = FUN_0001e0f0();\n      if (iVar2 != 0) {\n        iVar6 = 0;\n        puVar10 = &local_3040;\n        iVar11 = 0;\n        do {\n          iVar9 = iVar11 + 1;\n          iVar11 = FUN_00014ed0(iVar11);\n          if (iVar11 == 0) {\n            FUN_0005146c(param_1 & 0xff,iVar6);\n            usleep(5000);\n            FUN_00051508(param_1 & 0xff,iVar6);\n            usleep(10000);\n            *puVar10 = 0;\n          }\n          iVar6 = iVar6 + param_2;\n          puVar10 = puVar10 + 1;\n          iVar11 = iVar9;\n        } while (iVar2 != iVar9);\n      }\n      usleep(100000);\n      iVar2 = FUN_0001e0e0();\n      if (iVar2 != 0) {\n        iVar11 = 0;\n        do {\n          iVar6 = FUN_0001e100();\n          if (iVar6 != 0) {\n            iVar9 = 0;\n            do {\n              while( true ) {\n                iVar3 = FUN_0001e100();\n                iVar4 = iVar11 * iVar3 + iVar9;\n                iVar3 = FUN_00014ed0(iVar4);\n                if (iVar3 == 0) break;\nLAB_0003f608:\n                iVar9 = iVar9 + 1;\n                if (iVar6 == iVar9) goto LAB_0003f7c4;\n              }\n              iVar3 = iVar4 * param_2;\n              memset(acStack_30c0,0,0x80);\n              uVar7 = FUN_0002c06c(0xb0,iVar3,param_1);\n              if ((uVar7 & 4) == 0) {\n                if (DAT_004fcb48 == 0) {\n                  DAT_004fcb48 = FUN_000536f4(\"bmminer_adc\");\n                }\n                FUN_00054cb0(DAT_004fcb48,\"log/adc_sample.c\",0x10,\"check_adc_voltage\",0x11,0x8d,0x14\n                             ,\"chain::%d, asic::%d adc control vm sample not ready %08x.\\n\",param_1,\n                             iVar4,uVar7);\n                goto LAB_0003f608;\n              }\n              uVar7 = FUN_0002c06c(0xb4,iVar3,param_1);\n              uVar5 = FUN_0002c06c(0xb8,iVar3,param_1);\n              dVar12 = (double)((float)(longlong)(int)(uVar7 & 0xfff) * 0.0004882812) *\n                       1.188000082969666 - 1.188000082969666;\n              dVar13 = (double)((float)(longlong)(int)((uVar7 << 4) >> 0x14) * 0.0004882812) *\n                       1.188000082969666 - 1.188000082969666;\n              dVar14 = (double)((float)(longlong)(int)(uVar5 & 0xfff) * 0.0004882812) *\n                       1.188000082969666 - 1.188000082969666;\n              dVar15 = (double)((float)(longlong)(int)((uVar5 << 4) >> 0x14) * 0.0004882812) *\n                       1.188000082969666 - 1.188000082969666;\n              dVar17 = dVar12 + dVar13 + dVar14 + dVar15;\n              adStack_2040[iVar4 * 4 + 3] = dVar15;\n              adStack_2040[iVar4 * 4] = dVar12;\n              adStack_2040[iVar4 * 4 + 1] = dVar13;\n              dVar16 = dVar17 * 0.25;\n              adStack_2040[iVar4 * 4 + 2] = dVar14;\n              (&local_3040)[iVar4] = dVar16;\n              sprintf(acStack_30c0,\"chain %2d asic %03d adc:\\t%.2f\\t%.2f\\t%.2f\\t%.2f\\t%.2f\\t%.2f\",\n                      param_1,iVar4,dVar12,dVar13,dVar14,dVar15,dVar17,dVar16);\n              if (DAT_004fcb48 == 0) {\n                DAT_004fcb48 = FUN_000536f4(\"bmminer_adc\");\n              }\n              iVar9 = iVar9 + 1;\n              FUN_00054cb0(DAT_004fcb48,\"log/adc_sample.c\",0x10,\"check_adc_voltage\",0x11,0x9d,0x14,\n                           \"asic adc:%s\");\n            } while (iVar6 != iVar9);\n          }\nLAB_0003f7c4:\n          iVar11 = iVar11 + 1;\n        } while (iVar2 != iVar11);\n      }\n      iVar2 = FUN_0001e0e0();\n      if (iVar2 != 0) {\n        iVar11 = 0;\n        do {\n          iVar6 = sprintf(acStack_30c0,\"domain %2d:\",iVar11);\n          iVar9 = FUN_0001e100();\n          if (iVar9 != 0) {\n            iVar3 = 0;\n            do {\n              iVar4 = FUN_0001e100();\n              iVar4 = iVar11 * iVar4 + iVar3;\n              iVar3 = iVar3 + 1;\n              iVar4 = sprintf(acStack_30c0 + iVar6,\"\\t%.2f\",*(undefined4 *)(&local_3040 + iVar4),\n                              *(undefined4 *)((int)&local_3040 + iVar4 * 8 + 4));\n              iVar6 = iVar6 + iVar4;\n            } while (iVar9 != iVar3);\n          }\n          if (DAT_004fcb48 == 0) {\n            DAT_004fcb48 = FUN_000536f4(\"bmminer_adc\");\n          }\n          iVar11 = iVar11 + 1;\n          FUN_00054cb0(DAT_004fcb48,\"log/adc_sample.c\",0x10,\"check_adc_voltage\",0x11,0xa9,0x14,\n                       \"chain %2d %s\",param_1);\n        } while (iVar2 != iVar11);\n      }\n      goto LAB_0003f490;\n    }\n  }\n  uVar7 = param_1 & 0xff;\n  pthread_mutex_lock((pthread_mutex_t *)&DAT_0007f7ec);\n  FUN_00016330(1);\n  usleep(20000);\n  FUN_00051478(uVar7);\n  usleep(20000);\n  FUN_000514a4(uVar7);\n  usleep(20000);\n  uVar18 = FUN_0001e0e0();\n  iVar2 = (int)uVar18;\n  if (iVar2 != 0) {\n    iVar11 = 0;\n    do {\n      uVar18 = FUN_0001e100((int)uVar18,(int)((ulonglong)uVar18 >> 0x20));\n      iVar6 = (int)uVar18;\n      if (iVar6 != 0) {\n        iVar9 = 0;\n        do {\n          while( true ) {\n            iVar3 = FUN_0001e100((int)uVar18,(int)((ulonglong)uVar18 >> 0x20));\n            iVar8 = iVar11 * iVar3 + iVar9;\n            iVar3 = FUN_0001e160();\n            iVar3 = iVar8 * iVar3;\n            iVar4 = FUN_00014ed0(iVar8);\n            uVar18 = CONCAT44(iVar3,0xb0);\n            if (iVar4 == 0) break;\nLAB_0003f128:\n            iVar9 = iVar9 + 1;\n            if (iVar6 == iVar9) goto LAB_0003f240;\n          }\n          uVar5 = FUN_0002c06c(0xb0,iVar3,param_1);\n          if ((uVar5 & 4) == 0) {\n            if (DAT_004fcb48 == 0) {\n              DAT_004fcb48 = FUN_000536f4(\"bmminer_adc\",iVar3,param_1);\n            }\n            uVar18 = FUN_00054cb0(DAT_004fcb48,\"log/adc_sample.c\",0x10,\"get_adc_data_with_addr\",0x16\n                                  ,0x2d,0x14,\n                                  \"chain::%d, asic::%d adc control vm sample not ready %08x.\\n\",\n                                  param_1,iVar8,uVar5);\n            goto LAB_0003f128;\n          }\n          uVar5 = FUN_0002c06c(0xb4);\n          uVar18 = FUN_0002c06c(0xb8,iVar3,param_1);\n          iVar9 = iVar9 + 1;\n          dVar12 = (double)(ulonglong)(uVar5 & 0xfff) * 1.6 * 0.00048828125 - 1.6;\n          dVar13 = (double)(ulonglong)((uVar5 << 4) >> 0x14) * 1.6 * 0.00048828125 - 1.6;\n          dVar15 = (double)(ulonglong)(((uint)uVar18 << 4) >> 0x14) * 1.6 * 0.00048828125 - 1.6;\n          adStack_2040[iVar8 * 4] = dVar12;\n          dVar14 = (double)(ulonglong)((uint)uVar18 & 0xfff) * 1.6 * 0.00048828125 - 1.6;\n          adStack_2840[iVar8] = dVar15;\n          adStack_2040[iVar8 * 4 + 1] = dVar13 - dVar12;\n          adStack_2040[iVar8 * 4 + 2] = dVar14 - dVar13;\n          adStack_2040[iVar8 * 4 + 3] = dVar15 - dVar14;\n        } while (iVar6 != iVar9);\n      }\nLAB_0003f240:\n      iVar11 = iVar11 + 1;\n    } while (iVar2 != iVar11);\n  }\n  iVar2 = FUN_0001e0e0();\n  if (iVar2 != 0) {\n    iVar11 = 0;\n    do {\n      if (DAT_004fcb48 == 0) {\n        DAT_004fcb48 = FUN_000536f4(\"bmminer_adc\");\n      }\n      FUN_00054cb0(DAT_004fcb48,\"log/adc_sample.c\",0x10,\"dump_adc_voltage\",0x10,0x43,0x14,\n                   \"[C: %d], [D: %d]\",param_1);\n      iVar6 = FUN_0001e100();\n      if (iVar6 != 0) {\n        iVar9 = 0;\n        do {\n          memset(&local_3040,0,0x100);\n          iVar3 = FUN_0001e100();\n          iVar4 = iVar11 * iVar3 + iVar9;\n          iVar3 = FUN_0001e100();\n          iVar3 = FUN_0005f880(iVar9,iVar3 + -1);\n          if (iVar3 == 1) {\n            snprintf((char *)&local_3040,0x100,\n                     \"{I} %2d: d0 %.3f, d1 %.3f, d2 %.3f, d3 %.3f, sum = %f\\n\",iVar4,\n                     adStack_2040[iVar4 * 4],adStack_2040[iVar4 * 4 + 1],adStack_2040[iVar4 * 4 + 2]\n                     ,adStack_2040[iVar4 * 4 + 3],adStack_2840[iVar4]);\n          }\n          else {\n            snprintf((char *)&local_3040,0x100,\n                     \"{I} %2d: d0 %.3f, d1 %.3f, d2 %.3f, d3 %.3f, sum = %f\",iVar4,\n                     adStack_2040[iVar4 * 4],adStack_2040[iVar4 * 4 + 1],adStack_2040[iVar4 * 4 + 2]\n                     ,adStack_2040[iVar4 * 4 + 3],adStack_2840[iVar4]);\n          }\n          if (DAT_004fcb48 == 0) {\n            DAT_004fcb48 = FUN_000536f4(\"bmminer_adc\");\n          }\n          iVar9 = iVar9 + 1;\n          FUN_00054cb0(DAT_004fcb48,\"log/adc_sample.c\",0x10,\"dump_adc_voltage\",0x10,0x51,0x14,\"%s\",\n                       &local_3040);\n        } while (iVar6 != iVar9);\n      }\n      iVar11 = iVar11 + 1;\n    } while (iVar2 != iVar11);\n  }\n  FUN_000513fc(uVar7);\n  usleep(20000);\n  FUN_00016330(0);\n  usleep(20000);\n  pthread_mutex_unlock((pthread_mutex_t *)&DAT_0007f7ec);\nLAB_0003f490:\n  pthread_mutex_lock((pthread_mutex_t *)&DAT_004fcb4c);\n  memcpy(&DAT_004fcb68 + param_1 * 0x2000,adStack_2040,0x2000);\n  pthread_mutex_unlock((pthread_mutex_t *)&DAT_004fcb4c);\n  return 0;\n}\n\n",
    "FUN_0003f92c": "\nvoid FUN_0003f92c(void)\n\n{\n  return;\n}\n\n",
    "FUN_0003f970": "\ndouble FUN_0003f970(int param_1,int param_2)\n\n{\n  double *pdVar1;\n  int iVar2;\n  bool bVar3;\n  bool bVar4;\n  double dVar5;\n  double dVar6;\n  \n  bVar4 = SBORROW4(param_1,3);\n  iVar2 = param_1 + -3;\n  bVar3 = param_1 == 3;\n  if (param_1 < 4) {\n    bVar4 = SBORROW4(param_2,0xff);\n    iVar2 = param_2 + -0xff;\n    bVar3 = param_2 == 0xff;\n  }\n  if (!bVar3 && iVar2 < 0 == bVar4) {\n    return 0.0;\n  }\n  pthread_mutex_lock((pthread_mutex_t *)&DAT_004fcb4c);\n  dVar5 = 0.0;\n  pdVar1 = (double *)(&DAT_004fcb68 + (param_2 + param_1 * 0x100) * 0x20);\n  iVar2 = 4;\n  do {\n    dVar6 = *pdVar1;\n    pdVar1 = pdVar1 + 1;\n    iVar2 = iVar2 + -1;\n    dVar5 = dVar5 + dVar6;\n  } while (iVar2 != 0);\n  pthread_mutex_unlock((pthread_mutex_t *)&DAT_004fcb4c);\n  return dVar5;\n}\n\n",
    "FUN_0003f9ec": "\ndouble FUN_0003f9ec(int param_1,int param_2)\n\n{\n  double *pdVar1;\n  int iVar2;\n  bool bVar3;\n  bool bVar4;\n  double dVar5;\n  double dVar6;\n  \n  bVar4 = SBORROW4(param_1,3);\n  iVar2 = param_1 + -3;\n  bVar3 = param_1 == 3;\n  if (param_1 < 4) {\n    bVar4 = SBORROW4(param_2,0xff);\n    iVar2 = param_2 + -0xff;\n    bVar3 = param_2 == 0xff;\n  }\n  if (!bVar3 && iVar2 < 0 == bVar4) {\n    return 0.0;\n  }\n  pthread_mutex_lock((pthread_mutex_t *)&DAT_004fcb4c);\n  dVar6 = 0.0;\n  pdVar1 = (double *)(&DAT_004fcb68 + (param_2 + param_1 * 0x100) * 0x20);\n  iVar2 = 4;\n  do {\n    dVar5 = *pdVar1;\n    pdVar1 = pdVar1 + 1;\n    iVar2 = iVar2 + -1;\n    dVar6 = dVar6 + dVar5;\n  } while (iVar2 != 0);\n  pthread_mutex_unlock((pthread_mutex_t *)&DAT_004fcb4c);\n  return dVar6 * 0.25;\n}\n\n",
    "FUN_0003fa64": "\nundefined4 FUN_0003fa64(int param_1)\n\n{\n  int __fd;\n  int iVar1;\n  undefined4 uVar2;\n  undefined *puVar3;\n  undefined *puVar4;\n  undefined uStack_81f;\n  undefined auStack_81e [14];\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  \n  __fd = socket(2,1,0);\n  if (__fd < 0) {\n    local_810._0_1_ = 'e';\n    local_810._1_1_ = 'r';\n    local_810._2_1_ = 'r';\n    local_810._3_1_ = 'o';\n    uStack_80c._0_1_ = 'r';\n    uStack_80c._1_1_ = ' ';\n    uStack_80c._2_1_ = 's';\n    uStack_80c._3_1_ = 'o';\n    uStack_808 = CONCAT13(uStack_808._3_1_,0x6b63);\n    FUN_0002e584(0,&local_810);\n    uVar2 = 0xffffffff;\n  }\n  else {\n    iVar1 = ioctl(__fd,0x8927);\n    if (iVar1 < 0) {\n      local_810._0_1_ = 'e';\n      local_810._1_1_ = 'r';\n      local_810._2_1_ = 'r';\n      local_810._3_1_ = 'o';\n      uStack_80c._0_1_ = 'r';\n      uStack_80c._1_1_ = ' ';\n      uStack_80c._2_1_ = 'i';\n      uStack_80c._3_1_ = 'o';\n      uStack_808._0_1_ = 'c';\n      uStack_808._1_1_ = 't';\n      uStack_808._2_1_ = 'l';\n      uStack_808._3_1_ = '\\0';\n      FUN_0002e584(0,&local_810);\n      close(__fd);\n      uVar2 = 0xfffffffe;\n    }\n    else {\n      puVar3 = &uStack_81f;\n      puVar4 = (undefined *)(param_1 + -1);\n      do {\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n        *puVar4 = *puVar3;\n      } while (puVar4 != (undefined *)(param_1 + 5));\n      close(__fd);\n      uVar2 = 0;\n    }\n  }\n  return uVar2;\n}\n\n",
    "FUN_0003fb58": "\nvoid FUN_0003fb58(void)\n\n{\n  int iVar1;\n  bool bVar2;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  int iVar6;\n  uint local_82c;\n  undefined4 local_828;\n  undefined4 uStack_824;\n  undefined4 uStack_820;\n  undefined4 uStack_81c;\n  undefined4 local_818;\n  undefined4 uStack_814;\n  undefined2 uStack_810;\n  undefined local_80e;\n  \n  local_82c = 0;\n  memset(&DAT_00504b68,0,0x124);\n  FUN_00040314(2,&local_82c);\n  if (local_82c == 0) {\n    local_828._0_1_ = 'C';\n    local_828._1_1_ = 'a';\n    local_828._2_1_ = 'n';\n    local_828._3_1_ = 'n';\n    uStack_824._0_1_ = 'o';\n    uStack_824._1_1_ = 't';\n    uStack_824._2_1_ = ' ';\n    uStack_824._3_1_ = 'F';\n    uStack_820._0_1_ = 'i';\n    uStack_820._1_1_ = 'n';\n    uStack_820._2_1_ = 'd';\n    uStack_820._3_1_ = ' ';\n    uStack_81c._0_1_ = 'A';\n    uStack_81c._1_1_ = 'n';\n    uStack_81c._2_1_ = 'y';\n    uStack_81c._3_1_ = ' ';\n    local_818._0_1_ = 'P';\n    local_818._1_1_ = 'l';\n    local_818._2_1_ = 'u';\n    local_818._3_1_ = 'g';\n    uStack_814._0_1_ = ' ';\n    uStack_814._1_1_ = 'I';\n    uStack_814._2_1_ = 'n';\n    uStack_814._3_1_ = '!';\n    uStack_810 = 0xa0d;\n    local_80e = 0;\n    FUN_0002e584(0,&local_828,0);\n    return;\n  }\n  if ((int)local_82c < 0) {\n    local_82c = local_82c >> 0x18;\n    DAT_00504c8c = 1;\n    snprintf((char *)&local_828,0x800,\"HASH_ON_PLUG T9 = 0x%x\\n\",local_82c);\n    FUN_0002e584(2,&local_828,0);\n    if (local_82c == 0) {\n      return;\n    }\n    bVar2 = false;\n    iVar3 = 0;\n    iVar5 = DAT_00504b68;\n    do {\n      iVar6 = iVar5 * 0x48;\n      if ((local_82c & 1) != 0) {\n        *(int *)(&DAT_00504b6c + iVar6) = iVar3;\n        if (iVar3 == 1) {\n          *(undefined4 *)(&DAT_00504b74 + iVar6) = 2;\n          *(undefined4 *)(&DAT_00504b78 + iVar6) = 10;\n          *(undefined4 *)(&DAT_00504b7c + iVar6) = 0xb;\n          *(undefined4 *)(&DAT_00504b70 + iVar6) = 3;\n        }\n        else if (iVar3 == 0) {\n          *(undefined4 *)(&DAT_00504b74 + iVar6) = 1;\n          *(undefined4 *)(&DAT_00504b78 + iVar6) = 8;\n          *(undefined4 *)(&DAT_00504b7c + iVar6) = 9;\n          *(undefined4 *)(&DAT_00504b70 + iVar6) = 3;\n        }\n        else if (iVar3 == 2) {\n          *(undefined4 *)(&DAT_00504b74 + iVar6) = 3;\n          *(undefined4 *)(&DAT_00504b78 + iVar6) = 0xc;\n          *(undefined4 *)(&DAT_00504b7c + iVar6) = 0xd;\n          *(undefined4 *)(&DAT_00504b70 + iVar6) = 3;\n        }\n        iVar5 = iVar5 + 1;\n        bVar2 = true;\n      }\n      local_82c = local_82c >> 1;\n      iVar3 = iVar3 + 1;\n    } while (local_82c != 0);\n  }\n  else {\n    local_82c = local_82c & 0xffff;\n    DAT_00504c8c = 0;\n    snprintf((char *)&local_828,0x800,\"HASH_ON_PLUG V9 = 0x%x\\n\",local_82c);\n    FUN_0002e584(2,&local_828,0);\n    if (local_82c == 0) {\n      return;\n    }\n    bVar2 = false;\n    iVar6 = 0;\n    iVar3 = DAT_00504b68;\n    do {\n      iVar1 = iVar3 * 0x48;\n      iVar5 = iVar3;\n      if ((local_82c & 1) != 0) {\n        iVar4 = *(int *)(&DAT_00504b70 + iVar1);\n        bVar2 = true;\n        iVar5 = iVar3 + 1;\n        *(int *)(&DAT_00504b6c + iVar1) = iVar6;\n        *(int *)(&DAT_00504b70 + iVar1) = iVar4 + 1;\n        *(int *)(&DAT_00504b74 + (iVar4 + iVar3 * 0x12) * 4) = iVar6;\n      }\n      local_82c = local_82c >> 1;\n      iVar6 = iVar6 + 1;\n      iVar3 = iVar5;\n    } while (local_82c != 0);\n  }\n  if (bVar2) {\n    DAT_00504b68 = iVar5;\n  }\n  return;\n}\n\n",
    "FUN_0003fd74": "\nundefined4 FUN_0003fd74(void)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined4 local_818;\n  undefined4 uStack_814;\n  undefined4 uStack_810;\n  undefined4 uStack_80c;\n  undefined2 local_808;\n  \n  if (DAT_00504c90 == 0) {\n    iVar1 = FUN_00040228();\n    if (iVar1 == 0) {\n      iVar1 = FUN_0004044c();\n      if (iVar1 == 0) {\n        memset(&DAT_00504b68,0,0x124);\n        FUN_0003fb58();\n        DAT_00504c90 = 1;\n        FUN_0003fefc();\n        FUN_00042694();\n        FUN_000419d8();\n        return 0;\n      }\n      uVar2 = 0xfffffffe;\n      local_818._0_1_ = 'g';\n      local_818._1_1_ = 'p';\n      local_818._2_1_ = 'i';\n      local_818._3_1_ = 'o';\n      uStack_814._0_1_ = ' ';\n      uStack_814._1_1_ = 'i';\n      uStack_814._2_1_ = 'n';\n      uStack_814._3_1_ = 'i';\n      uStack_810._0_1_ = 't';\n      uStack_810._1_1_ = ' ';\n      uStack_810._2_1_ = 'f';\n      uStack_810._3_1_ = 'a';\n      uStack_80c._0_1_ = 'i';\n      uStack_80c._1_1_ = 'l';\n      uStack_80c._2_1_ = 'e';\n      uStack_80c._3_1_ = 'd';\n      local_808 = 10;\n      FUN_0002e584(0,&local_818,0);\n    }\n    else {\n      uVar2 = 0xffffffff;\n      local_818._0_1_ = 'f';\n      local_818._1_1_ = 'p';\n      local_818._2_1_ = 'g';\n      local_818._3_1_ = 'a';\n      uStack_814._0_1_ = ' ';\n      uStack_814._1_1_ = 'i';\n      uStack_814._2_1_ = 'n';\n      uStack_814._3_1_ = 'i';\n      uStack_810._0_1_ = 't';\n      uStack_810._1_1_ = ' ';\n      uStack_810._2_1_ = 'f';\n      uStack_810._3_1_ = 'a';\n      uStack_80c._0_1_ = 'i';\n      uStack_80c._1_1_ = 'l';\n      uStack_80c._2_1_ = 'e';\n      uStack_80c._3_1_ = 'd';\n      local_808 = 10;\n      FUN_0002e584(0,&local_818,0);\n    }\n  }\n  else {\n    uVar2 = 0;\n  }\n  return uVar2;\n}\n\n",
    "FUN_0003fe60": "\nvoid FUN_0003fe60(void)\n\n{\n  if (DAT_00504c90 == 0) {\n    return;\n  }\n  FUN_00041a38();\n  FUN_00040248();\n  FUN_0003ff04();\n  FUN_00042724();\n  FUN_00040454();\n  DAT_00504c90 = 0;\n  return;\n}\n\n",
    "FUN_0003fe98": "\nvoid FUN_0003fe98(void *param_1)\n\n{\n  if (param_1 == (void *)0x0) {\n    return;\n  }\n  FUN_0003fb58();\n  memcpy(param_1,&DAT_00504b68,0x124);\n  return;\n}\n\n",
    "FUN_0003fefc": "\nundefined4 FUN_0003fefc(void)\n\n{\n  return 0;\n}\n\n",
    "FUN_0003ff04": "\nvoid FUN_0003ff04(void)\n\n{\n  return;\n}\n\n",
    "FUN_0003ff08": "\nint FUN_0003ff08(uint param_1)\n\n{\n  int iVar1;\n  uint local_18;\n  uint local_14 [2];\n  \n  local_18 = 0;\n  iVar1 = 6;\n  FUN_00040314(0,local_14);\n  local_14[0] = local_14[0] & 0xffff;\n  do {\n    FUN_00040314(1,&local_18);\n    if ((local_18 << 0x15) >> 0x1d == param_1) {\n      if (local_14[0] == 0xb025) {\n        iVar1 = (local_18 & 0xff) * 0xf0;\n      }\n      else {\n        iVar1 = (local_18 & 0xff) * 0x78;\n      }\n      return iVar1;\n    }\n    usleep(10000);\n    iVar1 = iVar1 + -1;\n  } while (iVar1 != 0);\n  return -1;\n}\n\n",
    "FUN_0003ffa0": "\nint FUN_0003ffa0(int param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  \n  if (param_1 == 0) {\n    iVar1 = FUN_00040ed4(0x3ba,1);\n    return iVar1;\n  }\n  if (param_1 == 1) {\n    iVar1 = FUN_00040ed4(0x3bb);\n    return iVar1;\n  }\n  iVar1 = FUN_00040ed4(0x3ba,1);\n  iVar2 = FUN_00040ed4(0x3bb,1);\n  return iVar1 + iVar2;\n}\n\n",
    "FUN_00040038": "\nundefined4 FUN_00040038(void)\n\n{\n  undefined4 uVar1;\n  char acStack_818 [2052];\n  \n  DAT_00504c94 = open64(\"/dev/axi_fpga_dev\",2);\n  if (DAT_00504c94 < 0) {\n    snprintf(acStack_818,0x800,\"/dev/axi_fpga_dev open failed. fd = %d\\n\",DAT_00504c94);\n    FUN_0002e584(0,acStack_818);\n    uVar1 = 0xffffffff;\n  }\n  else {\n    DAT_00504c98 = mmap64((void *)0x0,0x1200,3,1,DAT_00504c94,0);\n    if (DAT_00504c98 == (void *)0x0) {\n      snprintf(acStack_818,0x800,\"mmap axi_fpga_addr failed. axi_fpga_addr = %p\\n\",0);\n      FUN_0002e584(0,acStack_818,0);\n      close(DAT_00504c94);\n      uVar1 = 0xfffffffe;\n    }\n    else {\n      DAT_00504c9c = open64(\"/dev/fpga_mem\",2);\n      if (DAT_00504c9c < 0) {\n        snprintf(acStack_818,0x800,\"/dev/fpga_mem open failed. fd_fpga_mem_hal = %d\\n\",DAT_00504c9c)\n        ;\n        FUN_0002e584(0,acStack_818);\n        perror(\"open\");\n        munmap(DAT_00504c98,0x1200);\n        close(DAT_00504c94);\n        uVar1 = 0xffffffff;\n      }\n      else {\n        DAT_00504ca0 = mmap64((void *)0x0,0x1000000,3,1,DAT_00504c9c,0);\n        if (DAT_00504ca0 == (void *)0x0) {\n          snprintf(acStack_818,0x800,\"mmap fpga_mem_addr_hal failed. fpga_mem_addr_hal = 0x%x\\n\",0);\n          FUN_0002e584(0,acStack_818,0);\n          munmap(DAT_00504c98,0x1200);\n          close(DAT_00504c94);\n          close(DAT_00504c9c);\n          uVar1 = 0xffffffff;\n        }\n        else {\n          snprintf(acStack_818,0x800,\"mmap fpga_mem_addr_hal = 0x%x\\n\",DAT_00504ca0);\n          FUN_0002e584(3,acStack_818,0);\n          uVar1 = 0;\n          DAT_00504ca4 = 1;\n        }\n      }\n    }\n  }\n  return uVar1;\n}\n\n",
    "FUN_00040228": "\nundefined4 FUN_00040228(void)\n\n{\n  undefined4 uVar1;\n  \n  if (DAT_00504ca4 != 0) {\n    return 0;\n  }\n  uVar1 = FUN_00040038();\n  return uVar1;\n}\n\n",
    "FUN_00040248": "\nvoid FUN_00040248(void)\n\n{\n  int iVar1;\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined4 uStack_7fc;\n  undefined4 local_7f8;\n  undefined4 uStack_7f4;\n  undefined4 uStack_7f0;\n  undefined4 uStack_7ec;\n  undefined2 local_7e8;\n  \n  if (DAT_00504ca4 == 0) {\n    return;\n  }\n  iVar1 = munmap(DAT_00504c98,0x1200);\n  if (iVar1 < 0) {\n    local_808._0_1_ = 'm';\n    local_808._1_1_ = 'u';\n    local_808._2_1_ = 'n';\n    local_808._3_1_ = 'm';\n    uStack_804._0_1_ = 'a';\n    uStack_804._1_1_ = 'p';\n    uStack_804._2_1_ = ' ';\n    uStack_804._3_1_ = 'f';\n    uStack_800._0_1_ = 'a';\n    uStack_800._1_1_ = 'i';\n    uStack_800._2_1_ = 'l';\n    uStack_800._3_1_ = 'e';\n    uStack_7fc._0_1_ = 'd';\n    uStack_7fc._1_1_ = '!';\n    uStack_7fc._2_1_ = '\\n';\n    uStack_7fc._3_1_ = '\\0';\n    FUN_0002e584(0,&local_808);\n  }\n  iVar1 = munmap(DAT_00504ca0,0x1000000);\n  if (iVar1 < 0) {\n    local_808._0_1_ = 'm';\n    local_808._1_1_ = 'u';\n    local_808._2_1_ = 'n';\n    local_808._3_1_ = 'm';\n    uStack_804._0_1_ = 'a';\n    uStack_804._1_1_ = 'p';\n    uStack_804._2_1_ = ' ';\n    uStack_804._3_1_ = 'f';\n    uStack_800._0_1_ = 'p';\n    uStack_800._1_1_ = 'g';\n    uStack_800._2_1_ = 'a';\n    uStack_800._3_1_ = '_';\n    uStack_7fc._0_1_ = 'm';\n    uStack_7fc._1_1_ = 'e';\n    uStack_7fc._2_1_ = 'm';\n    uStack_7fc._3_1_ = '_';\n    local_7f8._0_1_ = 'a';\n    local_7f8._1_1_ = 'd';\n    local_7f8._2_1_ = 'd';\n    local_7f8._3_1_ = 'r';\n    uStack_7f4._0_1_ = '_';\n    uStack_7f4._1_1_ = 'h';\n    uStack_7f4._2_1_ = 'a';\n    uStack_7f4._3_1_ = 'l';\n    uStack_7f0._0_1_ = ' ';\n    uStack_7f0._1_1_ = 'f';\n    uStack_7f0._2_1_ = 'a';\n    uStack_7f0._3_1_ = 'i';\n    uStack_7ec._0_1_ = 'l';\n    uStack_7ec._1_1_ = 'e';\n    uStack_7ec._2_1_ = 'd';\n    uStack_7ec._3_1_ = '!';\n    local_7e8 = 10;\n    FUN_0002e584(0,&local_808);\n  }\n  DAT_00504ca4 = 0;\n  close(DAT_00504c94);\n  close(DAT_00504c9c);\n  return;\n}\n\n",
    "FUN_00040314": "\nundefined4 FUN_00040314(int param_1,undefined4 *param_2)\n\n{\n  int iVar1;\n  \n  if ((DAT_00504ca4 == 0) && (iVar1 = FUN_00040038(), iVar1 != 0)) {\n    return 0xffffffff;\n  }\n  if (DAT_00504c8c == 0) {\n    iVar1 = *(int *)(&DAT_0007f130 + param_1 * 4);\n  }\n  else {\n    iVar1 = *(int *)(&DAT_0007ee48 + param_1 * 4);\n  }\n  *param_2 = *(undefined4 *)(DAT_00504c98 + iVar1 * 4);\n  return 0;\n}\n\n",
    "FUN_00040390": "\nundefined4 FUN_00040390(int param_1,undefined4 param_2)\n\n{\n  int iVar1;\n  \n  if ((DAT_00504ca4 == 0) && (iVar1 = FUN_00040038(), iVar1 != 0)) {\n    return 0xffffffff;\n  }\n  if (DAT_00504c8c == 0) {\n    iVar1 = *(int *)(&DAT_0007f130 + param_1 * 4);\n  }\n  else {\n    iVar1 = *(int *)(&DAT_0007ee48 + param_1 * 4);\n  }\n  *(undefined4 *)(DAT_00504c98 + iVar1 * 4) = param_2;\n  return 0;\n}\n\n",
    "FUN_00040408": "\nundefined4 FUN_00040408(void)\n\n{\n  int iVar1;\n  \n  if ((DAT_00504ca4 == 0) && (iVar1 = FUN_00040038(), iVar1 != 0)) {\n    return 0;\n  }\n  return DAT_00504ca0;\n}\n\n",
    "FUN_0004044c": "\nundefined4 FUN_0004044c(void)\n\n{\n  return 0;\n}\n\n",
    "FUN_00040454": "\nvoid FUN_00040454(void)\n\n{\n  return;\n}\n\n",
    "FUN_00040458": "\nundefined4 FUN_00040458(undefined4 param_1,int param_2)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined4 local_81c;\n  undefined local_818;\n  undefined uStack_817;\n  undefined2 uStack_816;\n  undefined local_814;\n  undefined uStack_813;\n  undefined2 uStack_812;\n  undefined2 uStack_810;\n  undefined local_80e;\n  undefined uStack_80c;\n  undefined uStack_80b;\n  undefined2 uStack_80a;\n  undefined uStack_808;\n  undefined uStack_807;\n  undefined2 uStack_806;\n  undefined uStack_804;\n  undefined uStack_803;\n  undefined2 uStack_802;\n  undefined uStack_800;\n  undefined uStack_7ff;\n  undefined2 uStack_7fe;\n  undefined2 uStack_7fc;\n  \n  local_81c = param_1;\n  if (param_2 == 0) {\n    local_818 = 'b';\n    uStack_817 = 'a';\n    uStack_816._0_1_ = 'd';\n    uStack_816._1_1_ = ' ';\n    local_814 = 'p';\n    uStack_813 = 'a';\n    uStack_812._0_1_ = 'r';\n    uStack_812._1_1_ = 'a';\n    uStack_810 = 0xa6d;\n    local_80e = '\\0';\n    FUN_0002e584(0,(pthread_attr_t *)&local_818,0);\n    uVar2 = 0xffffffff;\n  }\n  else {\n    if (DAT_00504ca8 == 0) {\n      pthread_mutex_init((pthread_mutex_t *)&DAT_00504cac,(pthread_mutexattr_t *)0x0);\n      DAT_00504cc4 = FUN_000432d0(&LAB_0004043c,0,0);\n      pthread_mutex_init((pthread_mutex_t *)&DAT_00504cc8,(pthread_mutexattr_t *)0x0);\n      DAT_00504ce0 = 1;\n      pthread_attr_init((pthread_attr_t *)&local_818);\n      pthread_attr_setstacksize((pthread_attr_t *)&local_818,0x200000);\n      pthread_create((pthread_t *)&DAT_00504ce4,(pthread_attr_t *)&local_818,FUN_00040d90,\n                     (void *)0x0);\n      DAT_00504ca8 = 1;\n    }\n    iVar1 = pthread_mutex_lock((pthread_mutex_t *)&DAT_00504cac);\n    if (iVar1 == 0) {\n      iVar1 = FUN_00043338(DAT_00504cc4,&local_81c);\n      if (iVar1 == 0) {\n        _local_814 = 0xffffffff;\n        _local_818 = param_2;\n        FUN_00043320(DAT_00504cc4,&local_81c,4,(pthread_attr_t *)&local_818,8);\n      }\n      pthread_mutex_unlock((pthread_mutex_t *)&DAT_00504cac);\n      uVar2 = 0;\n    }\n    else {\n      uStack_80c = ' ';\n      uStack_80b = 'g';\n      uStack_80a._0_1_ = 'p';\n      uStack_80a._1_1_ = 'i';\n      uStack_808 = 'o';\n      uStack_807 = ' ';\n      uStack_806._0_1_ = 'c';\n      uStack_806._1_1_ = 't';\n      uStack_804 = 'r';\n      uStack_803 = 'l';\n      uStack_802._0_1_ = ' ';\n      uStack_802._1_1_ = 'm';\n      uStack_800 = 'u';\n      uStack_7ff = 't';\n      uStack_7fe._0_1_ = 'e';\n      uStack_7fe._1_1_ = 'x';\n      uStack_7fc = 10;\n      FUN_0002e584(0,(pthread_attr_t *)&local_818);\n      uVar2 = 0xffffffff;\n    }\n  }\n  return uVar2;\n}\n\n",
    "FUN_000405cc": "\nundefined4 FUN_000405cc(undefined4 param_1,int param_2)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined4 local_814;\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined4 uStack_804;\n  undefined4 local_800;\n  undefined4 uStack_7fc;\n  undefined4 uStack_7f8;\n  undefined4 local_7f4;\n  undefined4 local_7f0;\n  undefined4 uStack_7ec;\n  undefined local_7e8;\n  \n  local_814 = param_1;\n  if (param_2 == 0) {\n    local_810._0_1_ = 'b';\n    local_810._1_1_ = 'a';\n    local_810._2_1_ = 'd';\n    local_810._3_1_ = ' ';\n    uStack_80c._0_1_ = 'p';\n    uStack_80c._1_1_ = 'a';\n    uStack_80c._2_1_ = 'r';\n    uStack_80c._3_1_ = 'a';\n    uStack_808 = CONCAT13(uStack_808._3_1_,0xa6d);\n    FUN_0002e584(0,&local_810,0);\n    uVar2 = 0xffffffff;\n  }\n  else {\n    iVar1 = pthread_mutex_lock((pthread_mutex_t *)&DAT_00504cac);\n    if (iVar1 == 0) {\n      iVar1 = FUN_00043338(DAT_00504cc4,&local_814);\n      if (iVar1 == 1) {\n        FUN_00043358(DAT_00504cc4,&local_814);\n      }\n      else {\n        local_810._0_1_ = 'c';\n        local_810._1_1_ = 'a';\n        local_810._2_1_ = 'l';\n        local_810._3_1_ = 'l';\n        uStack_80c._0_1_ = 'b';\n        uStack_80c._1_1_ = 'a';\n        uStack_80c._2_1_ = 'c';\n        uStack_80c._3_1_ = 'k';\n        uStack_808._0_1_ = ' ';\n        uStack_808._1_1_ = 'f';\n        uStack_808._2_1_ = 'u';\n        uStack_808._3_1_ = 'n';\n        uStack_804._0_1_ = 'c';\n        uStack_804._1_1_ = 't';\n        uStack_804._2_1_ = 'i';\n        uStack_804._3_1_ = 'o';\n        local_800._0_1_ = 'n';\n        local_800._1_1_ = ' ';\n        local_800._2_1_ = 'n';\n        local_800._3_1_ = 'o';\n        uStack_7fc._0_1_ = 't';\n        uStack_7fc._1_1_ = ' ';\n        uStack_7fc._2_1_ = 'r';\n        uStack_7fc._3_1_ = 'e';\n        uStack_7f8._0_1_ = 'g';\n        uStack_7f8._1_1_ = 'i';\n        uStack_7f8._2_1_ = 's';\n        uStack_7f8._3_1_ = 't';\n        local_7f4._0_1_ = 'e';\n        local_7f4._1_1_ = 'r';\n        local_7f4._2_1_ = 'e';\n        local_7f4._3_1_ = 'd';\n        local_7f0._0_1_ = ' ';\n        local_7f0._1_1_ = 'b';\n        local_7f0._2_1_ = 'e';\n        local_7f0._3_1_ = 'f';\n        uStack_7ec._0_1_ = 'o';\n        uStack_7ec._1_1_ = 'r';\n        uStack_7ec._2_1_ = 'e';\n        uStack_7ec._3_1_ = '\\n';\n        local_7e8 = 0;\n        FUN_0002e584(1,&local_810,0);\n      }\n      pthread_mutex_unlock((pthread_mutex_t *)&DAT_00504cac);\n      uVar2 = 0;\n    }\n    else {\n      local_810._0_1_ = 'f';\n      local_810._1_1_ = 'a';\n      local_810._2_1_ = 'i';\n      local_810._3_1_ = 'l';\n      uStack_80c._0_1_ = ' ';\n      uStack_80c._1_1_ = 't';\n      uStack_80c._2_1_ = 'o';\n      uStack_80c._3_1_ = ' ';\n      uStack_808._0_1_ = 'l';\n      uStack_808._1_1_ = 'o';\n      uStack_808._2_1_ = 'c';\n      uStack_808._3_1_ = 'k';\n      uStack_804._0_1_ = ' ';\n      uStack_804._1_1_ = 'g';\n      uStack_804._2_1_ = 'p';\n      uStack_804._3_1_ = 'i';\n      local_800._0_1_ = 'o';\n      local_800._1_1_ = ' ';\n      local_800._2_1_ = 'c';\n      local_800._3_1_ = 't';\n      uStack_7fc._0_1_ = 'r';\n      uStack_7fc._1_1_ = 'l';\n      uStack_7fc._2_1_ = ' ';\n      uStack_7fc._3_1_ = 'm';\n      uStack_7f8._0_1_ = 'u';\n      uStack_7f8._1_1_ = 't';\n      uStack_7f8._2_1_ = 'e';\n      uStack_7f8._3_1_ = 'x';\n      local_7f4 = CONCAT22(local_7f4._2_2_,10);\n      FUN_0002e584(0,&local_810);\n      uVar2 = 0xffffffff;\n    }\n  }\n  return uVar2;\n}\n\n",
    "FUN_000406e4": "\nundefined4 FUN_000406e4(undefined4 param_1)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined4 uStack_804;\n  undefined4 local_800;\n  \n  iVar1 = pthread_mutex_lock((pthread_mutex_t *)&DAT_00504cc8);\n  if (iVar1 == 0) {\n    snprintf((char *)&local_810,0x40,\"/sys/class/gpio/gpio%d\",param_1);\n    iVar1 = access((char *)&local_810,0);\n    if (iVar1 == 0) {\n      pthread_mutex_unlock((pthread_mutex_t *)&DAT_00504cc8);\n      return 1;\n    }\n    pthread_mutex_unlock((pthread_mutex_t *)&DAT_00504cc8);\n    uVar2 = 0;\n  }\n  else {\n    local_810._0_1_ = 'f';\n    local_810._1_1_ = 'a';\n    local_810._2_1_ = 'i';\n    local_810._3_1_ = 'l';\n    uStack_80c._0_1_ = 'e';\n    uStack_80c._1_1_ = 'd';\n    uStack_80c._2_1_ = ' ';\n    uStack_80c._3_1_ = 't';\n    uStack_808._0_1_ = 'o';\n    uStack_808._1_1_ = ' ';\n    uStack_808._2_1_ = 'a';\n    uStack_808._3_1_ = 'p';\n    uStack_804._0_1_ = 'i';\n    uStack_804._1_1_ = ' ';\n    uStack_804._2_1_ = 'l';\n    uStack_804._3_1_ = 'o';\n    local_800._0_1_ = 'c';\n    local_800._1_1_ = 'k';\n    local_800._2_1_ = '\\n';\n    local_800._3_1_ = '\\0';\n    FUN_0002e584(0,&local_810);\n    uVar2 = 0xffffffff;\n  }\n  return uVar2;\n}\n\n",
    "FUN_00040794": "\nundefined4 FUN_00040794(undefined4 param_1)\n\n{\n  int iVar1;\n  size_t __n;\n  ssize_t sVar2;\n  undefined4 uVar3;\n  char acStack_850 [64];\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined4 uStack_804;\n  undefined4 local_800;\n  undefined4 uStack_7fc;\n  undefined4 uStack_7f8;\n  undefined4 uStack_7f4;\n  undefined4 local_7f0;\n  \n  iVar1 = pthread_mutex_lock((pthread_mutex_t *)&DAT_00504cc8);\n  if (iVar1 == 0) {\n    snprintf(acStack_850,0x40,\"/sys/class/gpio/gpio%d\",param_1);\n    iVar1 = access(acStack_850,0);\n    if (iVar1 == 0) {\n      pthread_mutex_unlock((pthread_mutex_t *)&DAT_00504cc8);\n      return 0;\n    }\n    iVar1 = open64(\"/sys/class/gpio/export\",1);\n    if (iVar1 < 0) {\n      local_810._0_1_ = 'F';\n      local_810._1_1_ = 'a';\n      local_810._2_1_ = 'i';\n      local_810._3_1_ = 'l';\n      uStack_80c._0_1_ = 'e';\n      uStack_80c._1_1_ = 'd';\n      uStack_80c._2_1_ = ' ';\n      uStack_80c._3_1_ = 't';\n      uStack_808._0_1_ = 'o';\n      uStack_808._1_1_ = ' ';\n      uStack_808._2_1_ = 'o';\n      uStack_808._3_1_ = 'p';\n      uStack_804._0_1_ = 'e';\n      uStack_804._1_1_ = 'n';\n      uStack_804._2_1_ = ' ';\n      uStack_804._3_1_ = 'e';\n      local_800._0_1_ = 'x';\n      local_800._1_1_ = 'p';\n      local_800._2_1_ = 'o';\n      local_800._3_1_ = 'r';\n      uStack_7fc._0_1_ = 't';\n      uStack_7fc._1_1_ = ' ';\n      uStack_7fc._2_1_ = 'f';\n      uStack_7fc._3_1_ = 'o';\n      uStack_7f8._0_1_ = 'r';\n      uStack_7f8._1_1_ = ' ';\n      uStack_7f8._2_1_ = 'w';\n      uStack_7f8._3_1_ = 'r';\n      uStack_7f4._0_1_ = 'i';\n      uStack_7f4._1_1_ = 't';\n      uStack_7f4._2_1_ = 'i';\n      uStack_7f4._3_1_ = 'n';\n      local_7f0._0_1_ = 'g';\n      local_7f0._1_1_ = '!';\n      local_7f0._2_1_ = '\\n';\n      local_7f0._3_1_ = '\\0';\n      FUN_0002e584(0,&local_810,0);\n      pthread_mutex_unlock((pthread_mutex_t *)&DAT_00504cc8);\n      uVar3 = 0xfffffffe;\n    }\n    else {\n      __n = snprintf(acStack_850,0x40,\"%d\",param_1);\n      sVar2 = write(iVar1,acStack_850,__n);\n      if (sVar2 < 0) {\n        snprintf((char *)&local_810,0x800,\"Failed to export gpio %d!\",param_1);\n        FUN_0002e584(0,&local_810,0);\n        close(iVar1);\n        pthread_mutex_unlock((pthread_mutex_t *)&DAT_00504cc8);\n        uVar3 = 0xfffffffd;\n      }\n      else {\n        close(iVar1);\n        pthread_mutex_unlock((pthread_mutex_t *)&DAT_00504cc8);\n        uVar3 = 0;\n      }\n    }\n  }\n  else {\n    local_810._0_1_ = 'f';\n    local_810._1_1_ = 'a';\n    local_810._2_1_ = 'i';\n    local_810._3_1_ = 'l';\n    uStack_80c._0_1_ = 'e';\n    uStack_80c._1_1_ = 'd';\n    uStack_80c._2_1_ = ' ';\n    uStack_80c._3_1_ = 't';\n    uStack_808._0_1_ = 'o';\n    uStack_808._1_1_ = ' ';\n    uStack_808._2_1_ = 'a';\n    uStack_808._3_1_ = 'p';\n    uStack_804._0_1_ = 'i';\n    uStack_804._1_1_ = ' ';\n    uStack_804._2_1_ = 'l';\n    uStack_804._3_1_ = 'o';\n    local_800._0_1_ = 'c';\n    local_800._1_1_ = 'k';\n    local_800._2_1_ = '\\n';\n    local_800._3_1_ = '\\0';\n    FUN_0002e584(0,&local_810);\n    uVar3 = 0xffffffff;\n  }\n  return uVar3;\n}\n\n",
    "FUN_00040910": "\nundefined4 FUN_00040910(undefined4 param_1)\n\n{\n  int iVar1;\n  size_t __n;\n  ssize_t sVar2;\n  undefined4 uVar3;\n  char acStack_850 [64];\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined4 uStack_804;\n  undefined4 local_800;\n  undefined4 uStack_7fc;\n  undefined4 uStack_7f8;\n  undefined4 uStack_7f4;\n  undefined4 uStack_7f0;\n  undefined2 local_7ec;\n  \n  iVar1 = pthread_mutex_lock((pthread_mutex_t *)&DAT_00504cc8);\n  if (iVar1 == 0) {\n    snprintf(acStack_850,0x40,\"/sys/class/gpio/gpio%d\",param_1);\n    iVar1 = access(acStack_850,0);\n    if (iVar1 != 0) {\n      snprintf((char *)&local_810,0x800,\"port %d already unexported, ret = %d\\n\",param_1,iVar1);\n      FUN_0002e584(1,&local_810,0);\n      perror(\"access error\");\n      pthread_mutex_unlock((pthread_mutex_t *)&DAT_00504cc8);\n      return 0;\n    }\n    iVar1 = open64(\"/sys/class/gpio/unexport\",1);\n    if (iVar1 < 0) {\n      local_810._0_1_ = 'F';\n      local_810._1_1_ = 'a';\n      local_810._2_1_ = 'i';\n      local_810._3_1_ = 'l';\n      uStack_80c._0_1_ = 'e';\n      uStack_80c._1_1_ = 'd';\n      uStack_80c._2_1_ = ' ';\n      uStack_80c._3_1_ = 't';\n      uStack_808._0_1_ = 'o';\n      uStack_808._1_1_ = ' ';\n      uStack_808._2_1_ = 'o';\n      uStack_808._3_1_ = 'p';\n      uStack_804._0_1_ = 'e';\n      uStack_804._1_1_ = 'n';\n      uStack_804._2_1_ = ' ';\n      uStack_804._3_1_ = 'u';\n      local_800._0_1_ = 'n';\n      local_800._1_1_ = 'e';\n      local_800._2_1_ = 'x';\n      local_800._3_1_ = 'p';\n      uStack_7fc._0_1_ = 'o';\n      uStack_7fc._1_1_ = 'r';\n      uStack_7fc._2_1_ = 't';\n      uStack_7fc._3_1_ = ' ';\n      uStack_7f8._0_1_ = 'f';\n      uStack_7f8._1_1_ = 'o';\n      uStack_7f8._2_1_ = 'r';\n      uStack_7f8._3_1_ = ' ';\n      uStack_7f4._0_1_ = 'w';\n      uStack_7f4._1_1_ = 'r';\n      uStack_7f4._2_1_ = 'i';\n      uStack_7f4._3_1_ = 't';\n      uStack_7f0._0_1_ = 'i';\n      uStack_7f0._1_1_ = 'n';\n      uStack_7f0._2_1_ = 'g';\n      uStack_7f0._3_1_ = '!';\n      local_7ec = 10;\n      FUN_0002e584(0,&local_810,0);\n      uVar3 = 0xfffffffe;\n      pthread_mutex_unlock((pthread_mutex_t *)&DAT_00504cc8);\n    }\n    else {\n      __n = snprintf(acStack_850,0x40,\"%d\",param_1);\n      sVar2 = write(iVar1,acStack_850,__n);\n      if (sVar2 < 0) {\n        snprintf((char *)&local_810,0x800,\"Failed to unexport gpio %d!\",param_1);\n        uVar3 = 0xfffffffe;\n        FUN_0002e584(0,&local_810,0);\n        close(iVar1);\n        pthread_mutex_unlock((pthread_mutex_t *)&DAT_00504cc8);\n      }\n      else {\n        close(iVar1);\n        pthread_mutex_unlock((pthread_mutex_t *)&DAT_00504cc8);\n        uVar3 = 0;\n      }\n    }\n  }\n  else {\n    uVar3 = 0xffffffff;\n    local_810._0_1_ = 'f';\n    local_810._1_1_ = 'a';\n    local_810._2_1_ = 'i';\n    local_810._3_1_ = 'l';\n    uStack_80c._0_1_ = 'e';\n    uStack_80c._1_1_ = 'd';\n    uStack_80c._2_1_ = ' ';\n    uStack_80c._3_1_ = 't';\n    uStack_808._0_1_ = 'o';\n    uStack_808._1_1_ = ' ';\n    uStack_808._2_1_ = 'a';\n    uStack_808._3_1_ = 'p';\n    uStack_804._0_1_ = 'i';\n    uStack_804._1_1_ = ' ';\n    uStack_804._2_1_ = 'l';\n    uStack_804._3_1_ = 'o';\n    local_800._0_1_ = 'c';\n    local_800._1_1_ = 'k';\n    local_800._2_1_ = '\\n';\n    local_800._3_1_ = '\\0';\n    FUN_0002e584(0,&local_810);\n  }\n  return uVar3;\n}\n\n",
    "FUN_00040ad8": "\nundefined4 FUN_00040ad8(undefined4 param_1,int param_2)\n\n{\n  int iVar1;\n  ssize_t sVar2;\n  undefined4 uVar3;\n  char *__n;\n  undefined *__buf;\n  char acStack_858 [64];\n  undefined4 local_818;\n  undefined4 uStack_814;\n  undefined4 uStack_810;\n  undefined4 uStack_80c;\n  undefined4 local_808;\n  \n  iVar1 = pthread_mutex_lock((pthread_mutex_t *)&DAT_00504cc8);\n  if (iVar1 == 0) {\n    __n = \"/sys/class/gpio/gpio%d/direction\";\n    snprintf(acStack_858,0x40,\"/sys/class/gpio/gpio%d/direction\",param_1);\n    iVar1 = open64(acStack_858,1);\n    if (iVar1 < 0) {\n      snprintf((char *)&local_818,0x800,\"Failed to open gpio %d direction for writing!\\n\",param_1);\n      FUN_0002e584(0,&local_818,0);\n      pthread_mutex_unlock((pthread_mutex_t *)&DAT_00504cc8);\n      uVar3 = 0xfffffffe;\n    }\n    else {\n      __buf = &DAT_00068f98;\n      if (param_2 == 0) {\n        __n = (char *)0x2;\n      }\n      if (param_2 != 0) {\n        __n = (char *)0x3;\n        __buf = &UNK_00068f9b;\n      }\n      sVar2 = write(iVar1,__buf,(size_t)__n);\n      if (sVar2 < 0) {\n        snprintf((char *)&local_818,0x800,\"Failed to set gpio %d direction %s !\\n\",param_1,__buf);\n        FUN_0002e584(0,&local_818,0);\n        close(iVar1);\n        pthread_mutex_unlock((pthread_mutex_t *)&DAT_00504cc8);\n        uVar3 = 0xfffffffd;\n      }\n      else {\n        close(iVar1);\n        pthread_mutex_unlock((pthread_mutex_t *)&DAT_00504cc8);\n        uVar3 = 0;\n      }\n    }\n  }\n  else {\n    local_818._0_1_ = 'f';\n    local_818._1_1_ = 'a';\n    local_818._2_1_ = 'i';\n    local_818._3_1_ = 'l';\n    uStack_814._0_1_ = 'e';\n    uStack_814._1_1_ = 'd';\n    uStack_814._2_1_ = ' ';\n    uStack_814._3_1_ = 't';\n    uStack_810._0_1_ = 'o';\n    uStack_810._1_1_ = ' ';\n    uStack_810._2_1_ = 'a';\n    uStack_810._3_1_ = 'p';\n    uStack_80c._0_1_ = 'i';\n    uStack_80c._1_1_ = ' ';\n    uStack_80c._2_1_ = 'l';\n    uStack_80c._3_1_ = 'o';\n    local_808._0_1_ = 'c';\n    local_808._1_1_ = 'k';\n    local_808._2_1_ = '\\n';\n    local_808._3_1_ = '\\0';\n    FUN_0002e584(0,&local_818);\n    uVar3 = 0xffffffff;\n  }\n  return uVar3;\n}\n\n",
    "FUN_00040c28": "\nundefined4 FUN_00040c28(undefined4 param_1,undefined *param_2)\n\n{\n  int iVar1;\n  ssize_t sVar2;\n  long lVar3;\n  undefined4 uVar4;\n  undefined4 local_85c;\n  char acStack_858 [64];\n  undefined4 local_818;\n  undefined4 uStack_814;\n  undefined4 uStack_810;\n  undefined4 uStack_80c;\n  undefined4 local_808;\n  undefined2 uStack_804;\n  undefined local_802;\n  \n  local_85c = 0;\n  iVar1 = pthread_mutex_lock((pthread_mutex_t *)&DAT_00504cc8);\n  if (iVar1 == 0) {\n    snprintf(acStack_858,0x40,\"/sys/class/gpio/gpio%d/value\",param_1);\n    iVar1 = open64(acStack_858,0);\n    if (iVar1 < 0) {\n      snprintf((char *)&local_818,0x800,\"Failed to open gpio %d value for reading!\\n\",param_1);\n      uVar4 = 0xfffffffe;\n      FUN_0002e584(0,&local_818,0);\n      pthread_mutex_unlock((pthread_mutex_t *)&DAT_00504cc8);\n    }\n    else {\n      sVar2 = read(iVar1,&local_85c,4);\n      if (sVar2 < 0) {\n        local_818._0_1_ = 'F';\n        local_818._1_1_ = 'a';\n        local_818._2_1_ = 'i';\n        local_818._3_1_ = 'l';\n        uStack_814._0_1_ = 'e';\n        uStack_814._1_1_ = 'd';\n        uStack_814._2_1_ = ' ';\n        uStack_814._3_1_ = 't';\n        uStack_810._0_1_ = 'o';\n        uStack_810._1_1_ = ' ';\n        uStack_810._2_1_ = 'r';\n        uStack_810._3_1_ = 'e';\n        uStack_80c._0_1_ = 'a';\n        uStack_80c._1_1_ = 'd';\n        uStack_80c._2_1_ = ' ';\n        uStack_80c._3_1_ = 'v';\n        local_808._0_1_ = 'a';\n        local_808._1_1_ = 'l';\n        local_808._2_1_ = 'u';\n        local_808._3_1_ = 'e';\n        uStack_804 = 0xa21;\n        local_802 = 0;\n        uVar4 = 0xfffffffd;\n        FUN_0002e584(0,&local_818,0);\n        close(iVar1);\n        pthread_mutex_unlock((pthread_mutex_t *)&DAT_00504cc8);\n      }\n      else {\n        close(iVar1);\n        pthread_mutex_unlock((pthread_mutex_t *)&DAT_00504cc8);\n        lVar3 = strtol((char *)&local_85c,(char **)0x0,10);\n        *param_2 = (char)lVar3;\n        uVar4 = 0;\n      }\n    }\n  }\n  else {\n    uVar4 = 0xffffffff;\n    local_818._0_1_ = 'f';\n    local_818._1_1_ = 'a';\n    local_818._2_1_ = 'i';\n    local_818._3_1_ = 'l';\n    uStack_814._0_1_ = 'e';\n    uStack_814._1_1_ = 'd';\n    uStack_814._2_1_ = ' ';\n    uStack_814._3_1_ = 't';\n    uStack_810._0_1_ = 'o';\n    uStack_810._1_1_ = ' ';\n    uStack_810._2_1_ = 'a';\n    uStack_810._3_1_ = 'p';\n    uStack_80c._0_1_ = 'i';\n    uStack_80c._1_1_ = ' ';\n    uStack_80c._2_1_ = 'l';\n    uStack_80c._3_1_ = 'o';\n    local_808._0_1_ = 'c';\n    local_808._1_1_ = 'k';\n    local_808._2_1_ = '\\n';\n    local_808._3_1_ = '\\0';\n    FUN_0002e584(0,&local_818,0);\n  }\n  return uVar4;\n}\n\n",
    "FUN_00040d90": "\nundefined4 FUN_00040d90(void)\n\n{\n  int iVar1;\n  code **__ptr;\n  code **__ptr_00;\n  code *pcVar2;\n  undefined4 uVar3;\n  byte local_29;\n  code *local_28;\n  uint local_24;\n  \n  prctl(0xf,&DAT_00061ae0,0,0,0);\n  do {\n    if (DAT_00504ce0 == 0) {\n      return 0;\n    }\n    iVar1 = pthread_mutex_lock((pthread_mutex_t *)&DAT_00504cac);\n    if (iVar1 == 0) {\n      __ptr = (code **)FUN_00043440(DAT_00504cc4);\n      iVar1 = (**__ptr)();\n      while (iVar1 != 0) {\n        pcVar2 = __ptr[5];\n        __ptr_00 = (code **)(*__ptr[2])();\n        uVar3 = *(undefined4 *)**(undefined4 **)(pcVar2 + 0x10);\n        local_29 = 0;\n        iVar1 = FUN_00040c28(uVar3,&local_29);\n        if (iVar1 != 0) {\n          free(__ptr_00);\n          break;\n        }\n        if (__ptr_00[1] != (code *)(uint)local_29) {\n          (**__ptr_00)(uVar3,(code *)(uint)local_29);\n          local_28 = *__ptr_00;\n          local_24 = (uint)local_29;\n          (*__ptr[1])(__ptr,&local_28,8);\n        }\n        free(__ptr_00);\n        iVar1 = (**__ptr)(__ptr);\n      }\n      free(__ptr);\n      pthread_mutex_unlock((pthread_mutex_t *)&DAT_00504cac);\n    }\n    usleep(200000);\n  } while( true );\n}\n\n",
    "FUN_00040ed4": "\nundefined4 FUN_00040ed4(undefined4 param_1,int param_2)\n\n{\n  int iVar1;\n  ssize_t sVar2;\n  undefined4 uVar3;\n  undefined *__buf;\n  char acStack_850 [64];\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined4 uStack_804;\n  undefined4 local_800;\n  undefined4 uStack_7fc;\n  undefined4 uStack_7f8;\n  undefined4 uStack_7f4;\n  undefined4 uStack_7f0;\n  undefined4 uStack_7ec;\n  \n  iVar1 = pthread_mutex_lock((pthread_mutex_t *)&DAT_00504cc8);\n  if (iVar1 == 0) {\n    snprintf(acStack_850,0x40,\"/sys/class/gpio/gpio%d/value\",param_1);\n    iVar1 = open64(acStack_850,1);\n    if (iVar1 < 0) {\n      local_810._0_1_ = 'F';\n      local_810._1_1_ = 'a';\n      local_810._2_1_ = 'i';\n      local_810._3_1_ = 'l';\n      uStack_80c._0_1_ = 'e';\n      uStack_80c._1_1_ = 'd';\n      uStack_80c._2_1_ = ' ';\n      uStack_80c._3_1_ = 't';\n      uStack_808._0_1_ = 'o';\n      uStack_808._1_1_ = ' ';\n      uStack_808._2_1_ = 'o';\n      uStack_808._3_1_ = 'p';\n      uStack_804._0_1_ = 'e';\n      uStack_804._1_1_ = 'n';\n      uStack_804._2_1_ = ' ';\n      uStack_804._3_1_ = 'g';\n      local_800._0_1_ = 'p';\n      local_800._1_1_ = 'i';\n      local_800._2_1_ = 'o';\n      local_800._3_1_ = ' ';\n      uStack_7fc._0_1_ = 'v';\n      uStack_7fc._1_1_ = 'a';\n      uStack_7fc._2_1_ = 'l';\n      uStack_7fc._3_1_ = 'u';\n      uStack_7f8._0_1_ = 'e';\n      uStack_7f8._1_1_ = ' ';\n      uStack_7f8._2_1_ = 'f';\n      uStack_7f8._3_1_ = 'o';\n      uStack_7f4._0_1_ = 'r';\n      uStack_7f4._1_1_ = ' ';\n      uStack_7f4._2_1_ = 'w';\n      uStack_7f4._3_1_ = 'r';\n      uStack_7f0._0_1_ = 'i';\n      uStack_7f0._1_1_ = 't';\n      uStack_7f0._2_1_ = 'i';\n      uStack_7f0._3_1_ = 'n';\n      uStack_7ec._0_1_ = 'g';\n      uStack_7ec._1_1_ = '!';\n      uStack_7ec._2_1_ = '\\n';\n      uStack_7ec._3_1_ = '\\0';\n      FUN_0002e584(0,&local_810,0);\n      pthread_mutex_unlock((pthread_mutex_t *)&DAT_00504cc8);\n      uVar3 = 0xfffffffe;\n    }\n    else {\n      __buf = &UNK_00068fa0;\n      if (param_2 != 0) {\n        __buf = &UNK_00068fa1;\n      }\n      sVar2 = write(iVar1,__buf,1);\n      if (sVar2 < 0) {\n        local_810._0_1_ = 'F';\n        local_810._1_1_ = 'a';\n        local_810._2_1_ = 'i';\n        local_810._3_1_ = 'l';\n        uStack_80c._0_1_ = 'e';\n        uStack_80c._1_1_ = 'd';\n        uStack_80c._2_1_ = ' ';\n        uStack_80c._3_1_ = 't';\n        uStack_808._0_1_ = 'o';\n        uStack_808._1_1_ = ' ';\n        uStack_808._2_1_ = 'w';\n        uStack_808._3_1_ = 'r';\n        uStack_804._0_1_ = 'i';\n        uStack_804._1_1_ = 't';\n        uStack_804._2_1_ = 'e';\n        uStack_804._3_1_ = ' ';\n        local_800._0_1_ = 'v';\n        local_800._1_1_ = 'a';\n        local_800._2_1_ = 'l';\n        local_800._3_1_ = 'u';\n        uStack_7fc._0_1_ = 'e';\n        uStack_7fc._1_1_ = '!';\n        uStack_7fc._2_1_ = '\\n';\n        uStack_7fc._3_1_ = '\\0';\n        FUN_0002e584(0,&local_810,0);\n        close(iVar1);\n        pthread_mutex_unlock((pthread_mutex_t *)&DAT_00504cc8);\n        uVar3 = 0xfffffffd;\n      }\n      else {\n        close(iVar1);\n        pthread_mutex_unlock((pthread_mutex_t *)&DAT_00504cc8);\n        uVar3 = 0;\n      }\n    }\n  }\n  else {\n    local_810._0_1_ = 'f';\n    local_810._1_1_ = 'a';\n    local_810._2_1_ = 'i';\n    local_810._3_1_ = 'l';\n    uStack_80c._0_1_ = 'e';\n    uStack_80c._1_1_ = 'd';\n    uStack_80c._2_1_ = ' ';\n    uStack_80c._3_1_ = 't';\n    uStack_808._0_1_ = 'o';\n    uStack_808._1_1_ = ' ';\n    uStack_808._2_1_ = 'a';\n    uStack_808._3_1_ = 'p';\n    uStack_804._0_1_ = 'i';\n    uStack_804._1_1_ = ' ';\n    uStack_804._2_1_ = 'l';\n    uStack_804._3_1_ = 'o';\n    local_800._0_1_ = 'c';\n    local_800._1_1_ = 'k';\n    local_800._2_1_ = '\\n';\n    local_800._3_1_ = '\\0';\n    FUN_0002e584(0,&local_810);\n    uVar3 = 0xffffffff;\n  }\n  return uVar3;\n}\n\n",
    "FUN_0004101c": "\nint FUN_0004101c(uint param_1)\n\n{\n  int iVar1;\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined4 uStack_7fc;\n  undefined4 local_7f8;\n  undefined4 uStack_7f4;\n  undefined4 uStack_7f0;\n  undefined2 local_7ec;\n  \n  if (DAT_00504c90 == 0) {\n    local_808._0_1_ = 'p';\n    local_808._1_1_ = 'l';\n    local_808._2_1_ = 'e';\n    local_808._3_1_ = 'a';\n    uStack_804._0_1_ = 's';\n    uStack_804._1_1_ = 'e';\n    uStack_804._2_1_ = ' ';\n    uStack_804._3_1_ = 'i';\n    uStack_800._0_1_ = 'n';\n    uStack_800._1_1_ = 'i';\n    uStack_800._2_1_ = 't';\n    uStack_800._3_1_ = ' ';\n    uStack_7fc._0_1_ = 'p';\n    uStack_7fc._1_1_ = 'l';\n    uStack_7fc._2_1_ = 'a';\n    uStack_7fc._3_1_ = 't';\n    local_7f8._0_1_ = 'f';\n    local_7f8._1_1_ = 'o';\n    local_7f8._2_1_ = 'r';\n    local_7f8._3_1_ = 'm';\n    uStack_7f4._0_1_ = ' ';\n    uStack_7f4._1_1_ = 'f';\n    uStack_7f4._2_1_ = 'i';\n    uStack_7f4._3_1_ = 'r';\n    uStack_7f0._0_1_ = 's';\n    uStack_7f0._1_1_ = 't';\n    uStack_7f0._2_1_ = '!';\n    uStack_7f0._3_1_ = '!';\n    local_7ec = 10;\n    FUN_0002e584(0,&local_808,0);\n    iVar1 = -2;\n  }\n  else if (param_1 < 2) {\n    iVar1 = param_1 + 1;\n  }\n  else {\n    local_808._0_1_ = 'b';\n    local_808._1_1_ = 'a';\n    local_808._2_1_ = 'd';\n    local_808._3_1_ = ' ';\n    uStack_804._0_1_ = 'p';\n    uStack_804._1_1_ = 'a';\n    uStack_804._2_1_ = 'r';\n    uStack_804._3_1_ = 'a';\n    uStack_800 = CONCAT13(uStack_800._3_1_,0xa6d);\n    FUN_0002e584(0,&local_808);\n    iVar1 = -3;\n  }\n  return iVar1;\n}\n\n",
    "FUN_0004110c": "\nundefined4 FUN_0004110c(int param_1,uint param_2)\n\n{\n  undefined4 uVar1;\n  uint uVar2;\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined2 uStack_808;\n  undefined local_806;\n  \n  if (param_1 < 3) {\n    if (param_1 + -1 == 0) {\n      if (99 < param_2) {\n        param_2 = 100;\n      }\n      uVar2 = 100 - param_2 | param_2 << 0x10;\n      FUN_00040390(0x13,uVar2);\n      FUN_00040390(0x17,uVar2);\n      return 0;\n    }\n    snprintf((char *)&local_810,0x800,\"pwm type %d not supported\\n\",param_1 + -1);\n    FUN_0002e584(0,&local_810);\n    uVar1 = 0;\n  }\n  else {\n    local_810._0_1_ = 'b';\n    local_810._1_1_ = 'a';\n    local_810._2_1_ = 'd';\n    local_810._3_1_ = ' ';\n    uStack_80c._0_1_ = 'p';\n    uStack_80c._1_1_ = 'a';\n    uStack_80c._2_1_ = 'r';\n    uStack_80c._3_1_ = 'a';\n    uStack_808 = 0xa6d;\n    local_806 = 0;\n    FUN_0002e584(0,&local_810);\n    uVar1 = 0xfffffffd;\n  }\n  return uVar1;\n}\n\n",
    "FUN_00041250": "\nundefined4\nFUN_00041250(undefined4 param_1,undefined4 *param_2,undefined4 *param_3,undefined4 *param_4,\n            undefined4 *param_5)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  char acStack_808 [2056];\n  \n  switch(param_1) {\n  case 0:\n    uVar1 = 0x40;\n    *param_2 = 0x18;\n    uVar3 = 0x44;\n    uVar2 = 0x45;\n    break;\n  case 1:\n    uVar1 = 0x40;\n    *param_2 = 0x10;\n    uVar3 = 0x46;\n    uVar2 = 0x47;\n    break;\n  case 2:\n    uVar1 = 0x40;\n    *param_2 = 8;\n    uVar3 = 0x48;\n    uVar2 = 0x49;\n    break;\n  case 3:\n    *param_2 = 0;\n    *param_3 = 0x40;\n    *param_4 = 0x4a;\n    *param_5 = 0x4b;\n    return 0;\n  case 4:\n    uVar1 = 0x41;\n    *param_2 = 0x18;\n    uVar3 = 0x4c;\n    uVar2 = 0x4d;\n    break;\n  case 5:\n    uVar1 = 0x41;\n    *param_2 = 0x10;\n    uVar3 = 0x4e;\n    uVar2 = 0x4f;\n    break;\n  case 6:\n    uVar1 = 0x41;\n    *param_2 = 8;\n    uVar3 = 0x50;\n    uVar2 = 0x51;\n    break;\n  case 7:\n    *param_2 = 0;\n    *param_3 = 0x41;\n    *param_4 = 0x52;\n    *param_5 = 0x53;\n    return 0;\n  case 8:\n    uVar1 = 0x42;\n    *param_2 = 0x18;\n    uVar3 = 0x54;\n    uVar2 = 0x55;\n    break;\n  case 9:\n    uVar1 = 0x42;\n    *param_2 = 0x10;\n    uVar3 = 0x56;\n    uVar2 = 0x57;\n    break;\n  case 10:\n    uVar1 = 0x42;\n    *param_2 = 8;\n    uVar3 = 0x73;\n    uVar2 = 0x74;\n    break;\n  case 0xb:\n    *param_2 = 0;\n    *param_3 = 0x42;\n    *param_4 = 0x75;\n    *param_5 = 0x76;\n    return 0;\n  case 0xc:\n    uVar1 = 0x43;\n    *param_2 = 0x18;\n    uVar3 = 0x77;\n    uVar2 = 0x78;\n    break;\n  case 0xd:\n    uVar1 = 0x43;\n    *param_2 = 0x10;\n    uVar3 = 0x79;\n    uVar2 = 0x7a;\n    break;\n  default:\n    snprintf(acStack_808,0x800,\"%s: The uart %d is not supported!!!\\n\",\"get_send_address_info\",\n             param_1);\n    FUN_0002e584(0,acStack_808);\n    return 0xffffffff;\n  }\n  *param_3 = uVar1;\n  *param_4 = uVar3;\n  *param_5 = uVar2;\n  return 0;\n}\n\n",
    "FUN_00041474": "\nuint FUN_00041474(undefined4 param_1)\n\n{\n  uint local_80c;\n  char acStack_808 [2056];\n  \n  local_80c = 0;\n  switch(param_1) {\n  case 0:\n    FUN_00040314(0x58,&local_80c);\n    local_80c = (local_80c << 6) >> 0x16;\n    break;\n  case 1:\n    FUN_00040314(0x58,&local_80c);\n    local_80c = local_80c & 0x3ff;\n    break;\n  case 2:\n    FUN_00040314(0x59,&local_80c);\n    local_80c = (local_80c << 6) >> 0x16;\n    break;\n  case 3:\n    FUN_00040314(0x59,&local_80c);\n    local_80c = local_80c & 0x3ff;\n    break;\n  case 4:\n    FUN_00040314(0x5a,&local_80c);\n    local_80c = (local_80c << 6) >> 0x16;\n    break;\n  case 5:\n    FUN_00040314(0x5a,&local_80c);\n    local_80c = local_80c & 0x3ff;\n    break;\n  case 6:\n    FUN_00040314(0x5b,&local_80c);\n    local_80c = (local_80c << 6) >> 0x16;\n    break;\n  case 7:\n    FUN_00040314(0x5b,&local_80c);\n    local_80c = local_80c & 0x3ff;\n    break;\n  case 8:\n    FUN_00040314(0x5c,&local_80c);\n    local_80c = (local_80c << 6) >> 0x16;\n    break;\n  case 9:\n    FUN_00040314(0x5c,&local_80c);\n    local_80c = local_80c & 0x3ff;\n    break;\n  case 10:\n    FUN_00040314(0x5d,&local_80c);\n    local_80c = (local_80c << 6) >> 0x16;\n    break;\n  case 0xb:\n    FUN_00040314(0x5d,&local_80c);\n    local_80c = local_80c & 0x3ff;\n    break;\n  case 0xc:\n    FUN_00040314(0x5e,&local_80c);\n    local_80c = (local_80c << 6) >> 0x16;\n    break;\n  case 0xd:\n    FUN_00040314(0x5e,&local_80c);\n    local_80c = local_80c & 0x3ff;\n    break;\n  default:\n    snprintf(acStack_808,0x800,\"%s: The uart%d is not supported!!!\\n\",\n             \"check_how_many_uart_data_in_fpga\",param_1);\n    FUN_0002e584(0,acStack_808);\n    local_80c = 0;\n  }\n  return local_80c;\n}\n\n",
    "FUN_0004165c": "\nvoid FUN_0004165c(int param_1)\n\n{\n  int iVar1;\n  pthread_mutex_t *__mutex;\n  undefined4 local_82c;\n  undefined4 local_828;\n  undefined4 local_824;\n  uint local_820;\n  uint local_81c;\n  char acStack_818 [2048];\n  \n  __mutex = (pthread_mutex_t *)(param_1 * 0x18 + 0x504ce8);\n  local_82c = 0;\n  local_828 = 0;\n  local_824 = 0;\n  local_820 = 0;\n  local_81c = 0;\n  pthread_mutex_lock(__mutex);\n  iVar1 = FUN_00041250(param_1,&local_81c,&local_82c,&local_828,&local_824);\n  if (iVar1 == 0) {\n    iVar1 = 0x15;\n    do {\n      FUN_00040314(local_82c,&local_820);\n      local_820 = local_820 >> (local_81c & 0xff) & 0xff;\n      if (local_820 == 0xff) {\n        pthread_mutex_unlock(__mutex);\n        return;\n      }\n      printf(\"%s: waiting fpga uart%d clear send fifo space ...\\n\",\"clear_uart_tx_fifo\",param_1);\n      FUN_00040390(local_828,local_820 | 0x80000000);\n      usleep(3000);\n      iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    snprintf(acStack_818,0x800,\"%s: uart%d always dose not has enough send fifo space, break\\n\",\n             \"clear_uart_tx_fifo\",param_1);\n  }\n  else {\n    snprintf(acStack_818,0x800,\"get_send_address_info error, chain_id = %d\\n\",param_1);\n  }\n  FUN_0002e584(0,acStack_818,0);\n  pthread_mutex_unlock(__mutex);\n  return;\n}\n\n",
    "FUN_00041794": "\nuint FUN_00041794(undefined4 param_1,undefined *param_2,uint param_3)\n\n{\n  uint uVar1;\n  undefined uVar2;\n  undefined4 uVar3;\n  undefined *puVar4;\n  undefined *puVar5;\n  uint uVar6;\n  uint uVar7;\n  undefined4 uVar8;\n  undefined4 local_824;\n  char acStack_820 [2052];\n  \n  local_824 = 0;\n  switch(param_1) {\n  case 0:\n    uVar8 = 0x60;\n    uVar3 = 0x5f;\n    break;\n  case 1:\n    uVar8 = 0x62;\n    uVar3 = 0x61;\n    break;\n  case 2:\n    uVar8 = 100;\n    uVar3 = 99;\n    break;\n  case 3:\n    uVar8 = 0x66;\n    uVar3 = 0x65;\n    break;\n  case 4:\n    uVar8 = 0x68;\n    uVar3 = 0x67;\n    break;\n  case 5:\n    uVar8 = 0x6a;\n    uVar3 = 0x69;\n    break;\n  case 6:\n    uVar8 = 0x6c;\n    uVar3 = 0x6b;\n    break;\n  case 7:\n    uVar8 = 0x6e;\n    uVar3 = 0x6d;\n    break;\n  case 8:\n    uVar8 = 0x70;\n    uVar3 = 0x6f;\n    break;\n  case 9:\n    uVar8 = 0x72;\n    uVar3 = 0x71;\n    break;\n  case 10:\n    uVar8 = 0x7c;\n    uVar3 = 0x7b;\n    break;\n  case 0xb:\n    uVar8 = 0x7e;\n    uVar3 = 0x7d;\n    break;\n  case 0xc:\n    uVar8 = 0x80;\n    uVar3 = 0x7f;\n    break;\n  case 0xd:\n    uVar8 = 0x82;\n    uVar3 = 0x81;\n    break;\n  default:\n    snprintf(acStack_820,0x800,\"%s: The uart%d is not supported!!!\\n\",\"get_read_address_info\",\n             param_1);\n    FUN_0002e584(0,acStack_820,0);\n    snprintf(acStack_820,0x800,\"get_read_address_info error, chain_id = %d\\n\",param_1);\n    FUN_0002e584(0,acStack_820,0);\n    return 0;\n  }\n  FUN_00040390(uVar3,param_3 & 0x3ff | 0x80000000);\n  if (param_3 >> 2 != 0) {\n    puVar4 = param_2;\n    do {\n      puVar5 = puVar4 + 4;\n      FUN_00040314(uVar8,&local_824);\n      puVar4[3] = (char)local_824;\n      *puVar4 = (char)((uint)local_824 >> 0x18);\n      puVar4[1] = (char)((uint)local_824 >> 0x10);\n      puVar4[2] = (char)((uint)local_824 >> 8);\n      puVar4 = puVar5;\n    } while (param_2 + (param_3 & 0xfffffffc) != puVar5);\n  }\n  uVar6 = param_3 & 3;\n  uVar7 = param_3 & 0xfffffffc;\n  if (uVar6 != 0) {\n    FUN_00040314(uVar8,&local_824);\n    uVar1 = param_3 & 0xfffffffc;\n    uVar2 = (undefined)((uint)local_824 >> 0x10);\n    if (uVar6 == 2) {\n      uVar7 = uVar7 + 2;\n      param_2[param_3 & 0xfffffffc] = local_824._3_1_;\n      param_2[uVar1 + 1] = uVar2;\n    }\n    else if (uVar6 == 3) {\n      uVar7 = uVar7 + 3;\n      param_2[param_3 & 0xfffffffc] = local_824._3_1_;\n      param_2[uVar1 + 1] = uVar2;\n      param_2[uVar1 + 2] = (char)((uint)local_824 >> 8);\n    }\n    else {\n      uVar7 = uVar7 + 1;\n      param_2[param_3 & 0xfffffffc] = local_824._3_1_;\n    }\n  }\n  return uVar7;\n}\n\n",
    "FUN_000419d8": "\nundefined4 FUN_000419d8(void)\n\n{\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined4 uStack_7fc;\n  undefined4 local_7f8;\n  undefined4 uStack_7f4;\n  undefined4 uStack_7f0;\n  undefined2 local_7ec;\n  \n  if (DAT_00504c90 != 0) {\n    return 0;\n  }\n  local_808._0_1_ = 'p';\n  local_808._1_1_ = 'l';\n  local_808._2_1_ = 'e';\n  local_808._3_1_ = 'a';\n  uStack_804._0_1_ = 's';\n  uStack_804._1_1_ = 'e';\n  uStack_804._2_1_ = ' ';\n  uStack_804._3_1_ = 'i';\n  uStack_800._0_1_ = 'n';\n  uStack_800._1_1_ = 'i';\n  uStack_800._2_1_ = 't';\n  uStack_800._3_1_ = ' ';\n  uStack_7fc._0_1_ = 'p';\n  uStack_7fc._1_1_ = 'l';\n  uStack_7fc._2_1_ = 'a';\n  uStack_7fc._3_1_ = 't';\n  local_7f8._0_1_ = 'f';\n  local_7f8._1_1_ = 'o';\n  local_7f8._2_1_ = 'r';\n  local_7f8._3_1_ = 'm';\n  uStack_7f4._0_1_ = ' ';\n  uStack_7f4._1_1_ = 'f';\n  uStack_7f4._2_1_ = 'i';\n  uStack_7f4._3_1_ = 'r';\n  uStack_7f0._0_1_ = 's';\n  uStack_7f0._1_1_ = 't';\n  uStack_7f0._2_1_ = '!';\n  uStack_7f0._3_1_ = '!';\n  local_7ec = 10;\n  FUN_0002e584(0,&local_808,0);\n  return 0xffffffff;\n}\n\n",
    "FUN_00041a38": "\nvoid FUN_00041a38(void)\n\n{\n  return;\n}\n\n",
    "FUN_00041a3c": "\nuint FUN_00041a3c(int param_1,void *param_2,uint param_3)\n\n{\n  uint uVar1;\n  int iVar2;\n  uint uVar3;\n  uint uVar4;\n  char *__format;\n  pthread_mutex_t *__mutex;\n  byte *pbVar5;\n  byte *pbVar6;\n  undefined4 local_92c;\n  undefined4 local_928;\n  undefined4 local_924;\n  uint local_920;\n  uint local_91c;\n  byte local_918 [256];\n  char acStack_818 [2048];\n  \n  memset(local_918,0,0x100);\n  local_92c = 0;\n  __mutex = (pthread_mutex_t *)(param_1 * 0x18 + 0x504ce8);\n  local_928 = 0;\n  local_924 = 0;\n  local_920 = 0;\n  local_91c = 0;\n  pthread_mutex_lock(__mutex);\n  iVar2 = FUN_00041250(param_1,&local_91c,&local_92c,&local_928,&local_924);\n  if (iVar2 != 0) {\n    snprintf(acStack_818,0x800,\"get_send_address_info error, chain_id = %d\\n\",param_1);\n    FUN_0002e584(0,acStack_818,0);\n    pthread_mutex_unlock(__mutex);\n    return 0;\n  }\n  iVar2 = 0x15;\n  do {\n    FUN_00040314(local_92c,&local_920);\n    local_920 = local_920 >> (local_91c & 0xff) & 0xff;\n    if (param_3 <= local_920) {\n      iVar2 = 0x16;\n      do {\n        FUN_00040314(local_928,&local_920);\n        if (-1 < (int)local_920) {\n          memcpy(local_918,param_2,param_3);\n          if (param_3 >> 2 != 0) {\n            pbVar5 = local_918;\n            do {\n              pbVar6 = pbVar5 + 4;\n              FUN_00040390(local_924,\n                           (uint)pbVar5[1] << 0x10 | (uint)*pbVar5 << 0x18 | (uint)pbVar5[3] |\n                           (uint)pbVar5[2] << 8);\n              pbVar5 = pbVar6;\n            } while (local_918 + (param_3 & 0xfffffffc) != pbVar6);\n          }\n          uVar4 = param_3 & 3;\n          if (uVar4 != 0) {\n            uVar1 = param_3 & 0xfffffffc;\n            uVar3 = (uint)local_918[uVar1] << 0x18;\n            if (uVar4 == 2) {\n              uVar3 = uVar3 | (uint)local_918[uVar1 + 1] << 0x10;\n            }\n            else if (uVar4 == 3) {\n              uVar3 = (uint)local_918[uVar1 + 2] << 8 | (uint)local_918[uVar1 + 1] << 0x10 | uVar3;\n            }\n            FUN_00040390(local_924,uVar3);\n          }\n          FUN_00040390(local_928,param_3 | 0x80000000);\n          pthread_mutex_unlock(__mutex);\n          return param_3;\n        }\n        usleep(3000);\n        iVar2 = iVar2 + -1;\n      } while (iVar2 != 0);\n      pthread_mutex_unlock(__mutex);\n      __format = \"%s: uart%d always busy, break\\n\";\n      goto LAB_00041c34;\n    }\n    usleep(3000);\n    iVar2 = iVar2 + -1;\n  } while (iVar2 != 0);\n  pthread_mutex_unlock(__mutex);\n  __format = \"%s: uart%d always dose not has enough send fifo space, break\\n\";\nLAB_00041c34:\n  snprintf(acStack_818,0x800,__format,\"uart_send\",param_1);\n  FUN_0002e584(0,acStack_818,0);\n  return 0;\n}\n\n",
    "FUN_00041c88": "\nundefined4 FUN_00041c88(uint param_1,undefined4 param_2,uint param_3)\n\n{\n  uint uVar1;\n  undefined4 uVar2;\n  pthread_mutex_t *__mutex;\n  \n  __mutex = (pthread_mutex_t *)(param_1 * 0x18 + 0x504e68);\n  pthread_mutex_lock(__mutex);\n  uVar1 = FUN_00041474(param_1 & 0xff);\n  if (uVar1 < param_3) {\n    param_3 = uVar1;\n  }\n  if (param_3 == 0) {\n    pthread_mutex_unlock(__mutex);\n    return 0;\n  }\n  uVar2 = FUN_00041794(param_1,param_2,param_3);\n  pthread_mutex_unlock(__mutex);\n  return uVar2;\n}\n\n",
    "FUN_00041cfc": "\nundefined4 FUN_00041cfc(int param_1,int param_2,undefined4 *param_3)\n\n{\n  undefined4 uVar1;\n  pthread_mutex_t *__mutex;\n  char acStack_810 [2048];\n  \n  if (param_3 == (undefined4 *)0x0) {\n    uVar1 = 0xfffffffd;\n  }\n  else {\n    __mutex = (pthread_mutex_t *)(param_1 * 0x18 + 0x504ce8);\n    pthread_mutex_lock(__mutex);\n    if (param_2 == 0) {\n      FUN_00040390(0xf,*param_3);\n    }\n    else {\n      snprintf(acStack_810,0x800,\"unknown set config type = %d\\n\",param_2);\n      FUN_0002e584(1,acStack_810,0);\n    }\n    pthread_mutex_unlock(__mutex);\n    uVar1 = 0xfffffffb;\n  }\n  return uVar1;\n}\n\n",
    "FUN_00041e38": "\nundefined4 FUN_00041e38(int param_1,int param_2,int *param_3)\n\n{\n  undefined4 uVar1;\n  pthread_mutex_t *__mutex;\n  char acStack_810 [2048];\n  \n  if (param_3 == (int *)0x0) {\n    uVar1 = 0xfffffffd;\n  }\n  else {\n    __mutex = (pthread_mutex_t *)(param_1 * 0x18 + 0x504ce8);\n    pthread_mutex_lock(__mutex);\n    if (param_2 == 0) {\n      FUN_00040390(0xf,*param_3 << 0x10);\n    }\n    else {\n      snprintf(acStack_810,0x800,\"unknown set config type = %d\\n\",param_2);\n      FUN_0002e584(1,acStack_810,0);\n    }\n    pthread_mutex_unlock(__mutex);\n    uVar1 = 0xfffffffb;\n  }\n  return uVar1;\n}\n\n",
    "FUN_00041f7c": "\nvoid FUN_00041f7c(uint param_1)\n\n{\n  size_t __size;\n  void *__ptr;\n  size_t sVar1;\n  pthread_mutex_t *__mutex;\n  char acStack_818 [2052];\n  \n  __mutex = (pthread_mutex_t *)(param_1 * 0x18 + 0x504e68);\n  pthread_mutex_lock(__mutex);\n  __size = FUN_00041474(param_1 & 0xff);\n  if (__size != 0) {\n    __ptr = malloc(__size);\n    if (__ptr == (void *)0x0) {\n      snprintf(acStack_818,0x800,\"%s: uart%d malloc buffer error\\n\",\"clear_uart_rx_fifo\",param_1);\n      FUN_0002e584(0,acStack_818,0);\n      usleep(500000);\n      pthread_mutex_unlock(__mutex);\n      return;\n    }\n    sVar1 = FUN_00041794(param_1,__ptr,__size);\n    if (__size != sVar1) {\n      snprintf(acStack_818,0x800,\"%s: uart%d clear rx fifo error. nbytes = %d, len = %d\\n\",\n               \"clear_uart_rx_fifo\",param_1,__size,sVar1);\n      FUN_0002e584(0,acStack_818);\n    }\n    free(__ptr);\n    usleep(10000);\n  }\n  pthread_mutex_unlock(__mutex);\n  return;\n}\n\n",
    "FUN_000420a4": "\nundefined4 FUN_000420a4(void)\n\n{\n  FUN_0004165c();\n  return 0;\n}\n\n",
    "FUN_000420b4": "\nundefined4 FUN_000420b4(void)\n\n{\n  FUN_00041f7c();\n  return 0;\n}\n\n",
    "FUN_000420c4": "\nundefined4 FUN_000420c4(uint param_1)\n\n{\n  undefined4 uVar1;\n  pthread_mutex_t *__mutex;\n  \n  __mutex = (pthread_mutex_t *)(param_1 * 0x18 + 0x504e68);\n  pthread_mutex_lock(__mutex);\n  uVar1 = FUN_00041474(param_1 & 0xff);\n  pthread_mutex_unlock(__mutex);\n  return uVar1;\n}\n\n",
    "FUN_00042100": "\nvoid FUN_00042100(void)\n\n{\n  int iVar1;\n  \n  iVar1 = FUN_000406e4(0x38b);\n  if (iVar1 == 0) {\n    FUN_00040794(0x38b);\n    FUN_00040ad8(0x38b,1);\n  }\n  FUN_00040ed4(0x38b,0);\n  return;\n}\n\n",
    "FUN_00042138": "\nvoid FUN_00042138(void)\n\n{\n  int iVar1;\n  \n  iVar1 = FUN_000406e4(0x38b);\n  if (iVar1 == 0) {\n    FUN_00040794(0x38b);\n    FUN_00040ad8(0x38b,1);\n  }\n  FUN_00040ed4(0x38b,1);\n  return;\n}\n\n",
    "FUN_00042180": "\nvoid FUN_00042180(undefined4 param_1,int param_2)\n\n{\n  int iVar1;\n  undefined4 local_c;\n  \n  if ((param_2 != 0) && (local_c = param_1, iVar1 = FUN_00043338(param_2,&local_c), iVar1 == 1)) {\n    FUN_00043358(param_2,&local_c);\n    return;\n  }\n  return;\n}\n\n",
    "FUN_000421c4": "\nundefined4 FUN_000421c4(void)\n\n{\n  int iVar1;\n  code **__ptr;\n  int *__ptr_00;\n  int local_24;\n  int local_20;\n  int local_1c;\n  \n  prctl(0xf,&DAT_000694ac,0,0,0);\n  while (DAT_00504fe8 != 0) {\n    iVar1 = pthread_mutex_lock((pthread_mutex_t *)&DAT_00504fec);\n    if (iVar1 == 0) {\n      __ptr = (code **)FUN_00043440(DAT_00505004);\n      iVar1 = (**__ptr)();\n      while (iVar1 != 0) {\n        __ptr_00 = (int *)(*__ptr[2])();\n        iVar1 = __ptr_00[1];\n        if (iVar1 == 0) {\n          FUN_00040ed4(*(undefined4 *)**(undefined4 **)(__ptr[5] + 0x10),\n                       *(undefined *)(__ptr_00 + 2));\n          local_24 = *__ptr_00;\n          local_1c = __ptr_00[2] + -1;\n          if (local_1c != 0) {\n            local_1c = 1;\n          }\n          __ptr_00[2] = local_1c;\n          iVar1 = local_24;\n        }\n        else {\n          local_24 = *__ptr_00;\n          local_1c = __ptr_00[2];\n        }\n        local_20 = iVar1 + -200;\n        __ptr_00[1] = local_20;\n        (*__ptr[1])(__ptr,&local_24);\n        free(__ptr_00);\n        iVar1 = (**__ptr)(__ptr);\n      }\n      free(__ptr);\n      pthread_mutex_unlock((pthread_mutex_t *)&DAT_00504fec);\n    }\n    usleep(200000);\n  }\n  return 0;\n}\n\n",
    "FUN_00042308": "\nundefined4 FUN_00042308(int param_1)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  char acStack_808 [2048];\n  \n  iVar1 = FUN_00043014();\n  if (iVar1 == param_1) {\n    uVar2 = 0x100;\n  }\n  else {\n    iVar1 = FUN_0004301c(iVar1);\n    if (iVar1 == param_1) {\n      uVar2 = 0x101;\n    }\n    else {\n      snprintf(acStack_808,0x800,\"unmaped port = %d\\n\",param_1);\n      FUN_0002e584(0,acStack_808);\n      uVar2 = 0x102;\n    }\n  }\n  return uVar2;\n}\n\n",
    "FUN_00042368": "\nundefined4 FUN_00042368(void)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  \n  iVar1 = FUN_00043004();\n  if (iVar1 < 0) {\n    return 0;\n  }\n  uVar2 = FUN_00043004();\n  return uVar2;\n}\n\n",
    "FUN_00042388": "\nundefined4 FUN_00042388(uint param_1)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  \n  if (param_1 == 2) {\n    iVar1 = FUN_0004300c();\n    if (-1 < iVar1) {\n      uVar2 = FUN_0004300c();\n      return uVar2;\n    }\n  }\n  else if (param_1 < 3) {\n    if (param_1 == 1) {\n      uVar2 = FUN_00042368();\n      return uVar2;\n    }\n  }\n  else if (param_1 == 0x100) {\n    iVar1 = FUN_00043014();\n    if (-1 < iVar1) {\n      uVar2 = FUN_00043014();\n      return uVar2;\n    }\n  }\n  else if ((param_1 == 0x101) && (iVar1 = FUN_0004301c(), -1 < iVar1)) {\n    uVar2 = FUN_0004301c();\n    return uVar2;\n  }\n  return 0;\n}\n\n",
    "FUN_00042400": "\nvoid FUN_00042400(void)\n\n{\n  pthread_attr_t pStack_34;\n  \n  pthread_mutex_init((pthread_mutex_t *)&DAT_00504fec,(pthread_mutexattr_t *)0x0);\n  DAT_00505008 = 0;\n  DAT_0050500c = 0;\n  DAT_00505010 = 0;\n  DAT_00505014 = 0;\n  DAT_00505018 = 0;\n  DAT_00505004 = FUN_000432d0(&LAB_00042170,0,0);\n  pthread_attr_init(&pStack_34);\n  pthread_attr_setstacksize(&pStack_34,0x200000);\n  pthread_create((pthread_t *)&DAT_0050501c,&pStack_34,FUN_000421c4,(void *)0x0);\n  DAT_00504fe8 = 1;\n  return;\n}\n\n",
    "FUN_00042488": "\nvoid FUN_00042488(undefined4 param_1)\n\n{\n  char acStack_808 [2056];\n  \n  snprintf(acStack_808,0x800,\"gpio port %d is not a supported key\\n\",param_1);\n  FUN_0002e584(1,acStack_808,0);\n  return;\n}\n\n",
    "FUN_000424c8": "\nvoid FUN_000424c8(undefined4 param_1,int param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  code **ppcVar3;\n  code **ppcVar4;\n  \n  iVar1 = FUN_00042308();\n  if (iVar1 != 0x102) {\n    ppcVar3 = (code **)&DAT_00505008;\n    do {\n      ppcVar4 = ppcVar3 + 1;\n      if (*ppcVar3 != (code *)0x0) {\n        iVar2 = param_2;\n        if (param_2 != 0) {\n          iVar2 = 1;\n        }\n        (**ppcVar3)(iVar1,iVar2);\n      }\n      ppcVar3 = ppcVar4;\n    } while (ppcVar4 != (code **)&DAT_0050501c);\n    return;\n  }\n  FUN_00042488(param_1);\n  return;\n}\n\n",
    "FUN_00042694": "\nundefined4 FUN_00042694(void)\n\n{\n  undefined4 uVar1;\n  \n  if (DAT_00505020 == 0) {\n    FUN_00042368();\n    FUN_00040794();\n    uVar1 = FUN_00042368();\n    FUN_00040ad8(uVar1,1);\n    FUN_00042388(2);\n    FUN_00040794();\n    uVar1 = FUN_00042388(2);\n    FUN_00040ad8(uVar1,1);\n    FUN_00042388(0x100);\n    FUN_00040794();\n    uVar1 = FUN_00042388(0x100);\n    FUN_00040ad8(uVar1,0);\n    FUN_00042388(0x101);\n    FUN_00040794();\n    uVar1 = FUN_00042388(0x101);\n    FUN_00040ad8(uVar1,0);\n    DAT_00505020 = 1;\n  }\n  return 0;\n}\n\n",
    "FUN_00042724": "\nvoid FUN_00042724(void)\n\n{\n  return;\n}\n\n",
    "FUN_00042728": "\n/* WARNING: Removing unreachable block (ram,0x000425a4) */\n/* WARNING: Removing unreachable block (ram,0x000425b0) */\n/* WARNING: Removing unreachable block (ram,0x000425c4) */\n/* WARNING: Removing unreachable block (ram,0x000425ec) */\n/* WARNING: Removing unreachable block (ram,0x000425cc) */\n\nundefined4 FUN_00042728(void)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 uVar3;\n  undefined4 local_818;\n  undefined4 local_814;\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 local_808;\n  undefined2 local_804;\n  \n  iVar1 = FUN_00042388(1);\n  if (iVar1 == 0) {\n    uVar3 = 0xffffffff;\n    local_818._0_1_ = 'u';\n    local_818._1_1_ = 'n';\n    local_818._2_1_ = 's';\n    local_818._3_1_ = 'u';\n    local_814._0_1_ = 'p';\n    local_814._1_1_ = 'o';\n    local_814._2_1_ = 'r';\n    local_814._3_1_ = 't';\n    local_810._0_1_ = 'e';\n    local_810._1_1_ = 'd';\n    local_810._2_1_ = ' ';\n    local_810._3_1_ = 'g';\n    uStack_80c._0_1_ = 'p';\n    uStack_80c._1_1_ = 'i';\n    uStack_80c._2_1_ = 'o';\n    uStack_80c._3_1_ = ' ';\n    local_808._0_1_ = 'p';\n    local_808._1_1_ = 'o';\n    local_808._2_1_ = 'r';\n    local_808._3_1_ = 't';\n    local_804 = 10;\n    FUN_0002e584(0,&local_818,0);\n  }\n  else {\n    iVar2 = pthread_mutex_lock((pthread_mutex_t *)&DAT_00504fec);\n    if (iVar2 == 0) {\n      FUN_00042180(iVar1,DAT_00505004);\n      uVar3 = FUN_00040ed4(iVar1,1);\n      pthread_mutex_unlock((pthread_mutex_t *)&DAT_00504fec);\n    }\n    else {\n      uVar3 = 0xffffffff;\n      local_818._0_1_ = 'f';\n      local_818._1_1_ = 'a';\n      local_818._2_1_ = 'i';\n      local_818._3_1_ = 'l';\n      local_814._0_1_ = 'e';\n      local_814._1_1_ = 'd';\n      local_814._2_1_ = ' ';\n      local_814._3_1_ = 't';\n      local_810._0_1_ = 'o';\n      local_810._1_1_ = ' ';\n      local_810._2_1_ = 'a';\n      local_810._3_1_ = 'p';\n      uStack_80c._0_1_ = 'i';\n      uStack_80c._1_1_ = ' ';\n      uStack_80c._2_1_ = 'l';\n      uStack_80c._3_1_ = 'o';\n      local_808._0_1_ = 'c';\n      local_808._1_1_ = 'k';\n      local_808._2_1_ = '\\n';\n      local_808._3_1_ = '\\0';\n      FUN_0002e584(0,&local_818);\n    }\n  }\n  return uVar3;\n}\n\n",
    "FUN_00042734": "\n/* WARNING: Removing unreachable block (ram,0x00042568) */\n/* WARNING: Removing unreachable block (ram,0x00042570) */\n/* WARNING: Removing unreachable block (ram,0x000425a4) */\n/* WARNING: Removing unreachable block (ram,0x000425b0) */\n/* WARNING: Removing unreachable block (ram,0x000425c4) */\n/* WARNING: Removing unreachable block (ram,0x000425ec) */\n\nundefined4 FUN_00042734(void)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 uVar3;\n  undefined4 uStack_818;\n  undefined4 uStack_814;\n  undefined4 uStack_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined2 uStack_804;\n  \n  iVar1 = FUN_00042388(1);\n  if (iVar1 == 0) {\n    uVar3 = 0xffffffff;\n    uStack_818._0_1_ = 'u';\n    uStack_818._1_1_ = 'n';\n    uStack_818._2_1_ = 's';\n    uStack_818._3_1_ = 'u';\n    uStack_814._0_1_ = 'p';\n    uStack_814._1_1_ = 'o';\n    uStack_814._2_1_ = 'r';\n    uStack_814._3_1_ = 't';\n    uStack_810._0_1_ = 'e';\n    uStack_810._1_1_ = 'd';\n    uStack_810._2_1_ = ' ';\n    uStack_810._3_1_ = 'g';\n    uStack_80c._0_1_ = 'p';\n    uStack_80c._1_1_ = 'i';\n    uStack_80c._2_1_ = 'o';\n    uStack_80c._3_1_ = ' ';\n    uStack_808._0_1_ = 'p';\n    uStack_808._1_1_ = 'o';\n    uStack_808._2_1_ = 'r';\n    uStack_808._3_1_ = 't';\n    uStack_804 = 10;\n    FUN_0002e584(0,&uStack_818,0);\n  }\n  else {\n    iVar2 = pthread_mutex_lock((pthread_mutex_t *)&DAT_00504fec);\n    if (iVar2 == 0) {\n      FUN_00042180(iVar1,DAT_00505004);\n      uVar3 = FUN_00040ed4(iVar1,0);\n      pthread_mutex_unlock((pthread_mutex_t *)&DAT_00504fec);\n    }\n    else {\n      uVar3 = 0xffffffff;\n      uStack_818._0_1_ = 'f';\n      uStack_818._1_1_ = 'a';\n      uStack_818._2_1_ = 'i';\n      uStack_818._3_1_ = 'l';\n      uStack_814._0_1_ = 'e';\n      uStack_814._1_1_ = 'd';\n      uStack_814._2_1_ = ' ';\n      uStack_814._3_1_ = 't';\n      uStack_810._0_1_ = 'o';\n      uStack_810._1_1_ = ' ';\n      uStack_810._2_1_ = 'a';\n      uStack_810._3_1_ = 'p';\n      uStack_80c._0_1_ = 'i';\n      uStack_80c._1_1_ = ' ';\n      uStack_80c._2_1_ = 'l';\n      uStack_80c._3_1_ = 'o';\n      uStack_808._0_1_ = 'c';\n      uStack_808._1_1_ = 'k';\n      uStack_808._2_1_ = '\\n';\n      uStack_808._3_1_ = '\\0';\n      FUN_0002e584(0,&uStack_818);\n    }\n  }\n  return uVar3;\n}\n\n",
    "FUN_00042778": "\n/* WARNING: Removing unreachable block (ram,0x000425a4) */\n/* WARNING: Removing unreachable block (ram,0x000425b0) */\n/* WARNING: Removing unreachable block (ram,0x000425c4) */\n/* WARNING: Removing unreachable block (ram,0x000425ec) */\n/* WARNING: Removing unreachable block (ram,0x000425cc) */\n\nundefined4 FUN_00042778(void)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 uVar3;\n  undefined4 uStack_818;\n  undefined4 uStack_814;\n  undefined4 uStack_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined2 uStack_804;\n  \n  iVar1 = FUN_00042388(2);\n  if (iVar1 == 0) {\n    uVar3 = 0xffffffff;\n    uStack_818._0_1_ = 'u';\n    uStack_818._1_1_ = 'n';\n    uStack_818._2_1_ = 's';\n    uStack_818._3_1_ = 'u';\n    uStack_814._0_1_ = 'p';\n    uStack_814._1_1_ = 'o';\n    uStack_814._2_1_ = 'r';\n    uStack_814._3_1_ = 't';\n    uStack_810._0_1_ = 'e';\n    uStack_810._1_1_ = 'd';\n    uStack_810._2_1_ = ' ';\n    uStack_810._3_1_ = 'g';\n    uStack_80c._0_1_ = 'p';\n    uStack_80c._1_1_ = 'i';\n    uStack_80c._2_1_ = 'o';\n    uStack_80c._3_1_ = ' ';\n    uStack_808._0_1_ = 'p';\n    uStack_808._1_1_ = 'o';\n    uStack_808._2_1_ = 'r';\n    uStack_808._3_1_ = 't';\n    uStack_804 = 10;\n    FUN_0002e584(0,&uStack_818,0);\n  }\n  else {\n    iVar2 = pthread_mutex_lock((pthread_mutex_t *)&DAT_00504fec);\n    if (iVar2 == 0) {\n      FUN_00042180(iVar1,DAT_00505004);\n      uVar3 = FUN_00040ed4(iVar1,1);\n      pthread_mutex_unlock((pthread_mutex_t *)&DAT_00504fec);\n    }\n    else {\n      uVar3 = 0xffffffff;\n      uStack_818._0_1_ = 'f';\n      uStack_818._1_1_ = 'a';\n      uStack_818._2_1_ = 'i';\n      uStack_818._3_1_ = 'l';\n      uStack_814._0_1_ = 'e';\n      uStack_814._1_1_ = 'd';\n      uStack_814._2_1_ = ' ';\n      uStack_814._3_1_ = 't';\n      uStack_810._0_1_ = 'o';\n      uStack_810._1_1_ = ' ';\n      uStack_810._2_1_ = 'a';\n      uStack_810._3_1_ = 'p';\n      uStack_80c._0_1_ = 'i';\n      uStack_80c._1_1_ = ' ';\n      uStack_80c._2_1_ = 'l';\n      uStack_80c._3_1_ = 'o';\n      uStack_808._0_1_ = 'c';\n      uStack_808._1_1_ = 'k';\n      uStack_808._2_1_ = '\\n';\n      uStack_808._3_1_ = '\\0';\n      FUN_0002e584(0,&uStack_818);\n    }\n  }\n  return uVar3;\n}\n\n",
    "FUN_00042784": "\n/* WARNING: Removing unreachable block (ram,0x00042568) */\n/* WARNING: Removing unreachable block (ram,0x00042570) */\n/* WARNING: Removing unreachable block (ram,0x000425a4) */\n/* WARNING: Removing unreachable block (ram,0x000425b0) */\n/* WARNING: Removing unreachable block (ram,0x000425c4) */\n/* WARNING: Removing unreachable block (ram,0x000425ec) */\n\nundefined4 FUN_00042784(void)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 uVar3;\n  undefined4 uStack_818;\n  undefined4 uStack_814;\n  undefined4 uStack_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined2 uStack_804;\n  \n  iVar1 = FUN_00042388(2);\n  if (iVar1 == 0) {\n    uVar3 = 0xffffffff;\n    uStack_818._0_1_ = 'u';\n    uStack_818._1_1_ = 'n';\n    uStack_818._2_1_ = 's';\n    uStack_818._3_1_ = 'u';\n    uStack_814._0_1_ = 'p';\n    uStack_814._1_1_ = 'o';\n    uStack_814._2_1_ = 'r';\n    uStack_814._3_1_ = 't';\n    uStack_810._0_1_ = 'e';\n    uStack_810._1_1_ = 'd';\n    uStack_810._2_1_ = ' ';\n    uStack_810._3_1_ = 'g';\n    uStack_80c._0_1_ = 'p';\n    uStack_80c._1_1_ = 'i';\n    uStack_80c._2_1_ = 'o';\n    uStack_80c._3_1_ = ' ';\n    uStack_808._0_1_ = 'p';\n    uStack_808._1_1_ = 'o';\n    uStack_808._2_1_ = 'r';\n    uStack_808._3_1_ = 't';\n    uStack_804 = 10;\n    FUN_0002e584(0,&uStack_818,0);\n  }\n  else {\n    iVar2 = pthread_mutex_lock((pthread_mutex_t *)&DAT_00504fec);\n    if (iVar2 == 0) {\n      FUN_00042180(iVar1,DAT_00505004);\n      uVar3 = FUN_00040ed4(iVar1,0);\n      pthread_mutex_unlock((pthread_mutex_t *)&DAT_00504fec);\n    }\n    else {\n      uVar3 = 0xffffffff;\n      uStack_818._0_1_ = 'f';\n      uStack_818._1_1_ = 'a';\n      uStack_818._2_1_ = 'i';\n      uStack_818._3_1_ = 'l';\n      uStack_814._0_1_ = 'e';\n      uStack_814._1_1_ = 'd';\n      uStack_814._2_1_ = ' ';\n      uStack_814._3_1_ = 't';\n      uStack_810._0_1_ = 'o';\n      uStack_810._1_1_ = ' ';\n      uStack_810._2_1_ = 'a';\n      uStack_810._3_1_ = 'p';\n      uStack_80c._0_1_ = 'i';\n      uStack_80c._1_1_ = ' ';\n      uStack_80c._2_1_ = 'l';\n      uStack_80c._3_1_ = 'o';\n      uStack_808._0_1_ = 'c';\n      uStack_808._1_1_ = 'k';\n      uStack_808._2_1_ = '\\n';\n      uStack_808._3_1_ = '\\0';\n      FUN_0002e584(0,&uStack_818);\n    }\n  }\n  return uVar3;\n}\n\n",
    "FUN_00042be0": "\nvoid FUN_00042be0(void)\n\n{\n  int iVar1;\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined4 uStack_7fc;\n  undefined4 local_7f8;\n  \n  iVar1 = pthread_mutex_lock((pthread_mutex_t *)&DAT_00504fec);\n  if (iVar1 == 0) {\n    if (0 < DAT_0007f418) {\n      FUN_00042e88();\n    }\n    pthread_mutex_unlock((pthread_mutex_t *)&DAT_00504fec);\n    return;\n  }\n  local_808._0_1_ = 'f';\n  local_808._1_1_ = 'a';\n  local_808._2_1_ = 'i';\n  local_808._3_1_ = 'l';\n  uStack_804._0_1_ = 'e';\n  uStack_804._1_1_ = 'd';\n  uStack_804._2_1_ = ' ';\n  uStack_804._3_1_ = 't';\n  uStack_800._0_1_ = 'o';\n  uStack_800._1_1_ = ' ';\n  uStack_800._2_1_ = 'a';\n  uStack_800._3_1_ = 'p';\n  uStack_7fc._0_1_ = 'i';\n  uStack_7fc._1_1_ = ' ';\n  uStack_7fc._2_1_ = 'l';\n  uStack_7fc._3_1_ = 'o';\n  local_7f8._0_1_ = 'c';\n  local_7f8._1_1_ = 'k';\n  local_7f8._2_1_ = '\\n';\n  local_7f8._3_1_ = '\\0';\n  FUN_0002e584(0,&local_808);\n  return;\n}\n\n",
    "FUN_00042c68": "\nint FUN_00042c68(char *param_1)\n\n{\n  int iVar1;\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined4 uStack_804;\n  undefined4 local_800;\n  \n  if (DAT_00505028 == 0) {\n    if (param_1 == (char *)0x0) {\n      local_810._0_1_ = 'b';\n      local_810._1_1_ = 'a';\n      local_810._2_1_ = 'd';\n      local_810._3_1_ = ' ';\n      uStack_80c._0_1_ = 'p';\n      uStack_80c._1_1_ = 'a';\n      uStack_80c._2_1_ = 'r';\n      uStack_80c._3_1_ = 'a';\n      uStack_808 = CONCAT13(uStack_808._3_1_,0xa6d);\n      FUN_0002e584(0,&local_810,0);\n      iVar1 = -3;\n    }\n    else {\n      iVar1 = open64(param_1,0x802);\n      DAT_0050502c = iVar1;\n      if (iVar1 < 0) {\n        local_810._0_1_ = 'o';\n        local_810._1_1_ = 'p';\n        local_810._2_1_ = 'e';\n        local_810._3_1_ = 'n';\n        uStack_80c._0_1_ = ' ';\n        uStack_80c._1_1_ = 'l';\n        uStack_80c._2_1_ = 'c';\n        uStack_80c._3_1_ = 'd';\n        uStack_808._0_1_ = ' ';\n        uStack_808._1_1_ = 'f';\n        uStack_808._2_1_ = 'a';\n        uStack_808._3_1_ = 'i';\n        uStack_804._0_1_ = 'l';\n        uStack_804._1_1_ = 'e';\n        uStack_804._2_1_ = 'd';\n        uStack_804._3_1_ = '!';\n        local_800._0_1_ = '!';\n        local_800._1_1_ = '!';\n        local_800._2_1_ = '\\n';\n        local_800._3_1_ = '\\0';\n        FUN_0002e584(0,&local_810,0);\n        iVar1 = -1;\n      }\n      else {\n        DAT_00505028 = 1;\n      }\n    }\n  }\n  else {\n    iVar1 = 0;\n  }\n  return iVar1;\n}\n\n",
    "FUN_00042d2c": "\nundefined4 FUN_00042d2c(int param_1,uint param_2,int param_3,uint param_4)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  void *__src;\n  uint uVar3;\n  size_t __n;\n  bool bVar4;\n  bool bVar5;\n  undefined4 local_828;\n  undefined4 uStack_824;\n  undefined4 uStack_820;\n  undefined4 uStack_81c;\n  undefined4 local_818;\n  \n  if (DAT_00505028 == 0) {\n    uVar2 = 0xfffffffe;\n  }\n  else {\n    if (DAT_0050502c == param_1) {\n      bVar5 = 0x3f < param_4;\n      bVar4 = param_4 == 0x40;\n      if (param_4 < 0x41) {\n        bVar5 = 2 < (param_2 & 0xff);\n        bVar4 = (param_2 & 0xff) == 3;\n      }\n      if (!bVar5 || bVar4) {\n        iVar1 = pthread_mutex_lock((pthread_mutex_t *)&DAT_00505030);\n        if (iVar1 == 0) {\n          iVar1 = 0;\n          do {\n            uVar3 = param_2 + 1;\n            __n = param_4;\n            if (0xf < param_4) {\n              __n = 0x10;\n            }\n            __src = (void *)(param_3 + iVar1);\n            iVar1 = iVar1 + __n;\n            memcpy(&DAT_00505048 + param_2 * 0x10,__src,__n);\n            param_4 = param_4 - __n;\n            param_2 = (uint)(char)uVar3;\n          } while ((uVar3 & 0xff) < 4 && param_4 != 0);\n          write(DAT_0050502c,&DAT_00505048,0x40);\n          pthread_mutex_unlock((pthread_mutex_t *)&DAT_00505030);\n          return 0;\n        }\n        local_828._0_1_ = 'f';\n        local_828._1_1_ = 'a';\n        local_828._2_1_ = 'i';\n        local_828._3_1_ = 'l';\n        uStack_824._0_1_ = 'e';\n        uStack_824._1_1_ = 'd';\n        uStack_824._2_1_ = ' ';\n        uStack_824._3_1_ = 't';\n        uStack_820._0_1_ = 'o';\n        uStack_820._1_1_ = ' ';\n        uStack_820._2_1_ = 'l';\n        uStack_820._3_1_ = 'c';\n        uStack_81c._0_1_ = 'd';\n        uStack_81c._1_1_ = ' ';\n        uStack_81c._2_1_ = 'l';\n        uStack_81c._3_1_ = 'o';\n        local_818._0_1_ = 'c';\n        local_818._1_1_ = 'k';\n        local_818._2_1_ = '\\n';\n        local_818._3_1_ = '\\0';\n        FUN_0002e584(0,&local_828,0);\n        return 0xfffffffc;\n      }\n    }\n    local_828._0_1_ = 'b';\n    local_828._1_1_ = 'a';\n    local_828._2_1_ = 'd';\n    local_828._3_1_ = ' ';\n    uStack_824._0_1_ = 'p';\n    uStack_824._1_1_ = 'a';\n    uStack_824._2_1_ = 'r';\n    uStack_824._3_1_ = 'a';\n    uStack_820 = CONCAT13(uStack_820._3_1_,0xa6d);\n    FUN_0002e584(1,&local_828,0);\n    uVar2 = 0xfffffffd;\n  }\n  return uVar2;\n}\n\n",
    "FUN_00042e88": "\nundefined4 FUN_00042e88(int param_1)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  int __whence;\n  uint in_stack_fffff7ec;\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined4 uStack_804;\n  undefined4 local_800;\n  \n  if (DAT_00505028 == 0) {\n    uVar2 = 0xfffffffe;\n  }\n  else if (DAT_0050502c == param_1) {\n    iVar1 = pthread_mutex_lock((pthread_mutex_t *)&DAT_00505030);\n    if (iVar1 == 0) {\n      memset(&DAT_00505048,0x20,0x40);\n      iVar1 = DAT_0050502c;\n      lseek64(DAT_0050502c,(ulonglong)in_stack_fffff7ec << 0x20,__whence);\n      write(iVar1,&DAT_00505048,0x40);\n      pthread_mutex_unlock((pthread_mutex_t *)&DAT_00505030);\n      uVar2 = 0;\n    }\n    else {\n      local_810._0_1_ = 'f';\n      local_810._1_1_ = 'a';\n      local_810._2_1_ = 'i';\n      local_810._3_1_ = 'l';\n      uStack_80c._0_1_ = 'e';\n      uStack_80c._1_1_ = 'd';\n      uStack_80c._2_1_ = ' ';\n      uStack_80c._3_1_ = 't';\n      uStack_808._0_1_ = 'o';\n      uStack_808._1_1_ = ' ';\n      uStack_808._2_1_ = 'l';\n      uStack_808._3_1_ = 'c';\n      uStack_804._0_1_ = 'd';\n      uStack_804._1_1_ = ' ';\n      uStack_804._2_1_ = 'l';\n      uStack_804._3_1_ = 'o';\n      local_800._0_1_ = 'c';\n      local_800._1_1_ = 'k';\n      local_800._2_1_ = '\\n';\n      local_800._3_1_ = '\\0';\n      FUN_0002e584(0,&local_810);\n      uVar2 = 0xfffffffc;\n    }\n  }\n  else {\n    local_810._0_1_ = 'b';\n    local_810._1_1_ = 'a';\n    local_810._2_1_ = 'd';\n    local_810._3_1_ = ' ';\n    uStack_80c._0_1_ = 'p';\n    uStack_80c._1_1_ = 'a';\n    uStack_80c._2_1_ = 'r';\n    uStack_80c._3_1_ = 'a';\n    uStack_808 = CONCAT13(uStack_808._3_1_,0xa6d);\n    FUN_0002e584(1,&local_810,0);\n    uVar2 = 0xfffffffd;\n  }\n  return uVar2;\n}\n\n",
    "FUN_00042f88": "\nint FUN_00042f88(int param_1)\n\n{\n  int iVar1;\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined4 uStack_7fc;\n  undefined4 uStack_7f8;\n  undefined local_7f4;\n  \n  if (DAT_00505028 != 0) {\n    iVar1 = close(param_1);\n    if (iVar1 != 0) {\n      local_808._0_1_ = 'l';\n      local_808._1_1_ = 'c';\n      local_808._2_1_ = 'd';\n      local_808._3_1_ = ' ';\n      uStack_804._0_1_ = 'c';\n      uStack_804._1_1_ = 'l';\n      uStack_804._2_1_ = 'o';\n      uStack_804._3_1_ = 's';\n      uStack_800._0_1_ = 'e';\n      uStack_800._1_1_ = ' ';\n      uStack_800._2_1_ = 'f';\n      uStack_800._3_1_ = 'a';\n      uStack_7fc._0_1_ = 'i';\n      uStack_7fc._1_1_ = 'l';\n      uStack_7fc._2_1_ = 'e';\n      uStack_7fc._3_1_ = 'd';\n      uStack_7f8._0_1_ = '!';\n      uStack_7f8._1_1_ = '!';\n      uStack_7f8._2_1_ = '!';\n      uStack_7f8._3_1_ = '\\n';\n      local_7f4 = 0;\n      FUN_0002e584(0,&local_808);\n      iVar1 = -1;\n    }\n    DAT_00505028 = 0;\n    return iVar1;\n  }\n  return 0;\n}\n\n",
    "FUN_00043004": "\nundefined4 FUN_00043004(void)\n\n{\n  return 0x3ad;\n}\n\n",
    "FUN_0004300c": "\nundefined4 FUN_0004300c(void)\n\n{\n  return 0x3ae;\n}\n\n",
    "FUN_00043014": "\nundefined4 FUN_00043014(void)\n\n{\n  return 0x399;\n}\n\n",
    "FUN_0004301c": "\nundefined4 FUN_0004301c(void)\n\n{\n  return 0x3af;\n}\n\n",
    "FUN_00043230": "\nvoid FUN_00043230(int param_1,undefined4 param_2,undefined4 param_3)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined4 local_1c [2];\n  \n  piVar2 = *(int **)(param_1 + 0xc);\n  iVar1 = *(int *)(param_1 + 0x14);\n  if (*(int *)(*piVar2 + 0x20) != 0) {\n    FUN_00044000(iVar1,local_1c);\n    (**(code **)(*piVar2 + 0x20))(local_1c[0]);\n    iVar1 = *(int *)(param_1 + 0x14);\n  }\n  FUN_00044040(*(undefined4 *)(iVar1 + 0x14),param_2,param_3);\n  return;\n}\n\n",
    "FUN_000432d0": "\nint * FUN_000432d0(undefined4 param_1,undefined4 param_2,undefined4 param_3)\n\n{\n  int *piVar1;\n  int iVar2;\n  \n  piVar1 = (int *)malloc(4);\n  if (piVar1 != (int *)0x0) {\n    iVar2 = FUN_000437ac(param_1,param_2,param_3);\n    *piVar1 = iVar2;\n    if (iVar2 != 0) {\n      return piVar1;\n    }\n  }\n  return (int *)0x0;\n}\n\n",
    "FUN_00043320": "\nundefined4\nFUN_00043320(int *param_1,undefined4 param_2,undefined4 param_3,int param_4,undefined4 param_5)\n\n{\n  void **ppvVar1;\n  void **ppvVar2;\n  void *pvVar3;\n  int iVar4;\n  void **ppvVar5;\n  void **ppvVar6;\n  void **ppvVar7;\n  void **ppvVar8;\n  void *local_28;\n  void *local_24 [2];\n  \n  if (param_1 == (int *)0x0) {\n    return 0x1f5;\n  }\n  ppvVar1 = (void **)*param_1;\n  ppvVar2 = (void **)malloc(0x18);\n  if (ppvVar2 == (void **)0x0) {\n    return 2;\n  }\n  ppvVar5 = ppvVar1 + 1;\n  *ppvVar2 = ppvVar5;\n  ppvVar2[1] = ppvVar5;\n  ppvVar2[3] = (void *)0x1;\n  pvVar3 = (void *)FUN_00043fa4(param_2,param_3);\n  ppvVar2[4] = pvVar3;\n  if (param_4 == 0) {\n    ppvVar2[5] = (void *)0x0;\n  }\n  else {\n    pvVar3 = (void *)FUN_00043fa4(param_4,param_5);\n    ppvVar2[5] = pvVar3;\n  }\n  ppvVar7 = (void **)*ppvVar1;\n  if (ppvVar5 == (void **)*ppvVar1) {\n    *ppvVar1 = ppvVar2;\n    ppvVar2[2] = (void *)0x0;\n    ppvVar5 = ppvVar2;\n  }\n  else {\n    do {\n      ppvVar6 = ppvVar7;\n      FUN_00044000(ppvVar6[4],&local_28);\n      FUN_00044000(ppvVar2[4],local_24);\n      iVar4 = (*(code *)ppvVar1[9])(local_24[0],local_28);\n      free(local_28);\n      free(local_24[0]);\n      if (iVar4 == 0) {\n        return 0x191;\n      }\n      ppvVar8 = ppvVar6 + 1;\n      if (iVar4 < 0) {\n        ppvVar8 = ppvVar6;\n      }\n      ppvVar7 = (void **)*ppvVar8;\n    } while (ppvVar5 != (void **)*ppvVar8);\n    ppvVar2[2] = ppvVar6;\n    FUN_00044000(ppvVar6[4],&local_28);\n    FUN_00044000(ppvVar2[4],local_24);\n    iVar4 = (*(code *)ppvVar1[9])(local_24[0],local_28);\n    free(local_28);\n    free(local_24[0]);\n    ppvVar5 = (void **)*ppvVar1;\n    if (iVar4 < 0) {\n      *ppvVar6 = ppvVar2;\n    }\n    else {\n      ppvVar6[1] = ppvVar2;\n    }\nLAB_000439bc:\n    ppvVar7 = ppvVar2;\n    if (ppvVar2 != ppvVar5) {\n      while( true ) {\n        ppvVar6 = (void **)ppvVar7[2];\n        if (ppvVar6[3] != (void *)0x1) goto LAB_00043a1c;\n        ppvVar2 = (void **)ppvVar6[2];\n        ppvVar8 = (void **)*ppvVar2;\n        if (ppvVar6 == ppvVar8) {\n          pvVar3 = ppvVar2[1];\n          if (*(int *)((int)pvVar3 + 0xc) == 1) {\n            ppvVar6[3] = (void *)0x0;\n            *(undefined4 *)((int)pvVar3 + 0xc) = 0;\n            ppvVar2[3] = (void *)0x1;\n          }\n          else {\n            if ((void **)ppvVar8[1] == ppvVar7) {\n              FUN_0004348c(ppvVar1,ppvVar8);\n              ppvVar8 = (void **)ppvVar8[2];\n              ppvVar2 = (void **)ppvVar8[2];\n              ppvVar7 = ppvVar6;\n            }\n            ppvVar8[3] = (void *)0x0;\n            ppvVar2[3] = (void *)0x1;\n            FUN_000434e0(ppvVar1,ppvVar2);\n            ppvVar5 = (void **)*ppvVar1;\n            ppvVar2 = ppvVar7;\n          }\n          goto LAB_000439bc;\n        }\n        if (ppvVar8[3] == (void *)0x1) break;\n        ppvVar5 = ppvVar6;\n        if (ppvVar7 == (void **)*ppvVar6) {\n          FUN_000434e0(ppvVar1,ppvVar6);\n          ppvVar5 = (void **)ppvVar6[2];\n          ppvVar2 = (void **)ppvVar5[2];\n          ppvVar7 = ppvVar6;\n        }\n        ppvVar5[3] = (void *)0x0;\n        ppvVar2[3] = (void *)0x1;\n        FUN_0004348c(ppvVar1,ppvVar2);\n        ppvVar5 = (void **)*ppvVar1;\n        if (ppvVar7 == ppvVar5) goto LAB_00043a1c;\n      }\n      ppvVar6[3] = (void *)0x0;\n      ppvVar8[3] = (void *)0x0;\n      ppvVar2[3] = (void *)0x1;\n      goto LAB_000439bc;\n    }\n  }\nLAB_00043a1c:\n  ppvVar5[3] = (void *)0x0;\n  FUN_0004372c(ppvVar1);\n  return 0;\n}\n\n",
    "FUN_00043338": "\nint FUN_00043338(undefined4 *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 == (undefined4 *)0x0) {\n    return 0;\n  }\n  iVar1 = FUN_00043804(*param_1);\n  if (iVar1 != 0) {\n    iVar1 = 1;\n  }\n  return iVar1;\n}\n\n",
    "FUN_00043358": "\nundefined4 FUN_00043358(undefined4 *param_1)\n\n{\n  void *__ptr;\n  void *local_c;\n  \n  if (param_1 != (undefined4 *)0x0) {\n    __ptr = (void *)FUN_00043ae8(*param_1);\n    if (__ptr != (void *)0x0) {\n      FUN_00044000(*(undefined4 *)((int)__ptr + 0x10),&local_c);\n      free(local_c);\n      FUN_00044074(*(undefined4 *)((int)__ptr + 0x10));\n      FUN_00044000(*(undefined4 *)((int)__ptr + 0x14),&local_c);\n      free(local_c);\n      FUN_00044074(*(undefined4 *)((int)__ptr + 0x14));\n      free(__ptr);\n    }\n    return 0;\n  }\n  return 0x1f5;\n}\n\n",
    "FUN_000433d0": "\nundefined4 FUN_000433d0(undefined4 *param_1,undefined4 param_2,undefined4 param_3)\n\n{\n  int iVar1;\n  \n  if (param_1 == (undefined4 *)0x0) {\n    return 0;\n  }\n  iVar1 = FUN_00043804(*param_1);\n  if (iVar1 != 0) {\n    FUN_00044000(*(undefined4 *)(iVar1 + 0x14),param_3);\n    return 1;\n  }\n  return 0;\n}\n\n",
    "FUN_00043414": "\nundefined4 FUN_00043414(undefined4 *param_1)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined4 *)0x0) {\n    uVar1 = 0;\n  }\n  else {\n    uVar1 = FUN_00043d9c(*param_1);\n    free(param_1);\n  }\n  return uVar1;\n}\n\n",
    "FUN_00043440": "\nvoid FUN_00043440(undefined4 param_1)\n\n{\n  undefined4 *puVar1;\n  \n  puVar1 = (undefined4 *)malloc(0x18);\n  puVar1[3] = param_1;\n  *puVar1 = &LAB_00043290;\n  puVar1[2] = &LAB_00043214;\n  puVar1[1] = FUN_00043230;\n  puVar1[4] = 0;\n  puVar1[5] = 0;\n  return;\n}\n\n",
    "FUN_0004348c": "\nvoid FUN_0004348c(int **param_1,int **param_2)\n\n{\n  int **ppiVar1;\n  int *piVar2;\n  int **ppiVar3;\n  int **ppiVar4;\n  \n  ppiVar3 = (int **)param_2[1];\n  ppiVar4 = param_1 + 1;\n  ppiVar1 = (int **)*ppiVar3;\n  param_2[1] = (int *)ppiVar1;\n  if (ppiVar1 != ppiVar4) {\n    ppiVar1[2] = (int *)param_2;\n  }\n  piVar2 = param_2[2];\n  if (ppiVar4 != ppiVar3) {\n    ppiVar3[2] = piVar2;\n    piVar2 = param_2[2];\n  }\n  if (piVar2 == (int *)0x0) {\n    *param_1 = (int *)ppiVar3;\n  }\n  else if ((int **)*piVar2 == param_2) {\n    *piVar2 = (int)ppiVar3;\n  }\n  else {\n    piVar2[1] = (int)ppiVar3;\n  }\n  *ppiVar3 = (int *)param_2;\n  if (ppiVar4 != param_2) {\n    param_2[2] = (int *)ppiVar3;\n  }\n  return;\n}\n\n",
    "FUN_000434e0": "\nvoid FUN_000434e0(int **param_1,int **param_2)\n\n{\n  int **ppiVar1;\n  int **ppiVar2;\n  int **ppiVar3;\n  \n  ppiVar2 = (int **)*param_2;\n  ppiVar3 = param_1 + 1;\n  ppiVar1 = (int **)ppiVar2[1];\n  *param_2 = (int *)ppiVar1;\n  if (ppiVar1 != ppiVar3) {\n    ppiVar1[2] = (int *)param_2;\n  }\n  ppiVar1 = (int **)param_2[2];\n  if (ppiVar3 != ppiVar2) {\n    ppiVar2[2] = (int *)ppiVar1;\n    ppiVar1 = (int **)param_2[2];\n  }\n  if (ppiVar1 == (int **)0x0) {\n    *param_1 = (int *)ppiVar2;\n  }\n  else if ((int **)ppiVar1[1] == param_2) {\n    ppiVar1[1] = (int *)ppiVar2;\n  }\n  else {\n    *ppiVar1 = (int *)ppiVar2;\n  }\n  ppiVar2[1] = (int *)param_2;\n  if (ppiVar3 != param_2) {\n    param_2[2] = (int *)ppiVar2;\n  }\n  return;\n}\n\n",
    "FUN_00043534": "\nvoid FUN_00043534(int param_1,undefined4 *param_2)\n\n{\n  if (param_2 == (undefined4 *)(param_1 + 4)) {\n    return;\n  }\n  do {\n    if (1 < (uint)param_2[3]) {\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"debug_node_color(pTree,n) == clib_red || debug_node_color(pTree,n) == clib_black\"\n                    ,\"3rdparty/cstl/src/c_rb.c\",0x1df,\"debug_verify_property_1\");\n    }\n    FUN_00043534(param_1,*param_2);\n    param_2 = (undefined4 *)param_2[1];\n  } while (param_2 != (undefined4 *)(param_1 + 4));\n  return;\n}\n\n",
    "FUN_00043594": "\nvoid FUN_00043594(int param_1,int *param_2)\n\n{\n  int *piVar1;\n  int *piVar2;\n  int *piVar3;\n  \n  piVar3 = (int *)(param_1 + 4);\nLAB_000435a4:\n  piVar1 = param_2;\n  if (param_2 == piVar3) {\n    return;\n  }\n  do {\n    while (param_2 = (int *)*piVar1, piVar1[3] != 1) {\n      piVar2 = (int *)piVar1[1];\nLAB_000435b0:\n      FUN_00043594(param_1);\n      piVar1 = piVar2;\n      if (piVar2 == piVar3) {\n        return;\n      }\n    }\n    if ((param_2 != piVar3) && (param_2[3] != 0)) {\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"debug_node_color(pTree,n->left) == clib_black\",\"3rdparty/cstl/src/c_rb.c\",0x1ef\n                    ,\"debug_verify_property_4\");\n    }\n    piVar2 = (int *)piVar1[1];\n    if (piVar2 == piVar3) {\n      piVar1 = (int *)piVar1[2];\n      if (piVar1 != piVar3) {\nLAB_0004360c:\n        if (piVar1[3] != 0) {\n                    /* WARNING: Subroutine does not return */\n          __assert_fail(\"debug_node_color(pTree,n->parent) == clib_black\",\"3rdparty/cstl/src/c_rb.c\"\n                        ,0x1f1,\"debug_verify_property_4\");\n        }\n        goto LAB_000435b0;\n      }\n      goto LAB_000435a4;\n    }\n    if (piVar2[3] != 0) {\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"debug_node_color(pTree,n->right) == clib_black\",\"3rdparty/cstl/src/c_rb.c\",\n                    0x1f0,\"debug_verify_property_4\");\n    }\n    piVar1 = (int *)piVar1[2];\n    if (piVar1 != piVar3) goto LAB_0004360c;\n    FUN_00043594(param_1);\n    piVar1 = piVar2;\n  } while( true );\n}\n\n",
    "FUN_0004369c": "\nvoid FUN_0004369c(int param_1,undefined4 *param_2,int param_3,int *param_4)\n\n{\n  int iVar1;\n  int iVar2;\n  \n  iVar1 = param_3 + 1;\n  iVar2 = iVar1;\n  if (param_2 != (undefined4 *)(param_1 + 4)) {\n    do {\n      iVar1 = iVar2;\n      if (param_2[3] == 0) {\n        iVar1 = iVar2 + 1;\n        param_3 = iVar2;\n      }\n      FUN_0004369c(param_1,*param_2,param_3,param_4);\n      param_2 = (undefined4 *)param_2[1];\n      iVar2 = iVar1;\n    } while (param_2 != (undefined4 *)(param_1 + 4));\n  }\n  if (*param_4 == -1) {\n    *param_4 = iVar1;\n    return;\n  }\n  if (*param_4 != iVar1) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"black_count == *path_black_count\",\"3rdparty/cstl/src/c_rb.c\",0x205,\n                  \"debug_verify_property_5_helper\");\n  }\n  return;\n}\n\n",
    "FUN_0004372c": "\nvoid FUN_0004372c(int *param_1)\n\n{\n  int *piVar1;\n  \n  piVar1 = (int *)*param_1;\n  FUN_00043534(param_1,piVar1);\n  if ((piVar1 != param_1 + 1) && (piVar1[3] != 0)) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"debug_node_color(pTree,root) == clib_black\",\"3rdparty/cstl/src/c_rb.c\",0x1e6,\n                  \"debug_verify_property_2\");\n  }\n  FUN_00043594(param_1,piVar1);\n  FUN_0004369c(param_1,piVar1,0);\n  return;\n}\n\n",
    "FUN_000437ac": "\nvoid FUN_000437ac(int param_1,int param_2,int param_3)\n\n{\n  int *piVar1;\n  int *piVar2;\n  \n  piVar1 = (int *)malloc(0x28);\n  if (piVar1 == (int *)0x0) {\n    return;\n  }\n  piVar2 = piVar1 + 1;\n  piVar1[5] = 0;\n  piVar1[6] = 0;\n  piVar1[3] = 0;\n  piVar1[4] = 0;\n  piVar1[9] = param_1;\n  piVar1[7] = param_2;\n  piVar1[8] = param_3;\n  *piVar1 = (int)piVar2;\n  piVar1[1] = (int)piVar2;\n  piVar1[2] = (int)piVar2;\n  return;\n}\n\n",
    "FUN_00043804": "\nint FUN_00043804(int *param_1,undefined4 param_2)\n\n{\n  int **ppiVar1;\n  int iVar2;\n  int **ppiVar3;\n  void *local_1c;\n  \n  ppiVar3 = (int **)*param_1;\n  while( true ) {\n    if (ppiVar3 == (int **)(param_1 + 1)) {\n      return 0;\n    }\n    FUN_00044000(ppiVar3[4],&local_1c);\n    iVar2 = (*(code *)param_1[9])(param_2,local_1c);\n    free(local_1c);\n    if (iVar2 == 0) break;\n    ppiVar1 = ppiVar3 + 1;\n    if (iVar2 < 0) {\n      ppiVar1 = ppiVar3;\n    }\n    ppiVar3 = (int **)*ppiVar1;\n  }\n  return (int)ppiVar3;\n}\n\n",
    "FUN_00043ae8": "\nint ** FUN_00043ae8(int **param_1,undefined4 param_2)\n\n{\n  int iVar1;\n  int *piVar2;\n  int *piVar3;\n  int **ppiVar4;\n  int **ppiVar5;\n  int *piVar6;\n  int **ppiVar7;\n  int **ppiVar8;\n  int **ppiVar9;\n  int **ppiVar10;\n  void *local_1c;\n  \n  ppiVar5 = param_1 + 1;\n  ppiVar7 = (int **)*param_1;\n  while( true ) {\n    if (ppiVar5 == ppiVar7) {\n      return (int **)0x0;\n    }\n    FUN_00044000(ppiVar7[4],&local_1c);\n    iVar1 = (*(code *)param_1[9])(param_2,local_1c);\n    free(local_1c);\n    ppiVar4 = (int **)*ppiVar7;\n    if (iVar1 == 0) break;\n    ppiVar7 = (int **)ppiVar7[1];\n    if (iVar1 < 0) {\n      ppiVar7 = ppiVar4;\n    }\n  }\n  ppiVar8 = (int **)ppiVar7[1];\n  ppiVar9 = ppiVar8;\n  ppiVar10 = ppiVar7;\n  if ((ppiVar5 != ppiVar4) && (ppiVar9 = ppiVar4, ppiVar5 != ppiVar8)) {\n    do {\n      ppiVar10 = ppiVar8;\n      ppiVar8 = (int **)*ppiVar10;\n    } while (ppiVar5 != (int **)*ppiVar10);\n    ppiVar9 = (int **)ppiVar10[1];\n  }\n  ppiVar9[2] = ppiVar10[2];\n  ppiVar5 = (int **)ppiVar10[2];\n  if (ppiVar5 == (int **)0x0) {\n    *param_1 = (int *)ppiVar9;\n  }\n  else if (ppiVar10 == (int **)*ppiVar5) {\n    *ppiVar5 = (int *)ppiVar9;\n  }\n  else {\n    ppiVar5[1] = (int *)ppiVar9;\n  }\n  if (ppiVar10 != ppiVar7) {\n    piVar2 = ppiVar7[4];\n    piVar6 = ppiVar7[5];\n    piVar3 = ppiVar10[5];\n    ppiVar7[4] = ppiVar10[4];\n    ppiVar10[4] = piVar2;\n    ppiVar7[5] = piVar3;\n    ppiVar10[5] = piVar6;\n  }\n  if (ppiVar10[3] == (int *)0x0) {\n    ppiVar7 = (int **)*param_1;\nLAB_00043c10:\n    ppiVar5 = ppiVar9;\n    if (ppiVar9 != ppiVar7) {\n      while( true ) {\n        ppiVar5 = ppiVar9;\n        if (ppiVar9[3] != (int *)0x0) goto LAB_00043c74;\n        ppiVar5 = (int **)ppiVar9[2];\n        ppiVar7 = (int **)*ppiVar5;\n        if (ppiVar9 == ppiVar7) {\n          ppiVar7 = (int **)ppiVar5[1];\n          if (ppiVar7[3] == (int *)0x1) {\n            ppiVar7[3] = (int *)0x0;\n            ppiVar5[3] = (int *)0x1;\n            FUN_0004348c(param_1,ppiVar5);\n            ppiVar5 = (int **)ppiVar9[2];\n            ppiVar7 = (int **)ppiVar5[1];\n          }\n          piVar2 = ppiVar7[1];\n          if ((*ppiVar7)[3] == 0) {\n            if (piVar2[3] == 0) goto LAB_00043c64;\n          }\n          else if (piVar2[3] == 0) {\n            (*ppiVar7)[3] = 0;\n            ppiVar7[3] = (int *)0x1;\n            FUN_000434e0(param_1,ppiVar7);\n            ppiVar5 = (int **)ppiVar9[2];\n            ppiVar7 = (int **)ppiVar5[1];\n            piVar2 = ppiVar7[1];\n          }\n          ppiVar7[3] = ppiVar5[3];\n          ppiVar5[3] = (int *)0x0;\n          piVar2[3] = 0;\n          FUN_0004348c(param_1,ppiVar5);\n          ppiVar7 = (int **)*param_1;\n          ppiVar9 = ppiVar7;\n          goto LAB_00043c10;\n        }\n        if (ppiVar7[3] == (int *)0x1) {\n          ppiVar7[3] = (int *)0x0;\n          ppiVar5[3] = (int *)0x1;\n          FUN_000434e0(param_1,ppiVar5);\n          ppiVar5 = (int **)ppiVar9[2];\n          ppiVar7 = (int **)*ppiVar5;\n        }\n        piVar2 = *ppiVar7;\n        if (ppiVar7[1][3] != 0) break;\n        if (piVar2[3] != 0) goto LAB_00043cac;\nLAB_00043c64:\n        ppiVar7[3] = (int *)0x1;\n        ppiVar9 = ppiVar5;\n        if (ppiVar5 == (int **)*param_1) goto LAB_00043c74;\n      }\n      if (piVar2[3] == 0) {\n        ppiVar7[1][3] = 0;\n        ppiVar7[3] = (int *)0x1;\n        FUN_0004348c(param_1,ppiVar7);\n        ppiVar5 = (int **)ppiVar9[2];\n        ppiVar7 = (int **)*ppiVar5;\n        piVar2 = *ppiVar7;\n      }\nLAB_00043cac:\n      ppiVar7[3] = ppiVar5[3];\n      ppiVar5[3] = (int *)0x0;\n      piVar2[3] = 0;\n      FUN_000434e0(param_1,ppiVar5);\n      ppiVar7 = (int **)*param_1;\n      ppiVar9 = ppiVar7;\n      goto LAB_00043c10;\n    }\nLAB_00043c74:\n    ppiVar5[3] = (int *)0x0;\n  }\n  FUN_0004372c(param_1);\n  return ppiVar10;\n}\n\n",
    "FUN_00043d9c": "\nundefined4 FUN_00043d9c(undefined4 *param_1)\n\n{\n  void *pvVar1;\n  void **__ptr;\n  void **ppvVar2;\n  void **ppvVar3;\n  void **ppvVar4;\n  undefined4 local_20;\n  undefined4 local_1c;\n  \n  ppvVar2 = (void **)(param_1 + 1);\n  ppvVar4 = (void **)*param_1;\n  while (__ptr = ppvVar4, __ptr != ppvVar2) {\n    ppvVar4 = (void **)*__ptr;\n    if (((void **)*__ptr == ppvVar2) &&\n       (ppvVar3 = (void **)__ptr[1], ppvVar4 = ppvVar3, ppvVar2 == ppvVar3)) {\n      pvVar1 = __ptr[4];\n      if (param_1[7] != 0) {\n        FUN_00044000(pvVar1,&local_20);\n        (*(code *)param_1[7])(local_20);\n        pvVar1 = __ptr[4];\n      }\n      FUN_00044074(pvVar1);\n      pvVar1 = __ptr[5];\n      if (pvVar1 != (void *)0x0) {\n        if (param_1[8] != 0) {\n          FUN_00044000(pvVar1,&local_1c);\n          (*(code *)param_1[8])(local_1c);\n          pvVar1 = __ptr[5];\n        }\n        FUN_00044074(pvVar1);\n      }\n      ppvVar4 = (void **)__ptr[2];\n      if (ppvVar4 == (void **)0x0) {\n        free(__ptr);\n        ppvVar4 = ppvVar3;\n      }\n      else if (ppvVar3 == (void **)*ppvVar4) {\n        if (ppvVar3 != (void **)ppvVar4[1]) {\n          free(ppvVar4[1]);\n          ppvVar4[1] = ppvVar3;\n        }\n      }\n      else {\n        free(*ppvVar4);\n        *ppvVar4 = ppvVar3;\n      }\n    }\n  }\n  free(param_1);\n  return 0;\n}\n\n",
    "FUN_00043ea4": "\nint * FUN_00043ea4(int param_1,int *param_2)\n\n{\n  int *piVar1;\n  \n  do {\n    piVar1 = param_2;\n    param_2 = (int *)*piVar1;\n  } while (param_2 != (int *)(param_1 + 4));\n  return piVar1;\n}\n\n",
    "FUN_00043ef8": "\nint ** FUN_00043ef8(int **param_1,int **param_2)\n\n{\n  int **ppiVar1;\n  int **ppiVar2;\n  int **ppiVar3;\n  int **ppiVar4;\n  bool bVar5;\n  \n  ppiVar4 = param_1 + 1;\n  ppiVar2 = (int **)param_2[1];\n  if ((int **)param_2[1] == ppiVar4) {\n    ppiVar2 = (int **)*param_1;\n    do {\n      ppiVar3 = ppiVar2;\n      ppiVar2 = (int **)ppiVar3[1];\n    } while (ppiVar4 != ppiVar2);\n    if (param_2 == ppiVar3) {\n      ppiVar3 = (int **)0x0;\n    }\n    else {\n      ppiVar2 = (int **)param_2[2];\n      ppiVar3 = ppiVar4;\n      if ((ppiVar4 != ppiVar2) && (ppiVar3 = ppiVar2, param_2 == (int **)ppiVar2[1])) {\n        do {\n          ppiVar3 = (int **)ppiVar2[2];\n          if (ppiVar4 == ppiVar3) {\n            return ppiVar3;\n          }\n          bVar5 = (int **)ppiVar3[1] == ppiVar2;\n          ppiVar2 = ppiVar3;\n        } while (bVar5);\n      }\n    }\n  }\n  else {\n    do {\n      ppiVar1 = (int **)*ppiVar2;\n      ppiVar3 = ppiVar2;\n      ppiVar2 = ppiVar1;\n    } while (ppiVar4 != ppiVar1);\n  }\n  return ppiVar3;\n}\n\n",
    "FUN_00043fa4": "\nvoid ** FUN_00043fa4(void *param_1,void *param_2)\n\n{\n  void **__ptr;\n  void *__dest;\n  \n  __ptr = (void **)malloc(8);\n  if (__ptr != (void **)0x0) {\n    __ptr[1] = param_2;\n    __dest = malloc((size_t)param_2);\n    *__ptr = __dest;\n    if (__dest == (void *)0x0) {\n      free(__ptr);\n      __ptr = (void **)0x0;\n    }\n    else {\n      memcpy(__dest,param_1,(size_t)param_2);\n    }\n  }\n  return __ptr;\n}\n\n",
    "FUN_00044000": "\nundefined4 FUN_00044000(void **param_1,void **param_2)\n\n{\n  void *__dest;\n  void *__size;\n  \n  __size = param_1[1];\n  __dest = malloc((size_t)__size);\n  *param_2 = __dest;\n  if (__dest != (void *)0x0) {\n    memcpy(__dest,*param_1,(size_t)__size);\n    return 0;\n  }\n  return 3;\n}\n\n",
    "FUN_00044040": "\nvoid FUN_00044040(void **param_1,void *param_2,size_t param_3)\n\n{\n  void *__dest;\n  \n  free(*param_1);\n  __dest = malloc(param_3);\n  *param_1 = __dest;\n  memcpy(__dest,param_2,param_3);\n  return;\n}\n\n",
    "FUN_00044074": "\nvoid FUN_00044074(void **param_1)\n\n{\n  if (param_1 == (void **)0x0) {\n    return;\n  }\n  free(*param_1);\n  free(param_1);\n  return;\n}\n\n",
    "FUN_00044098": "\nundefined4 FUN_00044098(undefined4 param_1)\n\n{\n  char acStack_808 [2056];\n  \n  snprintf(acStack_808,0x800,\"%s: Bad eeprom param, input chain is %d\\n\",\"eeprom_open\",param_1);\n  FUN_0002e584(0,acStack_808);\n  return 0x80000101;\n}\n\n",
    "FUN_000440e8": "\nvoid FUN_000440e8(uint param_1)\n\n{\n  int iVar1;\n  uint local_18;\n  undefined2 local_14;\n  undefined local_12;\n  undefined local_11;\n  \n  if (param_1 < 0x10) {\n    if ((*(int *)(&DAT_00505088 + param_1 * 8) == 0) || (*(int *)(&DAT_0050508c + param_1 * 8) == 0)\n       ) {\n      local_14 = 0;\n      local_12 = 10;\n      local_11 = (undefined)param_1;\n      local_18 = param_1;\n      iVar1 = FUN_000493d0(&local_18);\n      if (-1 < iVar1) {\n        *(int *)(&DAT_00505088 + param_1 * 8) = iVar1;\n        *(undefined4 *)(&DAT_0050508c + param_1 * 8) = 1;\n      }\n    }\n  }\n  else {\n    FUN_00044098();\n  }\n  return;\n}\n\n",
    "FUN_00044200": "\nint FUN_00044200(uint param_1,byte param_2,int param_3,int param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  int iVar3;\n  byte local_821;\n  char acStack_820 [2048];\n  \n  if (param_1 < 0x10) {\n    if ((*(int *)(&DAT_0050508c + param_1 * 8) != 0) || (iVar1 = FUN_000440e8(), -1 < iVar1)) {\n      if (param_4 != 0) {\n        iVar1 = param_3;\n        bVar2 = param_2;\n        do {\n          local_821 = bVar2;\n          iVar3 = iVar1 + 1;\n          bVar2 = local_821 + 1;\n          iVar1 = FUN_00049794(*(undefined4 *)(&DAT_00505088 + param_1 * 8),&local_821,1,iVar1,1);\n          if (iVar1 != 1) {\n            snprintf(acStack_820,0x800,\"fail to write eeprom by iic, chain:%d, addr: %d\",param_1,\n                     (uint)local_821);\n            FUN_0002e584(0,acStack_820);\n            return -0x7fffff00;\n          }\n          iVar1 = iVar3;\n        } while (param_3 + param_4 != iVar3);\n      }\n      sleep(1);\n      return 0;\n    }\n    snprintf(acStack_820,0x800,\"%s: auto exec eeprom_open, but chain %d open eeprom failed\\n\",\n             \"eeprom_write\",param_1);\n    FUN_0002e584(0,acStack_820,0);\n  }\n  else {\n    snprintf(acStack_820,0x800,\"%s: Bad eeprom param, input chain is %d\\n\",\"eeprom_write\",param_1);\n    iVar1 = -0x7ffffeff;\n    FUN_0002e584(0,acStack_820);\n  }\n  return iVar1;\n}\n\n",
    "FUN_00044358": "\nint FUN_00044358(uint param_1,byte param_2,int param_3,int param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  int iVar3;\n  byte local_821;\n  char acStack_820 [2048];\n  \n  if (param_1 < 0x10) {\n    if ((*(int *)(&DAT_0050508c + param_1 * 8) != 0) || (iVar1 = FUN_000440e8(), -1 < iVar1)) {\n      if (param_4 != 0) {\n        iVar1 = param_3;\n        bVar2 = param_2;\n        do {\n          local_821 = bVar2;\n          iVar3 = iVar1 + 1;\n          bVar2 = local_821 + 1;\n          iVar1 = FUN_000496f4(*(undefined4 *)(&DAT_00505088 + param_1 * 8),&local_821,1,iVar1,1);\n          if (iVar1 != 1) {\n            snprintf(acStack_820,0x800,\"fail to read eeprom by iic, chain: %d, addr: %d\\n\",param_1,\n                     (uint)local_821);\n            FUN_0002e584(0,acStack_820);\n            return -0x7fffff00;\n          }\n          iVar1 = iVar3;\n        } while (param_3 + param_4 != iVar3);\n      }\n      usleep(500000);\n      return 0;\n    }\n    snprintf(acStack_820,0x800,\"%s: auto exec eeprom_open, but chain %d open eeprom failed\\n\",\n             \"eeprom_read\",param_1);\n    FUN_0002e584(0,acStack_820,0);\n  }\n  else {\n    snprintf(acStack_820,0x800,\"%s: Bad eeprom param, input chain is %d\\n\",\"eeprom_read\",param_1);\n    iVar1 = -0x7ffffeff;\n    FUN_0002e584(0,acStack_820);\n  }\n  return iVar1;\n}\n\n",
    "FUN_000444b8": "\nvoid FUN_000444b8(void)\n\n{\n  int iVar1;\n  uint local_14;\n  \n  iVar1 = 10;\n  local_14 = 0;\n  FUN_00040314(0x23,&local_14);\n  FUN_00040390(0x23,local_14 & 0xffffffbf);\n  do {\n    usleep(1000);\n    local_14 = 0;\n    FUN_00040314(0x23,&local_14);\n    if ((local_14 & 0x40) == 0) {\n      return;\n    }\n    local_14 = 0;\n    FUN_00040314(0x23,&local_14);\n    FUN_00040390(0x23,local_14 & 0xffffffbf);\n    iVar1 = iVar1 + -1;\n  } while (iVar1 != 0);\n  return;\n}\n\n",
    "FUN_00044540": "\nundefined * FUN_00044540(undefined *param_1)\n\n{\n  if (param_1 == (undefined *)0x1c200) {\n    return (undefined *)0x1a;\n  }\n  if ((double)(longlong)(int)param_1 == 1500000.0) {\n    return (undefined *)0x1;\n  }\n  if (param_1 == &DAT_002dc6c0) {\n    return (undefined *)0x0;\n  }\n  if (param_1 != &DAT_005b8d80) {\n    if (param_1 != (undefined *)0xb71b00) {\n      if (param_1 == (undefined *)0x17d7840) {\n        param_1 = (undefined *)0x5;\n      }\n      return param_1;\n    }\n    return (undefined *)0x4;\n  }\n  return (undefined *)0x3;\n}\n\n",
    "FUN_000445e0": "\nvoid FUN_000445e0(int param_1)\n\n{\n  int iVar1;\n  int local_c;\n  \n  FUN_00040390(0x1b,param_1);\n  if (-1 < param_1) {\n    FUN_00040314(0x1b,&local_c);\n    return;\n  }\n  iVar1 = 0xbb9;\n  do {\n    FUN_00040314(0x1b,&local_c);\n    if (-1 < local_c) {\n      return;\n    }\n    usleep(1000);\n    iVar1 = iVar1 + -1;\n  } while (iVar1 != 0);\n  return;\n}\n\n",
    "FUN_00044654": "\nundefined8 FUN_00044654(int param_1)\n\n{\n  return *(undefined8 *)(DAT_00505108 + param_1 * 0x40 + 8);\n}\n\n",
    "FUN_0004466c": "\nundefined4 FUN_0004466c(int param_1)\n\n{\n  return *(undefined4 *)(DAT_00505108 + param_1 * 0x40);\n}\n\n",
    "FUN_00044680": "\nundefined4 FUN_00044680(int param_1)\n\n{\n  return *(undefined4 *)(DAT_00505108 + param_1 * 0x40 + 4);\n}\n\n",
    "FUN_00044698": "\nundefined4 FUN_00044698(int param_1,int param_2,int param_3)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  \n  if (param_3 != 0) {\n    puVar1 = (undefined *)(DAT_00505108 + param_1 * 0x40 + 0x1f);\n    puVar2 = (undefined *)(param_2 + -1);\n    do {\n      puVar1 = puVar1 + 1;\n      puVar2 = puVar2 + 1;\n      *puVar2 = *puVar1;\n    } while (puVar2 != (undefined *)(param_2 + param_3 + -1));\n  }\n  return 0;\n}\n\n",
    "FUN_000446dc": "\nvoid FUN_000446dc(void)\n\n{\n  FUN_00040314(0xd);\n  FUN_00040390(0xd,0xffff);\n  sleep(2);\n  return;\n}\n\n",
    "FUN_0004476c": "\nundefined4 FUN_0004476c(void)\n\n{\n  FUN_00040314(0x23);\n  return 0;\n}\n\n",
    "FUN_00044794": "\nvoid FUN_00044794(undefined4 param_1)\n\n{\n  FUN_00040390(0x23,param_1);\n  return;\n}\n\n",
    "FUN_000447a0": "\nundefined4 FUN_000447a0(void)\n\n{\n  FUN_00040314(0x23);\n  FUN_00040390(0x23,0x40);\n  return 0;\n}\n\n",
    "FUN_000447d8": "\nundefined4 FUN_000447d8(void)\n\n{\n  FUN_00040314(0x23);\n  FUN_00040390(0x23,0);\n  return 0;\n}\n\n",
    "FUN_00044810": "\nundefined4 FUN_00044810(void)\n\n{\n  FUN_00040314(0x23);\n  FUN_00040390(0x23,0x80);\n  return 0;\n}\n\n",
    "FUN_00044848": "\nundefined4 FUN_00044848(void)\n\n{\n  FUN_00040314(0x23);\n  FUN_00040390(0x23,0);\n  return 0;\n}\n\n",
    "FUN_00044880": "\nundefined4 FUN_00044880(uint param_1)\n\n{\n  FUN_00040314(0x23);\n  FUN_00040390(0x23,(param_1 & 0xf) << 8);\n  return 0;\n}\n\n",
    "FUN_000448c8": "\nundefined4 FUN_000448c8(void)\n\n{\n  FUN_00040314(0x23);\n  FUN_00040390(0x23,0x8000);\n  return 0;\n}\n\n",
    "FUN_00044900": "\nundefined4 FUN_00044900(void)\n\n{\n  FUN_00040314(0x23);\n  FUN_00040390(0x23,0);\n  return 0;\n}\n\n",
    "FUN_00044938": "\nundefined4 FUN_00044938(void)\n\n{\n  FUN_00040314(0x23);\n  FUN_00040390(0x23,0x20);\n  return 0;\n}\n\n",
    "FUN_00044970": "\nundefined4 FUN_00044970(void)\n\n{\n  FUN_00040314(0x23);\n  FUN_00040390(0x23,0);\n  return 0;\n}\n\n",
    "FUN_000449a8": "\nundefined4 FUN_000449a8(void)\n\n{\n  FUN_00040314(0x23);\n  FUN_00040390(0x23,0x4000);\n  return 0;\n}\n\n",
    "FUN_000449e0": "\nundefined4 FUN_000449e0(void)\n\n{\n  FUN_00040314(0x23);\n  FUN_00040390(0x23,0);\n  return 0;\n}\n\n",
    "FUN_00044a18": "\nundefined4 FUN_00044a18(void)\n\n{\n  FUN_00040314(0x23);\n  FUN_00040390(0x23,0x2000);\n  return 0;\n}\n\n",
    "FUN_00044a50": "\nundefined4 FUN_00044a50(void)\n\n{\n  FUN_00040314(0x23);\n  FUN_00040390(0x23,0);\n  return 0;\n}\n\n",
    "FUN_00044a88": "\nvoid FUN_00044a88(void)\n\n{\n  FUN_00040314(0x1b);\n  FUN_00040390(0x1b,0);\n  FUN_00040314(0x23);\n  FUN_00040390(0x23,0);\n  return;\n}\n\n",
    "FUN_00044ae4": "\nvoid FUN_00044ae4(void)\n\n{\n  uint local_c;\n  \n  local_c = 0;\n  FUN_00040314(0xd,&local_c);\n  FUN_00040390(0xd,~(~(local_c >> 0x10) << 0x10));\n  sleep(3);\n  FUN_00040314(0xd,&local_c);\n  FUN_00040390(0xd,local_c & 0xffff0000);\n  sleep(1);\n  FUN_000444b8();\n  return;\n}\n\n",
    "FUN_00044b54": "\nvoid FUN_00044b54(char *param_1,size_t param_2)\n\n{\n  undefined4 local_18;\n  undefined4 local_14 [2];\n  \n  local_18 = 0;\n  local_14[0] = 0;\n  FUN_00040314(0x1f,&local_18);\n  FUN_00040314(0x20,local_14);\n  snprintf(param_1,param_2,\"%08x%08x\",local_14[0],local_18);\n  return;\n}\n\n",
    "FUN_00044bbc": "\nundefined4 FUN_00044bbc(void)\n\n{\n  undefined4 local_c [3];\n  \n  FUN_00040314(0x29,local_c);\n  return local_c[0];\n}\n\n",
    "FUN_00044c24": "\nvoid FUN_00044c24(undefined4 param_1)\n\n{\n  undefined auStack_c [4];\n  \n  FUN_00040314(0x27,auStack_c);\n  FUN_00040390(0x27,param_1);\n  FUN_00040314(0x27,auStack_c);\n  return;\n}\n\n",
    "FUN_00044c5c": "\nvoid FUN_00044c5c(undefined4 param_1)\n\n{\n  undefined auStack_c [12];\n  \n  FUN_00040390(0x14,param_1);\n  FUN_00040314(0x14,auStack_c);\n  return;\n}\n\n",
    "FUN_00044c84": "\nvoid FUN_00044c84(uint param_1)\n\n{\n  undefined auStack_c [12];\n  \n  FUN_00040390(0x14,param_1 & 0x1ffff | 0x80000000);\n  FUN_00040314(0x14,auStack_c);\n  return;\n}\n\n",
    "FUN_00044d10": "\nundefined2 FUN_00044d10(void)\n\n{\n  undefined2 local_c [6];\n  \n  FUN_00040314(0x21,local_c);\n  return local_c[0];\n}\n\n",
    "FUN_00044d3c": "\nuint FUN_00044d3c(void)\n\n{\n  uint local_c [3];\n  \n  FUN_00040314(6,local_c);\n  return local_c[0] & 0x7fff;\n}\n\n",
    "FUN_00044d60": "\nvoid FUN_00044d60(undefined4 *param_1)\n\n{\n  undefined4 local_10;\n  undefined4 uStack_c;\n  \n  FUN_00040314(4,&local_10);\n  FUN_00040314(5,&uStack_c);\n  *param_1 = local_10;\n  param_1[1] = uStack_c;\n  return;\n}\n\n",
    "FUN_00044d94": "\nvoid FUN_00044d94(undefined4 *param_1)\n\n{\n  undefined4 local_18;\n  undefined4 local_14;\n  undefined4 local_10;\n  undefined4 local_c;\n  \n  local_18 = 0;\n  local_14 = 0;\n  local_10 = 0;\n  local_c = 0;\n  FUN_00040314(4,&local_18);\n  FUN_00040314(5,&local_14);\n  FUN_00040314(4,&local_10);\n  FUN_00040314(5,&local_c);\n  *param_1 = local_18;\n  param_1[1] = local_14;\n  param_1[2] = local_10;\n  param_1[3] = local_c;\n  return;\n}\n\n",
    "FUN_00044dfc": "\nundefined4 FUN_00044dfc(void)\n\n{\n  undefined4 local_c [3];\n  \n  FUN_00040314(0x15,local_c);\n  return local_c[0];\n}\n\n",
    "FUN_00044e1c": "\nvoid FUN_00044e1c(undefined4 param_1)\n\n{\n  undefined auStack_c [12];\n  \n  FUN_00040390(0x15,param_1);\n  FUN_00040314(0x15,auStack_c);\n  return;\n}\n\n",
    "FUN_00044ed4": "\nundefined4 FUN_00044ed4(void)\n\n{\n  undefined4 local_c [3];\n  \n  FUN_00040314(3,local_c);\n  return local_c[0];\n}\n\n",
    "FUN_00044ef4": "\nbool FUN_00044ef4(uint param_1)\n\n{\n  uint local_c;\n  \n  FUN_00040314(3,&local_c);\n  return (local_c & 1 << (param_1 & 0xff)) != 0;\n}\n\n",
    "FUN_00044f28": "\nundefined4 FUN_00044f28(void)\n\n{\n  undefined4 local_c [3];\n  \n  FUN_00040314(0x2d,local_c);\n  return local_c[0];\n}\n\n",
    "FUN_00044f48": "\nvoid FUN_00044f48(uint param_1,int param_2,uint param_3)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  bool bVar6;\n  undefined4 local_20;\n  undefined4 local_1c;\n  \n  uVar2 = 0;\n  iVar1 = 0;\n  local_20 = 0;\n  local_1c = 0;\n  do {\n    bVar6 = (param_3 & 1 << (uVar2 & 0xff)) != 0;\n    if (bVar6) {\n      *(char *)((int)&local_20 + iVar1) = (char)uVar2;\n    }\n    uVar2 = uVar2 + 1;\n    if (bVar6) {\n      iVar1 = iVar1 + 1;\n    }\n  } while (iVar1 < 8 && uVar2 < 0x20);\n  if (param_2 == 4) {\n    FUN_00040390(0x2d,param_1);\n    uVar3 = param_1 | 1 << (sbyte)local_20;\n    FUN_00040390(0x39,uVar3);\n    uVar2 = 1 << (local_20 >> 8 & 0xff);\n    FUN_00040390(0x3a,uVar2 | param_1);\n    FUN_00040390(0x3b,uVar3 | uVar2);\n    return;\n  }\n  if (param_2 == 8) {\n    FUN_00040390(0x2d,param_1);\n    uVar4 = param_1 | 1 << (sbyte)local_20;\n    FUN_00040390(0x39,uVar4);\n    uVar5 = 1 << local_20._1_1_ | param_1;\n    uVar3 = uVar4 | 1 << local_20._1_1_;\n    FUN_00040390(0x3a,uVar5);\n    uVar2 = 1 << (local_20 >> 0x10 & 0xff);\n    FUN_00040390(0x3b,uVar2 | param_1);\n    FUN_00040390(0x3c,uVar3);\n    FUN_00040390(0x3d,uVar4 | uVar2);\n    FUN_00040390(0x3e,uVar5 | uVar2);\n    FUN_00040390(0x3f,uVar2 | uVar3);\n    return;\n  }\n  FUN_00040390(0x2d,param_1);\n  return;\n}\n\n",
    "FUN_0004509c": "\nundefined4 FUN_0004509c(void)\n\n{\n  undefined4 local_c [3];\n  \n  FUN_00040314(0x2e,local_c);\n  return local_c[0];\n}\n\n",
    "FUN_0004512c": "\nvoid FUN_0004512c(int param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 *puVar3;\n  \n  puVar3 = (undefined4 *)(param_1 + -4);\n  iVar1 = 0x30;\n  do {\n    iVar2 = iVar1 + 1;\n    puVar3 = puVar3 + 1;\n    FUN_00040390(iVar1,*puVar3);\n    iVar1 = iVar2;\n  } while (iVar2 != 0x38);\n  return;\n}\n\n",
    "FUN_00045154": "\nvoid FUN_00045154(undefined4 param_1)\n\n{\n  undefined auStack_c [12];\n  \n  FUN_00040390(0x24,param_1);\n  FUN_00040314(0x24,auStack_c);\n  return;\n}\n\n",
    "FUN_0004517c": "\nundefined4 FUN_0004517c(uint param_1)\n\n{\n  uint local_10;\n  undefined auStack_c [4];\n  \n  FUN_00040314(0x24,&local_10);\n  FUN_00040390(0x24,local_10 & 0xffffff00 | param_1);\n  FUN_00040314(0x24,auStack_c);\n  return 0;\n}\n\n",
    "FUN_000451c0": "\nundefined4 FUN_000451c0(int param_1)\n\n{\n  uint local_10;\n  undefined auStack_c [4];\n  \n  FUN_00040314(0x24,&local_10);\n  FUN_00040390(0x24,local_10 & 0xffff00ff | param_1 << 8);\n  FUN_00040314(0x24,auStack_c);\n  return 0;\n}\n\n",
    "FUN_00045204": "\nundefined4 FUN_00045204(int param_1)\n\n{\n  ushort local_10 [2];\n  undefined auStack_c [4];\n  \n  FUN_00040314(0x24,local_10);\n  FUN_00040390(0x24,(uint)local_10[0] | param_1 << 0x10);\n  FUN_00040314(0x24,auStack_c);\n  return 0;\n}\n\n",
    "FUN_00045244": "\nvoid FUN_00045244(undefined4 *param_1)\n\n{\n  undefined auStack_c [4];\n  \n  FUN_00040390(0x25,*param_1);\n  FUN_00040390(0x26,param_1[1]);\n  FUN_00040314(0x25,auStack_c);\n  FUN_00040314(0x26,auStack_c);\n  return;\n}\n\n",
    "FUN_00045288": "\nvoid FUN_00045288(undefined2 param_1)\n\n{\n  undefined auStack_c [12];\n  \n  FUN_00040390(0x28,param_1);\n  FUN_00040314(0x28,auStack_c);\n  return;\n}\n\n",
    "FUN_000452b0": "\nundefined4 FUN_000452b0(void)\n\n{\n  undefined4 local_c [3];\n  \n  FUN_00040314(7,local_c);\n  return local_c[0];\n}\n\n",
    "FUN_000452d0": "\nvoid FUN_000452d0(undefined4 param_1)\n\n{\n  undefined auStack_c [12];\n  \n  FUN_00040390(7,param_1);\n  FUN_00040314(7,auStack_c);\n  return;\n}\n\n",
    "FUN_000452f8": "\nundefined4 FUN_000452f8(void)\n\n{\n  uint local_c [3];\n  \n  FUN_00040314(7,local_c);\n  FUN_00040390(7,local_c[0] | 0x10000);\n  FUN_00040314(7,local_c);\n  return 0;\n}\n\n",
    "FUN_00045334": "\nundefined4 FUN_00045334(uint *param_1)\n\n{\n  void *__dest;\n  undefined4 uVar1;\n  byte *pbVar2;\n  undefined4 *puVar3;\n  byte *pbVar4;\n  undefined4 *puVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  size_t __nmemb;\n  uint uVar9;\n  byte *pbVar10;\n  byte *pbVar11;\n  undefined4 uVar12;\n  uint *puVar13;\n  undefined4 uVar14;\n  int local_5c;\n  uint local_4c;\n  uint local_48 [9];\n  \n  memset(local_48,0,0x20);\n  uVar7 = param_1[3];\n  local_5c = DAT_0050510c;\n  if (DAT_0050510c == DAT_00505110) {\n    local_5c = DAT_00505114;\n  }\n  if ((uVar7 & 0x3f) < 0x38) {\n    __nmemb = (uVar7 & 0xffffffc0) + 0x40;\n  }\n  else {\n    __nmemb = (uVar7 & 0xffffffc0) + 0x80;\n  }\n  __dest = calloc(__nmemb,1);\n  if (__dest == (void *)0x0) {\n    uVar1 = 0xfffffffc;\n  }\n  else {\n    memcpy(__dest,(void *)param_1[2],uVar7);\n    uVar9 = uVar7 << 3;\n    *(undefined *)((int)__dest + uVar7) = 0x80;\n    *(uint *)((int)__dest + (__nmemb - 4)) =\n         uVar7 << 0x1b | (uVar9 >> 8 & 0xff) << 0x10 | (uVar9 >> 0x10 & 0xff) << 8 | uVar9 >> 0x18;\n    *(undefined4 *)((int)__dest + (__nmemb - 8)) = 0;\n    if (__nmemb != 0) {\n      pbVar10 = (byte *)((int)__dest + -1);\n      pbVar11 = (byte *)(local_5c + -1);\n      pbVar2 = pbVar11;\n      pbVar4 = pbVar10;\n      do {\n        pbVar4 = pbVar4 + 1;\n        pbVar2 = pbVar2 + 1;\n        *pbVar2 = *pbVar4;\n      } while ((byte *)((int)__dest + (__nmemb - 1)) != pbVar4);\n      pbVar2 = pbVar11 + __nmemb;\n      iVar8 = 0;\n      do {\n        pbVar11 = pbVar11 + 1;\n        pbVar10 = pbVar10 + 1;\n        if ((uint)*pbVar11 != (uint)*pbVar10) {\n          printf(\"%s: coinbase_padding_in_ddr[%d] = 0x%x, but *(coinbase_padding + %d) = 0x%x\",\n                 \"dhash_send_job\",iVar8,(uint)*pbVar11,iVar8,(uint)*pbVar10);\n        }\n        iVar8 = iVar8 + 1;\n      } while (pbVar2 != pbVar11);\n    }\n    if (param_1[5] != 0) {\n      uVar7 = 0;\n      puVar3 = (undefined4 *)(local_5c + __nmemb);\n      do {\n        puVar5 = (undefined4 *)(param_1[4] + uVar7 * 0x20);\n        uVar7 = uVar7 + 1;\n        uVar14 = puVar5[1];\n        uVar12 = puVar5[2];\n        uVar1 = puVar5[3];\n        *puVar3 = *puVar5;\n        puVar3[1] = uVar14;\n        puVar3[2] = uVar12;\n        puVar3[3] = uVar1;\n        uVar14 = puVar5[5];\n        uVar12 = puVar5[6];\n        uVar1 = puVar5[7];\n        puVar3[4] = puVar5[4];\n        puVar3[5] = uVar14;\n        puVar3[6] = uVar12;\n        puVar3[7] = uVar1;\n        puVar3 = puVar3 + 8;\n      } while (uVar7 < param_1[5]);\n    }\n    FUN_000444b8();\n    if (local_5c == DAT_0050510c) {\n      iVar8 = DAT_00505118 + 0x200000;\n    }\n    else {\n      iVar8 = DAT_00505118 + 0x210000;\n    }\n    FUN_00040390(0x29,iVar8);\n    FUN_00040314(0x29,&local_4c);\n    FUN_00040390(0x2c,param_1[8]);\n    FUN_00040314(0x2c,&local_4c);\n    if (*param_1 == 0) {\n      uVar7 = param_1[1];\n    }\n    else {\n      uVar7 = 1;\n    }\n    FUN_00044f48(param_1[9],uVar7,param_1[10]);\n    memset(local_48,0,0x20);\n    pbVar4 = (byte *)param_1[0xb];\n    puVar13 = &local_4c;\n    pbVar2 = pbVar4;\n    do {\n      pbVar11 = pbVar2 + 4;\n      puVar13 = puVar13 + 1;\n      *puVar13 = (uint)pbVar2[2] << 0x10 | (uint)pbVar2[3] << 0x18 | (uint)*pbVar2 |\n                 (uint)pbVar2[1] << 8;\n      pbVar2 = pbVar11;\n    } while (pbVar11 != pbVar4 + 0x20);\n    FUN_0004512c(local_48);\n    FUN_00040390(0x2e,param_1[6]);\n    FUN_00040314(0x2e,&local_4c);\n    FUN_00040390(0x2f,param_1[7]);\n    FUN_00040314(0x2f,&local_4c);\n    FUN_00040390(0x24,(param_1[0xe] & 0xff) << 8 | param_1[0xd] << 0x10 | (__nmemb << 0x12) >> 0x18)\n    ;\n    FUN_00040314(0x24,&local_4c);\n    local_48[1] = param_1[0x11];\n    local_48[0] = param_1[0x10];\n    FUN_00045244(local_48);\n    FUN_00045288(param_1[5]);\n    FUN_00040390(0x2a,__nmemb + param_1[5] * 0x20 & 0xffff);\n    FUN_00040314(0x2a,&local_4c);\n    usleep(1000);\n    FUN_00040390(0x14,param_1[0x12] & 0x1ffff | 0x80000000);\n    FUN_00040314(0x14,&local_4c);\n    uVar9 = *param_1;\n    uVar7 = param_1[0x13];\n    if (uVar9 == 0 && 1 < param_1[1]) {\n      uVar9 = 0;\n      uVar6 = (param_1[1] & 0xf) << 8;\n    }\n    else {\n      uVar6 = 0x100;\n      if (uVar9 != 0) {\n        uVar9 = 0x4000;\n      }\n    }\n    if (uVar7 != 0) {\n      uVar7 = 0x80;\n      FUN_000452f8();\n    }\n    local_4c = 0;\n    FUN_00040314(0x23,&local_4c);\n    FUN_00040390(0x23,local_4c & 0xfffff0bf | 0x8060 | uVar9 | uVar6 | uVar7);\n    free(__dest);\n    uVar1 = 0;\n    DAT_00505110 = local_5c;\n  }\n  return uVar1;\n}\n\n",
    "FUN_00045700": "\nvoid FUN_00045700(void)\n\n{\n  undefined auStack_c [4];\n  \n  pthread_mutex_lock((pthread_mutex_t *)&DAT_0050511c);\n  FUN_00040314(0x1b,auStack_c);\n  pthread_mutex_unlock((pthread_mutex_t *)&DAT_0050511c);\n  return;\n}\n\n",
    "FUN_00045734": "\nvoid FUN_00045734(uint param_1)\n\n{\n  uint local_14 [2];\n  \n  pthread_mutex_lock((pthread_mutex_t *)&DAT_0050511c);\n  usleep(50000);\n  FUN_00040314(0x1b,local_14);\n  FUN_000445e0(local_14[0] & 0xffffffc0 | param_1 & 0x3f);\n  pthread_mutex_unlock((pthread_mutex_t *)&DAT_0050511c);\n  return;\n}\n\n",
    "FUN_00045788": "\nvoid FUN_00045788(int param_1,int param_2)\n\n{\n  uint uVar1;\n  uint local_14 [2];\n  \n  pthread_mutex_lock((pthread_mutex_t *)&DAT_0050511c);\n  FUN_00040314(0x1b,local_14);\n  uVar1 = local_14[0] & 0xfff0ffff | param_1 << 0x10;\n  if (param_2 == 0) {\n    uVar1 = uVar1 & 0xffbfffff | 0x800000;\n  }\n  else {\n    uVar1 = uVar1 | 0xc00000;\n  }\n  FUN_000445e0(uVar1);\n  pthread_mutex_unlock((pthread_mutex_t *)&DAT_0050511c);\n  return;\n}\n\n",
    "FUN_000457e0": "\nvoid FUN_000457e0(undefined4 *param_1,int param_2)\n\n{\n  uint local_14;\n  \n  pthread_mutex_lock((pthread_mutex_t *)&DAT_0050511c);\n  FUN_00040390(0x1c,*param_1);\n  FUN_00040390(0x1d,param_1[1]);\n  FUN_00040390(0x1e,param_1[2]);\n  FUN_00040314(0x1c,&local_14);\n  FUN_00040314(0x1d,&local_14);\n  FUN_00040314(0x1e,&local_14);\n  FUN_00040314(0x1b,&local_14);\n  FUN_000445e0(local_14 & 0xfff0ffff | 0x80800000 | param_2 << 0x10);\n  pthread_mutex_unlock((pthread_mutex_t *)&DAT_0050511c);\n  return;\n}\n\n",
    "FUN_0004587c": "\nvoid FUN_0004587c(undefined4 *param_1,uint param_2)\n\n{\n  undefined4 uVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  \n  pthread_mutex_lock((pthread_mutex_t *)&DAT_00505134);\n  if (param_2 >> 2 != 0) {\n    uVar1 = 0x10;\n    puVar2 = param_1;\n    do {\n      puVar3 = puVar2 + 1;\n      FUN_00040390(uVar1,*puVar2);\n      uVar1 = 0x11;\n      puVar2 = puVar3;\n    } while (puVar3 != (undefined4 *)((int)param_1 + (param_2 & 0xfffffffc)));\n  }\n  pthread_mutex_unlock((pthread_mutex_t *)&DAT_00505134);\n  return;\n}\n\n",
    "FUN_000458c4": "\nundefined4 FUN_000458c4(void)\n\n{\n  undefined4 local_c [3];\n  \n  FUN_00040314(0x12,local_c);\n  return local_c[0];\n}\n\n",
    "FUN_000458e4": "\nvoid FUN_000458e4(uint param_1)\n\n{\n  FUN_00040390(0x12,param_1 | 0x80808000);\n  DAT_00505110 = DAT_0050510c;\n  FUN_00044c24(DAT_00505118);\n  return;\n}\n\n",
    "FUN_00045918": "\nundefined4 FUN_00045918(void)\n\n{\n  FUN_00040314(0xf);\n  return 0;\n}\n\n",
    "FUN_0004594c": "\nvoid FUN_0004594c(uint param_1)\n\n{\n  FUN_00040314(0xd);\n  FUN_00040390(0xd,1 << (param_1 & 0xff));\n  return;\n}\n\n",
    "FUN_00045990": "\nvoid FUN_00045990(void)\n\n{\n  FUN_00040314(0xd);\n  FUN_00040390(0xd,0);\n  return;\n}\n\n",
    "FUN_000459d4": "\nvoid FUN_000459d4(undefined4 param_1)\n\n{\n  FUN_0004594c();\n  usleep(100000);\n  FUN_00045990(param_1);\n  return;\n}\n\n",
    "FUN_00045a0c": "\nundefined4 FUN_00045a0c(void)\n\n{\n  FUN_00040314();\n  return 0;\n}\n\n",
    "FUN_00045a34": "\nundefined4 FUN_00045a34(void)\n\n{\n  FUN_00040314(0);\n  FUN_00040390(0);\n  return 0;\n}\n\n",
    "FUN_00045a8c": "\nundefined4 FUN_00045a8c(void)\n\n{\n  FUN_00040314(0);\n  FUN_00040390(0,0x20000000);\n  return 0;\n}\n\n",
    "FUN_00045acc": "\nundefined4 FUN_00045acc(void)\n\n{\n  FUN_00040314(0);\n  FUN_00040390(0,0);\n  return 0;\n}\n\n",
    "FUN_00045b0c": "\nundefined4 FUN_00045b0c(void)\n\n{\n  FUN_00040314();\n  return 0;\n}\n\n",
    "FUN_00045b34": "\nundefined4 FUN_00045b34(void)\n\n{\n  FUN_00040314(0);\n  FUN_00040390(0,0x40000000);\n  return 0;\n}\n\n",
    "FUN_00045b74": "\nundefined4 FUN_00045b74(void)\n\n{\n  int iVar1;\n  undefined auStack_54 [4];\n  sysinfo sStack_50;\n  \n  DAT_00505108 = FUN_00040408();\n  DAT_00505114 = DAT_00505108 + 0x210000;\n  iVar1 = DAT_00505108 + 0x200000;\n  DAT_0050510c = iVar1;\n  sysinfo(&sStack_50);\n  if (sStack_50.totalram < 0x3b9aca01) {\n    if (sStack_50.totalram < 0x1dcd6501) {\n      if (sStack_50.totalram < 0xbebc201) {\n        DAT_00505118 = 0x7000000;\n      }\n      else {\n        DAT_00505118 = 0xf000000;\n      }\n    }\n    else {\n      DAT_00505118 = 0x1f000000;\n    }\n  }\n  else {\n    DAT_00505118 = 0x3f000000;\n  }\n  DAT_00505110 = iVar1;\n  FUN_00044c24();\n  FUN_00040390(0x29,DAT_00505118 + 0x200000);\n  FUN_00040314(0x29,auStack_54);\n  FUN_00045acc();\n  FUN_00045b34();\n  return 0;\n}\n\n",
    "FUN_00045c30": "\nundefined4 FUN_00045c30(void)\n\n{\n  FUN_00040314(0);\n  FUN_00040390(0,0);\n  return 0;\n}\n\n",
    "FUN_00045c70": "\nundefined4 FUN_00045c70(void)\n\n{\n  FUN_00040314();\n  return 0;\n}\n\n",
    "FUN_00045c98": "\nundefined4 FUN_00045c98(void)\n\n{\n  FUN_00040314();\n  return 0;\n}\n\n",
    "FUN_00045cbc": "\nundefined4 FUN_00045cbc(int param_1,undefined4 param_2)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  uVar1 = FUN_00044540(param_2);\n  FUN_00040314(0xf);\n  uVar2 = 0;\n  if (param_1 == 0) {\n    uVar2 = uVar1 & 0x3f;\n  }\n  else if (param_1 == 1) {\n    uVar2 = (uVar1 & 0x3f) << 8;\n  }\n  else if (param_1 == 2) {\n    uVar2 = (uVar1 & 0x3f) << 0x10;\n  }\n  else if (param_1 == 3) {\n    uVar2 = (uVar1 & 0x3f) << 0x18;\n  }\n  FUN_00040390(0xf,uVar2);\n  return 0;\n}\n\n",
    "FUN_00045d30": "\n/* WARNING: Removing unreachable block (ram,0x00045df8) */\n/* WARNING: Removing unreachable block (ram,0x00045d94) */\n/* WARNING: Removing unreachable block (ram,0x00045d64) */\n/* WARNING: Removing unreachable block (ram,0x00045de0) */\n/* WARNING: Removing unreachable block (ram,0x00045d6c) */\n/* WARNING: Removing unreachable block (ram,0x00045d74) */\n/* WARNING: Removing unreachable block (ram,0x00045d7c) */\n/* WARNING: Removing unreachable block (ram,0x00045d90) */\n/* WARNING: Removing unreachable block (ram,0x00045e08) */\n/* WARNING: Removing unreachable block (ram,0x00045de8) */\n\nundefined * FUN_00045d30(int param_1)\n\n{\n  FUN_00040314(0xf);\n  if ((((param_1 != 0) && (param_1 != 1)) && (param_1 != 2)) && (param_1 != 3)) {\n    return (undefined *)0xffffffff;\n  }\n  return &DAT_002dc6c0;\n}\n\n",
    "FUN_00045e30": "\nundefined4 FUN_00045e30(void)\n\n{\n  uint uVar1;\n  \n  uVar1 = FUN_00044540();\n  FUN_00040314(0xf);\n  uVar1 = uVar1 & 0x3f;\n  FUN_00040390(0xf,uVar1 | uVar1 << 8 | uVar1 << 0x10 | uVar1 << 0x18);\n  return 0;\n}\n\n",
    "FUN_00045e80": "\nundefined4 FUN_00045e80(undefined4 param_1)\n\n{\n  char acStack_808 [2056];\n  \n  snprintf(acStack_808,0x800,\"%s: Bad pic param, input chain is %d\\n\",\"open_pic\",param_1);\n  FUN_0002e584(0,acStack_808);\n  return 0x80000201;\n}\n\n",
    "FUN_00045ed0": "\nvoid FUN_00045ed0(int param_1,uint param_2)\n\n{\n  byte *pbVar1;\n  uint uVar2;\n  uint uVar3;\n  char *pcVar4;\n  int iVar5;\n  undefined4 local_818;\n  \n  pcVar4 = \"read return data\";\n  iVar5 = param_1;\n  snprintf((char *)&local_818,0x800,\"Dumping %u %s bytes from %p:\\n\",param_2,\"read return data\",\n           param_1);\n  uVar3 = 0;\n  FUN_0002e584(2,&local_818);\n  do {\n    while (param_2 <= uVar3) {\n      uVar3 = uVar3 + 1;\n      local_818 = &DAT_00202020;\n      FUN_0002e584(2,&local_818,0);\n      if (uVar3 == 0x10) goto LAB_00045f88;\n    }\n    pbVar1 = (byte *)(param_1 + uVar3);\n    uVar3 = uVar3 + 1;\n    snprintf((char *)&local_818,0x800,\"%02x \",(uint)*pbVar1,pcVar4,iVar5);\n    FUN_0002e584(2,&local_818,0);\n  } while (uVar3 != 0x10);\nLAB_00045f88:\n  uVar3 = 0;\n  do {\n    while (param_2 <= uVar3) {\n      uVar3 = uVar3 + 1;\n      local_818 = (undefined *)CONCAT22(local_818._2_2_,0x20);\n      FUN_0002e584(2,&local_818,0);\n      if (uVar3 == 0x10) goto LAB_00046000;\n    }\n    uVar2 = (uint)*(byte *)(param_1 + uVar3);\n    uVar3 = uVar3 + 1;\n    if (0x5e < uVar2 - 0x20) {\n      uVar2 = 0x2e;\n    }\n    snprintf((char *)&local_818,0x800,\"%c\",uVar2);\n    FUN_0002e584(2,&local_818,0);\n  } while (uVar3 != 0x10);\nLAB_00046000:\n  local_818 = (undefined *)CONCAT22(local_818._2_2_,10);\n  FUN_0002e584(2,&local_818,0);\n  return;\n}\n\n",
    "FUN_00046024": "\nint FUN_00046024(uint param_1)\n\n{\n  int iVar1;\n  uint local_18;\n  undefined2 local_14;\n  undefined local_12;\n  undefined local_11;\n  \n  if (param_1 < 0x10) {\n    iVar1 = *(int *)(&DAT_0099ee48 + param_1 * 8);\n    if ((iVar1 == 0) || (*(int *)(&DAT_0099ee4c + param_1 * 8) == 0)) {\n      local_14 = 0;\n      local_12 = 4;\n      local_11 = (undefined)param_1;\n      local_18 = param_1;\n      pthread_mutex_lock((pthread_mutex_t *)&DAT_0050514c);\n      iVar1 = FUN_000493d0(&local_18);\n      pthread_mutex_unlock((pthread_mutex_t *)&DAT_0050514c);\n      if (-1 < iVar1) {\n        *(int *)(&DAT_0099ee48 + param_1 * 8) = iVar1;\n        *(undefined4 *)(&DAT_0099ee4c + param_1 * 8) = 1;\n      }\n    }\n  }\n  else {\n    iVar1 = FUN_00045e80();\n  }\n  return iVar1;\n}\n\n",
    "FUN_00046178": "\nuint FUN_00046178(uint param_1)\n\n{\n  int iVar1;\n  char *pcVar2;\n  uint uVar3;\n  undefined4 uVar4;\n  undefined4 local_830;\n  byte local_82c;\n  undefined4 local_828;\n  undefined4 local_824;\n  undefined4 local_820;\n  undefined4 local_81c;\n  char acStack_818 [2052];\n  \n  if (0xf < param_1) {\n    snprintf(acStack_818,0x800,\"%s: Bad pic param, input chain is %d\\n\",\"get_pic_version\",param_1);\n    FUN_0002e584(0,acStack_818);\n    return 0x80000201;\n  }\n  if ((*(int *)(&DAT_0099ee4c + param_1 * 8) == 0) && (uVar3 = FUN_00046024(), (int)uVar3 < 0)) {\n    snprintf(acStack_818,0x800,\"%s: auto exec open_pic, but chain %d open eeprom failed\\n\",\n             \"get_pic_version\",param_1);\n    FUN_0002e584(0,acStack_818,0);\n    return uVar3;\n  }\n  uVar4 = *(undefined4 *)(&DAT_0099ee48 + param_1 * 8);\n  pthread_mutex_lock((pthread_mutex_t *)&DAT_0050514c);\n  local_828 = 0x1704aa55;\n  local_820 = 0;\n  local_81c = 0;\n  local_830 = 0;\n  local_82c = 0;\n  local_824 = 0x1b00;\n  iVar1 = FUN_0004966c(uVar4,&local_828);\n  if (iVar1 == 6) {\n    usleep(300000);\n    iVar1 = FUN_000495e4(uVar4,&local_830,5);\n    if (iVar1 != 5) {\n      pcVar2 = \"%s read iic err\\n\";\n      goto LAB_000462cc;\n    }\n    if ((local_830._1_1_ == '\\x17') && ((char)local_830 == '\\x05')) {\n      uVar3 = local_830 >> 0x10 & 0xff;\n      if ((local_830 >> 0x18 == uVar3 + 0x1c >> 8) && ((uint)local_82c == (uVar3 + 0x1c & 0xff)))\n      goto LAB_00046268;\n      pcVar2 = \"%s failed 2!\\n\";\n    }\n    else {\n      pcVar2 = \"%s failed!\\n\";\n    }\n    snprintf(acStack_818,0x800,pcVar2,\"_bitmain_pic_get_sw_ver_common\");\n    FUN_0002e584(0,acStack_818);\n    FUN_00045ed0(&local_830,5);\n  }\n  else {\n    pcVar2 = \"%s write iic err\\n\";\nLAB_000462cc:\n    snprintf(acStack_818,0x800,pcVar2);\n    FUN_0002e584(0,acStack_818,0);\n  }\n  uVar3 = 0x80000200;\nLAB_00046268:\n  pthread_mutex_unlock((pthread_mutex_t *)&DAT_0050514c);\n  return uVar3;\n}\n\n",
    "FUN_0004637c": "\nint FUN_0004637c(uint param_1)\n\n{\n  int iVar1;\n  char *__format;\n  int iVar2;\n  undefined4 uVar3;\n  undefined2 local_82c;\n  undefined4 local_828;\n  undefined4 local_824;\n  undefined4 local_820;\n  undefined4 local_81c;\n  char acStack_818 [2052];\n  \n  if (0xf < param_1) {\n    snprintf(acStack_818,0x800,\"%s: Bad pic param, input chain is %d\\n\",\"reset_pic\",param_1);\n    FUN_0002e584(0,acStack_818);\n    return -0x7ffffdff;\n  }\n  if ((*(int *)(&DAT_0099ee4c + param_1 * 8) == 0) && (iVar1 = FUN_00046024(), iVar1 < 0)) {\n    snprintf(acStack_818,0x800,\"%s: auto exec open_pic, but chain %d open eeprom failed\\n\",\n             \"reset_pic\",param_1);\n    FUN_0002e584(0,acStack_818,0);\n    return iVar1;\n  }\n  uVar3 = *(undefined4 *)(&DAT_0099ee48 + param_1 * 8);\n  iVar2 = 0;\n  pthread_mutex_lock((pthread_mutex_t *)&DAT_0050514c);\n  local_828 = 0x704aa55;\n  local_820 = 0;\n  local_81c = 0;\n  local_82c = 0;\n  local_824 = 0xb00;\n  iVar1 = FUN_0004966c(uVar3);\n  if (iVar1 == 6) {\n    usleep(300000);\n    iVar1 = FUN_000495e4(uVar3,&local_82c,2);\n    if (iVar1 != 2) {\n      __format = \"%s read iic err\\n\";\n      goto LAB_000464b8;\n    }\n    if (((byte)local_82c == 7) && (local_82c._1_1_ == 1)) goto LAB_00046448;\n    snprintf(acStack_818,0x800,\n             \"%s failed! read_back_data[0] = 0x%02x, read_back_data[1] = 0x%02x\\n\\n\",\n             \"_bitmain_pic_reset_common\",(uint)(byte)local_82c,(uint)local_82c._1_1_);\n    FUN_0002e584(0,acStack_818);\n  }\n  else {\n    __format = \"%s write iic err\\n\";\nLAB_000464b8:\n    snprintf(acStack_818,0x800,__format);\n    FUN_0002e584(0,acStack_818,0);\n  }\n  iVar2 = -0x7ffffe00;\nLAB_00046448:\n  pthread_mutex_unlock((pthread_mutex_t *)&DAT_0050514c);\n  usleep(500000);\n  return iVar2;\n}\n\n",
    "FUN_00046554": "\nint FUN_00046554(uint param_1)\n\n{\n  int iVar1;\n  char *__format;\n  int iVar2;\n  undefined4 uVar3;\n  undefined2 local_82c;\n  undefined4 local_828;\n  undefined4 local_824;\n  undefined4 local_820;\n  undefined4 local_81c;\n  char acStack_818 [2052];\n  \n  if (0xf < param_1) {\n    snprintf(acStack_818,0x800,\"%s: Bad pic param, input chain is %d\\n\",\"jump_from_loader_to_app\",\n             param_1);\n    FUN_0002e584(0,acStack_818);\n    return -0x7ffffdff;\n  }\n  if ((*(int *)(&DAT_0099ee4c + param_1 * 8) == 0) && (iVar1 = FUN_00046024(), iVar1 < 0)) {\n    snprintf(acStack_818,0x800,\"%s: auto exec open_pic, but chain %d open eeprom failed\\n\",\n             \"jump_from_loader_to_app\",param_1);\n    FUN_0002e584(0,acStack_818,0);\n    return iVar1;\n  }\n  uVar3 = *(undefined4 *)(&DAT_0099ee48 + param_1 * 8);\n  iVar2 = 0;\n  pthread_mutex_lock((pthread_mutex_t *)&DAT_0050514c);\n  local_828 = 0x604aa55;\n  local_820 = 0;\n  local_81c = 0;\n  local_82c = 0;\n  local_824 = 0xa00;\n  iVar1 = FUN_0004966c(uVar3);\n  if (iVar1 == 6) {\n    usleep(300000);\n    iVar1 = FUN_000495e4(uVar3,&local_82c,2);\n    if (iVar1 != 2) {\n      __format = \"%s read iic err\\n\";\n      goto LAB_00046690;\n    }\n    usleep(300000);\n    if (((byte)local_82c == 6) && (local_82c._1_1_ == 1)) goto LAB_0004662c;\n    snprintf(acStack_818,0x800,\n             \"%s failed! read_back_data[0] = 0x%02x, read_back_data[1] = 0x%02x\\n\\n\",\n             \"_bitmain_pic_start_app_common\",(uint)(byte)local_82c,(uint)local_82c._1_1_);\n    FUN_0002e584(0,acStack_818);\n  }\n  else {\n    __format = \"%s write iic err\\n\";\nLAB_00046690:\n    snprintf(acStack_818,0x800,__format);\n    FUN_0002e584(0,acStack_818,0);\n  }\n  iVar2 = -0x7ffffe00;\nLAB_0004662c:\n  pthread_mutex_unlock((pthread_mutex_t *)&DAT_0050514c);\n  return iVar2;\n}\n\n",
    "FUN_0004672c": "\nint FUN_0004672c(uint param_1)\n\n{\n  int iVar1;\n  char *__format;\n  int iVar2;\n  undefined4 uVar3;\n  undefined2 local_82c;\n  undefined4 local_828;\n  undefined4 local_824;\n  undefined4 local_820;\n  undefined4 local_81c;\n  char acStack_818 [2052];\n  \n  if (0xf < param_1) {\n    snprintf(acStack_818,0x800,\"%s: Bad pic param, input chain is %d\\n\",\"enable_dc_dc\",param_1);\n    FUN_0002e584(0,acStack_818);\n    return -0x7ffffdff;\n  }\n  if ((*(int *)(&DAT_0099ee4c + param_1 * 8) == 0) && (iVar1 = FUN_00046024(), iVar1 < 0)) {\n    snprintf(acStack_818,0x800,\"%s: auto exec open_pic, but chain %d open eeprom failed\\n\",\n             \"enable_dc_dc\",param_1);\n    FUN_0002e584(0,acStack_818,0);\n    return iVar1;\n  }\n  uVar3 = *(undefined4 *)(&DAT_0099ee48 + param_1 * 8);\n  iVar2 = 0;\n  pthread_mutex_lock((pthread_mutex_t *)&DAT_0050514c);\n  local_828 = 0x1505aa55;\n  local_820 = 0;\n  local_81c = 0;\n  local_82c = 0;\n  local_824 = 0x1b0001;\n  iVar1 = FUN_0004966c(uVar3);\n  if (iVar1 == 7) {\n    usleep(300000);\n    iVar1 = FUN_000495e4(uVar3,&local_82c,2);\n    if (iVar1 != 2) {\n      __format = \"%s read iic err\\n\";\n      goto LAB_00046864;\n    }\n    if (((byte)local_82c == 0x15) && (local_82c._1_1_ == 1)) goto LAB_00046800;\n    snprintf(acStack_818,0x800,\n             \"%s failed! read_back_data[0] = 0x%02x, read_back_data[1] = 0x%02x\\n\\n\",\n             \"_bitmain_pic_enable_dc_dc_common\",(uint)(byte)local_82c,(uint)local_82c._1_1_);\n    FUN_0002e584(0,acStack_818);\n  }\n  else {\n    __format = \"%s write iic err\\n\";\nLAB_00046864:\n    snprintf(acStack_818,0x800,__format);\n    FUN_0002e584(0,acStack_818,0);\n  }\n  iVar2 = -0x7ffffe00;\nLAB_00046800:\n  pthread_mutex_unlock((pthread_mutex_t *)&DAT_0050514c);\n  return iVar2;\n}\n\n",
    "FUN_00046900": "\nint FUN_00046900(uint param_1)\n\n{\n  int iVar1;\n  char *__format;\n  int iVar2;\n  undefined4 uVar3;\n  undefined2 local_82c;\n  undefined4 local_828;\n  undefined4 local_824;\n  undefined4 local_820;\n  undefined4 local_81c;\n  char acStack_818 [2052];\n  \n  if (0xf < param_1) {\n    snprintf(acStack_818,0x800,\"%s: Bad pic param, input chain is %d\\n\",\"disable_dc_dc\",param_1);\n    FUN_0002e584(0,acStack_818);\n    return -0x7ffffdff;\n  }\n  if ((*(int *)(&DAT_0099ee4c + param_1 * 8) == 0) && (iVar1 = FUN_00046024(), iVar1 < 0)) {\n    snprintf(acStack_818,0x800,\"%s: auto exec open_pic, but chain %d open eeprom failed\\n\",\n             \"disable_dc_dc\",param_1);\n    FUN_0002e584(0,acStack_818,0);\n    return iVar1;\n  }\n  uVar3 = *(undefined4 *)(&DAT_0099ee48 + param_1 * 8);\n  iVar2 = 0;\n  pthread_mutex_lock((pthread_mutex_t *)&DAT_0050514c);\n  local_828 = 0x1505aa55;\n  local_820 = 0;\n  local_81c = 0;\n  local_82c = 0;\n  local_824 = 0x1a0000;\n  iVar1 = FUN_0004966c(uVar3);\n  if (iVar1 == 7) {\n    usleep(300000);\n    iVar1 = FUN_000495e4(uVar3,&local_82c,2);\n    if (iVar1 != 2) {\n      __format = \"%s read iic err\\n\";\n      goto LAB_00046a30;\n    }\n    if (((byte)local_82c == 0x15) && (local_82c._1_1_ == 1)) goto LAB_000469cc;\n    snprintf(acStack_818,0x800,\n             \"%s failed! read_back_data[0] = 0x%02x, read_back_data[1] = 0x%02x\\n\\n\",\n             \"_bitmain_pic_disable_dc_dc_common\",(uint)(byte)local_82c,(uint)local_82c._1_1_);\n    FUN_0002e584(0,acStack_818);\n  }\n  else {\n    __format = \"%s write iic err\\n\";\nLAB_00046a30:\n    snprintf(acStack_818,0x800,__format);\n    FUN_0002e584(0,acStack_818,0);\n  }\n  iVar2 = -0x7ffffe00;\nLAB_000469cc:\n  pthread_mutex_unlock((pthread_mutex_t *)&DAT_0050514c);\n  return iVar2;\n}\n\n",
    "FUN_00046acc": "\nint FUN_00046acc(uint param_1)\n\n{\n  int iVar1;\n  char *__format;\n  int iVar2;\n  undefined4 uVar3;\n  undefined4 local_830;\n  undefined2 local_82c;\n  undefined4 local_828;\n  undefined4 local_824;\n  undefined4 local_820;\n  undefined4 local_81c;\n  char acStack_818 [2052];\n  \n  if (0xf < param_1) {\n    snprintf(acStack_818,0x800,\"%s: Bad pic param, input chain is %d\\n\",\"send_pic_heart_beat\",\n             param_1);\n    FUN_0002e584(0,acStack_818);\n    return -0x7ffffdff;\n  }\n  if ((*(int *)(&DAT_0099ee4c + param_1 * 8) == 0) && (iVar1 = FUN_00046024(), iVar1 < 0)) {\n    snprintf(acStack_818,0x800,\"%s: auto exec open_pic, but chain %d open eeprom failed\\n\",\n             \"send_pic_heart_beat\",param_1);\n    FUN_0002e584(0,acStack_818,0);\n    return iVar1;\n  }\n  uVar3 = *(undefined4 *)(&DAT_0099ee48 + param_1 * 8);\n  iVar2 = 0;\n  pthread_mutex_lock((pthread_mutex_t *)&DAT_0050514c);\n  local_828 = 0x1604aa55;\n  local_820 = 0;\n  local_81c = 0;\n  local_830 = 0;\n  local_82c = 0;\n  local_824 = 0x1a00;\n  iVar1 = FUN_0004966c(uVar3,&local_828);\n  if (iVar1 == 6) {\n    usleep(300000);\n    iVar1 = FUN_000495e4(uVar3,&local_830,6);\n    if (iVar1 != 6) {\n      __format = \"%s read iic err\\n\";\n      goto LAB_00046c00;\n    }\n    if ((local_830._1_1_ == '\\x16') && (local_830._2_1_ == '\\x01')) goto LAB_00046b9c;\n    snprintf(acStack_818,0x800,\"%s failed!\\n\",\"_bitmain_pic_heart_beat_common\");\n    FUN_0002e584(0,acStack_818);\n    FUN_00045ed0(&local_830,6);\n  }\n  else {\n    __format = \"%s write iic err\\n\";\nLAB_00046c00:\n    snprintf(acStack_818,0x800,__format);\n    FUN_0002e584(0,acStack_818,0);\n  }\n  iVar2 = -0x7ffffe00;\nLAB_00046b9c:\n  pthread_mutex_unlock((pthread_mutex_t *)&DAT_0050514c);\n  return iVar2;\n}\n\n",
    "FUN_00046ca0": "\nint FUN_00046ca0(undefined4 param_1,int param_2,int param_3,int param_4,int param_5)\n\n{\n  byte *pbVar1;\n  uint uVar2;\n  int iVar3;\n  char *__format;\n  int iVar4;\n  undefined2 uVar5;\n  uint uVar7;\n  uint uVar8;\n  undefined2 local_834;\n  undefined2 local_830;\n  undefined local_82e;\n  undefined local_82d;\n  undefined local_82c;\n  undefined local_82b;\n  undefined4 local_82a;\n  undefined4 local_826;\n  undefined4 local_822;\n  undefined4 local_81e;\n  undefined2 local_81a;\n  char acStack_818 [2048];\n  uint uVar6;\n  \n  uVar7 = 0x46ccc;\n  pthread_mutex_lock((pthread_mutex_t *)&DAT_0050514c);\n  local_82c = (undefined)param_2;\n  iVar4 = param_5;\n  if (0xf < param_5) {\n    iVar4 = 0x10;\n  }\n  uVar2 = 0;\n  uVar6 = param_3 + 0x3b + param_2 + (param_5 + 6U & 0xff);\n  uVar5 = (undefined2)uVar6;\n  local_82e = (undefined)(param_5 + 6U);\n  local_82b = (undefined)param_3;\n  local_830 = 0xaa55;\n  if (0 < param_5) {\n    uVar7 = 6;\n  }\n  local_826 = 0;\n  local_822 = 0;\n  local_81e = 0;\n  local_81a = 0;\n  local_82a = 0;\n  local_834 = 0;\n  local_82d = 0x3b;\n  if (param_5 < 1) {\n    uVar2 = 8;\n    uVar6 = 7;\n    uVar7 = 6;\n  }\n  else {\n    do {\n      uVar8 = uVar7;\n      pbVar1 = (byte *)(param_4 + uVar2);\n      uVar2 = uVar2 + 1 & 0xffff;\n      uVar7 = uVar6 + *pbVar1;\n      *(byte *)((int)&local_830 + uVar8) = *pbVar1;\n      uVar6 = uVar7 & 0xffff;\n      uVar5 = (undefined2)uVar7;\n      uVar7 = uVar8 + 1 & 0xffff;\n    } while ((int)uVar2 < iVar4);\n    uVar2 = uVar8 + 3 & 0xffff;\n    uVar6 = uVar8 + 2 & 0xffff;\n  }\n  *(char *)((int)&local_830 + uVar7) = (char)((ushort)uVar5 >> 8);\n  *(char *)((int)&local_830 + uVar6) = (char)uVar5;\n  uVar7 = FUN_0004966c(param_1,&local_830,uVar2);\n  if (uVar7 == uVar2) {\n    usleep(10000);\n    iVar3 = FUN_000495e4(param_1,&local_834,2);\n    if (iVar3 == 2) {\n      if (((byte)local_834 != 0x3b) || (local_834._1_1_ != 1)) {\n        snprintf(acStack_818,0x800,\n                 \"%s failed! read_back_data[0] = 0x%02x, read_back_data[1] = 0x%02x\\n\\n\",\n                 \"_pic_write_iic\",(uint)(byte)local_834,(uint)local_834._1_1_);\n        iVar4 = -0x7ffffe00;\n        FUN_0002e584(0,acStack_818);\n      }\n      goto LAB_00046df4;\n    }\n    __format = \"%s read iic err\\n\";\n  }\n  else {\n    __format = \"%s write iic err\\n\";\n  }\n  snprintf(acStack_818,0x800,__format,\"_pic_write_iic\");\n  iVar4 = -0x7ffffe00;\n  FUN_0002e584(0,acStack_818);\nLAB_00046df4:\n  pthread_mutex_unlock((pthread_mutex_t *)&DAT_0050514c);\n  return iVar4;\n}\n\n",
    "FUN_00046eb4": "\nundefined4 FUN_00046eb4(undefined4 param_1)\n\n{\n  int iVar1;\n  char *__format;\n  undefined4 uVar2;\n  undefined2 local_824;\n  undefined4 local_820;\n  undefined4 local_81c;\n  undefined4 local_818;\n  undefined4 local_814;\n  char acStack_810 [2048];\n  \n  pthread_mutex_lock((pthread_mutex_t *)&DAT_0050514c);\n  local_81c = 0xd000006;\n  local_814 = 0;\n  local_818 = 0;\n  local_820 = 0x106aa55;\n  local_824 = 0;\n  iVar1 = FUN_0004966c(param_1);\n  if (iVar1 == 8) {\n    usleep(300000);\n    iVar1 = FUN_000495e4(param_1,&local_824,2);\n    if (iVar1 == 2) {\n      if (((byte)local_824 == 1) && (local_824._1_1_ == 1)) {\n        uVar2 = 0;\n      }\n      else {\n        snprintf(acStack_810,0x800,\n                 \"%s failed! read_back_data[0] = 0x%02x, read_back_data[1] = 0x%02x\\n\\n\",\n                 \"_bitmain_pic_seek_1704\",(uint)(byte)local_824,(uint)local_824._1_1_);\n        uVar2 = 0x80000200;\n        FUN_0002e584(0,acStack_810);\n      }\n      goto LAB_00046f5c;\n    }\n    __format = \"%s read iic err\\n\";\n  }\n  else {\n    __format = \"%s write iic err\\n\";\n  }\n  snprintf(acStack_810,0x800,__format);\n  FUN_0002e584(0,acStack_810,0);\n  uVar2 = 0x80000200;\nLAB_00046f5c:\n  pthread_mutex_unlock((pthread_mutex_t *)&DAT_0050514c);\n  return uVar2;\n}\n\n",
    "FUN_00046fe8": "\nvoid FUN_00046fe8(int param_1,uint param_2)\n\n{\n  byte *pbVar1;\n  uint uVar2;\n  uint uVar3;\n  char *pcVar4;\n  int iVar5;\n  undefined4 local_820;\n  \n  pcVar4 = \"read return data\";\n  iVar5 = param_1;\n  snprintf((char *)&local_820,0x800,\"Dumping %u %s bytes from %p:\\n\",param_2,\"read return data\",\n           param_1);\n  FUN_0002e584(2,&local_820,0);\n  if ((int)param_2 < 1) {\n    return;\n  }\n  do {\n    uVar3 = 0;\n    do {\n      while (uVar3 < param_2) {\n        pbVar1 = (byte *)(param_1 + uVar3);\n        uVar3 = uVar3 + 1;\n        snprintf((char *)&local_820,0x800,\"%02x \",(uint)*pbVar1,pcVar4,iVar5);\n        FUN_0002e584(2,&local_820,0);\n        if (uVar3 == 0x10) goto LAB_000470ac;\n      }\n      uVar3 = uVar3 + 1;\n      local_820 = &DAT_00202020;\n      FUN_0002e584(2,&local_820,0);\n    } while (uVar3 != 0x10);\nLAB_000470ac:\n    uVar3 = 0;\n    do {\n      while (uVar3 < param_2) {\n        uVar2 = (uint)*(byte *)(param_1 + uVar3);\n        uVar3 = uVar3 + 1;\n        if (0x5e < uVar2 - 0x20) {\n          uVar2 = 0x2e;\n        }\n        snprintf((char *)&local_820,0x800,\"%c\",uVar2);\n        FUN_0002e584(2,&local_820,0);\n        if (uVar3 == 0x10) goto LAB_00047124;\n      }\n      uVar3 = uVar3 + 1;\n      local_820 = (undefined *)CONCAT22(local_820._2_2_,0x20);\n      FUN_0002e584(2,&local_820,0);\n    } while (uVar3 != 0x10);\nLAB_00047124:\n    local_820 = (undefined *)CONCAT22(local_820._2_2_,10);\n    param_1 = param_1 + 0x10;\n    FUN_0002e584(2,&local_820,0);\n    if ((int)param_2 < 0x11) {\n      return;\n    }\n    param_2 = param_2 - 0x10;\n  } while( true );\n}\n\n",
    "FUN_00047158": "\nint FUN_00047158(uint param_1,uint *param_2,int param_3)\n\n{\n  int iVar1;\n  char *__format;\n  byte *pbVar2;\n  uint uVar3;\n  uint uVar4;\n  undefined4 uVar5;\n  undefined4 local_834;\n  undefined2 uStack_830;\n  byte local_82c;\n  byte abStack_82b [8];\n  byte local_823;\n  byte local_822;\n  char acStack_820 [2052];\n  \n  if (0xf < param_1) {\n    snprintf(acStack_820,0x800,\"%s: Bad pic param, input chain is %d\\n\",\"pic_get_voltage\",param_1);\n    FUN_0002e584(0,acStack_820);\n    return -0x7ffffdff;\n  }\n  if ((*(int *)(&DAT_0099ee4c + param_1 * 8) == 0) && (iVar1 = FUN_00046024(), iVar1 < 0)) {\n    snprintf(acStack_820,0x800,\"%s: auto exec open_pic, but chain %d open eeprom failed\\n\",\n             \"pic_get_voltage\",param_1);\n    FUN_0002e584(0,acStack_820,0);\n    return iVar1;\n  }\n  if (param_3 == 3) {\n    pthread_mutex_lock((pthread_mutex_t *)&DAT_0050514c);\n    uVar5 = *(undefined4 *)(&DAT_0099ee48 + param_1 * 8);\n    abStack_82b[3] = 0;\n    abStack_82b[4] = 0;\n    abStack_82b[5] = 0;\n    local_834 = 0x3704aa55;\n    local_82c = 0;\n    abStack_82b[0] = 0;\n    abStack_82b[1] = 0;\n    abStack_82b[2] = 0;\n    abStack_82b[6] = 0;\n    abStack_82b[7] = 0;\n    local_823 = 0;\n    local_822 = 0;\n    uStack_830 = 0x3b00;\n    iVar1 = FUN_0004966c(uVar5,&local_834);\n    if (iVar1 == 6) {\n      usleep(300000);\n      iVar1 = FUN_000495e4(uVar5,&local_82c);\n      if (iVar1 == 0xb) {\n        if ((local_82c != 0xb) || (abStack_82b[0] != 0x37)) {\n          snprintf(acStack_820,0x800,\n                   \"%s failed! read_back_data[0] = 0x%02x, read_back_data[1] = 0x%02x\\n\\n\",\n                   \"_read_an_voltage\",(uint)local_82c,(uint)abStack_82b[0]);\n          iVar1 = -1;\n          FUN_0002e584(0,acStack_820);\n          goto LAB_00047290;\n        }\n        pbVar2 = &local_82c;\n        uVar4 = 0;\n        uVar3 = 0xb;\n        while( true ) {\n          uVar3 = uVar4 + uVar3;\n          uVar4 = uVar3 & 0xffff;\n          if (pbVar2 == abStack_82b + 7) break;\n          pbVar2 = pbVar2 + 1;\n          uVar3 = (uint)*pbVar2;\n        }\n        if (((uint)local_823 == uVar4 >> 8) && ((uint)local_822 == (uVar3 & 0xff))) {\n          *param_2 = (CONCAT11(abStack_82b[3],abStack_82b[2]) & 0xff) << 8 | (uint)abStack_82b[3];\n          param_2[1] = (CONCAT11(abStack_82b[5],abStack_82b[4]) & 0xff) << 8 | (uint)abStack_82b[5];\n          param_2[2] = (CONCAT11(abStack_82b[7],abStack_82b[6]) & 0xff) << 8 | (uint)abStack_82b[7];\n          iVar1 = 0xb;\n          goto LAB_00047290;\n        }\n        __format = \"%s failed 2!\\n\";\n      }\n      else {\n        __format = \"%s read iic err\\n\";\n      }\n    }\n    else {\n      __format = \"%s write iic err\\n\";\n    }\n  }\n  else {\n    if (param_3 != 1) {\n      snprintf(acStack_820,0x800,\"%s failed: parameters error!\\n\",\"pic_get_voltage\");\n      FUN_0002e584(0,acStack_820);\n      return -0x7ffffdff;\n    }\n    pthread_mutex_lock((pthread_mutex_t *)&DAT_0050514c);\n    uVar5 = *(undefined4 *)(&DAT_0099ee48 + param_1 * 8);\n    local_82c = 0;\n    abStack_82b[0] = 0;\n    abStack_82b[1] = 0;\n    local_834 = 0x3a04aa55;\n    abStack_82b[2] = 0;\n    abStack_82b[3] = 0;\n    abStack_82b[4] = 0;\n    abStack_82b[5] = 0;\n    uStack_830 = 0x3e00;\n    iVar1 = FUN_0004966c(uVar5,&local_834);\n    if (iVar1 == 6) {\n      usleep(300000);\n      iVar1 = FUN_000495e4(uVar5,&local_82c);\n      if (iVar1 == 7) {\n        if (((local_82c != 7) || (abStack_82b[0] != 0x3a)) || (abStack_82b[1] != 1)) {\n          snprintf(acStack_820,0x800,\n                   \"%s failed! read_back_data[0] = 0x%02x, read_back_data[1] = 0x%02x, read_back_data[2] = 0x%02x\\n\\n\"\n                   ,\"_read_an6_voltage\",(uint)local_82c,(uint)abStack_82b[0],(uint)abStack_82b[1]);\n          iVar1 = -1;\n          FUN_0002e584(0,acStack_820);\n          goto LAB_00047290;\n        }\n        uVar3 = (uint)abStack_82b[2] + (uint)abStack_82b[3] + 0x42;\n        if (((uint)abStack_82b[4] == uVar3 >> 8) && ((uint)abStack_82b[5] == (uVar3 & 0xff))) {\n          *param_2 = (CONCAT11(abStack_82b[3],abStack_82b[2]) & 0xff) << 8 | (uint)abStack_82b[3];\n          iVar1 = 7;\n          goto LAB_00047290;\n        }\n        __format = \"%s failed 2!\\n\";\n      }\n      else {\n        __format = \"%s read iic err\\n\";\n      }\n    }\n    else {\n      __format = \"%s write iic err\\n\";\n    }\n  }\n  snprintf(acStack_820,0x800,__format);\n  iVar1 = -1;\n  FUN_0002e584(0,acStack_820);\nLAB_00047290:\n  pthread_mutex_unlock((pthread_mutex_t *)&DAT_0050514c);\n  return iVar1;\n}\n\n",
    "FUN_0004752c": "\nuint FUN_0004752c(uint param_1,int param_2,int param_3,int param_4,uint param_5)\n\n{\n  int iVar1;\n  char *__format;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  undefined2 uVar5;\n  uint uVar7;\n  byte *pbVar8;\n  uint uVar9;\n  undefined4 uVar10;\n  undefined2 local_84c;\n  undefined2 local_848;\n  undefined local_846;\n  undefined local_845;\n  undefined local_844;\n  undefined local_843;\n  undefined4 local_842;\n  undefined4 local_83e;\n  undefined4 local_83a;\n  undefined4 local_836;\n  undefined4 local_832;\n  undefined4 local_82e;\n  undefined2 local_82a;\n  char acStack_828 [2052];\n  uint uVar6;\n  \n  if (0xf < param_1) {\n    snprintf(acStack_828,0x800,\"%s: Bad pic param, input chain is %d\\n\",\"app_write_data_into_flash\",\n             param_1);\n    FUN_0002e584(0,acStack_828);\n    return 0x80000201;\n  }\n  if ((*(int *)(&DAT_0099ee4c + param_1 * 8) == 0) && (uVar9 = FUN_00046024(), (int)uVar9 < 0)) {\n    snprintf(acStack_828,0x800,\"%s: auto exec open_pic, but chain %d open eeprom failed\\n\",\n             \"app_write_data_into_flash\",param_1);\n    FUN_0002e584(0,acStack_828,0);\n    return uVar9;\n  }\n  uVar10 = *(undefined4 *)(&DAT_0099ee48 + param_1 * 8);\n  pthread_mutex_lock((pthread_mutex_t *)&DAT_0050514c);\n  uVar9 = param_5;\n  if (0xf < (int)param_5) {\n    uVar9 = 0x10;\n  }\n  local_843 = (undefined)param_3;\n  local_846 = (undefined)(param_5 + 6);\n  local_844 = (undefined)param_2;\n  uVar6 = (param_5 + 6 & 0xff) + param_3 + 0x35 + param_2;\n  uVar5 = (undefined2)uVar6;\n  local_848 = 0xaa55;\n  local_84c = 0;\n  local_842 = 0;\n  local_83e = 0;\n  local_83a = 0;\n  local_836 = 0;\n  local_832 = 0;\n  local_82e = 0;\n  local_82a = 0;\n  local_845 = 0x35;\n  if (0 < (int)param_5) {\n    pbVar8 = (byte *)(param_4 + -1);\n    uVar4 = 0;\n    do {\n      pbVar8 = pbVar8 + 1;\n      uVar2 = (uint)*pbVar8;\n      if (((uVar4 & 1) == 0) && (0x3f < uVar2)) {\n        snprintf(acStack_828,0x800,\"%s: the data[%d] must less than 0x3f\\n\",\n                 \"_app_write_data_into_flash_1704_v8\",uVar4);\n        FUN_0002e584(0,acStack_828,0);\n        uVar2 = (uint)*pbVar8;\n      }\n      uVar7 = uVar6 + uVar2;\n      uVar3 = uVar4 + 1;\n      *(char *)((int)&local_842 + uVar4) = (char)uVar2;\n      uVar6 = uVar7 & 0xffff;\n      uVar5 = (undefined2)uVar7;\n      uVar4 = uVar3;\n    } while ((int)uVar3 < (int)uVar9);\n  }\n  uVar6 = uVar9 & 0xffff;\n  uVar4 = uVar6 + 8 & 0xffff;\n  *(char *)((int)&local_848 + (uVar6 + 6 & 0xffff)) = (char)((ushort)uVar5 >> 8);\n  *(char *)((int)&local_848 + (uVar6 + 7 & 0xffff)) = (char)uVar5;\n  uVar6 = FUN_0004966c(uVar10,&local_848,uVar4);\n  if (uVar6 == uVar4) {\n    usleep(300000);\n    iVar1 = FUN_000495e4(uVar10,&local_84c,2);\n    if (iVar1 == 2) {\n      if (((byte)local_84c != 0x35) || (local_84c._1_1_ != 1)) {\n        uVar9 = 0;\n        snprintf(acStack_828,0x800,\n                 \"%s failed 2! read_back_data[0] = 0x%02x, read_back_data[1] = 0x%02x\\n\\n\",\n                 \"_app_write_data_into_flash_1704_v8\",(uint)(byte)local_84c,(uint)local_84c._1_1_);\n        FUN_0002e584(0,acStack_828,0);\n      }\n      goto LAB_000476d0;\n    }\n    __format = \"%s read iic 2 err\\n\";\n  }\n  else {\n    __format = \"%s write iic 2 err\\n\";\n  }\n  snprintf(acStack_828,0x800,__format,\"_app_write_data_into_flash_1704_v8\");\n  uVar9 = 0;\n  FUN_0002e584(0,acStack_828);\nLAB_000476d0:\n  pthread_mutex_unlock((pthread_mutex_t *)&DAT_0050514c);\n  return uVar9;\n}\n\n",
    "FUN_000477ec": "\nsize_t FUN_000477ec(uint param_1,int param_2,int param_3,void *param_4,size_t param_5)\n\n{\n  byte *__ptr;\n  int iVar1;\n  size_t sVar2;\n  uint uVar3;\n  char *__format;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  size_t sVar7;\n  size_t __size;\n  undefined4 uVar8;\n  undefined4 local_834;\n  undefined local_830;\n  undefined local_82f;\n  undefined local_82e;\n  undefined local_82d;\n  undefined local_82c;\n  char acStack_828 [2052];\n  \n  if (0xf < param_1) {\n    snprintf(acStack_828,0x800,\"%s: Bad pic param, input chain is %d\\n\",\"app_read_data_from_flash\",\n             param_1);\n    FUN_0002e584(0,acStack_828);\n    return 0x80000201;\n  }\n  if ((*(int *)(&DAT_0099ee4c + param_1 * 8) == 0) && (sVar7 = FUN_00046024(), (int)sVar7 < 0)) {\n    snprintf(acStack_828,0x800,\"%s: auto exec open_pic, but chain %d open eeprom failed\\n\",\n             \"app_read_data_from_flash\",param_1);\n    FUN_0002e584(0,acStack_828,0);\n    return sVar7;\n  }\n  __size = param_5 + 5;\n  uVar8 = *(undefined4 *)(&DAT_0099ee48 + param_1 * 8);\n  pthread_mutex_lock((pthread_mutex_t *)&DAT_0050514c);\n  __ptr = (byte *)malloc(__size);\n  sVar7 = param_5;\n  if (0xf < (int)param_5) {\n    sVar7 = 0x10;\n  }\n  local_834 = 0x3607aa55;\n  uVar4 = sVar7 + 0x3d + param_3 + param_2 & 0xffff;\n  local_830 = (undefined)param_2;\n  local_82f = (undefined)param_3;\n  local_82e = (undefined)sVar7;\n  local_82c = (undefined)uVar4;\n  local_82d = (undefined)(uVar4 >> 8);\n  iVar1 = FUN_0004966c(uVar8,&local_834,9);\n  if (iVar1 == 9) {\n    usleep(300000);\n    sVar2 = FUN_000495e4(uVar8,__ptr);\n    if (__size == sVar2) {\n      uVar4 = (uint)*__ptr;\n      if (((__ptr[1] == 0x36) && (__ptr[2] == 1)) && (__size == uVar4)) {\n        if ((int)(param_5 + 3) < 1) {\n          uVar5 = 0;\n          uVar3 = uVar5;\n        }\n        else {\n          uVar5 = 0;\n          uVar6 = 0;\n          uVar3 = uVar4;\n          while( true ) {\n            uVar6 = uVar6 + 1 & 0xffff;\n            uVar5 = uVar5 + uVar3 & 0xffff;\n            if ((int)(param_5 + 3) <= (int)uVar6) break;\n            uVar3 = (uint)__ptr[uVar6];\n          }\n          uVar3 = uVar5 >> 8;\n        }\n        if ((__ptr[param_5 + 3] == uVar3) && ((uint)__ptr[param_5 + 4] == (uVar5 & 0xff))) {\n          memcpy(param_4,__ptr + 3,sVar7);\n        }\n        else {\n          sVar7 = 0;\n          snprintf(acStack_828,0x800,\"%s failed 2!\\n\",\"_app_read_data_from_flash_1704_v8\");\n          FUN_0002e584(0,acStack_828,0);\n          FUN_00046fe8(__ptr,uVar4);\n        }\n      }\n      else {\n        snprintf(acStack_828,0x800,\n                 \"%s failed !\\n read_back_data[0] = 0x%x, read_back_data[1] = 0x%x, read_back_data[2] = 0x%x\\n\"\n                 ,\"_app_read_data_from_flash_1704_v8\",uVar4,(uint)__ptr[1],(uint)__ptr[2]);\n        sVar7 = 0;\n        FUN_0002e584(0,acStack_828);\n        FUN_00046fe8(__ptr,__size);\n      }\n      goto LAB_000478d0;\n    }\n    __format = \"%s read iic 2 err\\n\";\n  }\n  else {\n    __format = \"%s write iic 2 err\\n\";\n  }\n  sVar7 = 0;\n  snprintf(acStack_828,0x800,__format,\"_app_read_data_from_flash_1704_v8\");\n  FUN_0002e584(0,acStack_828,0);\nLAB_000478d0:\n  free(__ptr);\n  pthread_mutex_unlock((pthread_mutex_t *)&DAT_0050514c);\n  return sVar7;\n}\n\n",
    "FUN_00048110": "\nsize_t FUN_00048110(uint param_1,int param_2,undefined4 param_3,void *param_4,size_t param_5)\n\n{\n  size_t sVar1;\n  int iVar2;\n  uint uVar3;\n  char *__format;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  undefined4 local_848;\n  undefined local_844;\n  undefined local_843;\n  undefined local_842;\n  undefined local_841;\n  undefined4 local_840;\n  undefined4 local_83c;\n  undefined4 local_838;\n  undefined4 local_834;\n  undefined4 local_830;\n  undefined2 local_82c;\n  char acStack_828 [2052];\n  \n  if (0xf < param_1) {\n    snprintf(acStack_828,0x800,\"%s: Bad pic param, input chain is %d\\n\",\"pic_read_iic\",param_1);\n    FUN_0002e584(0,acStack_828);\n    return 0x80000201;\n  }\n  if ((*(int *)(&DAT_0099ee4c + param_1 * 8) == 0) && (sVar1 = FUN_00046024(), (int)sVar1 < 0)) {\n    snprintf(acStack_828,0x800,\"%s: auto exec open_pic, but chain %d open eeprom failed\\n\",\n             \"pic_read_iic\",param_1);\n    FUN_0002e584(0,acStack_828,0);\n    return sVar1;\n  }\n  uVar6 = 0;\n  sVar1 = FUN_00046ca0(*(undefined4 *)(&DAT_0099ee48 + param_1 * 8),param_2,param_3,0,0);\n  if ((int)sVar1 < 0) {\n    snprintf(acStack_828,0x800,\"%s: select slave: 0x%02x, reg/command: 0x%02x is failed\",\n             \"pic_read_iic\",param_2,param_3);\n    FUN_0002e584(0,acStack_828,0);\n    return sVar1;\n  }\n  usleep(10000);\n  uVar7 = *(undefined4 *)(&DAT_0099ee48 + param_1 * 8);\n  pthread_mutex_lock((pthread_mutex_t *)&DAT_0050514c);\n  if (0xf < (int)param_5) {\n    param_5 = 0x10;\n  }\n  uVar4 = param_5 + 0x42 + param_2 & 0xffff;\n  local_843 = (undefined)param_5;\n  local_841 = (undefined)uVar4;\n  local_840 = 0;\n  local_844 = (undefined)param_2;\n  local_83c = 0;\n  local_842 = (undefined)(uVar4 >> 8);\n  local_838 = 0;\n  local_834 = 0;\n  local_830 = 0;\n  local_82c = 0;\n  local_848 = 0x3c06aa55;\n  iVar2 = FUN_0004966c(uVar7,&local_848);\n  if (iVar2 == 8) {\n    uVar8 = param_5 + 5;\n    usleep(10000);\n    uVar4 = FUN_000495e4(uVar7,&local_840,uVar8);\n    if (uVar8 == uVar4) {\n      uVar5 = local_840 & 0xff;\n      uVar3 = local_840 >> 8 & 0xff;\n      uVar4 = local_840 >> 0x10 & 0xff;\n      if (((uVar8 == uVar5) && (uVar3 == 0x3c)) && (uVar4 == 1)) {\n        uVar4 = 0;\n        if (0 < (int)(param_5 + 3)) {\n          while( true ) {\n            uVar6 = uVar6 + 1 & 0xffff;\n            uVar4 = uVar4 + uVar5 & 0xffff;\n            if ((int)(param_5 + 3) <= (int)uVar6) break;\n            uVar5 = (uint)*(byte *)((int)&local_840 + uVar6);\n          }\n          uVar6 = uVar4 >> 8;\n        }\n        if ((*(byte *)((int)&local_840 + param_5 + 3) == uVar6) &&\n           ((uint)*(byte *)((int)&local_83c + param_5) == (uVar4 & 0xff))) {\n          memcpy(param_4,(void *)((int)&local_840 + 3),param_5);\n        }\n        else {\n          snprintf(acStack_828,0x800,\"%s failed 2!\\n\",\"_pic_read_iic\");\n          param_5 = 0;\n          FUN_0002e584(0,acStack_828);\n        }\n      }\n      else {\n        param_5 = 0;\n        snprintf(acStack_828,0x800,\n                 \"%s failed! read_back_data[0] = 0x%02x, read_back_data[1] = 0x%02x, read_back_data[2] = 0x%02x\\n\\n\"\n                 ,\"_pic_read_iic\",uVar5,uVar3,uVar4);\n        FUN_0002e584(0,acStack_828,0);\n      }\n      goto LAB_00048220;\n    }\n    __format = \"%s read iic err\\n\";\n  }\n  else {\n    __format = \"%s write iic err\\n\";\n  }\n  param_5 = 0;\n  snprintf(acStack_828,0x800,__format,\"_pic_read_iic\");\n  FUN_0002e584(0,acStack_828,0);\nLAB_00048220:\n  pthread_mutex_unlock((pthread_mutex_t *)&DAT_0050514c);\n  return param_5;\n}\n\n",
    "FUN_00048520": "\nundefined4 FUN_00048520(undefined4 param_1,char *param_2,uint param_3,char *param_4,uint param_5)\n\n{\n  byte *pbVar1;\n  uint uVar2;\n  char *pcVar3;\n  uint uVar4;\n  byte *pbVar5;\n  undefined4 uVar6;\n  int iVar7;\n  int local_850;\n  undefined local_829;\n  undefined4 local_828;\n  undefined4 uStack_824;\n  undefined4 uStack_820;\n  undefined4 uStack_81c;\n  undefined4 local_818;\n  undefined4 uStack_814;\n  undefined2 local_810;\n  \n  local_829 = 0x11;\n  pthread_mutex_lock((pthread_mutex_t *)&DAT_00505164);\n  local_850 = 0;\n  do {\n    uVar4 = 0;\n    do {\n      pcVar3 = param_2 + uVar4;\n      uVar4 = uVar4 + 1 & 0xff;\n      FUN_00049794(param_1,&local_829,1,pcVar3,1);\n    } while (uVar4 < param_3);\n    uVar4 = 0;\n    usleep(400000);\n    do {\n      pcVar3 = param_4 + uVar4;\n      uVar4 = uVar4 + 1 & 0xff;\n      FUN_000496f4(param_1,&local_829,1,pcVar3,1);\n    } while (uVar4 < param_5);\n    usleep(100000);\n    uVar4 = 0;\n    pbVar1 = (byte *)(param_4 + 1);\n    do {\n      pbVar1 = pbVar1 + 1;\n      uVar4 = uVar4 + *pbVar1 & 0xffff;\n    } while ((byte *)(param_4 + (param_5 - 3)) != pbVar1);\n    uVar2 = (uint)(byte)param_4[param_5 - 2] + (uint)(byte)param_4[param_5 - 1] * 0x100 & 0xffff;\n    if (uVar4 == uVar2) {\n      if ((((*param_2 == *param_4) && (param_2[1] == param_4[1])) && (param_2[3] == param_4[3])) &&\n         (param_5 == (byte)param_4[2] + 2)) {\n        uVar6 = 0;\n        goto LAB_00048744;\n      }\n      local_828._0_1_ = 'p';\n      local_828._1_1_ = 'o';\n      local_828._2_1_ = 'w';\n      local_828._3_1_ = 'e';\n      uStack_824._0_1_ = 'r';\n      uStack_824._1_1_ = ' ';\n      uStack_824._2_1_ = 'r';\n      uStack_824._3_1_ = 'e';\n      uStack_820._0_1_ = 'p';\n      uStack_820._1_1_ = 'l';\n      uStack_820._2_1_ = 'y';\n      uStack_820._3_1_ = ' ';\n      uStack_81c._0_1_ = 't';\n      uStack_81c._1_1_ = 'h';\n      uStack_81c._2_1_ = 'e';\n      uStack_81c._3_1_ = ' ';\n      local_818._0_1_ = 'b';\n      local_818._1_1_ = 'a';\n      local_818._2_1_ = 'd';\n      local_818._3_1_ = ' ';\n      uStack_814._0_1_ = 'd';\n      uStack_814._1_1_ = 'a';\n      uStack_814._2_1_ = 't';\n      uStack_814._3_1_ = 'a';\n      local_810 = 10;\n      FUN_0002e584(0,&local_828);\n    }\n    else {\n      snprintf((char *)&local_828,0x800,\"power reply the bad crc, crc = 0x%04x, crc_read = 0x%04x\\n\"\n               ,uVar4,uVar2);\n      FUN_0002e584(0,&local_828);\n    }\n    pbVar5 = (byte *)(param_4 + -1);\n    pbVar1 = pbVar5 + param_5;\n    iVar7 = 0;\n    do {\n      pbVar5 = pbVar5 + 1;\n      snprintf((char *)&local_828,0x800,\"read_back_data[%d] = 0x%02x\",iVar7,(uint)*pbVar5);\n      FUN_0002e584(0,&local_828);\n      iVar7 = iVar7 + 1;\n    } while (pbVar1 != pbVar5);\n    iVar7 = local_850 + 1;\n    snprintf((char *)&local_828,0x800,\"Send power cmd(0x%02x) failed, retry %d\\n\",\n             (uint)(byte)param_2[3],local_850);\n    FUN_0002e584(0,&local_828);\n    local_850 = iVar7;\n  } while (iVar7 != 3);\n  uVar6 = 0x80000300;\nLAB_00048744:\n  pthread_mutex_unlock((pthread_mutex_t *)&DAT_00505164);\n  return uVar6;\n}\n\n",
    "FUN_000487e8": "\nundefined4 FUN_000487e8(void)\n\n{\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined4 uStack_7fc;\n  undefined4 uStack_7f8;\n  undefined4 uStack_7f4;\n  undefined4 uStack_7f0;\n  \n  local_808._0_1_ = 's';\n  local_808._1_1_ = 'e';\n  local_808._2_1_ = 't';\n  local_808._3_1_ = ' ';\n  uStack_804._0_1_ = 'D';\n  uStack_804._1_1_ = 'A';\n  uStack_804._2_1_ = ' ';\n  uStack_804._3_1_ = 'c';\n  uStack_800._0_1_ = 'o';\n  uStack_800._1_1_ = 'n';\n  uStack_800._2_1_ = 'v';\n  uStack_800._3_1_ = 'e';\n  uStack_7fc._0_1_ = 'r';\n  uStack_7fc._1_1_ = 's';\n  uStack_7fc._2_1_ = 'i';\n  uStack_7fc._3_1_ = 'o';\n  uStack_7f8._0_1_ = 'n';\n  uStack_7f8._1_1_ = ' ';\n  uStack_7f8._2_1_ = 'N';\n  uStack_7f8._3_1_ = ' ';\n  uStack_7f4._0_1_ = 'f';\n  uStack_7f4._1_1_ = 'a';\n  uStack_7f4._2_1_ = 'i';\n  uStack_7f4._3_1_ = 'l';\n  uStack_7f0._0_1_ = 'e';\n  uStack_7f0._1_1_ = 'd';\n  uStack_7f0._2_1_ = '\\n';\n  uStack_7f0._3_1_ = '\\0';\n  FUN_0002e584(0,&local_808);\n  return 0x80000300;\n}\n\n",
    "FUN_00048834": "\nvoid FUN_00048834(undefined4 param_1,int param_2)\n\n{\n  int iVar1;\n  undefined4 local_18;\n  ushort local_14;\n  char local_12;\n  undefined local_11;\n  undefined4 local_10;\n  undefined4 local_c;\n  \n  local_11 = (undefined)((uint)(param_2 + 0x89) >> 8);\n  local_12 = (byte)param_2 + 0x89;\n  local_18 = 0x8306aa55;\n  local_10 = 0;\n  local_14 = (ushort)(byte)param_2;\n  local_c = 0;\n  iVar1 = FUN_00048520(param_1,&local_18,8,&local_10,8);\n  if (iVar1 != 0) {\n    FUN_000487e8(iVar1);\n  }\n  return;\n}\n\n",
    "FUN_000488a4": "\nvoid FUN_000488a4(void)\n\n{\n  pthread_mutex_lock((pthread_mutex_t *)&DAT_00505164);\n  FUN_00049574(DAT_0050517c);\n  DAT_00505180 = 0;\n  DAT_00505184 = 0;\n  pthread_mutex_unlock((pthread_mutex_t *)&DAT_00505164);\n  return;\n}\n\n",
    "FUN_00048910": "\nuint FUN_00048910(void)\n\n{\n  undefined4 uVar1;\n  char cVar2;\n  uint uVar3;\n  int iVar4;\n  int iVar5;\n  undefined4 local_830;\n  undefined2 local_82c;\n  uint local_828;\n  uint local_824;\n  undefined4 local_820;\n  undefined4 uStack_81c;\n  undefined4 uStack_818;\n  undefined4 uStack_814;\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined2 local_808;\n  \n  if ((DAT_00505180 == 0) && (uVar3 = FUN_00048b58(), (int)uVar3 < 0)) {\n    snprintf((char *)&local_820,0x800,\"%s: auto exec bitmain_power_open, but open power failed\\n\",\n             \"bitmain_power_version\");\n    FUN_0002e584(0,&local_820,0);\n  }\n  else {\n    uVar1 = DAT_0050517c;\n    iVar5 = 10;\n    do {\n      local_830 = CONCAT31(local_830._1_3_,0xff);\n      local_828 = local_828 & 0xffffff00;\n      pthread_mutex_lock((pthread_mutex_t *)&DAT_00505164);\n      iVar4 = FUN_000496f4(uVar1,&local_828,1,&local_830,1);\n      if (iVar4 == 1) {\n        cVar2 = (char)local_830;\n        pthread_mutex_unlock((pthread_mutex_t *)&DAT_00505164);\n        if (cVar2 == -0xb) break;\n      }\n      else {\n        snprintf((char *)&local_820,0x800,\"%s: iic read is failed\\n\",\n                 \"_bitmain_get_power_code_version\");\n        FUN_0002e584(0,&local_820,0);\n        pthread_mutex_unlock((pthread_mutex_t *)&DAT_00505164);\n      }\n      usleep(100000);\n      iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    local_830 = 0x204aa55;\n    local_828 = 0;\n    local_824 = 0;\n    local_82c = 6;\n    iVar5 = FUN_00048520(uVar1,&local_830,6,&local_828,8);\n    if (iVar5 == 0) {\n      uVar3 = local_824 & 0xffff;\n      if (uVar3 != 0) {\n        DAT_00505184 = uVar3;\n      }\n    }\n    else {\n      uVar3 = 0x80000300;\n      local_820._0_1_ = 'g';\n      local_820._1_1_ = 'e';\n      local_820._2_1_ = 't';\n      local_820._3_1_ = ' ';\n      uStack_81c._0_1_ = 'p';\n      uStack_81c._1_1_ = 'o';\n      uStack_81c._2_1_ = 'w';\n      uStack_81c._3_1_ = 'e';\n      uStack_818._0_1_ = 'r';\n      uStack_818._1_1_ = ' ';\n      uStack_818._2_1_ = 'v';\n      uStack_818._3_1_ = 'e';\n      uStack_814._0_1_ = 'r';\n      uStack_814._1_1_ = 's';\n      uStack_814._2_1_ = 'i';\n      uStack_814._3_1_ = 'o';\n      local_810._0_1_ = 'n';\n      local_810._1_1_ = ' ';\n      local_810._2_1_ = 'f';\n      local_810._3_1_ = 'a';\n      uStack_80c._0_1_ = 'i';\n      uStack_80c._1_1_ = 'l';\n      uStack_80c._2_1_ = 'e';\n      uStack_80c._3_1_ = 'd';\n      local_808 = 10;\n      FUN_0002e584(0,&local_820,0);\n    }\n  }\n  return uVar3;\n}\n\n",
    "FUN_00048abc": "\nint FUN_00048abc(void)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 local_18;\n  undefined4 local_14;\n  \n  local_14 = 0x20001;\n  local_18 = 0;\n  pthread_mutex_lock((pthread_mutex_t *)&DAT_00505164);\n  iVar1 = FUN_000493d0(&local_18);\n  pthread_mutex_unlock((pthread_mutex_t *)&DAT_00505164);\n  if (-1 < iVar1) {\n    DAT_00505180 = 1;\n    DAT_0050517c = iVar1;\n    iVar2 = FUN_00048910();\n    if (iVar2 < 0) {\n      if ((DAT_0050517c == 0) || (iVar1 = iVar2, DAT_00505180 == 0)) {\n        FUN_000488a4();\n        return iVar2;\n      }\n    }\n    else {\n      iVar1 = 0;\n      DAT_00505184 = iVar2;\n    }\n  }\n  return iVar1;\n}\n\n",
    "FUN_00048b58": "\nvoid FUN_00048b58(void)\n\n{\n  if ((DAT_0050517c != 0) && (DAT_00505180 != 0)) {\n    return;\n  }\n  FUN_00048abc();\n  return;\n}\n\n",
    "FUN_00048b7c": "\nuint FUN_00048b7c(void)\n\n{\n  uint uVar1;\n  int iVar2;\n  undefined4 local_820;\n  undefined2 local_81c;\n  undefined4 local_818;\n  uint local_814;\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined4 uStack_804;\n  undefined4 local_800;\n  undefined4 uStack_7fc;\n  undefined2 local_7f8;\n  undefined local_7f6;\n  \n  if ((DAT_00505180 == 0) && (uVar1 = FUN_00048abc(), (int)uVar1 < 0)) {\n    snprintf((char *)&local_810,0x800,\"%s: auto exec bitmain_power_open, but open power failed\\n\",\n             \"bitmain_get_power_status\");\n    FUN_0002e584(0,&local_810,0);\n  }\n  else {\n    local_814 = 0;\n    local_818 = 0;\n    local_820 = 0xa04aa55;\n    local_81c = 0xe;\n    iVar2 = FUN_00048520(DAT_0050517c,&local_820,6,&local_818,8);\n    if (iVar2 != 0) {\n      local_810._0_1_ = 'g';\n      local_810._1_1_ = 'e';\n      local_810._2_1_ = 't';\n      local_810._3_1_ = ' ';\n      uStack_80c._0_1_ = 'p';\n      uStack_80c._1_1_ = 'o';\n      uStack_80c._2_1_ = 'w';\n      uStack_80c._3_1_ = 'e';\n      uStack_808._0_1_ = 'r';\n      uStack_808._1_1_ = ' ';\n      uStack_808._2_1_ = 's';\n      uStack_808._3_1_ = 't';\n      uStack_804._0_1_ = 'a';\n      uStack_804._1_1_ = 't';\n      uStack_804._2_1_ = 'u';\n      uStack_804._3_1_ = 's';\n      local_800._0_1_ = ' ';\n      local_800._1_1_ = 'f';\n      local_800._2_1_ = 'a';\n      local_800._3_1_ = 'i';\n      uStack_7fc._0_1_ = 'l';\n      uStack_7fc._1_1_ = 'e';\n      uStack_7fc._2_1_ = 'd';\n      uStack_7fc._3_1_ = '\\n';\n      local_7f8 = (ushort)local_7f8._1_1_ << 8;\n      FUN_0002e584(0,&local_810,0);\n      local_810._0_1_ = 'c';\n      local_810._1_1_ = 'a';\n      local_810._2_1_ = 'n';\n      local_810._3_1_ = ' ';\n      uStack_80c._0_1_ = 'n';\n      uStack_80c._1_1_ = 'o';\n      uStack_80c._2_1_ = 'n';\n      uStack_80c._3_1_ = 't';\n      uStack_808._0_1_ = ' ';\n      uStack_808._1_1_ = 'g';\n      uStack_808._2_1_ = 'e';\n      uStack_808._3_1_ = 't';\n      uStack_804._0_1_ = ' ';\n      uStack_804._1_1_ = 'p';\n      uStack_804._2_1_ = 'o';\n      uStack_804._3_1_ = 'w';\n      local_800._0_1_ = 'e';\n      local_800._1_1_ = 'r';\n      local_800._2_1_ = ' ';\n      local_800._3_1_ = 's';\n      uStack_7fc._0_1_ = 't';\n      uStack_7fc._1_1_ = 'a';\n      uStack_7fc._2_1_ = 't';\n      uStack_7fc._3_1_ = 'u';\n      local_7f8 = 0xa73;\n      local_7f6 = 0;\n      FUN_0002e584(0,&local_810,0);\n      return 0x80000300;\n    }\n    uVar1 = local_814 & 0xffff;\n  }\n  return uVar1;\n}\n\n",
    "FUN_00048cb8": "\nint FUN_00048cb8(undefined4 param_1)\n\n{\n  int iVar1;\n  char acStack_818 [2052];\n  \n  if ((DAT_00505180 == 0) && (iVar1 = FUN_00048abc(), iVar1 < 0)) {\n    snprintf(acStack_818,0x800,\"%s: auto exec bitmain_power_open, but open power failed\\n\",\n             \"bitmain_set_voltage_by_n\");\n    FUN_0002e584(0,acStack_818,0);\n  }\n  else {\n    iVar1 = FUN_00048834(DAT_0050517c,param_1);\n  }\n  return iVar1;\n}\n\n",
    "FUN_00048d38": "\nundefined4 FUN_00048d38(void)\n\n{\n  double in_d0;\n  undefined4 local_4;\n  \n  switch(DAT_00505184) {\n  case 0x41:\n  case 0x42:\n    return (int)(longlong)(765.4117639999999 - in_d0 * 35.833333);\n  case 0x43:\n    return (int)(longlong)(933.240365 - in_d0 * 59.806034);\n  default:\n    local_4 = 0xffffffff;\n    break;\n  case 0x71:\n  case 0x72:\n  case 0x75:\n  case 0x77:\n    local_4 = (undefined4)(longlong)(1190.935338 - in_d0 * 78.742588);\n    break;\n  case 0x74:\n  case 0x76:\n    return (int)(longlong)(1156.107585 - in_d0 * 76.09049400000001);\n  }\n  return local_4;\n}\n\n",
    "FUN_00048f00": "\nint FUN_00048f00(void)\n\n{\n  uint uVar1;\n  int iVar2;\n  char acStack_810 [2048];\n  \n  if ((DAT_00505180 == 0) && (iVar2 = FUN_00048abc(), iVar2 < 0)) {\n    snprintf(acStack_810,0x800,\"%s: auto exec bitmain_power_open, but open power failed\\n\",\n             \"bitmain_set_voltage\");\n    FUN_0002e584(0,acStack_810,0);\n    return iVar2;\n  }\n  uVar1 = FUN_00048d38();\n  if (uVar1 < 0x100) {\n    iVar2 = FUN_00048834(DAT_0050517c,uVar1 & 0xff);\n  }\n  else {\n    iVar2 = -0x7ffffcff;\n  }\n  return iVar2;\n}\n\n",
    "FUN_00048f9c": "\ndouble FUN_00048f9c(int param_1)\n\n{\n  double dVar1;\n  \n  switch(DAT_00505184) {\n  case 0x41:\n  case 0x42:\n    return (765.4117639999999 - (double)(longlong)param_1) / 35.833333;\n  case 0x43:\n    return (933.240365 - (double)(longlong)param_1) / 59.806034;\n  default:\n    dVar1 = -1.0;\n    break;\n  case 0x71:\n  case 0x72:\n  case 0x75:\n  case 0x77:\n    dVar1 = (1190.935338 - (double)(longlong)param_1) / 78.742588;\n    break;\n  case 0x74:\n  case 0x76:\n    return (1156.107585 - (double)(longlong)param_1) / 76.09049400000001;\n  }\n  return dVar1;\n}\n\n",
    "FUN_00049168": "\ndouble FUN_00049168(void)\n\n{\n  int iVar1;\n  double dVar2;\n  undefined4 local_820;\n  undefined2 local_81c;\n  undefined4 local_818;\n  uint local_814;\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined4 local_7fc;\n  undefined4 uStack_7f8;\n  \n  if ((DAT_00505180 == 0) && (iVar1 = FUN_00048abc(), iVar1 < 0)) {\n    snprintf((char *)&local_810,0x800,\"%s: auto exec bitmain_power_open, but open power failed\\n\",\n             \"bitmain_get_voltage\");\n    FUN_0002e584(0,&local_810,0);\n    dVar2 = (double)(longlong)iVar1;\n  }\n  else {\n    local_814 = 0;\n    local_818 = 0;\n    local_820 = 0x304aa55;\n    local_81c = 7;\n    iVar1 = FUN_00048520(DAT_0050517c,&local_820,6,&local_818,8);\n    if (iVar1 != 0) {\n      local_810._0_1_ = 'g';\n      local_810._1_1_ = 'e';\n      local_810._2_1_ = 't';\n      local_810._3_1_ = ' ';\n      uStack_80c._0_1_ = 'A';\n      uStack_80c._1_1_ = 'D';\n      uStack_80c._2_1_ = ' ';\n      uStack_80c._3_1_ = 'c';\n      uStack_808._0_1_ = 'o';\n      uStack_808._1_1_ = 'n';\n      uStack_808._2_1_ = 'v';\n      uStack_808._3_1_ = 'e';\n      uStack_804._0_1_ = 'r';\n      uStack_804._1_1_ = 's';\n      uStack_804._2_1_ = 'i';\n      uStack_804._3_1_ = 'o';\n      uStack_800._0_1_ = 'n';\n      uStack_800._1_1_ = ' ';\n      uStack_800._2_1_ = 'N';\n      uStack_800._3_1_ = ' ';\n      local_7fc._0_1_ = 'f';\n      local_7fc._1_1_ = 'a';\n      local_7fc._2_1_ = 'i';\n      local_7fc._3_1_ = 'l';\n      uStack_7f8._0_1_ = 'e';\n      uStack_7f8._1_1_ = 'd';\n      uStack_7f8._2_1_ = '\\n';\n      uStack_7f8._3_1_ = '\\0';\n      FUN_0002e584(0,&local_810,0);\n      local_810._0_1_ = 'c';\n      local_810._1_1_ = 'a';\n      local_810._2_1_ = 'n';\n      local_810._3_1_ = ' ';\n      uStack_80c._0_1_ = 'n';\n      uStack_80c._1_1_ = 'o';\n      uStack_80c._2_1_ = 'n';\n      uStack_80c._3_1_ = 't';\n      uStack_808._0_1_ = ' ';\n      uStack_808._1_1_ = 'g';\n      uStack_808._2_1_ = 'e';\n      uStack_808._3_1_ = 't';\n      uStack_804._0_1_ = ' ';\n      uStack_804._1_1_ = 'v';\n      uStack_804._2_1_ = 'o';\n      uStack_804._3_1_ = 'l';\n      uStack_800._0_1_ = 't';\n      uStack_800._1_1_ = 'a';\n      uStack_800._2_1_ = 'g';\n      uStack_800._3_1_ = 'e';\n      local_7fc = CONCAT22(local_7fc._2_2_,10);\n      FUN_0002e584(0,&local_810,0);\n      return -2147482880.0;\n    }\n    dVar2 = (double)FUN_00048f9c(local_814 & 0xffff);\n  }\n  return dVar2;\n}\n\n",
    "FUN_000492a4": "\nint FUN_000492a4(int param_1,int param_2,int param_3)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined *puVar3;\n  int iVar4;\n  undefined4 local_82c;\n  undefined local_828;\n  undefined local_827;\n  undefined local_826;\n  undefined local_825;\n  undefined4 local_824;\n  undefined4 local_820;\n  undefined4 local_81c;\n  undefined4 local_818;\n  undefined4 uStack_814;\n  undefined4 uStack_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  \n  iVar2 = param_3 + 0xc + param_1;\n  iVar4 = 0;\n  local_828 = (undefined)param_1;\n  local_827 = (undefined)param_3;\n  local_826 = (undefined)iVar2;\n  local_825 = (undefined)((uint)iVar2 >> 8);\n  local_820 = 0;\n  local_81c = 0;\n  local_824 = 0;\n  local_82c = 0x606aa55;\n  if ((DAT_00505180 == 0) && (iVar4 = FUN_00048abc(), iVar4 < 0)) {\n    snprintf((char *)&local_818,0x800,\"%s: auto exec bitmain_power_open, but open power failed\\n\",\n             \"bitmain_power_read\");\n    FUN_0002e584(0,&local_818,0);\n  }\n  else {\n    iVar2 = FUN_00048520(DAT_0050517c,&local_82c,8,&local_824,param_3 + 7);\n    if (iVar2 == 0) {\n      if (param_3 != 0) {\n        puVar3 = (undefined *)(param_2 + -1);\n        puVar1 = (undefined *)((int)&local_820 + 1);\n        do {\n          puVar3 = puVar3 + 1;\n          *puVar3 = *puVar1;\n          puVar1 = puVar1 + 1;\n        } while (puVar3 != (undefined *)(param_2 + (param_3 - 1U & 0xff)));\n      }\n    }\n    else {\n      iVar4 = -0x7ffffd00;\n      local_818._0_1_ = 's';\n      local_818._1_1_ = 'e';\n      local_818._2_1_ = 't';\n      local_818._3_1_ = ' ';\n      uStack_814._0_1_ = 'D';\n      uStack_814._1_1_ = 'A';\n      uStack_814._2_1_ = ' ';\n      uStack_814._3_1_ = 'c';\n      uStack_810._0_1_ = 'o';\n      uStack_810._1_1_ = 'n';\n      uStack_810._2_1_ = 'v';\n      uStack_810._3_1_ = 'e';\n      uStack_80c._0_1_ = 'r';\n      uStack_80c._1_1_ = 's';\n      uStack_80c._2_1_ = 'i';\n      uStack_80c._3_1_ = 'o';\n      uStack_808._0_1_ = 'n';\n      uStack_808._1_1_ = ' ';\n      uStack_808._2_1_ = 'N';\n      uStack_808._3_1_ = ' ';\n      uStack_804._0_1_ = 'f';\n      uStack_804._1_1_ = 'a';\n      uStack_804._2_1_ = 'i';\n      uStack_804._3_1_ = 'l';\n      uStack_800._0_1_ = 'e';\n      uStack_800._1_1_ = 'd';\n      uStack_800._2_1_ = '\\n';\n      uStack_800._3_1_ = '\\0';\n      FUN_0002e584(0,&local_818);\n    }\n  }\n  return iVar4;\n}\n\n",
    "FUN_000493d0": "\nint FUN_000493d0(int param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 local_818;\n  undefined4 uStack_814;\n  undefined4 uStack_810;\n  undefined4 uStack_80c;\n  undefined4 local_808;\n  ushort local_804;\n  \n  iVar1 = pthread_mutex_lock((pthread_mutex_t *)&DAT_00505188);\n  if (iVar1 != 0) {\n    local_818._0_1_ = 'f';\n    local_818._1_1_ = 'a';\n    local_818._2_1_ = 'i';\n    local_818._3_1_ = 'l';\n    uStack_814._0_1_ = 'e';\n    uStack_814._1_1_ = 'd';\n    uStack_814._2_1_ = ' ';\n    uStack_814._3_1_ = 't';\n    uStack_810._0_1_ = 'o';\n    uStack_810._1_1_ = ' ';\n    uStack_810._2_1_ = 'i';\n    uStack_810._3_1_ = 'i';\n    uStack_80c._0_1_ = 'c';\n    uStack_80c._1_1_ = ' ';\n    uStack_80c._2_1_ = 'l';\n    uStack_80c._3_1_ = 'o';\n    local_808._0_1_ = 'c';\n    local_808._1_1_ = 'k';\n    local_808._2_1_ = '\\n';\n    local_808._3_1_ = '\\0';\n    FUN_0002e584(0,&local_818);\n    return -4;\n  }\n  if (param_1 == 0) {\n    iVar1 = -3;\n    local_818._0_1_ = 'b';\n    local_818._1_1_ = 'a';\n    local_818._2_1_ = 'd';\n    local_818._3_1_ = ' ';\n    uStack_814._0_1_ = 'p';\n    uStack_814._1_1_ = 'a';\n    uStack_814._2_1_ = 'r';\n    uStack_814._3_1_ = 'a';\n    uStack_810._0_3_ = 0xa6d;\n    FUN_0002e584(0,&local_818,0);\n  }\n  else {\n    iVar1 = FUN_00049904();\n    if (iVar1 < 0) {\n      iVar1 = -1;\n      local_818._0_1_ = 'f';\n      local_818._1_1_ = 'a';\n      local_818._2_1_ = 'i';\n      local_818._3_1_ = 'l';\n      uStack_814._0_1_ = 'e';\n      uStack_814._1_1_ = 'd';\n      uStack_814._2_1_ = ' ';\n      uStack_814._3_1_ = 't';\n      uStack_810._0_1_ = 'o';\n      uStack_810._1_1_ = ' ';\n      uStack_810._2_1_ = 'i';\n      uStack_810._3_1_ = '2';\n      uStack_80c._0_1_ = 'c';\n      uStack_80c._1_1_ = '_';\n      uStack_80c._2_1_ = 'i';\n      uStack_80c._3_1_ = 'n';\n      local_808._0_1_ = 'i';\n      local_808._1_1_ = 't';\n      local_808._2_1_ = '\\n';\n      local_808._3_1_ = '\\0';\n      FUN_0002e584(0,&local_818,0);\n    }\n    else {\n      iVar2 = FUN_0004a3ec(iVar1,*(undefined2 *)(param_1 + 4));\n      if (iVar2 == 0) {\n        iVar2 = FUN_0004a2d8(iVar1,0x703,\n                             (uint)*(byte *)(param_1 + 7) << 1 | (uint)*(byte *)(param_1 + 6) << 4);\n        if (iVar2 == 0) goto LAB_00049460;\n        local_818._0_1_ = 'f';\n        local_818._1_1_ = 'a';\n        local_818._2_1_ = 'i';\n        local_818._3_1_ = 'l';\n        uStack_814._0_1_ = 'e';\n        uStack_814._1_1_ = 'd';\n        uStack_814._2_1_ = ' ';\n        uStack_814._3_1_ = 't';\n        uStack_810._0_1_ = 'o';\n        uStack_810._1_1_ = ' ';\n        uStack_810._2_1_ = 'i';\n        uStack_810._3_1_ = '2';\n        uStack_80c._0_1_ = 'c';\n        uStack_80c._1_1_ = '_';\n        uStack_80c._2_1_ = 'i';\n        uStack_80c._3_1_ = 'o';\n        local_808._0_1_ = 'c';\n        local_808._1_1_ = 't';\n        local_808._2_1_ = 'l';\n        local_808._3_1_ = '\\n';\n        local_804 = local_804 & 0xff00;\n        FUN_0002e584(0,&local_818,0);\n      }\n      else {\n        local_818._0_1_ = 'f';\n        local_818._1_1_ = 'a';\n        local_818._2_1_ = 'i';\n        local_818._3_1_ = 'l';\n        uStack_814._0_1_ = 'e';\n        uStack_814._1_1_ = 'd';\n        uStack_814._2_1_ = ' ';\n        uStack_814._3_1_ = 't';\n        uStack_810._0_1_ = 'o';\n        uStack_810._1_1_ = ' ';\n        uStack_810._2_1_ = 'i';\n        uStack_810._3_1_ = '2';\n        uStack_80c._0_1_ = 'c';\n        uStack_80c._1_1_ = '_';\n        uStack_80c._2_1_ = 's';\n        uStack_80c._3_1_ = 'e';\n        local_808._0_1_ = 'l';\n        local_808._1_1_ = 'e';\n        local_808._2_1_ = 'c';\n        local_808._3_1_ = 't';\n        local_804 = 10;\n        FUN_0002e584(0,&local_818,0);\n      }\n      if (iVar1 == 0) {\n        iVar1 = -1;\n      }\n      else {\n        FUN_000499e8(iVar1);\n        iVar1 = -1;\n      }\n    }\n  }\nLAB_00049460:\n  pthread_mutex_unlock((pthread_mutex_t *)&DAT_00505188);\n  return iVar1;\n}\n\n",
    "FUN_00049574": "\nvoid FUN_00049574(undefined4 param_1)\n\n{\n  int iVar1;\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 uStack_800;\n  undefined4 uStack_7fc;\n  undefined4 local_7f8;\n  \n  iVar1 = pthread_mutex_lock((pthread_mutex_t *)&DAT_00505188);\n  if (iVar1 == 0) {\n    FUN_000499e8(param_1);\n    pthread_mutex_unlock((pthread_mutex_t *)&DAT_00505188);\n    return;\n  }\n  local_808._0_1_ = 'f';\n  local_808._1_1_ = 'a';\n  local_808._2_1_ = 'i';\n  local_808._3_1_ = 'l';\n  uStack_804._0_1_ = 'e';\n  uStack_804._1_1_ = 'd';\n  uStack_804._2_1_ = ' ';\n  uStack_804._3_1_ = 't';\n  uStack_800._0_1_ = 'o';\n  uStack_800._1_1_ = ' ';\n  uStack_800._2_1_ = 'i';\n  uStack_800._3_1_ = '2';\n  uStack_7fc._0_1_ = 'c';\n  uStack_7fc._1_1_ = ' ';\n  uStack_7fc._2_1_ = 'l';\n  uStack_7fc._3_1_ = 'o';\n  local_7f8._0_1_ = 'c';\n  local_7f8._1_1_ = 'k';\n  local_7f8._2_1_ = '\\n';\n  local_7f8._3_1_ = '\\0';\n  FUN_0002e584(0,&local_808);\n  return;\n}\n\n",
    "FUN_000495e4": "\nundefined4 FUN_000495e4(undefined4 param_1,undefined4 param_2,undefined4 param_3)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined4 uStack_804;\n  undefined4 local_800;\n  \n  iVar1 = pthread_mutex_lock((pthread_mutex_t *)&DAT_00505188);\n  if (iVar1 == 0) {\n    uVar2 = FUN_00049b10(param_1,param_2,param_3);\n    pthread_mutex_unlock((pthread_mutex_t *)&DAT_00505188);\n  }\n  else {\n    uVar2 = 0xfffffffc;\n    local_810._0_1_ = 'f';\n    local_810._1_1_ = 'a';\n    local_810._2_1_ = 'i';\n    local_810._3_1_ = 'l';\n    uStack_80c._0_1_ = 'e';\n    uStack_80c._1_1_ = 'd';\n    uStack_80c._2_1_ = ' ';\n    uStack_80c._3_1_ = 't';\n    uStack_808._0_1_ = 'o';\n    uStack_808._1_1_ = ' ';\n    uStack_808._2_1_ = 'i';\n    uStack_808._3_1_ = '2';\n    uStack_804._0_1_ = 'c';\n    uStack_804._1_1_ = ' ';\n    uStack_804._2_1_ = 'l';\n    uStack_804._3_1_ = 'o';\n    local_800._0_1_ = 'c';\n    local_800._1_1_ = 'k';\n    local_800._2_1_ = '\\n';\n    local_800._3_1_ = '\\0';\n    FUN_0002e584(0,&local_810);\n  }\n  return uVar2;\n}\n\n",
    "FUN_0004966c": "\nundefined4 FUN_0004966c(undefined4 param_1,undefined4 param_2,undefined4 param_3)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined4 uStack_804;\n  undefined4 local_800;\n  \n  iVar1 = pthread_mutex_lock((pthread_mutex_t *)&DAT_00505188);\n  if (iVar1 == 0) {\n    uVar2 = FUN_00049cfc(param_1,param_2,param_3);\n    pthread_mutex_unlock((pthread_mutex_t *)&DAT_00505188);\n  }\n  else {\n    uVar2 = 0xfffffffc;\n    local_810._0_1_ = 'f';\n    local_810._1_1_ = 'a';\n    local_810._2_1_ = 'i';\n    local_810._3_1_ = 'l';\n    uStack_80c._0_1_ = 'e';\n    uStack_80c._1_1_ = 'd';\n    uStack_80c._2_1_ = ' ';\n    uStack_80c._3_1_ = 't';\n    uStack_808._0_1_ = 'o';\n    uStack_808._1_1_ = ' ';\n    uStack_808._2_1_ = 'i';\n    uStack_808._3_1_ = '2';\n    uStack_804._0_1_ = 'c';\n    uStack_804._1_1_ = ' ';\n    uStack_804._2_1_ = 'l';\n    uStack_804._3_1_ = 'o';\n    local_800._0_1_ = 'c';\n    local_800._1_1_ = 'k';\n    local_800._2_1_ = '\\n';\n    local_800._3_1_ = '\\0';\n    FUN_0002e584(0,&local_810);\n  }\n  return uVar2;\n}\n\n",
    "FUN_000496f4": "\nundefined4\nFUN_000496f4(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n            undefined4 param_5)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined4 local_818;\n  undefined4 uStack_814;\n  undefined4 uStack_810;\n  undefined4 uStack_80c;\n  undefined4 local_808;\n  \n  iVar1 = pthread_mutex_lock((pthread_mutex_t *)&DAT_00505188);\n  if (iVar1 == 0) {\n    uVar2 = FUN_00049e8c(param_1,param_2,param_3,param_4,param_5);\n    pthread_mutex_unlock((pthread_mutex_t *)&DAT_00505188);\n  }\n  else {\n    uVar2 = 0xfffffffc;\n    local_818._0_1_ = 'f';\n    local_818._1_1_ = 'a';\n    local_818._2_1_ = 'i';\n    local_818._3_1_ = 'l';\n    uStack_814._0_1_ = 'e';\n    uStack_814._1_1_ = 'd';\n    uStack_814._2_1_ = ' ';\n    uStack_814._3_1_ = 't';\n    uStack_810._0_1_ = 'o';\n    uStack_810._1_1_ = ' ';\n    uStack_810._2_1_ = 'i';\n    uStack_810._3_1_ = '2';\n    uStack_80c._0_1_ = 'c';\n    uStack_80c._1_1_ = ' ';\n    uStack_80c._2_1_ = 'l';\n    uStack_80c._3_1_ = 'o';\n    local_808._0_1_ = 'c';\n    local_808._1_1_ = 'k';\n    local_808._2_1_ = '\\n';\n    local_808._3_1_ = '\\0';\n    FUN_0002e584(0,&local_818);\n  }\n  return uVar2;\n}\n\n",
    "FUN_00049794": "\nundefined4\nFUN_00049794(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n            undefined4 param_5)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined4 local_818;\n  undefined4 uStack_814;\n  undefined4 uStack_810;\n  undefined4 uStack_80c;\n  undefined4 local_808;\n  \n  iVar1 = pthread_mutex_lock((pthread_mutex_t *)&DAT_00505188);\n  if (iVar1 == 0) {\n    uVar2 = FUN_0004a0dc(param_1,param_2,param_3,param_4,param_5);\n    pthread_mutex_unlock((pthread_mutex_t *)&DAT_00505188);\n  }\n  else {\n    uVar2 = 0xfffffffc;\n    local_818._0_1_ = 'f';\n    local_818._1_1_ = 'a';\n    local_818._2_1_ = 'i';\n    local_818._3_1_ = 'l';\n    uStack_814._0_1_ = 'e';\n    uStack_814._1_1_ = 'd';\n    uStack_814._2_1_ = ' ';\n    uStack_814._3_1_ = 't';\n    uStack_810._0_1_ = 'o';\n    uStack_810._1_1_ = ' ';\n    uStack_810._2_1_ = 'i';\n    uStack_810._3_1_ = '2';\n    uStack_80c._0_1_ = 'c';\n    uStack_80c._1_1_ = ' ';\n    uStack_80c._2_1_ = 'l';\n    uStack_80c._3_1_ = 'o';\n    local_808._0_1_ = 'c';\n    local_808._1_1_ = 'k';\n    local_808._2_1_ = '\\n';\n    local_808._3_1_ = '\\0';\n    FUN_0002e584(0,&local_818);\n  }\n  return uVar2;\n}\n\n",
    "FUN_00049844": "\nint FUN_00049844(void)\n\n{\n  int iVar1;\n  int local_14 [2];\n  \n  iVar1 = 0x259;\n  local_14[0] = 0;\n  do {\n    FUN_00040314(0xc,local_14);\n    if (-(local_14[0] >> 0x1f) != 0) {\n      return -(local_14[0] >> 0x1f);\n    }\n    usleep(5000);\n    iVar1 = iVar1 + -1;\n  } while (iVar1 != 0);\n  return 0;\n}\n\n",
    "FUN_000498a0": "\nint FUN_000498a0(undefined *param_1)\n\n{\n  int iVar1;\n  int local_14;\n  \n  iVar1 = 0x259;\n  local_14 = 0;\n  do {\n    FUN_00040314(0xc,&local_14);\n    if (-(local_14 >> 0x1f) != 0) {\n      *param_1 = (char)local_14;\n      return -(local_14 >> 0x1f);\n    }\n    usleep(5000);\n    iVar1 = iVar1 + -1;\n  } while (iVar1 != 0);\n  return 0;\n}\n\n",
    "FUN_00049904": "\nint FUN_00049904(void)\n\n{\n  undefined4 uVar1;\n  int local_814;\n  undefined4 local_810;\n  undefined4 local_80c;\n  undefined4 uStack_808;\n  undefined4 uStack_804;\n  undefined4 local_800;\n  undefined4 uStack_7fc;\n  undefined4 uStack_7f8;\n  undefined2 local_7f4;\n  \n  local_814 = -1;\n  if (DAT_00504c90 == 0) {\n    local_810._0_1_ = 'p';\n    local_810._1_1_ = 'l';\n    local_810._2_1_ = 'e';\n    local_810._3_1_ = 'a';\n    local_80c._0_1_ = 's';\n    local_80c._1_1_ = 'e';\n    local_80c._2_1_ = ' ';\n    local_80c._3_1_ = 'i';\n    uStack_808._0_1_ = 'n';\n    uStack_808._1_1_ = 'i';\n    uStack_808._2_1_ = 't';\n    uStack_808._3_1_ = ' ';\n    uStack_804._0_1_ = 'p';\n    uStack_804._1_1_ = 'l';\n    uStack_804._2_1_ = 'a';\n    uStack_804._3_1_ = 't';\n    local_800._0_1_ = 'f';\n    local_800._1_1_ = 'o';\n    local_800._2_1_ = 'r';\n    local_800._3_1_ = 'm';\n    uStack_7fc._0_1_ = ' ';\n    uStack_7fc._1_1_ = 'f';\n    uStack_7fc._2_1_ = 'i';\n    uStack_7fc._3_1_ = 'r';\n    uStack_7f8._0_1_ = 's';\n    uStack_7f8._1_1_ = 't';\n    uStack_7f8._2_1_ = '!';\n    uStack_7f8._3_1_ = '!';\n    local_7f4 = 10;\n    FUN_0002e584(0,&local_810,0);\n    local_814 = -2;\n  }\n  else {\n    uVar1 = DAT_005051a4;\n    if (DAT_005051a0 == 0) {\n      uVar1 = FUN_000432d0(&LAB_00049834,0,0);\n      DAT_005051a4 = uVar1;\n      pthread_mutex_init((pthread_mutex_t *)&DAT_005051a8,(pthread_mutexattr_t *)0x0);\n    }\n    DAT_005051a0 = DAT_005051a0 + 1;\n    local_810 = 0;\n    local_80c = 0;\n    local_814 = DAT_005051a0;\n    FUN_00043320(uVar1,&local_814,4,&local_810,8);\n  }\n  return local_814;\n}\n\n",
    "FUN_000499e8": "\nvoid FUN_000499e8(undefined4 param_1)\n\n{\n  int iVar1;\n  code **__ptr;\n  undefined4 local_814;\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined4 uStack_804;\n  undefined4 local_800;\n  \n  local_814 = param_1;\n  iVar1 = pthread_mutex_lock((pthread_mutex_t *)&DAT_005051a8);\n  if (iVar1 != 0) {\n    local_810._0_1_ = 'f';\n    local_810._1_1_ = 'a';\n    local_810._2_1_ = 'i';\n    local_810._3_1_ = 'l';\n    uStack_80c._0_1_ = 'e';\n    uStack_80c._1_1_ = 'd';\n    uStack_80c._2_1_ = ' ';\n    uStack_80c._3_1_ = 't';\n    uStack_808._0_1_ = 'o';\n    uStack_808._1_1_ = ' ';\n    uStack_808._2_1_ = 'i';\n    uStack_808._3_1_ = '2';\n    uStack_804._0_1_ = 'c';\n    uStack_804._1_1_ = ' ';\n    uStack_804._2_1_ = 'l';\n    uStack_804._3_1_ = 'o';\n    local_800._0_1_ = 'c';\n    local_800._1_1_ = 'k';\n    local_800._2_1_ = '\\n';\n    local_800._3_1_ = '\\0';\n    FUN_0002e584(0,&local_810);\n    return;\n  }\n  iVar1 = FUN_00043338(DAT_005051a4,&local_814);\n  if (iVar1 == 1) {\n    FUN_00043358(DAT_005051a4,&local_814);\n  }\n  else {\n    snprintf((char *)&local_810,0x800,\"ctx(%d) is not inited\\n\",local_814);\n    FUN_0002e584(1,&local_810,0);\n  }\n  __ptr = (code **)FUN_00043440(DAT_005051a4);\n  iVar1 = (**__ptr)();\n  if (iVar1 != 0) {\n    do {\n      iVar1 = (**__ptr)(__ptr);\n    } while (iVar1 != 0);\n    free(__ptr);\n    pthread_mutex_unlock((pthread_mutex_t *)&DAT_005051a8);\n    return;\n  }\n  free(__ptr);\n  pthread_mutex_unlock((pthread_mutex_t *)&DAT_005051a8);\n  DAT_005051a0 = iVar1;\n  FUN_00043414(DAT_005051a4);\n  DAT_005051a4 = iVar1;\n  return;\n}\n\n",
    "FUN_00049b10": "\nint FUN_00049b10(undefined4 param_1,int param_2,int param_3)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  uint uVar4;\n  undefined4 local_824 [2];\n  int *local_81c;\n  undefined4 local_818;\n  undefined4 uStack_814;\n  undefined4 uStack_810;\n  undefined4 uStack_80c;\n  undefined4 local_808;\n  undefined2 uStack_804;\n  undefined local_802;\n  \n  local_824[0] = param_1;\n  local_81c = (int *)pthread_mutex_lock((pthread_mutex_t *)&DAT_005051a8);\n  if (local_81c == (int *)0x0) {\n    iVar1 = FUN_000433d0(DAT_005051a4,local_824,&local_81c);\n    if (iVar1 == 1) {\n      iVar1 = *local_81c;\n      uVar4 = local_81c[1];\n      if (param_3 != 0) {\n        iVar2 = param_2;\n        do {\n          iVar3 = FUN_00049844();\n          if (iVar3 == 0) {\n            free(local_81c);\n            local_818._0_1_ = 'i';\n            local_818._1_1_ = 'i';\n            local_818._2_1_ = 'c';\n            local_818._3_1_ = ' ';\n            uStack_814._0_1_ = 'n';\n            uStack_814._1_1_ = 'o';\n            uStack_814._2_1_ = 't';\n            uStack_814._3_1_ = ' ';\n            uStack_810._0_1_ = 'r';\n            uStack_810._1_1_ = 'e';\n            uStack_810._2_1_ = 'a';\n            uStack_810._3_1_ = 'd';\n            uStack_80c._0_1_ = 'y';\n            uStack_80c._1_1_ = ' ';\n            uStack_80c._2_1_ = '4';\n            uStack_80c._3_1_ = ' ';\n            local_808._0_1_ = 'r';\n            local_808._1_1_ = 'e';\n            local_808._2_1_ = 'a';\n            local_808._3_1_ = 'd';\n            uStack_804 = 0xa31;\n            local_802 = 0;\n            FUN_0002e584(0,&local_818,0);\n            pthread_mutex_unlock((pthread_mutex_t *)&DAT_005051a8);\n            return -2;\n          }\n          FUN_00040390(0xc,iVar1 << 0x1a | 0x2000000U | (uVar4 >> 4) << 0x14 | (uVar4 & 0xe) << 0xf)\n          ;\n          iVar3 = iVar2 + 1;\n          iVar2 = FUN_000498a0(iVar2);\n          if (iVar2 == 0) {\n            free(local_81c);\n            local_818._0_1_ = 'i';\n            local_818._1_1_ = 'i';\n            local_818._2_1_ = 'c';\n            local_818._3_1_ = ' ';\n            uStack_814._0_1_ = 'n';\n            uStack_814._1_1_ = 'o';\n            uStack_814._2_1_ = 't';\n            uStack_814._3_1_ = ' ';\n            uStack_810._0_1_ = 'r';\n            uStack_810._1_1_ = 'e';\n            uStack_810._2_1_ = 'a';\n            uStack_810._3_1_ = 'd';\n            uStack_80c._0_1_ = 'y';\n            uStack_80c._1_1_ = ' ';\n            uStack_80c._2_1_ = '4';\n            uStack_80c._3_1_ = ' ';\n            local_808._0_1_ = 'r';\n            local_808._1_1_ = 'e';\n            local_808._2_1_ = 'a';\n            local_808._3_1_ = 'd';\n            uStack_804 = 0xa32;\n            local_802 = 0;\n            FUN_0002e584(0,&local_818,0);\n            pthread_mutex_unlock((pthread_mutex_t *)&DAT_005051a8);\n            return -3;\n          }\n          iVar2 = iVar3;\n        } while (iVar3 != param_2 + param_3);\n      }\n      free(local_81c);\n      pthread_mutex_unlock((pthread_mutex_t *)&DAT_005051a8);\n      return param_3;\n    }\n    snprintf((char *)&local_818,0x800,\"ctx %d not inited\\n\",local_824[0]);\n    FUN_0002e584(0,&local_818,0);\n    pthread_mutex_unlock((pthread_mutex_t *)&DAT_005051a8);\n    iVar1 = -2;\n  }\n  else {\n    local_818._0_1_ = 'f';\n    local_818._1_1_ = 'a';\n    local_818._2_1_ = 'i';\n    local_818._3_1_ = 'l';\n    uStack_814._0_1_ = 'e';\n    uStack_814._1_1_ = 'd';\n    uStack_814._2_1_ = ' ';\n    uStack_814._3_1_ = 't';\n    uStack_810._0_1_ = 'o';\n    uStack_810._1_1_ = ' ';\n    uStack_810._2_1_ = 'i';\n    uStack_810._3_1_ = '2';\n    uStack_80c._0_1_ = 'c';\n    uStack_80c._1_1_ = ' ';\n    uStack_80c._2_1_ = 'l';\n    uStack_80c._3_1_ = 'o';\n    local_808._0_1_ = 'c';\n    local_808._1_1_ = 'k';\n    local_808._2_1_ = '\\n';\n    local_808._3_1_ = '\\0';\n    FUN_0002e584(0,&local_818);\n    iVar1 = -1;\n  }\n  return iVar1;\n}\n\n",
    "FUN_00049cfc": "\nint FUN_00049cfc(undefined4 param_1,int param_2,int param_3)\n\n{\n  byte bVar1;\n  int *piVar2;\n  int iVar3;\n  int iVar4;\n  uint uVar5;\n  byte *pbVar6;\n  undefined4 local_824 [2];\n  int *local_81c;\n  undefined4 local_818;\n  undefined4 uStack_814;\n  undefined4 uStack_810;\n  undefined4 uStack_80c;\n  undefined4 local_808;\n  undefined2 uStack_804;\n  undefined local_802;\n  \n  local_824[0] = param_1;\n  local_81c = (int *)pthread_mutex_lock((pthread_mutex_t *)&DAT_005051a8);\n  if (local_81c == (int *)0x0) {\n    iVar3 = FUN_000433d0(DAT_005051a4,local_824,&local_81c);\n    piVar2 = local_81c;\n    if (iVar3 == 1) {\n      if (param_3 != 0) {\n        pbVar6 = (byte *)(param_2 + -1);\n        do {\n          uVar5 = piVar2[1];\n          pbVar6 = pbVar6 + 1;\n          bVar1 = *pbVar6;\n          iVar4 = *piVar2;\n          iVar3 = FUN_00049844();\n          if (iVar3 == 0) {\n            free(local_81c);\n            local_818._0_1_ = 'i';\n            local_818._1_1_ = 'i';\n            local_818._2_1_ = 'c';\n            local_818._3_1_ = ' ';\n            uStack_814._0_1_ = 'n';\n            uStack_814._1_1_ = 'o';\n            uStack_814._2_1_ = 't';\n            uStack_814._3_1_ = ' ';\n            uStack_810._0_1_ = 'r';\n            uStack_810._1_1_ = 'e';\n            uStack_810._2_1_ = 'a';\n            uStack_810._3_1_ = 'd';\n            uStack_80c._0_1_ = 'y';\n            uStack_80c._1_1_ = ' ';\n            uStack_80c._2_1_ = '4';\n            uStack_80c._3_1_ = ' ';\n            local_808._0_1_ = 'w';\n            local_808._1_1_ = 'r';\n            local_808._2_1_ = 'i';\n            local_808._3_1_ = 't';\n            uStack_804 = 0xa65;\n            local_802 = 0;\n            FUN_0002e584(0,&local_818,0);\n            pthread_mutex_unlock((pthread_mutex_t *)&DAT_005051a8);\n            return -2;\n          }\n          FUN_00040390(0xc,(uint)bVar1 | (uVar5 >> 4) << 0x14 | iVar4 << 0x1a | (uVar5 & 0xe) << 0xf\n                      );\n        } while ((byte *)(param_2 + param_3 + -1) != pbVar6);\n      }\n      free(local_81c);\n      pthread_mutex_unlock((pthread_mutex_t *)&DAT_005051a8);\n      return param_3;\n    }\n    snprintf((char *)&local_818,0x800,\"ctx %d not inited\\n\",local_824[0]);\n    FUN_0002e584(0,&local_818,0);\n    pthread_mutex_unlock((pthread_mutex_t *)&DAT_005051a8);\n    iVar3 = -2;\n  }\n  else {\n    local_818._0_1_ = 'f';\n    local_818._1_1_ = 'a';\n    local_818._2_1_ = 'i';\n    local_818._3_1_ = 'l';\n    uStack_814._0_1_ = 'e';\n    uStack_814._1_1_ = 'd';\n    uStack_814._2_1_ = ' ';\n    uStack_814._3_1_ = 't';\n    uStack_810._0_1_ = 'o';\n    uStack_810._1_1_ = ' ';\n    uStack_810._2_1_ = 'i';\n    uStack_810._3_1_ = '2';\n    uStack_80c._0_1_ = 'c';\n    uStack_80c._1_1_ = ' ';\n    uStack_80c._2_1_ = 'l';\n    uStack_80c._3_1_ = 'o';\n    local_808._0_1_ = 'c';\n    local_808._1_1_ = 'k';\n    local_808._2_1_ = '\\n';\n    local_808._3_1_ = '\\0';\n    FUN_0002e584(0,&local_818);\n    iVar3 = -1;\n  }\n  return iVar3;\n}\n\n",
    "FUN_00049e8c": "\nint FUN_00049e8c(undefined4 param_1,byte *param_2,int param_3,int param_4,int param_5)\n\n{\n  byte bVar1;\n  int *piVar2;\n  int iVar3;\n  int iVar4;\n  uint uVar5;\n  int iVar6;\n  undefined4 local_82c [2];\n  int *local_824;\n  undefined4 local_820;\n  undefined4 uStack_81c;\n  undefined4 uStack_818;\n  undefined4 uStack_814;\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 local_808;\n  undefined4 uStack_804;\n  undefined4 local_800;\n  undefined4 uStack_7fc;\n  undefined4 uStack_7f8;\n  undefined4 uStack_7f4;\n  undefined local_7f0;\n  \n  local_82c[0] = param_1;\n  if (param_3 == 1) {\n    local_824 = (int *)pthread_mutex_lock((pthread_mutex_t *)&DAT_005051a8);\n    if (local_824 == (int *)0x0) {\n      iVar3 = FUN_000433d0(DAT_005051a4,local_82c,&local_824);\n      piVar2 = local_824;\n      if (iVar3 == 1) {\n        iVar3 = 0;\n        if (param_5 != 0) {\n          do {\n            iVar6 = *piVar2;\n            uVar5 = piVar2[1];\n            bVar1 = *param_2;\n            iVar4 = FUN_00049844();\n            if (iVar4 == 0) {\n              local_820._0_1_ = 'i';\n              local_820._1_1_ = 'i';\n              local_820._2_1_ = 'c';\n              local_820._3_1_ = ' ';\n              uStack_81c._0_1_ = 'n';\n              uStack_81c._1_1_ = 'o';\n              uStack_81c._2_1_ = 't';\n              uStack_81c._3_1_ = ' ';\n              uStack_818._0_1_ = 'r';\n              uStack_818._1_1_ = 'e';\n              uStack_818._2_1_ = 'a';\n              uStack_818._3_1_ = 'd';\n              uStack_814._0_1_ = 'y';\n              uStack_814._1_1_ = ' ';\n              uStack_814._2_1_ = '4';\n              uStack_814._3_1_ = ' ';\n              local_810._0_1_ = 'r';\n              local_810._1_1_ = 'e';\n              local_810._2_1_ = 'a';\n              local_810._3_1_ = 'd';\n              uStack_80c = CONCAT13(uStack_80c._3_1_,0xa31);\n              FUN_0002e584(0,&local_820,0);\n              free(local_824);\n              pthread_mutex_unlock((pthread_mutex_t *)&DAT_005051a8);\n              return -2;\n            }\n            FUN_00040390(0xc,iVar6 << 0x1a | 0x3000000U | (uVar5 >> 4) << 0x14 |\n                             (uVar5 & 0xe) << 0xf | ((uint)bVar1 + iVar3) * 0x100);\n            iVar4 = param_4 + iVar3;\n            iVar3 = iVar3 + 1;\n            iVar4 = FUN_000498a0(iVar4);\n            if (iVar4 == 0) {\n              local_820._0_1_ = 'i';\n              local_820._1_1_ = 'i';\n              local_820._2_1_ = 'c';\n              local_820._3_1_ = ' ';\n              uStack_81c._0_1_ = 'f';\n              uStack_81c._1_1_ = 'a';\n              uStack_81c._2_1_ = 'i';\n              uStack_81c._3_1_ = 'l';\n              uStack_818._0_1_ = 'e';\n              uStack_818._1_1_ = 'd';\n              uStack_818._2_1_ = ' ';\n              uStack_818._3_1_ = 't';\n              uStack_814._0_1_ = 'o';\n              uStack_814._1_1_ = ' ';\n              uStack_814._2_1_ = 'r';\n              uStack_814._3_1_ = 'e';\n              local_810._0_1_ = 'a';\n              local_810._1_1_ = 'd';\n              local_810._2_1_ = ' ';\n              local_810._3_1_ = 'd';\n              uStack_80c._0_1_ = 'a';\n              uStack_80c._1_1_ = 't';\n              uStack_80c._2_1_ = 'a';\n              uStack_80c._3_1_ = '\\n';\n              local_808 = local_808 & 0xffffff00;\n              FUN_0002e584(0,&local_820,0);\n              free(local_824);\n              pthread_mutex_unlock((pthread_mutex_t *)&DAT_005051a8);\n              return -3;\n            }\n          } while (param_5 != iVar3);\n        }\n        free(local_824);\n        pthread_mutex_unlock((pthread_mutex_t *)&DAT_005051a8);\n        return param_5;\n      }\n      snprintf((char *)&local_820,0x800,\"ctx %d not inited\\n\",local_82c[0]);\n      FUN_0002e584(0,&local_820,0);\n      pthread_mutex_unlock((pthread_mutex_t *)&DAT_005051a8);\n      iVar3 = -2;\n    }\n    else {\n      local_820._0_1_ = 'f';\n      local_820._1_1_ = 'a';\n      local_820._2_1_ = 'i';\n      local_820._3_1_ = 'l';\n      uStack_81c._0_1_ = 'e';\n      uStack_81c._1_1_ = 'd';\n      uStack_81c._2_1_ = ' ';\n      uStack_81c._3_1_ = 't';\n      uStack_818._0_1_ = 'o';\n      uStack_818._1_1_ = ' ';\n      uStack_818._2_1_ = 'i';\n      uStack_818._3_1_ = '2';\n      uStack_814._0_1_ = 'c';\n      uStack_814._1_1_ = ' ';\n      uStack_814._2_1_ = 'l';\n      uStack_814._3_1_ = 'o';\n      local_810._0_1_ = 'c';\n      local_810._1_1_ = 'k';\n      local_810._2_1_ = '\\n';\n      local_810._3_1_ = '\\0';\n      FUN_0002e584(0,&local_820);\n      iVar3 = -1;\n    }\n  }\n  else {\n    local_820._0_1_ = 'm';\n    local_820._1_1_ = 'o';\n    local_820._2_1_ = 'r';\n    local_820._3_1_ = 'e';\n    uStack_81c._0_1_ = ' ';\n    uStack_81c._1_1_ = 't';\n    uStack_81c._2_1_ = 'h';\n    uStack_81c._3_1_ = 'a';\n    uStack_818._0_1_ = 'n';\n    uStack_818._1_1_ = ' ';\n    uStack_818._2_1_ = 'o';\n    uStack_818._3_1_ = 'n';\n    uStack_814._0_1_ = 'e';\n    uStack_814._1_1_ = ' ';\n    uStack_814._2_1_ = 'b';\n    uStack_814._3_1_ = 'y';\n    local_810._0_1_ = 't';\n    local_810._1_1_ = 'e';\n    local_810._2_1_ = ' ';\n    local_810._3_1_ = 'r';\n    uStack_80c._0_1_ = 'e';\n    uStack_80c._1_1_ = 'g';\n    uStack_80c._2_1_ = ' ';\n    uStack_80c._3_1_ = 'a';\n    local_808._0_1_ = 'd';\n    local_808._1_1_ = 'd';\n    local_808._2_1_ = 'r';\n    local_808._3_1_ = 'e';\n    uStack_804._0_1_ = 's';\n    uStack_804._1_1_ = 's';\n    uStack_804._2_1_ = ' ';\n    uStack_804._3_1_ = 'i';\n    local_800._0_1_ = 's';\n    local_800._1_1_ = ' ';\n    local_800._2_1_ = 'n';\n    local_800._3_1_ = 'o';\n    uStack_7fc._0_1_ = 't';\n    uStack_7fc._1_1_ = ' ';\n    uStack_7fc._2_1_ = 's';\n    uStack_7fc._3_1_ = 'u';\n    uStack_7f8._0_1_ = 'p';\n    uStack_7f8._1_1_ = 'p';\n    uStack_7f8._2_1_ = 'o';\n    uStack_7f8._3_1_ = 'r';\n    uStack_7f4._0_1_ = 't';\n    uStack_7f4._1_1_ = 'e';\n    uStack_7f4._2_1_ = 'd';\n    uStack_7f4._3_1_ = '\\n';\n    local_7f0 = 0;\n    FUN_0002e584(0,&local_820);\n    iVar3 = -3;\n  }\n  return iVar3;\n}\n\n",
    "FUN_0004a0dc": "\nint FUN_0004a0dc(undefined4 param_1,byte *param_2,int param_3,int param_4,int param_5)\n\n{\n  byte bVar1;\n  int *piVar2;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  uint uVar6;\n  int iVar7;\n  byte *pbVar8;\n  undefined4 local_82c [2];\n  int *local_824;\n  undefined4 local_820;\n  undefined4 uStack_81c;\n  undefined4 uStack_818;\n  undefined4 uStack_814;\n  undefined4 local_810;\n  undefined4 uStack_80c;\n  undefined4 uStack_808;\n  undefined4 uStack_804;\n  undefined4 local_800;\n  undefined4 uStack_7fc;\n  undefined4 uStack_7f8;\n  undefined4 uStack_7f4;\n  undefined local_7f0;\n  \n  local_82c[0] = param_1;\n  if (param_3 == 1) {\n    local_824 = (int *)pthread_mutex_lock((pthread_mutex_t *)&DAT_005051a8);\n    if (local_824 == (int *)0x0) {\n      iVar3 = FUN_000433d0(DAT_005051a4,local_82c,&local_824);\n      piVar2 = local_824;\n      if (iVar3 == 1) {\n        if (param_5 != 0) {\n          pbVar8 = (byte *)(param_4 + -1);\n          iVar3 = 0;\n          do {\n            iVar7 = *piVar2;\n            uVar6 = piVar2[1];\n            pbVar8 = pbVar8 + 1;\n            bVar1 = *pbVar8;\n            iVar5 = (uint)*param_2 + iVar3;\n            iVar3 = iVar3 + 1;\n            iVar4 = FUN_00049844();\n            if (iVar4 == 0) {\n              local_820._0_1_ = 'i';\n              local_820._1_1_ = 'i';\n              local_820._2_1_ = 'c';\n              local_820._3_1_ = ' ';\n              uStack_81c._0_1_ = 'n';\n              uStack_81c._1_1_ = 'o';\n              uStack_81c._2_1_ = 't';\n              uStack_81c._3_1_ = ' ';\n              uStack_818._0_1_ = 'r';\n              uStack_818._1_1_ = 'e';\n              uStack_818._2_1_ = 'a';\n              uStack_818._3_1_ = 'd';\n              uStack_814._0_1_ = 'y';\n              uStack_814._1_1_ = ' ';\n              uStack_814._2_1_ = '4';\n              uStack_814._3_1_ = ' ';\n              local_810._0_1_ = 'w';\n              local_810._1_1_ = 'r';\n              local_810._2_1_ = 'i';\n              local_810._3_1_ = 't';\n              uStack_80c = CONCAT13(uStack_80c._3_1_,0xa65);\n              FUN_0002e584(0,&local_820,0);\n              free(local_824);\n              pthread_mutex_unlock((pthread_mutex_t *)&DAT_005051a8);\n              return -2;\n            }\n            FUN_00040390(0xc,iVar7 << 0x1a | 0x1000000U | (uVar6 >> 4) << 0x14 | (uint)bVar1 |\n                             (uVar6 & 0xe) << 0xf | iVar5 * 0x100);\n          } while (param_5 != iVar3);\n        }\n        free(local_824);\n        pthread_mutex_unlock((pthread_mutex_t *)&DAT_005051a8);\n        return param_5;\n      }\n      snprintf((char *)&local_820,0x800,\"ctx %d not inited\\n\",local_82c[0]);\n      FUN_0002e584(0,&local_820,0);\n      pthread_mutex_unlock((pthread_mutex_t *)&DAT_005051a8);\n      iVar3 = -2;\n    }\n    else {\n      local_820._0_1_ = 'f';\n      local_820._1_1_ = 'a';\n      local_820._2_1_ = 'i';\n      local_820._3_1_ = 'l';\n      uStack_81c._0_1_ = 'e';\n      uStack_81c._1_1_ = 'd';\n      uStack_81c._2_1_ = ' ';\n      uStack_81c._3_1_ = 't';\n      uStack_818._0_1_ = 'o';\n      uStack_818._1_1_ = ' ';\n      uStack_818._2_1_ = 'i';\n      uStack_818._3_1_ = '2';\n      uStack_814._0_1_ = 'c';\n      uStack_814._1_1_ = ' ';\n      uStack_814._2_1_ = 'l';\n      uStack_814._3_1_ = 'o';\n      local_810._0_1_ = 'c';\n      local_810._1_1_ = 'k';\n      local_810._2_1_ = '\\n';\n      local_810._3_1_ = '\\0';\n      FUN_0002e584(0,&local_820);\n      iVar3 = -1;\n    }\n  }\n  else {\n    local_820._0_1_ = 'm';\n    local_820._1_1_ = 'o';\n    local_820._2_1_ = 'r';\n    local_820._3_1_ = 'e';\n    uStack_81c._0_1_ = ' ';\n    uStack_81c._1_1_ = 't';\n    uStack_81c._2_1_ = 'h';\n    uStack_81c._3_1_ = 'a';\n    uStack_818._0_1_ = 'n';\n    uStack_818._1_1_ = ' ';\n    uStack_818._2_1_ = 'o';\n    uStack_818._3_1_ = 'n';\n    uStack_814._0_1_ = 'e';\n    uStack_814._1_1_ = ' ';\n    uStack_814._2_1_ = 'b';\n    uStack_814._3_1_ = 'y';\n    local_810._0_1_ = 't';\n    local_810._1_1_ = 'e';\n    local_810._2_1_ = ' ';\n    local_810._3_1_ = 'r';\n    uStack_80c._0_1_ = 'e';\n    uStack_80c._1_1_ = 'g';\n    uStack_80c._2_1_ = ' ';\n    uStack_80c._3_1_ = 'a';\n    uStack_808._0_1_ = 'd';\n    uStack_808._1_1_ = 'd';\n    uStack_808._2_1_ = 'r';\n    uStack_808._3_1_ = 'e';\n    uStack_804._0_1_ = 's';\n    uStack_804._1_1_ = 's';\n    uStack_804._2_1_ = ' ';\n    uStack_804._3_1_ = 'i';\n    local_800._0_1_ = 's';\n    local_800._1_1_ = ' ';\n    local_800._2_1_ = 'n';\n    local_800._3_1_ = 'o';\n    uStack_7fc._0_1_ = 't';\n    uStack_7fc._1_1_ = ' ';\n    uStack_7fc._2_1_ = 's';\n    uStack_7fc._3_1_ = 'u';\n    uStack_7f8._0_1_ = 'p';\n    uStack_7f8._1_1_ = 'p';\n    uStack_7f8._2_1_ = 'o';\n    uStack_7f8._3_1_ = 'r';\n    uStack_7f4._0_1_ = 't';\n    uStack_7f4._1_1_ = 'e';\n    uStack_7f4._2_1_ = 'd';\n    uStack_7f4._3_1_ = '\\n';\n    local_7f0 = 0;\n    FUN_0002e584(0,&local_820);\n    iVar3 = -3;\n  }\n  return iVar3;\n}\n\n",
    "FUN_0004a2d8": "\nundefined4 FUN_0004a2d8(int param_1,int param_2,undefined4 param_3)\n\n{\n  int iVar1;\n  code **__ptr;\n  undefined4 *__ptr_00;\n  undefined4 uVar2;\n  undefined4 local_818;\n  undefined4 local_814;\n  undefined4 uStack_810;\n  undefined4 uStack_80c;\n  undefined4 local_808;\n  \n  iVar1 = pthread_mutex_lock((pthread_mutex_t *)&DAT_005051a8);\n  if (iVar1 == 0) {\n    __ptr = (code **)FUN_00043440(DAT_005051a4);\n    iVar1 = (**__ptr)();\n    while (iVar1 != 0) {\n      if (***(int ***)(__ptr[5] + 0x10) == param_1) {\n        __ptr_00 = (undefined4 *)(*__ptr[2])();\n        if (param_2 == 0x703) {\n          local_818 = *__ptr_00;\n          local_814 = param_3;\n          (*__ptr[1])(__ptr,&local_818,8);\n          free(__ptr_00);\n        }\n        break;\n      }\n      iVar1 = (**__ptr)(__ptr);\n    }\n    free(__ptr);\n    pthread_mutex_unlock((pthread_mutex_t *)&DAT_005051a8);\n    uVar2 = 0;\n  }\n  else {\n    local_818._0_1_ = 'f';\n    local_818._1_1_ = 'a';\n    local_818._2_1_ = 'i';\n    local_818._3_1_ = 'l';\n    local_814._0_1_ = 'e';\n    local_814._1_1_ = 'd';\n    local_814._2_1_ = ' ';\n    local_814._3_1_ = 't';\n    uStack_810._0_1_ = 'o';\n    uStack_810._1_1_ = ' ';\n    uStack_810._2_1_ = 'i';\n    uStack_810._3_1_ = '2';\n    uStack_80c._0_1_ = 'c';\n    uStack_80c._1_1_ = ' ';\n    uStack_80c._2_1_ = 'l';\n    uStack_80c._3_1_ = 'o';\n    local_808._0_1_ = 'c';\n    local_808._1_1_ = 'k';\n    local_808._2_1_ = '\\n';\n    local_808._3_1_ = '\\0';\n    FUN_0002e584(0,&local_818);\n    uVar2 = 0xfffffffc;\n  }\n  return uVar2;\n}\n\n",
    "FUN_0004a3ec": "\nundefined4 FUN_0004a3ec(int param_1,undefined4 param_2)\n\n{\n  int iVar1;\n  code **__ptr;\n  void *__ptr_00;\n  undefined4 uVar2;\n  undefined4 local_810;\n  undefined4 local_80c;\n  undefined4 uStack_808;\n  undefined4 uStack_804;\n  undefined4 local_800;\n  \n  iVar1 = pthread_mutex_lock((pthread_mutex_t *)&DAT_005051a8);\n  if (iVar1 == 0) {\n    __ptr = (code **)FUN_00043440(DAT_005051a4);\n    iVar1 = (**__ptr)();\n    while (iVar1 != 0) {\n      if (***(int ***)(__ptr[5] + 0x10) == param_1) {\n        __ptr_00 = (void *)(*__ptr[2])();\n        local_80c = *(undefined4 *)((int)__ptr_00 + 4);\n        local_810 = param_2;\n        (*__ptr[1])(__ptr,&local_810,8);\n        free(__ptr_00);\n        break;\n      }\n      iVar1 = (**__ptr)(__ptr);\n    }\n    free(__ptr);\n    pthread_mutex_unlock((pthread_mutex_t *)&DAT_005051a8);\n    uVar2 = 0;\n  }\n  else {\n    local_810._0_1_ = 'f';\n    local_810._1_1_ = 'a';\n    local_810._2_1_ = 'i';\n    local_810._3_1_ = 'l';\n    local_80c._0_1_ = 'e';\n    local_80c._1_1_ = 'd';\n    local_80c._2_1_ = ' ';\n    local_80c._3_1_ = 't';\n    uStack_808._0_1_ = 'o';\n    uStack_808._1_1_ = ' ';\n    uStack_808._2_1_ = 'i';\n    uStack_808._3_1_ = '2';\n    uStack_804._0_1_ = 'c';\n    uStack_804._1_1_ = ' ';\n    uStack_804._2_1_ = 'l';\n    uStack_804._3_1_ = 'o';\n    local_800._0_1_ = 'c';\n    local_800._1_1_ = 'k';\n    local_800._2_1_ = '\\n';\n    local_800._3_1_ = '\\0';\n    FUN_0002e584(0,&local_810);\n    uVar2 = 0xfffffffc;\n  }\n  return uVar2;\n}\n\n",
    "FUN_0004a4fc": "\nundefined4 FUN_0004a4fc(void *param_1,size_t param_2,uint *param_3)\n\n{\n  uint uVar1;\n  \n  uVar1 = param_3[1] + param_2;\n  if (uVar1 <= *param_3) {\n    memcpy((void *)(param_3[2] + param_3[1]),param_1,param_2);\n    uVar1 = param_2 + param_3[1];\n  }\n  param_3[1] = uVar1;\n  return 0;\n}\n\n",
    "FUN_0004a584": "\nvoid FUN_0004a584(char **param_1,char **param_2)\n\n{\n  strcmp(*param_1,*param_2);\n  return;\n}\n\n",
    "FUN_0004a590": "\nundefined4 FUN_0004a590(uint param_1,int param_2,code *param_3,undefined4 param_4,uint param_5)\n\n{\n  int iVar1;\n  uint uVar2;\n  char *pcVar3;\n  undefined4 uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint local_3c;\n  char acStack_38 [20];\n  \n  local_3c = 0;\n  iVar1 = (*param_3)(\"\\\"\",1,param_4);\n  if (iVar1 == 0) {\n    uVar5 = param_1;\n    uVar2 = param_1;\n    do {\n      do {\n        uVar6 = uVar2;\n        if (param_1 + param_2 <= uVar6) {\n          if ((uVar5 != uVar6) && (iVar1 = (*param_3)(uVar5,uVar6 - uVar5,param_4), iVar1 != 0)) {\n            return 0xffffffff;\n          }\nLAB_0004a7fc:\n          uVar4 = (*param_3)(\"\\\"\",1,param_4);\n          return uVar4;\n        }\n        uVar2 = FUN_0004df70(uVar6,(param_1 + param_2) - uVar6,&local_3c);\n        if (uVar2 == 0) {\n          return 0xffffffff;\n        }\n      } while (((0x1f < (int)local_3c && (local_3c != 0x22 && local_3c != 0x5c)) &&\n               (((uint)(local_3c == 0x2f) & param_5 >> 10) == 0)) &&\n              (((uint)(0x7f < (int)local_3c) & param_5 >> 6) == 0));\n      if ((uVar5 != uVar6) && (iVar1 = (*param_3)(uVar5,uVar6 - uVar5,param_4), iVar1 != 0)) {\n        return 0xffffffff;\n      }\n      if (uVar6 == uVar2) goto LAB_0004a7fc;\n      if (local_3c == 0xc) {\n        uVar4 = 2;\n        pcVar3 = \"\\\\f\";\n      }\n      else if ((int)local_3c < 0xd) {\n        if (local_3c == 9) {\n          uVar4 = 2;\n          pcVar3 = \"\\\\t\";\n        }\n        else if (local_3c == 10) {\n          uVar4 = 2;\n          pcVar3 = \"\\\\n\";\n        }\n        else if (local_3c == 8) {\n          uVar4 = 2;\n          pcVar3 = \"\\\\b\";\n        }\n        else {\nLAB_0004a6f4:\n          if ((int)local_3c < 0x10000) goto LAB_0004a6fc;\nLAB_0004a734:\n          local_3c = local_3c - 0x10000;\n          snprintf(acStack_38,0xd,\"\\\\u%04X\\\\u%04X\",local_3c * 0x1000 >> 0x16 | 0xd800,\n                   local_3c & 0x3ff | 0xdc00);\n          uVar4 = 0xc;\n          pcVar3 = acStack_38;\n        }\n      }\n      else if (local_3c == 0x22) {\n        uVar4 = 2;\n        pcVar3 = \"\\\\\\\"\";\n      }\n      else if ((int)local_3c < 0x23) {\n        if (local_3c == 0xd) {\n          uVar4 = 2;\n          pcVar3 = \"\\\\r\";\n        }\n        else {\n          if (0xffff < (int)local_3c) goto LAB_0004a734;\nLAB_0004a6fc:\n          snprintf(acStack_38,0xd,\"\\\\u%04X\");\n          uVar4 = 6;\n          pcVar3 = acStack_38;\n        }\n      }\n      else if (local_3c == 0x2f) {\n        uVar4 = 2;\n        pcVar3 = \"\\\\/\";\n      }\n      else {\n        if (local_3c != 0x5c) goto LAB_0004a6f4;\n        uVar4 = 2;\n        pcVar3 = \"\\\\\\\\\";\n      }\n      iVar1 = (*param_3)(pcVar3,uVar4,param_4);\n      uVar5 = uVar2;\n    } while (iVar1 == 0);\n  }\n  return 0xffffffff;\n}\n\n",
    "FUN_0004a818": "\nundefined4\nFUN_0004a818(uint param_1,int param_2,int param_3,code *UNRECOVERED_JUMPTABLE,undefined4 param_5)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  uint uVar3;\n  uint uVar4;\n  \n  if ((param_1 & 0x1f) == 0) {\n    if ((param_3 != 0) && ((param_1 & 0x20) == 0)) {\n                    /* WARNING: Could not recover jumptable at 0x0004a8c4. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      uVar2 = (*UNRECOVERED_JUMPTABLE)(\" \",1,param_5);\n      return uVar2;\n    }\n  }\n  else {\n    uVar3 = (param_1 & 0x1f) * param_2;\n    iVar1 = (*UNRECOVERED_JUMPTABLE)(\"\\n\",1,param_5);\n    if (iVar1 != 0) {\n      return 0xffffffff;\n    }\n    for (; uVar3 != 0; uVar3 = uVar3 - uVar4) {\n      uVar4 = uVar3;\n      if (0x1f < uVar3) {\n        uVar4 = 0x20;\n      }\n      iVar1 = (*UNRECOVERED_JUMPTABLE)(\"                                \",uVar4,param_5);\n      if (iVar1 != 0) {\n        return 0xffffffff;\n      }\n    }\n  }\n  return 0;\n}\n\n",
    "FUN_0004a8c8": "\nundefined4 FUN_0004a8c8(undefined4 param_1,undefined4 param_2,char *param_3)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  \n  snprintf(param_3,0xb,\"%p\",param_2);\n  iVar1 = FUN_0004bc44(param_1,param_3);\n  if (iVar1 == 0) {\n    uVar2 = FUN_0004eb60();\n    uVar2 = FUN_0004b9b0(param_1,param_3,uVar2);\n    return uVar2;\n  }\n  return 0xffffffff;\n}\n\n",
    "FUN_0004a920": "\nundefined4\nFUN_0004a920(undefined4 *param_1,uint param_2,int param_3,undefined4 param_4,code *param_5,\n            undefined4 param_6)\n\n{\n  undefined4 uVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  int iVar4;\n  char *pcVar5;\n  size_t sVar6;\n  int iVar7;\n  void *__base;\n  undefined *puVar8;\n  int iVar9;\n  char **ppcVar10;\n  int iVar11;\n  uint uVar12;\n  uint uVar13;\n  uint uVar14;\n  uint uVar15;\n  char **ppcVar16;\n  undefined8 uVar17;\n  char acStack_8c [104];\n  \n  if (param_1 != (undefined4 *)0x0) {\n    uVar14 = param_2 & 0x10000;\n    uVar13 = param_2 & 0xfffeffff;\n    switch(*param_1) {\n    case 0:\n      puVar8 = &UNK_00066478;\n      if ((param_2 & 0x20) == 0) {\n        uVar1 = 2;\n        puVar8 = &UNK_0006a4f0;\n      }\n      else {\n        uVar1 = 1;\n      }\n      iVar4 = FUN_0004a8c8(param_4,param_1,acStack_8c);\n      if (iVar4 == 0) {\n        iVar4 = FUN_0004e49c(param_1);\n        if (uVar14 == 0) {\n          iVar11 = (*param_5)(&DAT_00066844,1,param_6);\n          if (iVar11 != 0) {\n            return 0xffffffff;\n          }\n          if (iVar4 == 0) {\n            FUN_0004bca4(param_4,acStack_8c);\n            uVar1 = (*param_5)(&DAT_0006a520,1,param_6);\n            return uVar1;\n          }\n        }\n        else if (iVar4 == 0) {\nLAB_0004ae20:\n          FUN_0004bca4(param_4,acStack_8c);\n          return 0;\n        }\n        iVar9 = param_3 + 1;\n        iVar11 = FUN_0004a818(uVar13,iVar9,0,param_5,param_6);\n        if (iVar11 == 0) {\n          if ((param_2 & 0x80) == 0) {\n            while( true ) {\n              iVar11 = FUN_0004e4e8(param_1,iVar4);\n              pcVar5 = (char *)FUN_0004e51c(iVar4);\n              sVar6 = strlen(pcVar5);\n              FUN_0004a590(pcVar5,sVar6,param_5,param_6,uVar13);\n              iVar7 = (*param_5)(puVar8,uVar1,param_6);\n              if (iVar7 != 0) break;\n              uVar3 = FUN_0004e528(iVar4);\n              iVar4 = FUN_0004a920(uVar3,uVar13,iVar9,param_4,param_5,param_6);\n              if (iVar4 != 0) {\n                return 0xffffffff;\n              }\n              if (iVar11 == 0) {\n                iVar4 = FUN_0004a818(uVar13,param_3,0,param_5,param_6);\n                if (iVar4 != 0) {\n                  return 0xffffffff;\n                }\n                goto LAB_0004b0a8;\n              }\n              iVar4 = (*param_5)(&DAT_0006a508,1,param_6);\n              if (iVar4 != 0) {\n                return 0xffffffff;\n              }\n              iVar7 = FUN_0004a818(uVar13,iVar9,1,param_5,param_6);\n              iVar4 = iVar11;\n              if (iVar7 != 0) {\n                return 0xffffffff;\n              }\n            }\n          }\n          else {\n            sVar6 = FUN_0004e218(param_1);\n            __base = (void *)FUN_0004d880(sVar6 << 2);\n            if (__base != (void *)0x0) {\n              ppcVar10 = (char **)((int)__base + -4);\n              uVar2 = 0;\n              ppcVar16 = ppcVar10;\n              do {\n                uVar15 = uVar2;\n                uVar2 = uVar15 + 1;\n                pcVar5 = (char *)FUN_0004e51c(iVar4);\n                ppcVar16 = ppcVar16 + 1;\n                *ppcVar16 = pcVar5;\n                iVar4 = FUN_0004e4e8(param_1,iVar4);\n              } while (iVar4 != 0);\n              if (sVar6 != uVar2) {\n                    /* WARNING: Subroutine does not return */\n                __assert_fail(\"i == size\",\"dump.c\",0x160,\"do_dump\");\n              }\n              qsort(__base,uVar2,4,FUN_0004a584);\n              uVar12 = 0;\n              do {\n                ppcVar10 = ppcVar10 + 1;\n                pcVar5 = *ppcVar10;\n                iVar4 = FUN_0004e234(param_1,pcVar5);\n                if (iVar4 == 0) {\n                    /* WARNING: Subroutine does not return */\n                  __assert_fail(\"value\",\"dump.c\",0x16b,\"do_dump\");\n                }\n                sVar6 = strlen(pcVar5);\n                FUN_0004a590(pcVar5,sVar6,param_5,param_6,uVar13);\n                iVar11 = (*param_5)(puVar8,uVar1,param_6);\n                if ((iVar11 != 0) ||\n                   (iVar4 = FUN_0004a920(iVar4,uVar13,iVar9,param_4,param_5,param_6), iVar4 != 0)) {\nLAB_0004b040:\n                  FUN_0004d898(__base);\n                  return 0xffffffff;\n                }\n                if (uVar12 < uVar15) {\n                  iVar4 = (*param_5)(&DAT_0006a508,1,param_6);\n                  if (iVar4 != 0) goto LAB_0004b040;\n                  iVar4 = FUN_0004a818(uVar13,iVar9,1,param_5,param_6);\n                }\n                else {\n                  iVar4 = FUN_0004a818(uVar13,param_3,0,param_5,param_6);\n                }\n                if (iVar4 != 0) goto LAB_0004b040;\n                uVar12 = uVar12 + 1;\n              } while (uVar12 != uVar2);\n              FUN_0004d898(__base);\nLAB_0004b0a8:\n              FUN_0004bca4(param_4,acStack_8c);\n              if (uVar14 == 0) {\n                uVar1 = (*param_5)(&DAT_0006a520,1,param_6);\n                return uVar1;\n              }\n              return 0;\n            }\n          }\n        }\n      }\n      break;\n    case 1:\n      iVar4 = FUN_0004a8c8(param_4,param_1,acStack_8c);\n      if (iVar4 == 0) {\n        uVar2 = FUN_0004e5a0(param_1);\n        if (uVar14 == 0) {\n          iVar4 = (*param_5)(&DAT_0006a504,1,param_6);\n          if (iVar4 != 0) {\n            return 0xffffffff;\n          }\n          if (uVar2 == 0) {\n            FUN_0004bca4(param_4,acStack_8c);\n            uVar1 = (*param_5)(&DAT_0006bb38,1,param_6);\n            return uVar1;\n          }\n        }\n        else if (uVar2 == 0) goto LAB_0004ae20;\n        iVar11 = param_3 + 1;\n        iVar4 = FUN_0004a818(uVar13,iVar11,0,param_5,param_6);\n        if (iVar4 == 0) {\n          uVar15 = 0;\n          while( true ) {\n            uVar1 = FUN_0004e5bc(param_1,uVar15);\n            iVar4 = FUN_0004a920(uVar1,uVar13,iVar11,param_4,param_5,param_6);\n            if (iVar4 != 0) break;\n            if (uVar15 < uVar2 - 1) {\n              iVar4 = (*param_5)(&DAT_0006a508,1,param_6);\n              if (iVar4 != 0) {\n                return 0xffffffff;\n              }\n              iVar4 = FUN_0004a818(uVar13,iVar11,1,param_5,param_6);\n            }\n            else {\n              iVar4 = FUN_0004a818(uVar13,param_3,0,param_5,param_6);\n            }\n            if (iVar4 != 0) {\n              return 0xffffffff;\n            }\n            uVar15 = uVar15 + 1;\n            if (uVar2 == uVar15) {\n              FUN_0004bca4(param_4,acStack_8c);\n              if (uVar14 == 0) {\n                uVar1 = (*param_5)(&DAT_0006bb38,1,param_6);\n                return uVar1;\n              }\n              return 0;\n            }\n          }\n        }\n      }\n      break;\n    case 2:\n      uVar1 = FUN_0004e768(param_1);\n      uVar3 = FUN_0004e784(param_1);\n      uVar1 = FUN_0004a590(uVar1,uVar3,param_5,param_6,uVar13);\n      return uVar1;\n    case 3:\n      uVar17 = FUN_0004e9c4(param_1);\n      iVar4 = snprintf(acStack_8c,100,\"%lld\");\n      uVar1 = (*param_5)(acStack_8c,iVar4,param_6,param_5,uVar17);\n      return uVar1;\n    case 4:\n      FUN_0004ea70(param_1);\n      iVar4 = FUN_0004dbf0(acStack_8c,100,(uVar13 << 0x10) >> 0x1b);\n      if (-1 < iVar4) {\n        uVar1 = (*param_5)(acStack_8c,iVar4,param_6);\n        return uVar1;\n      }\n      break;\n    case 5:\n      uVar1 = (*param_5)(&DAT_0006166c,4,param_6);\n      return uVar1;\n    case 6:\n      uVar1 = (*param_5)(\"false\",5,param_6);\n      return uVar1;\n    case 7:\n      uVar1 = (*param_5)(&DAT_0006a4f4,4,param_6);\n      return uVar1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
    "FUN_0004b130": "\nundefined4 FUN_0004b130(uint *param_1,undefined4 param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined auStack_34 [32];\n  \n  if ((((param_4 & 0x200) == 0) && ((param_1 == (uint *)0x0 || (1 < *param_1)))) ||\n     (iVar1 = FUN_0004b91c(auStack_34), iVar1 != 0)) {\n    uVar2 = 0xffffffff;\n  }\n  else {\n    uVar2 = FUN_0004a920(param_1,param_4,0,auStack_34,param_2,param_3);\n    FUN_0004b998(auStack_34);\n  }\n  return uVar2;\n}\n\n",
    "FUN_0004b1a8": "\nundefined4 FUN_0004b1a8(undefined4 param_1,undefined4 param_2)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined auStack_1c [12];\n  \n  iVar1 = FUN_0004d954(auStack_1c);\n  if (iVar1 == 0) {\n    iVar1 = FUN_0004b130(param_1,&LAB_0004a4e8,auStack_1c,param_2);\n    uVar2 = 0;\n    if (iVar1 == 0) {\n      FUN_0004d9c8(auStack_1c);\n      uVar2 = FUN_0004d8fc();\n    }\n    FUN_0004d988(auStack_1c);\n  }\n  else {\n    uVar2 = 0;\n  }\n  return uVar2;\n}\n\n",
    "FUN_0004b214": "\nundefined4 FUN_0004b214(undefined4 param_1,undefined4 param_2,undefined4 param_3)\n\n{\n  int iVar1;\n  undefined4 local_14;\n  undefined4 local_10;\n  undefined4 local_c;\n  \n  local_10 = 0;\n  local_14 = param_3;\n  local_c = param_2;\n  iVar1 = FUN_0004b130(param_1,FUN_0004a4fc,&local_14);\n  if (iVar1 != 0) {\n    local_10 = 0;\n  }\n  return local_10;\n}\n\n",
    "FUN_0004b2c8": "\nvoid FUN_0004b2c8(undefined4 param_1,undefined4 param_2,undefined4 param_3)\n\n{\n  undefined4 local_c [3];\n  \n  local_c[0] = param_2;\n  FUN_0004b130(param_1,&LAB_0004a55c,local_c,param_3);\n  return;\n}\n\n",
    "FUN_0004b2f4": "\nuint FUN_0004b2f4(uint *param_1,uint param_2,int param_3)\n\n{\n  uint *puVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  int iVar7;\n  uint uVar8;\n  int iVar9;\n  uint uVar10;\n  \n  uVar6 = param_3 + -0x21524111 + param_2;\n  uVar2 = uVar6;\n  uVar4 = uVar6;\n  if (((uint)param_1 & 3) != 0) {\n    if (((uint)param_1 & 1) != 0) {\n      if (0xc < param_2) {\n        puVar1 = param_1 + 3;\n        do {\n          param_1 = puVar1;\n          param_2 = param_2 - 0xc;\n          uVar6 = (uint)*(byte *)((int)param_1 + -2) * 0x10000 +\n                  (uint)*(byte *)((int)param_1 + -3) * 0x100 + (uint)*(byte *)(param_1 + -1) +\n                  (uint)*(byte *)((int)param_1 + -1) * 0x1000000 + uVar6;\n          uVar8 = (((uint)*(byte *)((int)param_1 + -10) * 0x10000 +\n                    (uint)*(byte *)((int)param_1 + -0xb) * 0x100 + (uint)*(byte *)(param_1 + -3) +\n                   (uint)*(byte *)((int)param_1 + -9) * 0x1000000) - uVar6) + uVar2 ^\n                  (uVar6 >> 0x1c | uVar6 * 0x10);\n          iVar3 = (uint)*(byte *)((int)param_1 + -6) * 0x10000 +\n                  (uint)*(byte *)((int)param_1 + -7) * 0x100 + (uint)*(byte *)(param_1 + -2) +\n                  (uint)*(byte *)((int)param_1 + -5) * 0x1000000 + uVar4;\n          iVar7 = iVar3 + uVar6;\n          uVar2 = iVar3 - uVar8 ^ (uVar8 >> 0x1a | uVar8 << 6);\n          iVar5 = uVar8 + iVar7;\n          iVar9 = uVar2 + iVar5;\n          uVar2 = iVar7 - uVar2 ^ (uVar2 >> 0x18 | uVar2 << 8);\n          iVar3 = uVar2 + iVar9;\n          uVar4 = iVar5 - uVar2 ^ (uVar2 >> 0x10 | uVar2 << 0x10);\n          uVar2 = uVar4 + iVar3;\n          uVar6 = iVar9 - uVar4 ^ (uVar4 >> 0xd | uVar4 << 0x13);\n          uVar4 = uVar6 + uVar2;\n          uVar6 = iVar3 - uVar6 ^ (uVar6 >> 0x1c | uVar6 << 4);\n          puVar1 = param_1 + 3;\n        } while (0xc < param_2);\n      }\n      switch(param_2) {\n      case 1:\n        break;\n      case 0xc:\n        uVar6 = uVar6 + (uint)*(byte *)((int)param_1 + 0xb) * 0x1000000;\n      case 0xb:\n        uVar6 = uVar6 + (uint)*(byte *)((int)param_1 + 10) * 0x10000;\n      case 10:\n        uVar6 = uVar6 + (uint)*(byte *)((int)param_1 + 9) * 0x100;\n      case 9:\n        uVar6 = uVar6 + *(byte *)(param_1 + 2);\n      case 8:\n        uVar4 = uVar4 + (uint)*(byte *)((int)param_1 + 7) * 0x1000000;\n      case 7:\n        uVar4 = uVar4 + (uint)*(byte *)((int)param_1 + 6) * 0x10000;\n      case 6:\n        uVar4 = uVar4 + (uint)*(byte *)((int)param_1 + 5) * 0x100;\n      case 5:\n        uVar4 = uVar4 + *(byte *)(param_1 + 1);\n      case 4:\n        uVar2 = uVar2 + (uint)*(byte *)((int)param_1 + 3) * 0x1000000;\n      case 3:\n        uVar2 = uVar2 + (uint)*(byte *)((int)param_1 + 2) * 0x10000;\n      case 2:\n        uVar2 = uVar2 + (uint)*(byte *)((int)param_1 + 1) * 0x100;\n        break;\n      default:\n        goto switchD_0004b3a0_caseD_c;\n      }\n      goto switchD_0004b3a0_caseD_1;\n    }\n    if (0xc < param_2) {\n      puVar1 = param_1 + 3;\n      do {\n        param_1 = puVar1;\n        param_2 = param_2 - 0xc;\n        uVar6 = (uint)*(ushort *)(param_1 + -1) + (uint)*(ushort *)((int)param_1 + -2) * 0x10000 +\n                uVar6;\n        uVar8 = (((uint)*(ushort *)(param_1 + -3) + (uint)*(ushort *)((int)param_1 + -10) * 0x10000)\n                - uVar6) + uVar2 ^ (uVar6 >> 0x1c | uVar6 * 0x10);\n        iVar3 = (uint)*(ushort *)(param_1 + -2) + (uint)*(ushort *)((int)param_1 + -6) * 0x10000 +\n                uVar4;\n        iVar7 = iVar3 + uVar6;\n        uVar2 = iVar3 - uVar8 ^ (uVar8 >> 0x1a | uVar8 << 6);\n        iVar5 = uVar8 + iVar7;\n        iVar9 = uVar2 + iVar5;\n        uVar2 = iVar7 - uVar2 ^ (uVar2 >> 0x18 | uVar2 << 8);\n        iVar3 = uVar2 + iVar9;\n        uVar4 = iVar5 - uVar2 ^ (uVar2 >> 0x10 | uVar2 << 0x10);\n        uVar2 = uVar4 + iVar3;\n        uVar6 = iVar9 - uVar4 ^ (uVar4 >> 0xd | uVar4 << 0x13);\n        uVar4 = uVar6 + uVar2;\n        uVar6 = iVar3 - uVar6 ^ (uVar6 >> 0x1c | uVar6 << 4);\n        puVar1 = param_1 + 3;\n      } while (0xc < param_2);\n    }\n    switch(param_2) {\n    case 1:\nswitchD_0004b3a0_caseD_1:\n      uVar2 = *(byte *)param_1 + uVar2;\n      break;\n    case 3:\n      uVar2 = uVar2 + (uint)*(byte *)((int)param_1 + 2) * 0x10000;\n    case 2:\nswitchD_0004b3a0_caseD_2:\n      uVar2 = *(ushort *)param_1 + uVar2;\n      break;\n    case 5:\n      uVar4 = uVar4 + *(byte *)(param_1 + 1);\n    case 4:\n      uVar2 = *(ushort *)param_1 + uVar2 + (uint)*(ushort *)((int)param_1 + 2) * 0x10000;\n      break;\n    case 7:\n      uVar4 = uVar4 + (uint)*(byte *)((int)param_1 + 6) * 0x10000;\n    case 6:\n      uVar2 = *(ushort *)param_1 + uVar2 + (uint)*(ushort *)((int)param_1 + 2) * 0x10000;\n      uVar4 = uVar4 + *(ushort *)(param_1 + 1);\n      break;\n    case 9:\n      uVar6 = uVar6 + *(byte *)(param_1 + 2);\n    case 8:\n      uVar4 = *(ushort *)(param_1 + 1) + uVar4 + (uint)*(ushort *)((int)param_1 + 6) * 0x10000;\n      uVar2 = *(ushort *)param_1 + uVar2 + (uint)*(ushort *)((int)param_1 + 2) * 0x10000;\n      break;\n    case 0xb:\n      uVar6 = uVar6 + (uint)*(byte *)((int)param_1 + 10) * 0x10000;\n    case 10:\n      uVar4 = *(ushort *)(param_1 + 1) + uVar4 + (uint)*(ushort *)((int)param_1 + 6) * 0x10000;\n      uVar2 = *(ushort *)param_1 + uVar2 + (uint)*(ushort *)((int)param_1 + 2) * 0x10000;\n      uVar6 = uVar6 + *(ushort *)(param_1 + 2);\n      break;\n    case 0xc:\n      uVar6 = *(ushort *)(param_1 + 2) + uVar6 + (uint)*(ushort *)((int)param_1 + 10) * 0x10000;\n      uVar4 = *(ushort *)(param_1 + 1) + uVar4 + (uint)*(ushort *)((int)param_1 + 6) * 0x10000;\n      uVar2 = *(ushort *)param_1 + uVar2 + (uint)*(ushort *)((int)param_1 + 2) * 0x10000;\n      break;\n    default:\n      goto switchD_0004b3a0_caseD_c;\n    }\n    goto LAB_0004b644;\n  }\n  if (0xc < param_2) {\n    puVar1 = param_1 + 3;\n    do {\n      param_1 = puVar1;\n      param_2 = param_2 - 0xc;\n      uVar6 = uVar6 + param_1[-1];\n      uVar2 = (param_1[-3] - uVar6) + uVar2 ^ (uVar6 >> 0x1c | uVar6 * 0x10);\n      iVar3 = uVar4 + param_1[-2] + uVar6;\n      iVar5 = uVar2 + iVar3;\n      uVar2 = (uVar4 + param_1[-2]) - uVar2 ^ (uVar2 >> 0x1a | uVar2 << 6);\n      iVar7 = uVar2 + iVar5;\n      uVar2 = iVar3 - uVar2 ^ (uVar2 >> 0x18 | uVar2 << 8);\n      iVar3 = uVar2 + iVar7;\n      uVar4 = iVar5 - uVar2 ^ (uVar2 >> 0x10 | uVar2 << 0x10);\n      uVar2 = uVar4 + iVar3;\n      uVar6 = iVar7 - uVar4 ^ (uVar4 >> 0xd | uVar4 << 0x13);\n      uVar4 = uVar6 + uVar2;\n      uVar6 = iVar3 - uVar6 ^ (uVar6 >> 0x1c | uVar6 << 4);\n      puVar1 = param_1 + 3;\n    } while (0xc < param_2);\n  }\n  switch(param_2) {\n  case 1:\n    goto switchD_0004b3a0_caseD_1;\n  case 2:\n    goto switchD_0004b3a0_caseD_2;\n  case 3:\n    uVar2 = (*param_1 & 0xffffff) + uVar2;\n    break;\n  case 4:\n    uVar2 = uVar2 + *param_1;\n    break;\n  case 5:\n    uVar4 = uVar4 + *(byte *)(param_1 + 1);\n    uVar2 = uVar2 + *param_1;\n    break;\n  case 6:\n    uVar4 = uVar4 + *(ushort *)(param_1 + 1);\n    uVar2 = uVar2 + *param_1;\n    break;\n  case 7:\n    uVar2 = uVar2 + *param_1;\n    uVar4 = uVar4 + (param_1[1] & 0xffffff);\n    break;\n  case 8:\n    uVar4 = uVar4 + param_1[1];\n    uVar2 = uVar2 + *param_1;\n    break;\n  case 9:\n    uVar8 = (uint)*(byte *)(param_1 + 2);\n    goto LAB_0004b6b4;\n  case 10:\n    uVar8 = (uint)*(ushort *)(param_1 + 2);\n    goto LAB_0004b6b4;\n  case 0xb:\n    uVar6 = uVar6 + (param_1[2] & 0xffffff);\n    uVar4 = uVar4 + param_1[1];\n    uVar2 = uVar2 + *param_1;\n    break;\n  case 0xc:\n    uVar8 = param_1[2];\nLAB_0004b6b4:\n    uVar6 = uVar6 + uVar8;\n    uVar4 = uVar4 + param_1[1];\n    uVar2 = uVar2 + *param_1;\n    break;\n  default:\n    goto switchD_0004b3a0_caseD_c;\n  }\nLAB_0004b644:\n  uVar6 = (uVar6 ^ uVar4) - (uVar4 >> 0x12 | uVar4 << 0xe);\n  uVar8 = (uVar2 ^ uVar6) - (uVar6 >> 0x15 | uVar6 * 0x800);\n  uVar10 = (uVar4 ^ uVar8) - (uVar8 >> 7 | uVar8 * 0x2000000);\n  uVar2 = (uVar6 ^ uVar10) - (uVar10 >> 0x10 | uVar10 * 0x10000);\n  uVar4 = (uVar8 ^ uVar2) - (uVar2 >> 0x1c | uVar2 * 0x10);\n  uVar4 = (uVar10 ^ uVar4) - (uVar4 >> 0x12 | uVar4 * 0x4000);\n  uVar6 = (uVar2 ^ uVar4) - (uVar4 >> 8 | uVar4 * 0x1000000);\nswitchD_0004b3a0_caseD_c:\n  return uVar6;\n}\n\n",
    "FUN_0004b838": "\nint FUN_0004b838(int param_1,int *param_2,char *param_3,int param_4)\n\n{\n  int iVar1;\n  int iVar2;\n  \n  iVar2 = *param_2;\n  if ((iVar2 != param_1 + 0xc) || (iVar2 != param_2[1])) {\n    while( true ) {\n      if ((*(int *)(iVar2 + 0x10) == param_4) &&\n         (iVar1 = strcmp((char *)(iVar2 + 0x18),param_3), iVar1 == 0)) {\n        return iVar2;\n      }\n      if (param_2[1] == iVar2) break;\n      iVar2 = *(int *)(iVar2 + 4);\n    }\n  }\n  return 0;\n}\n\n",
    "FUN_0004b8ac": "\nvoid FUN_0004b8ac(int param_1)\n\n{\n  bool bVar1;\n  int iVar2;\n  int *piVar3;\n  int iVar4;\n  int iVar5;\n  \n  iVar4 = *(int *)(param_1 + 0x10);\n  if (*(int *)(param_1 + 0x10) != param_1 + 0xc) {\n    do {\n      iVar2 = *(int *)(iVar4 + 0x14);\n      iVar5 = *(int *)(iVar4 + 4);\n      if ((iVar2 != 0) && (piVar3 = (int *)(iVar2 + 4), *(int *)(iVar2 + 4) != -1)) {\n        DataMemoryBarrier(0xb);\n        do {\n          iVar2 = *piVar3;\n          bVar1 = (bool)hasExclusiveAccess(piVar3);\n        } while (!bVar1);\n        *piVar3 = iVar2 + -1;\n        if (iVar2 + -1 == 0) {\n          FUN_0004eb6c();\n        }\n      }\n      FUN_0004d898(iVar4);\n      iVar4 = iVar5;\n    } while (iVar5 != param_1 + 0xc);\n    return;\n  }\n  return;\n}\n\n",
    "FUN_0004b91c": "\nundefined4 FUN_0004b91c(undefined4 *param_1)\n\n{\n  undefined4 *puVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  undefined4 *puVar4;\n  uint uVar5;\n  \n  *param_1 = 0;\n  param_1[2] = 3;\n  puVar1 = (undefined4 *)FUN_0004d880(0x40);\n  param_1[1] = puVar1;\n  if (puVar1 != (undefined4 *)0x0) {\n    uVar5 = param_1[2];\n    puVar4 = param_1 + 3;\n    param_1[4] = puVar4;\n    param_1[3] = puVar4;\n    param_1[6] = param_1 + 5;\n    param_1[5] = param_1 + 5;\n    if (1 << (uVar5 & 0xff) != 0) {\n      puVar2 = puVar1;\n      do {\n        puVar2[1] = puVar4;\n        puVar3 = puVar2 + 2;\n        *puVar2 = puVar4;\n        puVar2 = puVar3;\n      } while (puVar3 != (undefined4 *)((int)puVar1 + (8 << (uVar5 & 0xff))));\n    }\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
    "FUN_0004b998": "\nvoid FUN_0004b998(int param_1)\n\n{\n  FUN_0004b8ac();\n  FUN_0004d898(*(undefined4 *)(param_1 + 4));\n  return;\n}\n\n",
    "FUN_0004b9b0": "\nundefined4 FUN_0004b9b0(uint *param_1,char *param_2,uint *param_3)\n\n{\n  bool bVar1;\n  uint **ppuVar2;\n  size_t sVar3;\n  uint *puVar4;\n  int iVar5;\n  int iVar6;\n  uint **ppuVar7;\n  uint **ppuVar8;\n  uint **ppuVar9;\n  int *piVar10;\n  uint **ppuVar11;\n  uint uVar12;\n  uint **ppuVar13;\n  \n  uVar12 = param_1[2];\n  if (*param_1 >> (uVar12 & 0xff) == 0) {\n    ppuVar2 = (uint **)param_1[1];\n    uVar12 = ~(-1 << (uVar12 & 0xff));\n  }\n  else {\n    uVar12 = uVar12 + 1;\n    iVar5 = 8 << (uVar12 & 0xff);\n    ppuVar2 = (uint **)FUN_0004d880(iVar5);\n    if (ppuVar2 == (uint **)0x0) {\n      return 0xffffffff;\n    }\n    FUN_0004d898(param_1[1]);\n    param_1[1] = (uint)ppuVar2;\n    param_1[2] = uVar12;\n    ppuVar7 = (uint **)(param_1 + 3);\n    if (1 << (uVar12 & 0xff) != 0) {\n      ppuVar9 = ppuVar2;\n      do {\n        ppuVar9[1] = (uint *)ppuVar7;\n        ppuVar11 = ppuVar9 + 2;\n        *ppuVar9 = (uint *)ppuVar7;\n        ppuVar9 = ppuVar11;\n      } while ((uint **)(iVar5 + (int)ppuVar2) != ppuVar11);\n    }\n    ppuVar9 = (uint **)param_1[4];\n    param_1[3] = (uint)ppuVar7;\n    uVar12 = ~(-1 << (uVar12 & 0xff));\n    param_1[4] = (uint)ppuVar7;\n    if (ppuVar9 != ppuVar7) {\n      do {\n        while( true ) {\n          ppuVar13 = (uint **)ppuVar9[1];\n          ppuVar8 = (uint **)ppuVar2[((uint)ppuVar9[4] & uVar12) * 2];\n          ppuVar11 = ppuVar2 + ((uint)ppuVar9[4] & uVar12) * 2;\n          if ((ppuVar8 != ppuVar7) || (ppuVar7 != (uint **)ppuVar11[1])) break;\n          puVar4 = (uint *)param_1[3];\n          ppuVar9[1] = (uint *)ppuVar7;\n          *ppuVar9 = puVar4;\n          *(uint ***)(param_1[3] + 4) = ppuVar9;\n          param_1[3] = (uint)ppuVar9;\n          ppuVar11[1] = (uint *)ppuVar9;\n          *ppuVar11 = (uint *)ppuVar9;\n          ppuVar9 = ppuVar13;\n          if (ppuVar13 == ppuVar7) goto LAB_0004bac0;\n        }\n        puVar4 = *ppuVar8;\n        ppuVar9[1] = (uint *)ppuVar8;\n        *ppuVar9 = puVar4;\n        (*ppuVar8)[1] = (uint)ppuVar9;\n        *ppuVar8 = (uint *)ppuVar9;\n        *ppuVar11 = (uint *)ppuVar9;\n        ppuVar9 = ppuVar13;\n      } while (ppuVar13 != ppuVar7);\nLAB_0004bac0:\n      ppuVar2 = (uint **)param_1[1];\n      uVar12 = ~(-1 << (param_1[2] & 0xff));\n    }\n  }\n  sVar3 = strlen(param_2);\n  puVar4 = (uint *)FUN_0004b2f4(param_2,sVar3,DAT_005051c0);\n  ppuVar2 = ppuVar2 + (uVar12 & (uint)puVar4) * 2;\n  iVar5 = FUN_0004b838(param_1,ppuVar2,param_2,puVar4);\n  if (iVar5 != 0) {\n    iVar6 = *(int *)(iVar5 + 0x14);\n    if ((iVar6 != 0) && (*(int *)(iVar6 + 4) != -1)) {\n      piVar10 = (int *)(iVar6 + 4);\n      DataMemoryBarrier(0xb);\n      do {\n        iVar6 = *piVar10;\n        bVar1 = (bool)hasExclusiveAccess(piVar10);\n      } while (!bVar1);\n      *piVar10 = iVar6 + -1;\n      if (iVar6 + -1 == 0) {\n        FUN_0004eb6c();\n      }\n    }\n    *(uint **)(iVar5 + 0x14) = param_3;\n    return 0;\n  }\n  ppuVar7 = (uint **)FUN_0004d880(sVar3 + 0x19);\n  if (ppuVar7 == (uint **)0x0) {\n    return 0xffffffff;\n  }\n  ppuVar7[4] = puVar4;\n  strncpy((char *)(ppuVar7 + 6),param_2,sVar3 + 1);\n  ppuVar11 = (uint **)*ppuVar2;\n  ppuVar9 = ppuVar7 + 2;\n  ppuVar7[5] = param_3;\n  ppuVar7[1] = (uint *)ppuVar7;\n  *ppuVar7 = (uint *)ppuVar7;\n  ppuVar7[3] = (uint *)ppuVar9;\n  ppuVar7[2] = (uint *)ppuVar9;\n  if ((ppuVar11 == (uint **)(param_1 + 3)) && (ppuVar11 == (uint **)ppuVar2[1])) {\n    *ppuVar7 = (uint *)param_1[3];\n    ppuVar7[1] = (uint *)ppuVar11;\n    *(uint ***)(param_1[3] + 4) = ppuVar7;\n    param_1[3] = (uint)ppuVar7;\n    ppuVar2[1] = (uint *)ppuVar7;\n    *ppuVar2 = (uint *)ppuVar7;\n  }\n  else {\n    *ppuVar7 = *ppuVar11;\n    ppuVar7[1] = (uint *)ppuVar11;\n    (*ppuVar11)[1] = (uint)ppuVar7;\n    *ppuVar11 = (uint *)ppuVar7;\n    *ppuVar2 = (uint *)ppuVar7;\n  }\n  puVar4 = (uint *)param_1[5];\n  uVar12 = *param_1;\n  ppuVar7[3] = param_1 + 5;\n  ppuVar7[2] = puVar4;\n  *(uint ***)(param_1[5] + 4) = ppuVar9;\n  param_1[5] = (uint)ppuVar9;\n  *param_1 = uVar12 + 1;\n  return 0;\n}\n\n",
    "FUN_0004bc44": "\nint FUN_0004bc44(int param_1,char *param_2)\n\n{\n  size_t sVar1;\n  uint uVar2;\n  int iVar3;\n  \n  sVar1 = strlen(param_2);\n  uVar2 = FUN_0004b2f4(param_2,sVar1,DAT_005051c0);\n  iVar3 = FUN_0004b838(param_1,*(int *)(param_1 + 4) +\n                               (uVar2 & ~(-1 << (*(uint *)(param_1 + 8) & 0xff))) * 8,param_2,uVar2)\n  ;\n  if (iVar3 != 0) {\n    iVar3 = *(int *)(iVar3 + 0x14);\n  }\n  return iVar3;\n}\n\n",
    "FUN_0004bca4": "\nundefined4 FUN_0004bca4(int *param_1,char *param_2)\n\n{\n  bool bVar1;\n  size_t sVar2;\n  uint uVar3;\n  int *piVar4;\n  int iVar5;\n  int iVar6;\n  int *piVar7;\n  uint uVar8;\n  int iVar9;\n  int iVar10;\n  \n  sVar2 = strlen(param_2);\n  uVar3 = FUN_0004b2f4(param_2,sVar2,DAT_005051c0);\n  iVar10 = param_1[1];\n  uVar8 = uVar3 & ~(-1 << (param_1[2] & 0xffU));\n  iVar9 = iVar10 + uVar8 * 8;\n  piVar4 = (int *)FUN_0004b838(param_1,iVar9,param_2,uVar3);\n  if (piVar4 == (int *)0x0) {\n    return 0xffffffff;\n  }\n  iVar5 = piVar4[1];\n  iVar6 = *piVar4;\n  if (piVar4 == *(int **)(iVar10 + uVar8 * 8)) {\n    if (piVar4 == *(int **)(iVar9 + 4)) {\n      *(int **)(iVar9 + 4) = param_1 + 3;\n      *(int **)(iVar10 + uVar8 * 8) = param_1 + 3;\n    }\n    else {\n      *(int *)(iVar10 + uVar8 * 8) = iVar5;\n    }\n  }\n  else if (piVar4 == *(int **)(iVar9 + 4)) {\n    *(int *)(iVar9 + 4) = iVar6;\n  }\n  *(int *)(iVar6 + 4) = iVar5;\n  iVar10 = piVar4[3];\n  iVar9 = piVar4[5];\n  *(int *)piVar4[1] = iVar6;\n  iVar5 = piVar4[2];\n  *(int *)(iVar5 + 4) = iVar10;\n  *(int *)piVar4[3] = iVar5;\n  if ((iVar9 != 0) && (*(int *)(iVar9 + 4) != -1)) {\n    piVar7 = (int *)(iVar9 + 4);\n    DataMemoryBarrier(0xb);\n    do {\n      iVar9 = *piVar7;\n      bVar1 = (bool)hasExclusiveAccess(piVar7);\n    } while (!bVar1);\n    *piVar7 = iVar9 + -1;\n    if (iVar9 + -1 == 0) {\n      FUN_0004eb6c();\n    }\n  }\n  FUN_0004d898(piVar4);\n  *param_1 = *param_1 + -1;\n  return 0;\n}\n\n",
    "FUN_0004bdc4": "\nvoid FUN_0004bdc4(undefined4 *param_1)\n\n{\n  uint uVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  undefined4 *puVar4;\n  undefined4 *puVar5;\n  \n  FUN_0004b8ac();\n  puVar2 = param_1 + 3;\n  uVar1 = param_1[2];\n  if (1 << (uVar1 & 0xff) != 0) {\n    puVar3 = (undefined4 *)param_1[1];\n    puVar4 = puVar3;\n    do {\n      puVar4[1] = puVar2;\n      puVar5 = puVar4 + 2;\n      *puVar4 = puVar2;\n      puVar4 = puVar5;\n    } while (puVar5 != (undefined4 *)((int)puVar3 + (8 << (uVar1 & 0xff))));\n  }\n  param_1[4] = puVar2;\n  param_1[3] = puVar2;\n  param_1[6] = param_1 + 5;\n  param_1[5] = param_1 + 5;\n  *param_1 = 0;\n  return;\n}\n\n",
    "FUN_0004be20": "\nint FUN_0004be20(int param_1)\n\n{\n  int iVar1;\n  \n  iVar1 = *(int *)(param_1 + 0x18);\n  if (iVar1 == param_1 + 0x14) {\n    iVar1 = 0;\n  }\n  return iVar1;\n}\n\n",
    "FUN_0004be38": "\nint FUN_0004be38(int param_1,char *param_2)\n\n{\n  size_t sVar1;\n  uint uVar2;\n  int iVar3;\n  \n  sVar1 = strlen(param_2);\n  uVar2 = FUN_0004b2f4(param_2,sVar1,DAT_005051c0);\n  iVar3 = FUN_0004b838(param_1,*(int *)(param_1 + 4) +\n                               (uVar2 & ~(-1 << (*(uint *)(param_1 + 8) & 0xff))) * 8,param_2,uVar2)\n  ;\n  if (iVar3 != 0) {\n    iVar3 = iVar3 + 8;\n  }\n  return iVar3;\n}\n\n",
    "FUN_0004be98": "\nint FUN_0004be98(int param_1,int param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = *(int *)(param_2 + 4);\n  if (iVar1 == param_1 + 0x14) {\n    iVar1 = 0;\n  }\n  return iVar1;\n}\n\n",
    "FUN_0004beb0": "\nint FUN_0004beb0(int param_1)\n\n{\n  return param_1 + 0x10;\n}\n\n",
    "FUN_0004beb8": "\nundefined4 FUN_0004beb8(int param_1)\n\n{\n  return *(undefined4 *)(param_1 + 0xc);\n}\n\n",
    "FUN_0004bec0": "\nvoid FUN_0004bec0(int param_1,undefined4 param_2)\n\n{\n  bool bVar1;\n  int iVar2;\n  int *piVar3;\n  \n  iVar2 = *(int *)(param_1 + 0xc);\n  if ((iVar2 != 0) && (*(int *)(iVar2 + 4) != -1)) {\n    piVar3 = (int *)(iVar2 + 4);\n    DataMemoryBarrier(0xb);\n    do {\n      iVar2 = *piVar3;\n      bVar1 = (bool)hasExclusiveAccess(piVar3);\n    } while (!bVar1);\n    *piVar3 = iVar2 + -1;\n    if (iVar2 + -1 == 0) {\n      FUN_0004eb6c();\n      *(undefined4 *)(param_1 + 0xc) = param_2;\n      return;\n    }\n  }\n  *(undefined4 *)(param_1 + 0xc) = param_2;\n  return;\n}\n\n",
    "FUN_0004bf2c": "\nvoid FUN_0004bf2c(uint param_1)\n\n{\n  bool bVar1;\n  char cVar2;\n  int __fd;\n  ssize_t sVar3;\n  undefined8 local_20;\n  \n  cVar2 = DAT_005051c4;\n  if (DAT_005051c0 != 0) {\n    return;\n  }\n  do {\n    bVar1 = (bool)hasExclusiveAccess(0x5051c4);\n  } while (!bVar1);\n  DAT_005051c4 = 1;\n  if (cVar2 != '\\0') {\n    do {\n      sched_yield();\n      DataMemoryBarrier(0xb);\n    } while (DAT_005051c0 == 0);\n    return;\n  }\n  if (param_1 != 0) goto LAB_0004bf7c;\n  __fd = open64(\"/dev/urandom\",0);\n  if (__fd == -1) {\nLAB_0004c000:\n    gettimeofday((timeval *)&local_20,(__timezone_ptr_t)0x0);\n    param_1 = getpid();\n    param_1 = param_1 ^ local_20._4_4_ ^ (uint)local_20;\n  }\n  else {\n    sVar3 = read(__fd,&local_20,4);\n    close(__fd);\n    if (sVar3 != 4) goto LAB_0004c000;\n    param_1 = CONCAT31(CONCAT21(CONCAT11((undefined)local_20,local_20._1_1_),local_20._2_1_),\n                       local_20._3_1_);\n  }\n  if (param_1 == 0) {\n    param_1 = 1;\n  }\nLAB_0004bf7c:\n  DataMemoryBarrier(0xb);\n  DAT_005051c0 = param_1;\n  return;\n}\n\n",
    "FUN_0004c0cc": "\nvoid FUN_0004c0cc(int param_1,int param_2,int param_3,char *param_4)\n\n{\n  char *pcVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  char acStack_168 [159];\n  undefined local_c9;\n  char acStack_c8 [159];\n  undefined local_29;\n  \n  if (param_1 == 0) {\n    return;\n  }\n  vsnprintf(acStack_168,0xa0,param_4,&stack0x00000000);\n  local_c9 = 0;\n  if (param_2 == 0) {\n    uVar2 = 0xffffffff;\n    pcVar1 = acStack_168;\n    uVar3 = 0xffffffff;\n    uVar4 = 0;\n  }\n  else {\n    pcVar1 = (char *)FUN_0004d9c8(param_2 + 0x28);\n    uVar3 = *(undefined4 *)(param_2 + 0x18);\n    uVar2 = *(undefined4 *)(param_2 + 0x1c);\n    uVar4 = *(undefined4 *)(param_2 + 0x24);\n    if ((pcVar1 == (char *)0x0) || (*pcVar1 == '\\0')) {\n      if (param_3 == 8) {\n        param_3 = 6;\n      }\n      if (*(int *)(param_2 + 0x14) != -2) {\n        snprintf(acStack_c8,0xa0,\"%s near end of file\",acStack_168);\n        pcVar1 = acStack_c8;\n        local_29 = 0;\n        goto LAB_0004c160;\n      }\n    }\n    else if (*(uint *)(param_2 + 0x2c) < 0x15) {\n      snprintf(acStack_c8,0xa0,\"%s near \\'%s\\'\",acStack_168,pcVar1);\n      pcVar1 = acStack_c8;\n      local_29 = 0;\n      goto LAB_0004c160;\n    }\n    pcVar1 = acStack_168;\n  }\nLAB_0004c160:\n  FUN_0004f95c(param_1,uVar3,uVar2,uVar4,param_3,\"%s\",pcVar1);\n  return;\n}\n\n",
    "FUN_0004c1fc": "\nvoid FUN_0004c1fc(int param_1)\n\n{\n  if (*(int *)(param_1 + 0x3c) != 0x100) {\n    FUN_0004d988(param_1 + 0x28);\n    return;\n  }\n  FUN_0004d898(*(undefined4 *)(param_1 + 0x40));\n  *(undefined4 *)(param_1 + 0x40) = 0;\n  *(undefined4 *)(param_1 + 0x44) = 0;\n  FUN_0004d988(param_1 + 0x28);\n  return;\n}\n\n",
    "FUN_0004c23c": "\nuint FUN_0004c23c(int *param_1)\n\n{\n  ssize_t sVar1;\n  uint uVar2;\n  byte abStack_9 [9];\n  \n  sVar1 = read(*param_1,abStack_9,1);\n  if (sVar1 == 1) {\n    uVar2 = (uint)abStack_9[0];\n  }\n  else {\n    uVar2 = 0xffffffff;\n  }\n  return uVar2;\n}\n\n",
    "FUN_0004c268": "\nint FUN_0004c268(byte *param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  byte *pbVar3;\n  \n  if (*param_1 != 0x75) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"str[0] == \\'u\\'\",\"load.c\",0x135,\"decode_unicode_escape\");\n  }\n  iVar1 = 0;\n  pbVar3 = param_1 + 4;\n  do {\n    param_1 = param_1 + 1;\n    uVar2 = (uint)*param_1;\n    iVar1 = iVar1 * 0x10;\n    if ((uVar2 - 0x30 & 0xff) < 10) {\n      iVar1 = (uVar2 - 0x30) + iVar1;\n    }\n    else if (uVar2 - 0x61 < 0x1a) {\n      iVar1 = (uVar2 - 0x57) + iVar1;\n    }\n    else {\n      if (0x19 < uVar2 - 0x41) {\n        return -1;\n      }\n      iVar1 = (uVar2 - 0x37) + iVar1;\n    }\n  } while (param_1 != pbVar3);\n  return iVar1;\n}\n\n",
    "FUN_0004c2fc": "\nvoid FUN_0004c2fc(int param_1,uint param_2)\n\n{\n  int iVar1;\n  \n  if (param_2 + 2 < 2) {\n    return;\n  }\n  *(int *)(param_1 + 0x24) = *(int *)(param_1 + 0x24) + -1;\n  if (param_2 == 10) {\n    *(int *)(param_1 + 0x18) = *(int *)(param_1 + 0x18) + -1;\n    *(undefined4 *)(param_1 + 0x1c) = *(undefined4 *)(param_1 + 0x20);\n  }\n  else {\n    iVar1 = FUN_0004de1c(param_2 & 0xff);\n    if (iVar1 != 0) {\n      *(int *)(param_1 + 0x1c) = *(int *)(param_1 + 0x1c) + -1;\n    }\n  }\n  if (*(int *)(param_1 + 0x10) != 0) {\n    iVar1 = *(int *)(param_1 + 0x10) + -1;\n    *(int *)(param_1 + 0x10) = iVar1;\n    if (*(byte *)(param_1 + iVar1 + 8) == param_2) {\n      return;\n    }\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"stream->buffer[stream->buffer_pos] == c\",\"load.c\",0xf0,\"stream_unget\");\n  }\n                    /* WARNING: Subroutine does not return */\n  __assert_fail(\"stream->buffer_pos > 0\",\"load.c\",0xee,\"stream_unget\");\n}\n\n",
    "FUN_0004c3b8": "\nuint FUN_0004c3b8(code **param_1,undefined4 param_2)\n\n{\n  undefined uVar1;\n  int iVar2;\n  int iVar3;\n  code *pcVar4;\n  code **ppcVar5;\n  uint uVar6;\n  undefined *puVar7;\n  undefined *puVar8;\n  \n  ppcVar5 = (code **)((int)param_1 + (int)param_1[4]);\n  if (*(char *)(ppcVar5 + 2) == '\\0') {\n    iVar2 = (**param_1)(param_1[1]);\n    if (iVar2 == -1) {\n      param_1[5] = (code *)0xffffffff;\n      return 0xffffffff;\n    }\n    param_1[4] = (code *)0x0;\n    *(char *)(param_1 + 2) = (char)iVar2;\n    if (iVar2 - 0x80U < 0x80) {\n      uVar6 = FUN_0004de1c();\n      if (uVar6 != 0) {\n        if (uVar6 < 2) {\n                    /* WARNING: Subroutine does not return */\n          __assert_fail(\"count >= 2\",\"load.c\",0xbd,\"stream_get\");\n        }\n        puVar7 = (undefined *)((int)param_1 + 9);\n        do {\n          uVar1 = (**param_1)(param_1[1]);\n          puVar8 = puVar7 + 1;\n          *puVar7 = uVar1;\n          puVar7 = puVar8;\n        } while ((undefined *)((int)(param_1 + 2) + uVar6) != puVar8);\n        iVar3 = FUN_0004de88(param_1 + 2,uVar6,0);\n        if (iVar3 != 0) {\n          *(undefined *)((int)param_1 + uVar6 + 8) = 0;\n          pcVar4 = param_1[4] + 1;\n          ppcVar5 = (code **)((int)param_1 + (int)param_1[4]);\n          goto LAB_0004c420;\n        }\n      }\n      param_1[5] = (code *)0xfffffffe;\n      FUN_0004c0cc(param_2,param_1,5,\"unable to decode byte 0x%x\",iVar2);\n      return 0xfffffffe;\n    }\n    pcVar4 = (code *)0x1;\n    *(undefined *)((int)param_1 + 9) = 0;\n    ppcVar5 = param_1;\n  }\n  else {\n    pcVar4 = param_1[4] + 1;\n  }\nLAB_0004c420:\n  param_1[4] = pcVar4;\n  uVar6 = (uint)*(byte *)(ppcVar5 + 2);\n  param_1[9] = param_1[9] + 1;\n  if (uVar6 != 10) {\n    iVar2 = FUN_0004de1c(uVar6);\n    if (iVar2 != 0) {\n      param_1[7] = param_1[7] + 1;\n    }\n    return uVar6;\n  }\n  pcVar4 = param_1[7];\n  param_1[7] = (code *)0x0;\n  param_1[6] = param_1[6] + 1;\n  param_1[8] = pcVar4;\n  return 10;\n}\n\n",
    "FUN_0004c540": "\nuint FUN_0004c540(int param_1)\n\n{\n  uint uVar1;\n  \n  uVar1 = *(uint *)(param_1 + 0x14);\n  if (uVar1 == 0) {\n    uVar1 = FUN_0004c3b8();\n  }\n  if (1 < uVar1 + 2) {\n    FUN_0004dab0(param_1 + 0x28,uVar1 & 0xff);\n  }\n  return uVar1;\n}\n\n",
    "FUN_0004c580": "\nvoid FUN_0004c580(int param_1,int param_2)\n\n{\n  int iVar1;\n  \n  if (param_2 + 2U < 2) {\n    return;\n  }\n  FUN_0004c2fc();\n  iVar1 = FUN_0004dad4(param_1 + 0x28);\n  if (iVar1 == param_2) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __assert_fail(\"c == d\",\"load.c\",0x11a,\"lex_unget_unsave\");\n}\n\n",
    "FUN_0004c5cc": "\nuint FUN_0004c5cc(int param_1,undefined4 param_2)\n\n{\n  char cVar1;\n  bool bVar2;\n  char *pcVar3;\n  int *piVar4;\n  byte *pbVar5;\n  byte *pbVar6;\n  byte bVar7;\n  uint uVar8;\n  int iVar9;\n  uint uVar10;\n  byte *pbVar11;\n  int iVar12;\n  bool bVar13;\n  bool bVar14;\n  longlong lVar15;\n  char *local_30;\n  undefined4 uStack_2c;\n  \n  iVar12 = param_1 + 0x28;\n  FUN_0004d9b4(iVar12);\n  if (*(int *)(param_1 + 0x3c) == 0x100) {\n    FUN_0004d898(*(undefined4 *)(param_1 + 0x40));\n    *(undefined4 *)(param_1 + 0x40) = 0;\n    *(undefined4 *)(param_1 + 0x44) = 0;\n  }\n  do {\n    uVar10 = *(uint *)(param_1 + 0x14);\n    if (uVar10 == 0) {\n      uVar10 = FUN_0004c3b8(param_1,param_2);\n    }\n    uVar8 = uVar10 - 9;\n    bVar14 = 0x1f < uVar10;\n    bVar13 = uVar10 == 0x20;\n    if (!bVar13) {\n      bVar14 = uVar8 != 0;\n    }\n    bVar2 = uVar8 == 1;\n    if (!bVar14 || (bVar13 || bVar2)) {\n      uVar8 = 1;\n    }\n    if (bVar14 && (!bVar13 && !bVar2)) {\n      uVar8 = 0;\n    }\n  } while ((!bVar14 || (bVar13 || bVar2)) || (uVar10 == 0xd));\n  if (uVar10 == 0xffffffff) {\n    *(uint *)(param_1 + 0x3c) = uVar8;\n    return uVar8;\n  }\n  if (uVar10 == 0xfffffffe) {\nLAB_0004c714:\n    *(undefined4 *)(param_1 + 0x3c) = 0xffffffff;\n    return 0xffffffff;\n  }\n  FUN_0004dab0(iVar12,uVar10 & 0xff);\n  if ((((uVar10 & 0xffffffdf) - 0x5b & 0xfffffffd) == 0) || (uVar10 == 0x2c || uVar10 == 0x3a)) {\nLAB_0004c740:\n    *(uint *)(param_1 + 0x3c) = uVar10;\n    return uVar10;\n  }\n  if (uVar10 == 0x22) {\n    *(undefined4 *)(param_1 + 0x40) = 0;\n    *(undefined4 *)(param_1 + 0x3c) = 0xffffffff;\nLAB_0004c77c:\n    do {\n      uVar10 = FUN_0004c540(param_1,param_2);\n      while( true ) {\n        if (uVar10 == 0x22) {\n          pbVar5 = (byte *)FUN_0004d880(*(int *)(param_1 + 0x2c) + 1);\n          if (pbVar5 == (byte *)0x0) goto LAB_0004c808;\n          *(byte **)(param_1 + 0x40) = pbVar5;\n          iVar12 = FUN_0004d9c8(iVar12);\n          pbVar11 = (byte *)(iVar12 + 1);\n          goto LAB_0004cab0;\n        }\n        if (uVar10 == 0xfffffffe) goto LAB_0004c808;\n        if (uVar10 == 0xffffffff) {\n          FUN_0004c0cc(param_2,param_1,6,\"premature end of input\");\n          goto LAB_0004c808;\n        }\n        if (uVar10 < 0x20) {\n          FUN_0004c580(param_1,uVar10);\n          if (uVar10 == 10) {\n            FUN_0004c0cc(param_2,param_1,8,\"unexpected newline\");\n          }\n          else {\n            FUN_0004c0cc(param_2,param_1,8,\"control character 0x%x\",uVar10);\n          }\n          goto LAB_0004c808;\n        }\n        if (uVar10 != 0x5c) goto LAB_0004c77c;\n        uVar10 = FUN_0004c540(param_1,param_2);\n        if (uVar10 != 0x75) break;\n        uVar10 = FUN_0004c540(param_1,param_2);\n        iVar9 = 4;\n        do {\n          uVar8 = (uVar10 & 0xffffffdf) - 0x41;\n          bVar13 = 4 < uVar8;\n          bVar14 = uVar8 == 5;\n          if (5 < uVar8) {\n            bVar13 = 8 < uVar10 - 0x30;\n            bVar14 = uVar10 - 0x30 == 9;\n          }\n          if (bVar13 && !bVar14) goto LAB_0004c7f0;\n          uVar10 = FUN_0004c540(param_1,param_2);\n          iVar9 = iVar9 + -1;\n        } while (iVar9 != 0);\n      }\n    } while (((uVar10 == 0x5c || (uVar10 & 0xffffffbf) == 0x22) || (uVar10 == 0x2f)) ||\n            (((uVar10 & 0xfffffff7) == 0x66 || ((uVar10 - 0x72 & 0xfffffffd) == 0))));\nLAB_0004c7f0:\n    FUN_0004c0cc(param_2,param_1,8,\"invalid escape\");\nLAB_0004c808:\n    FUN_0004d898(*(undefined4 *)(param_1 + 0x40));\n    *(undefined4 *)(param_1 + 0x40) = 0;\n    *(undefined4 *)(param_1 + 0x44) = 0;\n    return *(uint *)(param_1 + 0x3c);\n  }\n  bVar14 = 0x2c < uVar10;\n  if (uVar10 != 0x2d) {\n    bVar14 = 8 < uVar10 - 0x30;\n  }\n  if (bVar14 && (uVar10 != 0x2d && uVar10 - 0x30 != 9)) {\n    if ((uVar10 & 0xffffffdf) - 0x41 < 0x1a) {\n      do {\n        uVar10 = FUN_0004c540(param_1,param_2);\n      } while ((uVar10 & 0xffffffdf) - 0x41 < 0x1a);\n      FUN_0004c580(param_1,uVar10);\n      pcVar3 = (char *)FUN_0004d9c8(iVar12);\n      iVar12 = strcmp(pcVar3,\"true\");\n      if (iVar12 == 0) {\n        *(undefined4 *)(param_1 + 0x3c) = 0x103;\n        return 0x103;\n      }\n      iVar12 = strcmp(pcVar3,\"false\");\n      if (iVar12 == 0) {\n        uVar10 = 0x104;\n        goto LAB_0004c740;\n      }\n      iVar12 = strcmp(pcVar3,\"null\");\n      if (iVar12 == 0) {\n        *(undefined4 *)(param_1 + 0x3c) = 0x105;\n        return 0x105;\n      }\n    }\n    else {\n      cVar1 = *(char *)(param_1 + *(int *)(param_1 + 0x10) + 8);\n      while (cVar1 != '\\0') {\n        FUN_0004dab0(iVar12);\n        iVar9 = *(int *)(param_1 + 0x10) + 1;\n        *(int *)(param_1 + 0x10) = iVar9;\n        *(int *)(param_1 + 0x24) = *(int *)(param_1 + 0x24) + 1;\n        cVar1 = *(char *)(param_1 + iVar9 + 8);\n      }\n    }\n    goto LAB_0004c714;\n  }\n  *(undefined4 *)(param_1 + 0x3c) = 0xffffffff;\n  if (uVar10 == 0x2d) {\n    uVar10 = FUN_0004c540(param_1,param_2);\n    if (uVar10 == 0x30) goto LAB_0004cbac;\n    if (uVar10 - 0x30 < 10) goto LAB_0004c83c;\nLAB_0004cbc8:\n    FUN_0004c580(param_1,uVar10);\n    uVar10 = *(uint *)(param_1 + 0x3c);\n  }\n  else {\n    if (uVar10 == 0x30) {\nLAB_0004cbac:\n      uVar10 = FUN_0004c540(param_1,param_2);\n      if (uVar10 - 0x30 < 10) goto LAB_0004cbc8;\n    }\n    else {\nLAB_0004c83c:\n      do {\n        uVar10 = FUN_0004c540(param_1,param_2);\n      } while (uVar10 - 0x30 < 10);\n    }\n    if (((*(uint *)(param_1 + 0x34) & 8) == 0) && (uVar10 != 0x2e && uVar10 != 0x45)) {\n      if (uVar10 != 0x65) {\n        FUN_0004c580(param_1,uVar10);\n        pcVar3 = (char *)FUN_0004d9c8(iVar12);\n        piVar4 = __errno_location();\n        *piVar4 = 0;\n        lVar15 = strtoll(pcVar3,&local_30,10);\n        if (*piVar4 == 0x22) {\n          if (lVar15 < 0) {\n            pcVar3 = \"too big negative integer\";\n          }\n          else {\n            pcVar3 = \"too big integer\";\n          }\n          FUN_0004c0cc(param_2,param_1,0xf,pcVar3);\n          return *(uint *)(param_1 + 0x3c);\n        }\n        if (local_30 == pcVar3 + *(int *)(param_1 + 0x2c)) {\n          *(longlong *)(param_1 + 0x40) = lVar15;\n          *(undefined4 *)(param_1 + 0x3c) = 0x101;\n          return 0x101;\n        }\n                    /* WARNING: Subroutine does not return */\n        __assert_fail(\"end == saved_text + lex->saved_text.length\",\"load.c\",0x21d,\"lex_scan_number\")\n        ;\n      }\nLAB_0004c968:\n      uVar10 = FUN_0004c540(param_1,param_2);\n      if ((uVar10 - 0x2b & 0xfffffffd) == 0) {\n        uVar10 = FUN_0004c540(param_1,param_2);\n      }\n      if (9 < uVar10 - 0x30) goto LAB_0004cbc8;\n      do {\n        uVar10 = FUN_0004c540(param_1,param_2);\n      } while (uVar10 - 0x30 < 10);\n    }\n    else {\n      if (uVar10 == 0x2e) {\n        uVar10 = *(uint *)(param_1 + 0x14);\n        if (uVar10 == 0) {\n          uVar10 = FUN_0004c3b8(param_1,param_2);\n        }\n        if (9 < uVar10 - 0x30) {\n          FUN_0004c2fc(param_1);\n          return *(uint *)(param_1 + 0x3c);\n        }\n        FUN_0004dab0(iVar12,uVar10 & 0xff);\n        do {\n          uVar10 = FUN_0004c540(param_1,param_2);\n        } while (uVar10 - 0x30 < 10);\n      }\n      if ((uVar10 & 0xffffffdf) == 0x45) goto LAB_0004c968;\n    }\n    FUN_0004c580(param_1,uVar10);\n    iVar12 = FUN_0004db00(iVar12,&local_30);\n    if (iVar12 == 0) {\n      uVar10 = 0x102;\n      *(undefined4 *)(param_1 + 0x3c) = 0x102;\n      *(char **)(param_1 + 0x40) = local_30;\n      *(undefined4 *)(param_1 + 0x44) = uStack_2c;\n    }\n    else {\n      FUN_0004c0cc(param_2,param_1,0xf,\"real number overflow\");\n      uVar10 = *(uint *)(param_1 + 0x3c);\n    }\n  }\n  return uVar10;\nLAB_0004cab0:\n  while( true ) {\n    bVar7 = *pbVar11;\n    if (bVar7 == 0x22) {\n      *pbVar5 = 0;\n      *(undefined4 *)(param_1 + 0x3c) = 0x100;\n      *(int *)(param_1 + 0x44) = (int)pbVar5 - *(int *)(param_1 + 0x40);\n      return 0x100;\n    }\n    if (bVar7 == 0x5c) break;\n    *pbVar5 = bVar7;\n    pbVar5 = pbVar5 + 1;\n    pbVar11 = pbVar11 + 1;\n  }\n  bVar7 = pbVar11[1];\n  if (bVar7 == 0x75) {\n    iVar12 = FUN_0004c268();\n    pbVar6 = pbVar11;\n    if (iVar12 < 0) {\nLAB_0004ccd8:\n      FUN_0004c0cc(param_2,param_1,8,\"invalid Unicode escape \\'%.6s\\'\",pbVar6);\n      goto LAB_0004c808;\n    }\n    pbVar6 = pbVar11 + 6;\n    if (iVar12 - 0xd800U < 0x400) {\n      if ((pbVar11[6] == 0x5c) && (pbVar11[7] == 0x75)) {\n        iVar9 = FUN_0004c268(pbVar11 + 7);\n        if (iVar9 < 0) goto LAB_0004ccd8;\n        pbVar6 = pbVar11 + 0xc;\n        if (0x3ff < iVar9 - 0xdc00U) {\n          FUN_0004c0cc(param_2,param_1,8,\"invalid Unicode \\'\\\\u%04X\\\\u%04X\\'\",iVar12,iVar9);\n          goto LAB_0004c808;\n        }\n        iVar12 = (iVar9 - 0xdc00U) + (iVar12 - 0xd800U) * 0x400 + 0x10000;\nLAB_0004cb88:\n        iVar12 = FUN_0004dd30(iVar12,pbVar5,&local_30);\n        if (iVar12 != 0) {\n                    /* WARNING: Subroutine does not return */\n          __assert_fail(\"0\",\"load.c\",0x1c4,\"lex_scan_string\");\n        }\n        pbVar5 = pbVar5 + (int)local_30;\n        pbVar11 = pbVar6;\n        goto LAB_0004cab0;\n      }\n    }\n    else if (0x3ff < iVar12 - 0xdc00U) goto LAB_0004cb88;\n    FUN_0004c0cc(param_2,param_1,8,\"invalid Unicode \\'\\\\u%04X\\'\",iVar12);\n    goto LAB_0004c808;\n  }\n  if (bVar7 == 0x62) {\n    *pbVar5 = 8;\n  }\n  else if (bVar7 < 99) {\n    if (((bVar7 != 0x2f) && (bVar7 != 0x5c)) && (bVar7 != 0x22)) goto LAB_0004cc3c;\nLAB_0004cc14:\n    *pbVar5 = bVar7;\n  }\n  else if (bVar7 == 0x6e) {\n    *pbVar5 = 10;\n  }\n  else {\n    if (bVar7 < 0x6f) {\n      if (bVar7 != 0x66) {\nLAB_0004cc3c:\n                    /* WARNING: Subroutine does not return */\n        __assert_fail(\"0\",\"load.c\",0x1d0,\"lex_scan_string\");\n      }\n      bVar7 = 0xc;\n      goto LAB_0004cc14;\n    }\n    if (bVar7 == 0x72) {\n      *pbVar5 = 0xd;\n    }\n    else {\n      if (bVar7 != 0x74) goto LAB_0004cc3c;\n      *pbVar5 = 9;\n    }\n  }\n  pbVar5 = pbVar5 + 1;\n  pbVar11 = pbVar11 + 2;\n  goto LAB_0004cab0;\n}\n\n",
    "FUN_0004cde4": "\nint FUN_0004cde4(int param_1,uint param_2,undefined4 param_3)\n\n{\n  bool bVar1;\n  void *pvVar2;\n  int iVar3;\n  uint uVar4;\n  int iVar5;\n  int *piVar6;\n  void *pvVar7;\n  size_t sVar8;\n  \n  uVar4 = *(int *)(param_1 + 0x38) + 1;\n  *(uint *)(param_1 + 0x38) = uVar4;\n  if (0x800 < uVar4) {\n    FUN_0004c0cc(param_3,param_1,2,\"maximum parsing depth reached\");\n    return 0;\n  }\n  iVar5 = *(int *)(param_1 + 0x3c);\n  if (iVar5 == 0x101) {\n    iVar5 = FUN_0004e990(*(undefined4 *)(param_1 + 0x40),*(undefined4 *)(param_1 + 0x44));\n  }\n  else if (iVar5 < 0x102) {\n    if (iVar5 == 0x5b) {\n      iVar5 = FUN_0004e540();\n      if (iVar5 == 0) {\n        return 0;\n      }\n      FUN_0004c5cc(param_1,param_3);\n      iVar3 = *(int *)(param_1 + 0x3c);\n      if (iVar3 != 0x5d) {\n        while (iVar3 != 0) {\n          iVar3 = FUN_0004cde4(param_1,param_2,param_3);\n          if ((iVar3 == 0) || (iVar3 = FUN_0004f494(iVar5), iVar3 != 0)) goto LAB_0004d10c;\n          FUN_0004c5cc(param_1,param_3);\n          if (*(int *)(param_1 + 0x3c) != 0x2c) {\n            if (*(int *)(param_1 + 0x3c) == 0x5d) goto LAB_0004ce4c;\n            break;\n          }\n          FUN_0004c5cc(param_1,param_3);\n          iVar3 = *(int *)(param_1 + 0x3c);\n        }\n        FUN_0004c0cc(param_3,param_1,8,\"\\']\\' expected\");\nLAB_0004d10c:\n        if (*(int *)(iVar5 + 4) == -1) {\n          return 0;\n        }\n        piVar6 = (int *)(iVar5 + 4);\n        DataMemoryBarrier(0xb);\n        do {\n          iVar3 = *piVar6 + -1;\n          bVar1 = (bool)hasExclusiveAccess(piVar6);\n        } while (!bVar1);\n        *piVar6 = iVar3;\nLAB_0004d134:\n        if (iVar3 == 0) {\n          FUN_0004eb6c(iVar5);\n          return 0;\n        }\n        return 0;\n      }\n      goto LAB_0004ce4c;\n    }\n    if (iVar5 < 0x5c) {\n      if (iVar5 == -1) {\n        FUN_0004c0cc(param_3,param_1,8,\"invalid token\");\n        return 0;\n      }\nLAB_0004d14c:\n      FUN_0004c0cc(param_3,param_1,8,\"unexpected token\");\n      return 0;\n    }\n    if (iVar5 == 0x7b) {\n      iVar5 = FUN_0004e1b0();\n      if (iVar5 == 0) {\n        return 0;\n      }\n      FUN_0004c5cc(param_1,param_3);\n      if (*(int *)(param_1 + 0x3c) != 0x7d) {\n        if (*(int *)(param_1 + 0x3c) == 0x100) {\n          pvVar7 = *(void **)(param_1 + 0x40);\n          sVar8 = *(size_t *)(param_1 + 0x44);\n          *(undefined4 *)(param_1 + 0x40) = 0;\n          *(undefined4 *)(param_1 + 0x44) = 0;\n          if (pvVar7 == (void *)0x0) {\n            return 0;\n          }\n          while( true ) {\n            pvVar2 = memchr(pvVar7,0,sVar8);\n            if (pvVar2 != (void *)0x0) {\n              FUN_0004d898(pvVar7);\n              FUN_0004c0cc(param_3,param_1,0xd,\"NUL byte in object key not supported\");\n              goto LAB_0004d014;\n            }\n            if (((param_2 & 1) != 0) && (iVar3 = FUN_0004e234(iVar5,pvVar7), iVar3 != 0)) {\n              FUN_0004d898(pvVar7);\n              FUN_0004c0cc(param_3,param_1,0xe,\"duplicate object key\");\n              goto LAB_0004d014;\n            }\n            FUN_0004c5cc(param_1,param_3);\n            if (*(int *)(param_1 + 0x3c) != 0x3a) {\n              FUN_0004d898(pvVar7,param_3);\n              FUN_0004c0cc(param_3,param_1,8,\"\\':\\' expected\");\n              goto LAB_0004d014;\n            }\n            FUN_0004c5cc(param_1);\n            iVar3 = FUN_0004cde4(param_1,param_2,param_3);\n            if (iVar3 == 0) {\n              FUN_0004d898(pvVar7,pvVar7);\n              goto LAB_0004d014;\n            }\n            iVar3 = FUN_0004ee2c(iVar5);\n            if (iVar3 != 0) {\n              FUN_0004d898(pvVar7);\n              goto LAB_0004d014;\n            }\n            FUN_0004d898(pvVar7);\n            FUN_0004c5cc(param_1,param_3);\n            if (*(int *)(param_1 + 0x3c) != 0x2c) break;\n            FUN_0004c5cc(param_1,param_3);\n            if (*(int *)(param_1 + 0x3c) != 0x100) goto LAB_0004d1cc;\n            pvVar7 = *(void **)(param_1 + 0x40);\n            sVar8 = *(size_t *)(param_1 + 0x44);\n            *(undefined4 *)(param_1 + 0x40) = 0;\n            *(undefined4 *)(param_1 + 0x44) = 0;\n            if (pvVar7 == (void *)0x0) {\n              return 0;\n            }\n          }\n          if (*(int *)(param_1 + 0x3c) == 0x7d) goto LAB_0004ce4c;\n          FUN_0004c0cc(param_3,param_1,8,\"\\'}\\' expected\");\n        }\n        else {\nLAB_0004d1cc:\n          FUN_0004c0cc(param_3,param_1,8,\"string or \\'}\\' expected\");\n        }\nLAB_0004d014:\n        if (*(int *)(iVar5 + 4) == -1) {\n          return 0;\n        }\n        piVar6 = (int *)(iVar5 + 4);\n        DataMemoryBarrier(0xb);\n        do {\n          iVar3 = *piVar6 + -1;\n          bVar1 = (bool)hasExclusiveAccess(piVar6);\n        } while (!bVar1);\n        *piVar6 = iVar3;\n        goto LAB_0004d134;\n      }\n      goto LAB_0004ce4c;\n    }\n    if (iVar5 != 0x100) goto LAB_0004d14c;\n    pvVar7 = *(void **)(param_1 + 0x40);\n    sVar8 = *(size_t *)(param_1 + 0x44);\n    if (((param_2 & 0x10) == 0) && (pvVar2 = memchr(pvVar7,0,sVar8), pvVar2 != (void *)0x0)) {\n      FUN_0004c0cc(param_3,param_1,0xb,\"\\\\u0000 is not allowed without JSON_ALLOW_NUL\");\n      return 0;\n    }\n    iVar5 = FUN_0004e6f8(pvVar7,sVar8);\n    *(undefined4 *)(param_1 + 0x40) = 0;\n    *(undefined4 *)(param_1 + 0x44) = 0;\n  }\n  else if (iVar5 == 0x103) {\n    iVar5 = FUN_0004eb48();\n  }\n  else if (iVar5 < 0x103) {\n    iVar5 = FUN_0004ea14((int)*(undefined8 *)(param_1 + 0x40));\n  }\n  else if (iVar5 == 0x104) {\n    iVar5 = FUN_0004eb54();\n  }\n  else {\n    if (iVar5 != 0x105) goto LAB_0004d14c;\n    iVar5 = FUN_0004eb60();\n  }\n  if (iVar5 == 0) {\n    return 0;\n  }\nLAB_0004ce4c:\n  *(int *)(param_1 + 0x38) = *(int *)(param_1 + 0x38) + -1;\n  return iVar5;\n}\n\n",
    "FUN_0004d288": "\nint FUN_0004d288(int param_1,uint param_2,int param_3)\n\n{\n  bool bVar1;\n  int iVar2;\n  int iVar3;\n  int *piVar4;\n  \n  *(undefined4 *)(param_1 + 0x38) = 0;\n  FUN_0004c5cc(param_1,param_3);\n  if (((param_2 & 4) == 0) && ((*(uint *)(param_1 + 0x3c) & 0xffffffdf) != 0x5b)) {\n    FUN_0004c0cc(param_3,param_1,8,\"\\'[\\' or \\'{\\' expected\");\n    return 0;\n  }\n  iVar2 = FUN_0004cde4(param_1,param_2,param_3);\n  if (iVar2 != 0) {\n    if (((param_2 & 2) != 0) || (FUN_0004c5cc(param_1,param_3), *(int *)(param_1 + 0x3c) == 0)) {\n      if (param_3 == 0) {\n        return iVar2;\n      }\n      *(undefined4 *)(param_3 + 8) = *(undefined4 *)(param_1 + 0x24);\n      return iVar2;\n    }\n    FUN_0004c0cc(param_3,param_1,7,\"end of file expected\");\n    if (*(int *)(iVar2 + 4) != -1) {\n      piVar4 = (int *)(iVar2 + 4);\n      DataMemoryBarrier(0xb);\n      do {\n        iVar3 = *piVar4;\n        bVar1 = (bool)hasExclusiveAccess(piVar4);\n      } while (!bVar1);\n      *piVar4 = iVar3 + -1;\n      if (iVar3 + -1 == 0) {\n        FUN_0004eb6c(iVar2);\n        return 0;\n      }\n    }\n  }\n  return 0;\n}\n\n",
    "FUN_0004d38c": "\nundefined4 FUN_0004d38c(int param_1,undefined4 param_2,undefined4 param_3)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  int local_68;\n  undefined4 local_64;\n  undefined *local_60;\n  int *local_5c;\n  undefined local_58;\n  undefined4 local_50;\n  undefined4 local_4c;\n  undefined4 local_48;\n  undefined4 local_44;\n  undefined4 local_3c;\n  undefined auStack_38 [12];\n  undefined4 local_2c;\n  undefined4 local_24;\n  \n  FUN_0004f90c(param_3,\"<string>\");\n  if (param_1 == 0) {\n    FUN_0004c0cc(param_3,0,4,\"wrong arguments\");\n    uVar2 = 0;\n  }\n  else {\n    uVar2 = 0;\n    local_60 = &LAB_0004c028;\n    local_64 = 0;\n    local_58 = 0;\n    local_50 = 0;\n    local_4c = 0;\n    local_44 = 0;\n    local_3c = 0;\n    local_48 = 1;\n    local_68 = param_1;\n    local_5c = &local_68;\n    iVar1 = FUN_0004d954(auStack_38);\n    if (iVar1 == 0) {\n      local_24 = 0xffffffff;\n      local_2c = param_2;\n      uVar2 = FUN_0004d288(&local_60,param_2,param_3);\n      FUN_0004c1fc(&local_60);\n    }\n  }\n  return uVar2;\n}\n\n",
    "FUN_0004d454": "\nundefined4 FUN_0004d454(int param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  int local_6c;\n  undefined4 local_68;\n  undefined4 local_64;\n  undefined *local_60;\n  int *local_5c;\n  undefined local_58;\n  undefined4 local_50;\n  undefined4 local_4c;\n  undefined4 local_48;\n  undefined4 local_44;\n  undefined4 local_3c;\n  undefined auStack_38 [12];\n  undefined4 local_2c;\n  undefined4 local_24;\n  \n  FUN_0004f90c(param_4,\"<buffer>\");\n  if (param_1 == 0) {\n    FUN_0004c0cc(param_4,0,4,\"wrong arguments\");\n    uVar2 = 0;\n  }\n  else {\n    uVar2 = 0;\n    local_5c = &local_6c;\n    local_60 = &LAB_0004c04c;\n    local_64 = 0;\n    local_58 = 0;\n    local_50 = 0;\n    local_4c = 0;\n    local_44 = 0;\n    local_3c = 0;\n    local_48 = 1;\n    local_6c = param_1;\n    local_68 = param_2;\n    iVar1 = FUN_0004d954(auStack_38);\n    if (iVar1 == 0) {\n      local_24 = 0xffffffff;\n      local_2c = param_3;\n      uVar2 = FUN_0004d288(&local_60,param_3,param_4);\n      FUN_0004c1fc(&local_60);\n    }\n  }\n  return uVar2;\n}\n\n",
    "FUN_0004d528": "\nundefined4 FUN_0004d528(int param_1,undefined4 param_2,undefined4 param_3)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  char *pcVar3;\n  code *local_60;\n  int local_5c;\n  undefined local_58;\n  undefined4 local_50;\n  undefined4 local_4c;\n  undefined4 local_48;\n  undefined4 local_44;\n  undefined4 local_3c;\n  undefined auStack_38 [12];\n  undefined4 local_2c;\n  undefined4 local_24;\n  \n  pcVar3 = \"<stdin>\";\n  if (stdin != param_1) {\n    pcVar3 = \"<stream>\";\n  }\n  FUN_0004f90c(param_3,pcVar3);\n  if (param_1 == 0) {\n    FUN_0004c0cc(param_3,0,4,\"wrong arguments\");\n    uVar2 = 0;\n  }\n  else {\n    uVar2 = 0;\n    local_60 = fgetc;\n    local_58 = 0;\n    local_50 = 0;\n    local_4c = 0;\n    local_44 = 0;\n    local_3c = 0;\n    local_48 = 1;\n    local_5c = param_1;\n    iVar1 = FUN_0004d954(auStack_38);\n    if (iVar1 == 0) {\n      local_24 = 0xffffffff;\n      local_2c = param_2;\n      uVar2 = FUN_0004d288(&local_60,param_2,param_3);\n      FUN_0004c1fc(&local_60);\n    }\n  }\n  return uVar2;\n}\n\n",
    "FUN_0004d6e4": "\nundefined4 FUN_0004d6e4(char *param_1,undefined4 param_2,undefined4 param_3)\n\n{\n  FILE *__stream;\n  undefined4 uVar1;\n  int *piVar2;\n  char *pcVar3;\n  \n  FUN_0004f90c(param_3,param_1);\n  if (param_1 == (char *)0x0) {\n    FUN_0004c0cc(param_3,0,4,\"wrong arguments\");\n    uVar1 = 0;\n  }\n  else {\n    __stream = fopen64(param_1,\"rb\");\n    if (__stream == (FILE *)0x0) {\n      piVar2 = __errno_location();\n      pcVar3 = strerror(*piVar2);\n      FUN_0004c0cc(param_3,0,3,\"unable to open %s: %s\",param_1,pcVar3);\n      uVar1 = 0;\n    }\n    else {\n      uVar1 = FUN_0004d528(__stream,param_2,param_3);\n      fclose(__stream);\n    }\n  }\n  return uVar1;\n}\n\n",
    "FUN_0004d79c": "\nundefined4 FUN_0004d79c(int param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined *local_470;\n  undefined *local_46c;\n  undefined local_468;\n  undefined4 local_460;\n  undefined4 local_45c;\n  undefined4 local_458;\n  undefined4 local_454;\n  undefined4 local_44c;\n  undefined auStack_448 [12];\n  undefined4 local_43c;\n  undefined4 local_434;\n  undefined auStack_428 [1032];\n  int local_20;\n  undefined4 local_1c;\n  \n  memset(auStack_428,0,0x410);\n  local_20 = param_1;\n  local_1c = param_2;\n  FUN_0004f90c(param_4,\"<callback>\");\n  if (param_1 == 0) {\n    FUN_0004c0cc(param_4,0,4,\"wrong arguments\");\n    uVar2 = 0;\n  }\n  else {\n    uVar2 = 0;\n    local_46c = auStack_428;\n    local_470 = &LAB_0004c070;\n    local_468 = 0;\n    local_460 = 0;\n    local_45c = 0;\n    local_454 = 0;\n    local_44c = 0;\n    local_458 = 1;\n    iVar1 = FUN_0004d954(auStack_448);\n    if (iVar1 == 0) {\n      local_434 = 0xffffffff;\n      local_43c = param_3;\n      uVar2 = FUN_0004d288(&local_470,param_3,param_4);\n      FUN_0004c1fc(&local_470);\n    }\n  }\n  return uVar2;\n}\n\n",
    "FUN_0004d880": "\nvoid FUN_0004d880(int param_1)\n\n{\n  if (param_1 == 0) {\n    return;\n  }\n                    /* WARNING: Could not recover jumptable at 0x0004d894. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*DAT_0007f568)();\n  return;\n}\n\n",
    "FUN_0004d898": "\nvoid FUN_0004d898(int param_1)\n\n{\n  if (param_1 == 0) {\n    return;\n  }\n  (*DAT_0007f56c)();\n  return;\n}\n\n",
    "FUN_0004d8b0": "\nvoid * FUN_0004d8b0(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)(param_2 + 1);\n  if ((__dest != (void *)0x0) && (__dest = (void *)(*DAT_0007f568)(__dest), __dest != (void *)0x0))\n  {\n    memcpy(__dest,param_1,param_2);\n    *(undefined *)((int)__dest + param_2) = 0;\n  }\n  return __dest;\n}\n\n",
    "FUN_0004d8fc": "\nvoid FUN_0004d8fc(char *param_1)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  FUN_0004d8b0(param_1,sVar1);\n  return;\n}\n\n",
    "FUN_0004d954": "\nundefined4 FUN_0004d954(undefined4 *param_1)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  \n  param_1[2] = 0x10;\n  param_1[1] = 0;\n  puVar1 = (undefined *)FUN_0004d880();\n  *param_1 = puVar1;\n  if (puVar1 == (undefined *)0x0) {\n    uVar2 = 0xffffffff;\n  }\n  else {\n    *puVar1 = 0;\n    uVar2 = 0;\n  }\n  return uVar2;\n}\n\n",
    "FUN_0004d988": "\nvoid FUN_0004d988(int *param_1)\n\n{\n  if (*param_1 != 0) {\n    FUN_0004d898();\n  }\n  param_1[2] = 0;\n  param_1[1] = 0;\n  *param_1 = 0;\n  return;\n}\n\n",
    "FUN_0004d9b4": "\nvoid FUN_0004d9b4(undefined4 *param_1)\n\n{\n  param_1[1] = 0;\n  *(undefined *)*param_1 = 0;\n  return;\n}\n\n",
    "FUN_0004d9c8": "\nundefined4 FUN_0004d9c8(undefined4 *param_1)\n\n{\n  return *param_1;\n}\n\n",
    "FUN_0004d9e4": "\nundefined4 FUN_0004d9e4(void **param_1,void *param_2,size_t param_3)\n\n{\n  void *pvVar1;\n  void *pvVar2;\n  void *pvVar3;\n  \n  pvVar3 = param_1[2];\n  pvVar1 = param_1[1];\n  if (param_3 < (uint)((int)pvVar3 - (int)pvVar1)) {\n    pvVar3 = *param_1;\nLAB_0004da78:\n    memcpy((void *)((int)pvVar3 + (int)pvVar1),param_2,param_3);\n    pvVar1 = param_1[1];\n    param_1[1] = (void *)(param_3 + (int)pvVar1);\n    *(undefined *)((int)*param_1 + (int)(void *)(param_3 + (int)pvVar1)) = 0;\n    return 0;\n  }\n  if ((((uint)(param_3 == 0xffffffff) | (uint)pvVar3 >> 0x1f) == 0) &&\n     (pvVar1 <= (void *)(-2 - param_3))) {\n    pvVar2 = (void *)(param_3 + 1 + (int)pvVar1);\n    if (pvVar2 < (void *)((int)pvVar3 << 1)) {\n      pvVar2 = (void *)((int)pvVar3 << 1);\n    }\n    pvVar3 = (void *)FUN_0004d880(pvVar2);\n    if (pvVar3 != (void *)0x0) {\n      memcpy(pvVar3,*param_1,(size_t)param_1[1]);\n      FUN_0004d898(*param_1);\n      pvVar1 = param_1[1];\n      *param_1 = pvVar3;\n      param_1[2] = pvVar2;\n      goto LAB_0004da78;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
    "FUN_0004dab0": "\nvoid FUN_0004dab0(undefined4 param_1,undefined param_2)\n\n{\n  undefined local_9 [9];\n  \n  local_9[0] = param_2;\n  FUN_0004d9e4(param_1,local_9,1);\n  return;\n}\n\n",
    "FUN_0004dad4": "\nundefined FUN_0004dad4(int *param_1)\n\n{\n  undefined uVar1;\n  int iVar2;\n  \n  if (param_1[1] == 0) {\n    uVar1 = 0;\n  }\n  else {\n    iVar2 = param_1[1] + -1;\n    param_1[1] = iVar2;\n    uVar1 = *(undefined *)(*param_1 + iVar2);\n    *(undefined *)(*param_1 + iVar2) = 0;\n  }\n  return uVar1;\n}\n\n",
    "FUN_0004db00": "\nundefined4 FUN_0004db00(char **param_1,double *param_2)\n\n{\n  char cVar1;\n  lconv *plVar2;\n  char *pcVar3;\n  int *piVar4;\n  undefined4 uVar5;\n  char *__s;\n  double dVar6;\n  char *local_1c [2];\n  \n  plVar2 = localeconv();\n  __s = *param_1;\n  cVar1 = *plVar2->decimal_point;\n  if ((cVar1 != '.') && (pcVar3 = strchr(__s,0x2e), pcVar3 != (char *)0x0)) {\n    *pcVar3 = cVar1;\n    __s = *param_1;\n  }\n  piVar4 = __errno_location();\n  *piVar4 = 0;\n  dVar6 = strtod(__s,local_1c);\n  if (local_1c[0] == *param_1 + (int)param_1[1]) {\n    if (((dVar6 == 1.797693134862316e+308 || dVar6 < 1.797693134862316e+308 != NAN(dVar6)) &&\n        (-1.797693134862316e+308 <= dVar6)) || (*piVar4 != 0x22)) {\n      uVar5 = 0;\n      *param_2 = dVar6;\n    }\n    else {\n      uVar5 = 0xffffffff;\n    }\n    return uVar5;\n  }\n                    /* WARNING: Subroutine does not return */\n  __assert_fail(\"end == strbuffer->value + strbuffer->length\",\"strconv.c\",0x4e,\"jsonp_strtod\");\n}\n\n",
    "FUN_0004dbf0": "\nuint FUN_0004dbf0(char *param_1,uint param_2,int param_3)\n\n{\n  char cVar1;\n  uint uVar2;\n  lconv *plVar3;\n  char *pcVar4;\n  char *pcVar5;\n  size_t __n;\n  \n  if (param_3 == 0) {\n    param_3 = 0x11;\n  }\n  uVar2 = snprintf(param_1,param_2,\"%.*g\",param_3);\n  if (param_2 <= uVar2) {\n    return 0xffffffff;\n  }\n  plVar3 = localeconv();\n  if (((byte)*plVar3->decimal_point != 0x2e) &&\n     (pcVar4 = strchr(param_1,(uint)(byte)*plVar3->decimal_point), pcVar4 != (char *)0x0)) {\n    *pcVar4 = '.';\n  }\n  pcVar5 = strchr(param_1,0x2e);\n  pcVar4 = strchr(param_1,0x65);\n  if (pcVar5 == (char *)0x0) {\n    if (pcVar4 != (char *)0x0) goto LAB_0004dc7c;\n    if (param_2 <= uVar2 + 3) {\n      return 0xffffffff;\n    }\n    pcVar4 = param_1 + uVar2;\n    *pcVar4 = '.';\n    uVar2 = uVar2 + 2;\n    pcVar4[1] = '0';\n    param_1[uVar2] = '\\0';\n    pcVar4 = strchr(param_1,0x65);\n  }\n  if (pcVar4 == (char *)0x0) {\n    return uVar2;\n  }\nLAB_0004dc7c:\n  pcVar5 = pcVar4 + 2;\n  cVar1 = pcVar4[2];\n  if (pcVar4[1] == '-') {\n    pcVar4 = pcVar5;\n    if (cVar1 == '0') goto LAB_0004dc9c;\n  }\n  else {\n    pcVar4 = pcVar4 + 1;\n    while (cVar1 == '0') {\nLAB_0004dc9c:\n      pcVar5 = pcVar5 + 1;\n      cVar1 = *pcVar5;\n    }\n    if (pcVar5 != pcVar4) {\n      __n = uVar2 - ((int)pcVar5 - (int)param_1);\n      uVar2 = uVar2 - ((int)pcVar5 - (int)pcVar4);\n      memmove(pcVar4,pcVar5,__n);\n    }\n  }\n  return uVar2;\n}\n\n",
    "FUN_0004dd30": "\nundefined4 FUN_0004dd30(int param_1,byte *param_2,undefined4 *param_3)\n\n{\n  byte bVar1;\n  \n  if (param_1 < 0) {\n    return 0xffffffff;\n  }\n  bVar1 = (byte)param_1;\n  if (param_1 < 0x80) {\n    *param_2 = bVar1;\n    *param_3 = 1;\n    return 0;\n  }\n  if (param_1 < 0x800) {\n    *param_2 = (char)(param_1 >> 6) - 0x40;\n    param_2[1] = (bVar1 & 0x3f) + 0x80;\n    *param_3 = 2;\n    return 0;\n  }\n  if (0xffff < param_1) {\n    if (param_1 < 0x110000) {\n      *param_2 = (char)(param_1 >> 0x12) - 0x10;\n      param_2[1] = (byte)((uint)(param_1 << 0xe) >> 0x1a) + 0x80;\n      param_2[2] = (byte)((uint)(param_1 << 0x14) >> 0x1a) + 0x80;\n      param_2[3] = (bVar1 & 0x3f) + 0x80;\n      *param_3 = 4;\n      return 0;\n    }\n    return 0xffffffff;\n  }\n  *param_2 = (char)(param_1 >> 0xc) - 0x20;\n  param_2[1] = (byte)((uint)(param_1 << 0x14) >> 0x1a) + 0x80;\n  param_2[2] = (bVar1 & 0x3f) + 0x80;\n  *param_3 = 3;\n  return 0;\n}\n\n",
    "FUN_0004de1c": "\nundefined4 FUN_0004de1c(uint param_1)\n\n{\n  undefined4 uVar1;\n  \n  if ((param_1 & 0x80) == 0) {\n    return 1;\n  }\n  if ((param_1 ^ 0x80) < 0x42) {\n    return 0;\n  }\n  if ((param_1 + 0x3e & 0xff) < 0x1e) {\n    return 2;\n  }\n  if ((param_1 + 0x20 & 0xff) < 0x10) {\n    return 3;\n  }\n  if ((param_1 + 0x10 & 0xff) < 5) {\n    uVar1 = 4;\n  }\n  else {\n    uVar1 = 0;\n  }\n  return uVar1;\n}\n\n",
    "FUN_0004de88": "\nundefined4 FUN_0004de88(byte *param_1,uint param_2,uint *param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  bool bVar4;\n  \n  uVar3 = (uint)*param_1;\n  if (param_2 == 2) {\n    uVar3 = uVar3 & 0x1f;\n  }\n  else if (param_2 == 3) {\n    uVar3 = uVar3 & 0xf;\n  }\n  else {\n    if (param_2 != 4) {\n      return 0;\n    }\n    uVar3 = uVar3 & 7;\n  }\n  uVar1 = (uint)param_1[1];\n  if ((uVar1 ^ 0x80) < 0x40) {\n    param_1 = param_1 + 1;\n    uVar2 = 1;\n    do {\n      uVar2 = uVar2 + 1;\n      uVar3 = (uVar1 & 0x3f) + uVar3 * 0x40;\n      if (param_2 <= uVar2) {\n        if (0x10ffff < (int)uVar3) {\n          return 0;\n        }\n        if (uVar3 - 0xd800 < 0x800) {\n          return 0;\n        }\n        bVar4 = uVar3 == 0x7f;\n        if ((int)uVar3 < 0x80) {\n          bVar4 = param_2 == 2;\n        }\n        if (bVar4) {\n          return 0;\n        }\n        if ((int)uVar3 < 0x800 && param_2 == 3) {\n          return 0;\n        }\n        if ((int)uVar3 < 0x10000 && param_2 == 4) {\n          return 0;\n        }\n        if (param_3 != (uint *)0x0) {\n          *param_3 = uVar3;\n        }\n        return 1;\n      }\n      param_1 = param_1 + 1;\n      uVar1 = (uint)*param_1;\n    } while ((uVar1 ^ 0x80) < 0x40);\n  }\n  return 0;\n}\n\n",
    "FUN_0004df70": "\nbyte * FUN_0004df70(byte *param_1,int param_2,uint *param_3)\n\n{\n  uint uVar1;\n  int iVar2;\n  uint uVar3;\n  undefined8 uVar4;\n  uint uStack_14;\n  \n  if (param_2 == 0) {\n    return param_1;\n  }\n  uVar3 = (uint)*param_1;\n  uVar4 = FUN_0004de1c(uVar3);\n  uVar1 = (uint)uVar4;\n  if ((uVar1 != 0) &&\n     ((uVar1 == 1 ||\n      ((uVar1 <= (uint)((ulonglong)uVar4 >> 0x20) &&\n       (iVar2 = FUN_0004de88(param_1,uVar1,&uStack_14), uVar3 = uStack_14, iVar2 != 0)))))) {\n    uStack_14 = uVar3;\n    if (param_3 != (uint *)0x0) {\n      *param_3 = uStack_14;\n    }\n    return param_1 + uVar1;\n  }\n  return (byte *)0x0;\n}\n\n",
    "FUN_0004dfec": "\nundefined4 FUN_0004dfec(int param_1,uint param_2)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  undefined8 uVar4;\n  \n  if (param_2 != 0) {\n    uVar3 = 0;\n    uVar2 = param_2;\n    do {\n      uVar1 = FUN_0004de1c(*(undefined *)(param_1 + uVar3),uVar2);\n      if (uVar1 == 0) {\n        return 0;\n      }\n      uVar2 = uVar1;\n      if (1 < uVar1) {\n        if (param_2 - uVar3 < uVar1) {\n          return 0;\n        }\n        uVar4 = FUN_0004de88(param_1 + uVar3,uVar1,0);\n        uVar2 = (uint)((ulonglong)uVar4 >> 0x20);\n        uVar3 = (uVar1 + uVar3) - 1;\n        if ((int)uVar4 == 0) {\n          return 0;\n        }\n      }\n      uVar3 = uVar3 + 1;\n    } while (uVar3 < param_2);\n  }\n  return 1;\n}\n\n",
    "FUN_0004e0b8": "\nvoid * FUN_0004e0b8(int param_1,int param_2,int param_3)\n\n{\n  void *__dest;\n  void *__src;\n  uint uVar1;\n  uint uVar2;\n  \n  uVar2 = *(uint *)(param_1 + 8);\n  __src = *(void **)(param_1 + 0x10);\n  if (uVar2 < (uint)(param_2 + *(int *)(param_1 + 0xc))) {\n    uVar1 = uVar2 << 1;\n    if (uVar1 < uVar2 + param_2) {\n      uVar1 = uVar2 + param_2;\n    }\n    __dest = (void *)FUN_0004d880(uVar1 << 2);\n    if (__dest == (void *)0x0) {\n      __src = (void *)0x0;\n    }\n    else {\n      *(uint *)(param_1 + 8) = uVar1;\n      *(void **)(param_1 + 0x10) = __dest;\n      if (param_3 != 0) {\n        memcpy(__dest,__src,*(int *)(param_1 + 0xc) << 2);\n        FUN_0004d898(__src);\n        return *(void **)(param_1 + 0x10);\n      }\n    }\n  }\n  return __src;\n}\n\n",
    "FUN_0004e144": "\nundefined4 * FUN_0004e144(int param_1,undefined4 param_2,int param_3)\n\n{\n  undefined4 *puVar1;\n  \n  if ((param_1 != 0) && ((param_3 != 0 || (param_1 = FUN_0004d8b0(), param_1 != 0)))) {\n    puVar1 = (undefined4 *)FUN_0004d880(0x10);\n    if (puVar1 != (undefined4 *)0x0) {\n      puVar1[2] = param_1;\n      puVar1[3] = param_2;\n      *puVar1 = 2;\n      puVar1[1] = 1;\n      return puVar1;\n    }\n    FUN_0004d898(param_1);\n    return (undefined4 *)0x0;\n  }\n  return (undefined4 *)0x0;\n}\n\n",
    "FUN_0004e1b0": "\nundefined4 * FUN_0004e1b0(void)\n\n{\n  undefined4 *puVar1;\n  int iVar2;\n  \n  puVar1 = (undefined4 *)FUN_0004d880(0x24);\n  if (puVar1 != (undefined4 *)0x0) {\n    if (DAT_005051c0 == 0) {\n      FUN_0004bf2c();\n    }\n    puVar1[1] = 1;\n    *puVar1 = 0;\n    iVar2 = FUN_0004b91c(puVar1 + 2);\n    if (iVar2 != 0) {\n      FUN_0004d898(puVar1);\n      puVar1 = (undefined4 *)0x0;\n    }\n  }\n  return puVar1;\n}\n\n",
    "FUN_0004e218": "\nint FUN_0004e218(int *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (int *)0x0) {\n    if (*param_1 == 0) {\n      iVar1 = param_1[2];\n    }\n    else {\n      iVar1 = 0;\n    }\n    return iVar1;\n  }\n  return 0;\n}\n\n",
    "FUN_0004e234": "\nundefined4 FUN_0004e234(int *param_1,int param_2)\n\n{\n  undefined4 uVar1;\n  \n  if ((param_1 != (int *)0x0 && param_2 != 0) && (*param_1 == 0)) {\n    uVar1 = FUN_0004bc44(param_1 + 2);\n    return uVar1;\n  }\n  return 0;\n}\n\n",
    "FUN_0004e25c": "\nbool FUN_0004e25c(int *param_1,int *param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  uint uVar4;\n  uint uVar5;\n  \n  iVar3 = *param_1;\n  if (iVar3 != *param_2) {\n    return false;\n  }\n  if (param_1 == param_2) {\n    return true;\n  }\n  switch(iVar3) {\n  case 0:\n    if (param_1[2] == param_2[2]) {\n      iVar3 = FUN_0004be20(param_1 + 2);\n      if (iVar3 != 0) {\n        while (iVar3 = FUN_0004beb0(), iVar3 != 0) {\n          iVar1 = FUN_0004beb8(iVar3 + -0x10);\n          if (iVar1 == 0) {\n            return true;\n          }\n          iVar2 = FUN_0004e234(param_2,iVar3);\n          if (iVar2 == 0) {\n            return false;\n          }\n          iVar1 = FUN_0004e25c(iVar1);\n          if (iVar1 == 0) {\n            return false;\n          }\n          if (*param_1 != 0) {\n            return true;\n          }\n          iVar3 = FUN_0004be98(param_1 + 2,iVar3 + -0x10);\n          if (iVar3 == 0) {\n            return true;\n          }\n        }\n      }\n      return true;\n    }\n    break;\n  case 1:\n    uVar5 = param_1[3];\n    if (uVar5 == param_2[3]) {\n      if (uVar5 == 0) {\n        return true;\n      }\n      uVar4 = 0;\n      iVar1 = iVar3;\n      while( true ) {\n        if ((iVar1 == 1) && (uVar4 < (uint)param_1[3])) {\n          iVar1 = *(int *)(param_1[4] + uVar4 * 4);\n        }\n        else {\n          iVar1 = 0;\n        }\n        if (iVar3 != 1) {\n          return false;\n        }\n        if ((uint)param_2[3] <= uVar4) {\n          return false;\n        }\n        if (*(int *)(param_2[4] + uVar4 * 4) == 0 || iVar1 == 0) break;\n        iVar3 = FUN_0004e25c();\n        if (iVar3 == 0) {\n          return false;\n        }\n        uVar4 = uVar4 + 1;\n        if (uVar5 == uVar4) {\n          return true;\n        }\n        iVar1 = *param_1;\n        iVar3 = *param_2;\n      }\n      return false;\n    }\n    break;\n  case 2:\n    if ((param_1[3] == param_2[3]) &&\n       (iVar3 = memcmp((void *)param_1[2],(void *)param_2[2],param_1[3]), iVar3 == 0)) {\n      return true;\n    }\n    break;\n  case 3:\n    return param_1[3] == param_2[3] && param_1[2] == param_2[2];\n  case 4:\n    return *(double *)(param_1 + 2) == *(double *)(param_2 + 2);\n  }\n  return false;\n}\n\n",
    "FUN_0004e49c": "\nundefined4 FUN_0004e49c(int *param_1)\n\n{\n  undefined4 uVar1;\n  \n  if ((param_1 != (int *)0x0) && (*param_1 == 0)) {\n    uVar1 = FUN_0004be20(param_1 + 2);\n    return uVar1;\n  }\n  return 0;\n}\n\n",
    "FUN_0004e4e8": "\nundefined4 FUN_0004e4e8(int *param_1,int param_2)\n\n{\n  undefined4 uVar1;\n  \n  if ((param_1 != (int *)0x0) && (*param_1 == 0 && param_2 != 0)) {\n    uVar1 = FUN_0004be98(param_1 + 2);\n    return uVar1;\n  }\n  return 0;\n}\n\n",
    "FUN_0004e51c": "\nvoid FUN_0004e51c(int param_1)\n\n{\n  if (param_1 == 0) {\n    return;\n  }\n  FUN_0004beb0();\n  return;\n}\n\n",
    "FUN_0004e528": "\nvoid FUN_0004e528(int param_1)\n\n{\n  if (param_1 == 0) {\n    return;\n  }\n  FUN_0004beb8();\n  return;\n}\n\n",
    "FUN_0004e540": "\nundefined4 * FUN_0004e540(void)\n\n{\n  undefined4 *puVar1;\n  int iVar2;\n  \n  puVar1 = (undefined4 *)FUN_0004d880(0x14);\n  if (puVar1 != (undefined4 *)0x0) {\n    *puVar1 = 1;\n    puVar1[1] = 1;\n    puVar1[3] = 0;\n    puVar1[2] = 8;\n    iVar2 = FUN_0004d880(0x20);\n    puVar1[4] = iVar2;\n    if (iVar2 == 0) {\n      FUN_0004d898(puVar1);\n      puVar1 = (undefined4 *)0x0;\n    }\n  }\n  return puVar1;\n}\n\n",
    "FUN_0004e5a0": "\nint FUN_0004e5a0(int *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (int *)0x0) {\n    if (*param_1 == 1) {\n      iVar1 = param_1[3];\n    }\n    else {\n      iVar1 = 0;\n    }\n    return iVar1;\n  }\n  return 0;\n}\n\n",
    "FUN_0004e5bc": "\nundefined4 FUN_0004e5bc(int *param_1,uint param_2)\n\n{\n  if (param_1 == (int *)0x0) {\n    return 0;\n  }\n  if ((*param_1 == 1) && (param_2 < (uint)param_1[3])) {\n    return *(undefined4 *)(param_1[4] + param_2 * 4);\n  }\n  return 0;\n}\n\n",
    "FUN_0004e5f0": "\nundefined4 FUN_0004e5f0(int *param_1,int *param_2)\n\n{\n  bool bVar1;\n  int iVar2;\n  size_t __n;\n  void *__src;\n  int *piVar3;\n  uint uVar4;\n  \n  if ((((param_1 != (int *)0x0) && (*param_1 == 1 && param_2 != (int *)0x0)) && (*param_2 == 1)) &&\n     (iVar2 = FUN_0004e0b8(param_1,param_2[3]), iVar2 != 0)) {\n    __n = param_2[3];\n    __src = (void *)param_2[4];\n    if (__n != 0) {\n      uVar4 = 0;\n      do {\n        iVar2 = *(int *)((int)__src + uVar4 * 4);\n        if ((iVar2 != 0) && (piVar3 = (int *)(iVar2 + 4), *(int *)(iVar2 + 4) != -1)) {\n          do {\n            bVar1 = (bool)hasExclusiveAccess(piVar3);\n          } while (!bVar1);\n          *piVar3 = *piVar3 + 1;\n          DataMemoryBarrier(0xb);\n          __n = param_2[3];\n          __src = (void *)param_2[4];\n        }\n        uVar4 = uVar4 + 1;\n      } while (uVar4 < __n);\n      __n = __n << 2;\n    }\n    memcpy((void *)(param_1[4] + param_1[3] * 4),__src,__n);\n    param_1[3] = param_1[3] + param_2[3];\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
    "FUN_0004e6f8": "\nvoid FUN_0004e6f8(undefined4 param_1,undefined4 param_2)\n\n{\n  FUN_0004e144(param_1,param_2,1);\n  return;\n}\n\n",
    "FUN_0004e700": "\nundefined4 FUN_0004e700(int param_1,undefined4 param_2)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  \n  if (param_1 == 0) {\n    return 0;\n  }\n  iVar1 = FUN_0004dfec();\n  if (iVar1 != 0) {\n    uVar2 = FUN_0004e144(param_1,param_2,0);\n    return uVar2;\n  }\n  return 0;\n}\n\n",
    "FUN_0004e744": "\nvoid FUN_0004e744(char *param_1)\n\n{\n  size_t sVar1;\n  \n  if (param_1 == (char *)0x0) {\n    return;\n  }\n  sVar1 = strlen(param_1);\n  FUN_0004e700(param_1,sVar1);\n  return;\n}\n\n",
    "FUN_0004e768": "\nint FUN_0004e768(int *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (int *)0x0) {\n    if (*param_1 == 2) {\n      iVar1 = param_1[2];\n    }\n    else {\n      iVar1 = 0;\n    }\n    return iVar1;\n  }\n  return 0;\n}\n\n",
    "FUN_0004e784": "\nint FUN_0004e784(int *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (int *)0x0) {\n    if (*param_1 == 2) {\n      iVar1 = param_1[3];\n    }\n    else {\n      iVar1 = 0;\n    }\n    return iVar1;\n  }\n  return 0;\n}\n\n",
    "FUN_0004e7a0": "\nundefined4 FUN_0004e7a0(int *param_1,int param_2,int param_3)\n\n{\n  int iVar1;\n  \n  if (((param_1 != (int *)0x0) && (*param_1 == 2 && param_2 != 0)) &&\n     (iVar1 = FUN_0004d8b0(param_2,param_3), iVar1 != 0)) {\n    FUN_0004d898(param_1[2]);\n    param_1[2] = iVar1;\n    param_1[3] = param_3;\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
    "FUN_0004e804": "\nundefined4 FUN_0004e804(undefined4 param_1,char *param_2)\n\n{\n  size_t sVar1;\n  undefined4 uVar2;\n  \n  if (param_2 != (char *)0x0) {\n    sVar1 = strlen(param_2);\n    uVar2 = FUN_0004e7a0(param_1,param_2,sVar1);\n    return uVar2;\n  }\n  return 0xffffffff;\n}\n\n",
    "FUN_0004e838": "\nundefined4 FUN_0004e838(undefined4 param_1,int param_2,undefined4 param_3)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  \n  if ((param_2 != 0) && (iVar1 = FUN_0004dfec(param_2,param_3), iVar1 != 0)) {\n    uVar2 = FUN_0004e7a0(param_1,param_2,param_3);\n    return uVar2;\n  }\n  return 0xffffffff;\n}\n\n",
    "FUN_0004e87c": "\nundefined4 FUN_0004e87c(undefined4 param_1,char *param_2)\n\n{\n  size_t sVar1;\n  undefined4 uVar2;\n  \n  if (param_2 != (char *)0x0) {\n    sVar1 = strlen(param_2);\n    uVar2 = FUN_0004e838(param_1,param_2,sVar1);\n    return uVar2;\n  }\n  return 0xffffffff;\n}\n\n",
    "FUN_0004e8b0": "\nundefined4 FUN_0004e8b0(char *param_1,__gnuc_va_list param_2)\n\n{\n  int iVar1;\n  char *__s;\n  int iVar2;\n  undefined4 uVar3;\n  \n  iVar1 = vsnprintf((char *)0x0,0,param_1,param_2);\n  if (iVar1 != 0) {\n    __s = (char *)FUN_0004d880(iVar1 + 1U);\n    if (__s == (char *)0x0) {\n      uVar3 = 0;\n    }\n    else {\n      vsnprintf(__s,iVar1 + 1U,param_1,param_2);\n      iVar2 = FUN_0004dfec(__s,iVar1);\n      if (iVar2 == 0) {\n        FUN_0004d898(__s);\n        uVar3 = 0;\n      }\n      else {\n        uVar3 = FUN_0004e144(__s,iVar1,1);\n      }\n    }\n    return uVar3;\n  }\n  uVar3 = FUN_0004e700(\"\",0);\n  return uVar3;\n}\n\n",
    "FUN_0004e960": "\nvoid FUN_0004e960(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined4 uStack_c;\n  undefined4 uStack_8;\n  undefined4 uStack_4;\n  \n  uStack_c = param_2;\n  uStack_8 = param_3;\n  uStack_4 = param_4;\n  FUN_0004e8b0(param_1,&uStack_c);\n  return;\n}\n\n",
    "FUN_0004e990": "\nvoid FUN_0004e990(undefined4 param_1,undefined4 param_2)\n\n{\n  undefined4 *puVar1;\n  \n  puVar1 = (undefined4 *)FUN_0004d880(0x10);\n  if (puVar1 == (undefined4 *)0x0) {\n    return;\n  }\n  puVar1[2] = param_1;\n  puVar1[3] = param_2;\n  *puVar1 = 3;\n  puVar1[1] = 1;\n  return;\n}\n\n",
    "FUN_0004e9c4": "\nundefined8 FUN_0004e9c4(int *param_1)\n\n{\n  if ((param_1 != (int *)0x0) && (*param_1 == 3)) {\n    return *(undefined8 *)(param_1 + 2);\n  }\n  return 0;\n}\n\n",
    "FUN_0004ea14": "\nundefined4 * FUN_0004ea14(undefined4 param_1,undefined4 param_2)\n\n{\n  undefined4 *puVar1;\n  double dVar2;\n  \n  if ((!NAN((double)CONCAT44(param_2,param_1)) && !NAN((double)CONCAT44(param_2,param_1))) &&\n     (dVar2 = ABS((double)CONCAT44(param_2,param_1)),\n     dVar2 == 1.797693134862316e+308 || dVar2 < 1.797693134862316e+308 != NAN(dVar2))) {\n    puVar1 = (undefined4 *)FUN_0004d880(0x10);\n    if (puVar1 != (undefined4 *)0x0) {\n      puVar1[2] = param_1;\n      puVar1[3] = param_2;\n      *puVar1 = 4;\n      puVar1[1] = 1;\n    }\n    return puVar1;\n  }\n  return (undefined4 *)0x0;\n}\n\n",
    "FUN_0004ea70": "\nundefined8 FUN_0004ea70(int *param_1)\n\n{\n  if ((param_1 != (int *)0x0) && (*param_1 == 4)) {\n    return *(undefined8 *)(param_1 + 2);\n  }\n  return 0;\n}\n\n",
    "FUN_0004eb2c": "\nundefined8 FUN_0004eb2c(int param_1)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = FUN_000600c4(*(undefined4 *)(param_1 + 8),*(undefined4 *)(param_1 + 0xc));\n  return uVar1;\n}\n\n",
    "FUN_0004eb48": "\nundefined * FUN_0004eb48(void)\n\n{\n  return &DAT_0007f570;\n}\n\n",
    "FUN_0004eb54": "\nundefined * FUN_0004eb54(void)\n\n{\n  return &DAT_0007f578;\n}\n\n",
    "FUN_0004eb60": "\nundefined * FUN_0004eb60(void)\n\n{\n  return &DAT_0007f580;\n}\n\n",
    "FUN_0004eb6c": "\nvoid FUN_0004eb6c(undefined4 *param_1)\n\n{\n  bool bVar1;\n  int iVar2;\n  uint uVar3;\n  int *piVar4;\n  int iVar5;\n  uint uVar6;\n  \n  if (param_1 == (undefined4 *)0x0) {\n    return;\n  }\n  switch(*param_1) {\n  case 0:\n    FUN_0004b998(param_1 + 2);\n    FUN_0004d898(param_1);\n    return;\n  case 1:\n    uVar3 = param_1[3];\n    iVar2 = param_1[4];\n    if (uVar3 != 0) {\n      uVar6 = 0;\n      do {\n        iVar5 = *(int *)(iVar2 + uVar6 * 4);\n        if ((iVar5 != 0) && (piVar4 = (int *)(iVar5 + 4), *(int *)(iVar5 + 4) != -1)) {\n          DataMemoryBarrier(0xb);\n          do {\n            iVar2 = *piVar4;\n            bVar1 = (bool)hasExclusiveAccess(piVar4);\n          } while (!bVar1);\n          *piVar4 = iVar2 + -1;\n          if (iVar2 + -1 == 0) {\n            FUN_0004eb6c(iVar5);\n          }\n          iVar2 = param_1[4];\n          uVar3 = param_1[3];\n        }\n        uVar6 = uVar6 + 1;\n      } while (uVar6 < uVar3);\n    }\n    break;\n  case 2:\n    iVar2 = param_1[2];\n    break;\n  case 3:\n  case 4:\n    goto switchD_0004eb80_caseD_3;\n  default:\n    return;\n  }\n  FUN_0004d898(iVar2);\nswitchD_0004eb80_caseD_3:\n  FUN_0004d898(param_1);\n  return;\n}\n\n",
    "FUN_0004ec38": "\nundefined4 FUN_0004ec38(int *param_1)\n\n{\n  bool bVar1;\n  int iVar2;\n  uint uVar3;\n  int *piVar4;\n  uint uVar5;\n  \n  if ((param_1 != (int *)0x0) && (*param_1 == 1)) {\n    uVar3 = param_1[3];\n    if (uVar3 != 0) {\n      uVar5 = 0;\n      do {\n        iVar2 = *(int *)(param_1[4] + uVar5 * 4);\n        if ((iVar2 != 0) && (piVar4 = (int *)(iVar2 + 4), *(int *)(iVar2 + 4) != -1)) {\n          DataMemoryBarrier(0xb);\n          do {\n            iVar2 = *piVar4;\n            bVar1 = (bool)hasExclusiveAccess(piVar4);\n          } while (!bVar1);\n          *piVar4 = iVar2 + -1;\n          if (iVar2 + -1 == 0) {\n            FUN_0004eb6c();\n          }\n          uVar3 = param_1[3];\n        }\n        uVar5 = uVar5 + 1;\n      } while (uVar5 < uVar3);\n    }\n    param_1[3] = 0;\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
    "FUN_0004ed60": "\nundefined4 FUN_0004ed60(int *param_1,uint param_2)\n\n{\n  bool bVar1;\n  int iVar2;\n  int *piVar3;\n  uint uVar4;\n  uint uVar5;\n  \n  if (((param_1 != (int *)0x0) && (*param_1 == 1)) && (uVar5 = param_1[3], param_2 < uVar5)) {\n    iVar2 = *(int *)(param_1[4] + param_2 * 4);\n    if ((iVar2 != 0) && (*(int *)(iVar2 + 4) != -1)) {\n      piVar3 = (int *)(iVar2 + 4);\n      DataMemoryBarrier(0xb);\n      do {\n        iVar2 = *piVar3;\n        bVar1 = (bool)hasExclusiveAccess(piVar3);\n      } while (!bVar1);\n      *piVar3 = iVar2 + -1;\n      if (iVar2 + -1 == 0) {\n        FUN_0004eb6c();\n      }\n      uVar5 = param_1[3];\n    }\n    uVar4 = uVar5 - 1;\n    if (param_2 < uVar4) {\n      memmove((void *)(param_1[4] + param_2 * 4),(void *)(param_1[4] + param_2 * 4 + 4),\n              (~param_2 + uVar5) * 4);\n      uVar4 = param_1[3] - 1;\n    }\n    param_1[3] = uVar4;\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
    "FUN_0004ee2c": "\nundefined4 FUN_0004ee2c(int *param_1,int param_2,int *param_3)\n\n{\n  bool bVar1;\n  int iVar2;\n  int *piVar3;\n  \n  if (param_3 != (int *)0x0) {\n    if ((param_1 == (int *)0x0 || param_2 == 0) || (*param_1 != 0 || param_3 == param_1)) {\n      if (param_3[1] == -1) {\n        return 0xffffffff;\n      }\n      piVar3 = param_3 + 1;\n      DataMemoryBarrier(0xb);\n      do {\n        iVar2 = *piVar3 + -1;\n        bVar1 = (bool)hasExclusiveAccess(piVar3);\n      } while (!bVar1);\n      *piVar3 = iVar2;\n    }\n    else {\n      iVar2 = FUN_0004b9b0(param_1 + 2);\n      if (iVar2 == 0) {\n        return 0;\n      }\n      if (param_3[1] == -1) {\n        return 0xffffffff;\n      }\n      piVar3 = param_3 + 1;\n      DataMemoryBarrier(0xb);\n      do {\n        iVar2 = *piVar3 + -1;\n        bVar1 = (bool)hasExclusiveAccess(piVar3);\n      } while (!bVar1);\n      *piVar3 = iVar2;\n    }\n    if (iVar2 == 0) {\n      FUN_0004eb6c(param_3);\n      return 0xffffffff;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
    "FUN_0004eee8": "\nundefined4 FUN_0004eee8(int *param_1,int *param_2)\n\n{\n  bool bVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  int *piVar5;\n  \n  if (((param_1 == (int *)0x0) || (*param_1 != 0 || param_2 == (int *)0x0)) || (*param_2 != 0)) {\n    return 0xffffffff;\n  }\n  iVar2 = FUN_0004be20(param_2 + 2);\n  if (iVar2 != 0) {\n    while (iVar2 = FUN_0004beb0(), iVar2 != 0) {\n      iVar3 = FUN_0004beb8(iVar2 + -0x10);\n      if (iVar3 == 0) {\n        return 0;\n      }\n      iVar4 = FUN_0004e234(param_1,iVar2);\n      if (iVar4 == 0) {\n        piVar5 = (int *)(iVar3 + 4);\n        if (*(int *)(iVar3 + 4) != -1) {\n          do {\n            bVar1 = (bool)hasExclusiveAccess(piVar5);\n          } while (!bVar1);\n          *piVar5 = *piVar5 + 1;\n          DataMemoryBarrier(0xb);\n        }\n        FUN_0004ee2c(param_1,iVar2,iVar3);\n      }\n      if (*param_2 != 0) {\n        return 0;\n      }\n      iVar2 = FUN_0004be98(param_2 + 2,iVar2 + -0x10);\n      if (iVar2 == 0) {\n        return 0;\n      }\n    }\n  }\n  return 0;\n}\n\n",
    "FUN_0004efd4": "\nundefined4 FUN_0004efd4(undefined4 param_1,char *param_2,int param_3)\n\n{\n  bool bVar1;\n  size_t sVar2;\n  int iVar3;\n  undefined4 uVar4;\n  int *piVar5;\n  \n  if (param_2 != (char *)0x0) {\n    sVar2 = strlen(param_2);\n    iVar3 = FUN_0004dfec(param_2,sVar2);\n    if (iVar3 != 0) {\n      uVar4 = FUN_0004ee2c(param_1,param_2,param_3);\n      return uVar4;\n    }\n  }\n  if ((param_3 != 0) && (*(int *)(param_3 + 4) != -1)) {\n    piVar5 = (int *)(param_3 + 4);\n    DataMemoryBarrier(0xb);\n    do {\n      iVar3 = *piVar5;\n      bVar1 = (bool)hasExclusiveAccess(piVar5);\n    } while (!bVar1);\n    *piVar5 = iVar3 + -1;\n    if (iVar3 + -1 == 0) {\n      FUN_0004eb6c(param_3);\n      return 0xffffffff;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
    "FUN_0004f068": "\nundefined4 FUN_0004f068(int *param_1,int *param_2)\n\n{\n  bool bVar1;\n  int iVar2;\n  int iVar3;\n  int *piVar4;\n  \n  if (((param_1 == (int *)0x0) || (*param_1 != 0 || param_2 == (int *)0x0)) || (*param_2 != 0)) {\n    return 0xffffffff;\n  }\n  iVar2 = FUN_0004be20(param_2 + 2);\n  if (iVar2 != 0) {\n    while (iVar2 = FUN_0004beb0(), iVar2 != 0) {\n      iVar3 = FUN_0004beb8(iVar2 + -0x10);\n      piVar4 = (int *)(iVar3 + 4);\n      if (iVar3 == 0) {\n        return 0;\n      }\n      if (*(int *)(iVar3 + 4) != -1) {\n        do {\n          bVar1 = (bool)hasExclusiveAccess(piVar4);\n        } while (!bVar1);\n        *piVar4 = *piVar4 + 1;\n        DataMemoryBarrier(0xb);\n      }\n      iVar3 = FUN_0004ee2c(param_1,iVar2);\n      if (iVar3 != 0) {\n        return 0xffffffff;\n      }\n      if (*param_2 != 0) {\n        return 0;\n      }\n      iVar2 = FUN_0004be98(param_2 + 2,iVar2 + -0x10);\n      if (iVar2 == 0) {\n        return 0;\n      }\n    }\n  }\n  return 0;\n}\n\n",
    "FUN_0004f148": "\nundefined4 FUN_0004f148(int *param_1,int *param_2)\n\n{\n  bool bVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  int *piVar5;\n  \n  if (((param_1 == (int *)0x0) || (*param_1 != 0 || param_2 == (int *)0x0)) || (*param_2 != 0)) {\n    return 0xffffffff;\n  }\n  iVar2 = FUN_0004be20(param_2 + 2);\n  if (iVar2 != 0) {\n    while (iVar2 = FUN_0004beb0(), iVar2 != 0) {\n      iVar4 = FUN_0004beb8(iVar2 + -0x10);\n      if (iVar4 == 0) {\n        return 0;\n      }\n      iVar3 = FUN_0004e234(param_1,iVar2);\n      if (iVar3 != 0) {\n        piVar5 = (int *)(iVar4 + 4);\n        if (*(int *)(iVar4 + 4) != -1) {\n          do {\n            bVar1 = (bool)hasExclusiveAccess(piVar5);\n          } while (!bVar1);\n          *piVar5 = *piVar5 + 1;\n          DataMemoryBarrier(0xb);\n        }\n        FUN_0004ee2c(param_1,iVar2,iVar4);\n      }\n      if (*param_2 != 0) {\n        return 0;\n      }\n      iVar2 = FUN_0004be98(param_2 + 2,iVar2 + -0x10);\n      if (iVar2 == 0) {\n        return 0;\n      }\n    }\n  }\n  return 0;\n}\n\n",
    "FUN_0004f238": "\nundefined4 FUN_0004f238(int *param_1,uint param_2,int *param_3)\n\n{\n  bool bVar1;\n  void *__src;\n  void *__dest;\n  int iVar2;\n  int *piVar3;\n  size_t __n;\n  \n  if (param_3 != (int *)0x0) {\n    if (((param_1 == (int *)0x0) || (*param_1 != 1 || param_3 == param_1)) ||\n       ((uint)param_1[3] < param_2)) {\n      if (param_3[1] == -1) {\n        return 0xffffffff;\n      }\n      piVar3 = param_3 + 1;\n      DataMemoryBarrier(0xb);\n      do {\n        iVar2 = *piVar3 + -1;\n        bVar1 = (bool)hasExclusiveAccess(piVar3);\n      } while (!bVar1);\n      *piVar3 = iVar2;\n    }\n    else {\n      __src = (void *)FUN_0004e0b8(param_1,1);\n      if (__src != (void *)0x0) {\n        __dest = (void *)param_1[4];\n        iVar2 = (param_2 + 1) * 4;\n        __n = iVar2 - 4;\n        if (__dest == __src) {\n          memmove((void *)((int)__dest + iVar2),(void *)((int)__src + __n),\n                  (param_1[3] - param_2) * 4);\n        }\n        else {\n          memcpy(__dest,__src,__n);\n          memcpy((void *)(param_1[4] + iVar2),(void *)((int)__src + __n),(param_1[3] - param_2) * 4)\n          ;\n          FUN_0004d898(__src);\n        }\n        iVar2 = param_1[3];\n        *(int **)(param_1[4] + __n) = param_3;\n        param_1[3] = iVar2 + 1;\n        return 0;\n      }\n      if (param_3[1] == -1) {\n        return 0xffffffff;\n      }\n      piVar3 = param_3 + 1;\n      DataMemoryBarrier(0xb);\n      do {\n        iVar2 = *piVar3 + -1;\n        bVar1 = (bool)hasExclusiveAccess(piVar3);\n      } while (!bVar1);\n      *piVar3 = iVar2;\n    }\n    if (iVar2 == 0) {\n      FUN_0004eb6c(param_3);\n      return 0xffffffff;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
    "FUN_0004f494": "\nundefined4 FUN_0004f494(int *param_1,int *param_2)\n\n{\n  bool bVar1;\n  int iVar2;\n  int *piVar3;\n  \n  if (param_2 != (int *)0x0) {\n    if ((param_1 == (int *)0x0) || (*param_1 != 1 || param_2 == param_1)) {\n      if (param_2[1] == -1) {\n        return 0xffffffff;\n      }\n      piVar3 = param_2 + 1;\n      DataMemoryBarrier(0xb);\n      do {\n        iVar2 = *piVar3 + -1;\n        bVar1 = (bool)hasExclusiveAccess(piVar3);\n      } while (!bVar1);\n      *piVar3 = iVar2;\n    }\n    else {\n      iVar2 = FUN_0004e0b8(param_1,1);\n      if (iVar2 != 0) {\n        iVar2 = param_1[3];\n        *(int **)(param_1[4] + iVar2 * 4) = param_2;\n        param_1[3] = iVar2 + 1;\n        return 0;\n      }\n      if (param_2[1] == -1) {\n        return 0xffffffff;\n      }\n      piVar3 = param_2 + 1;\n      DataMemoryBarrier(0xb);\n      do {\n        iVar2 = *piVar3 + -1;\n        bVar1 = (bool)hasExclusiveAccess(piVar3);\n      } while (!bVar1);\n      *piVar3 = iVar2;\n    }\n    if (iVar2 == 0) {\n      FUN_0004eb6c(param_2);\n      return 0xffffffff;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
    "FUN_0004f588": "\nint * FUN_0004f588(int *param_1)\n\n{\n  bool bVar1;\n  int *piVar2;\n  int *piVar3;\n  uint uVar4;\n  int iVar5;\n  int iVar6;\n  uint uVar7;\n  \n  if (param_1 != (int *)0x0) {\n    switch(*param_1) {\n    case 0:\n      piVar2 = (int *)FUN_0004e1b0();\n      if (piVar2 != (int *)0x0) {\n        if (*param_1 != 0) {\n          return piVar2;\n        }\n        iVar5 = FUN_0004be20(param_1 + 2);\n        if (iVar5 == 0) {\n          return piVar2;\n        }\n        while( true ) {\n          iVar5 = FUN_0004beb0();\n          if (iVar5 == 0) {\n            return piVar2;\n          }\n          iVar6 = FUN_0004beb8(iVar5 + -0x10);\n          piVar3 = (int *)(iVar6 + 4);\n          if (iVar6 == 0) break;\n          if (*(int *)(iVar6 + 4) != -1) {\n            do {\n              bVar1 = (bool)hasExclusiveAccess(piVar3);\n            } while (!bVar1);\n            *piVar3 = *piVar3 + 1;\n            DataMemoryBarrier(0xb);\n          }\n          FUN_0004ee2c(piVar2,iVar5);\n          if (*param_1 != 0) {\n            return piVar2;\n          }\n          iVar5 = FUN_0004be98(param_1 + 2,iVar5 + -0x10);\n          if (iVar5 == 0) {\n            return piVar2;\n          }\n        }\n        return piVar2;\n      }\n      break;\n    case 1:\n      piVar2 = (int *)FUN_0004e540();\n      if (piVar2 != (int *)0x0) {\n        if (*param_1 != 1) {\n          return piVar2;\n        }\n        uVar4 = param_1[3];\n        if (uVar4 == 0) {\n          return piVar2;\n        }\n        uVar7 = 0;\n        while( true ) {\n          iVar5 = 0;\n          if (uVar7 < uVar4) {\n            iVar5 = *(int *)(param_1[4] + uVar7 * 4);\n            piVar3 = (int *)(iVar5 + 4);\n            if ((iVar5 != 0) && (*(int *)(iVar5 + 4) != -1)) {\n              do {\n                bVar1 = (bool)hasExclusiveAccess(piVar3);\n              } while (!bVar1);\n              *piVar3 = *piVar3 + 1;\n              DataMemoryBarrier(0xb);\n            }\n          }\n          FUN_0004f494(piVar2,iVar5);\n          if (*param_1 != 1) break;\n          uVar4 = param_1[3];\n          uVar7 = uVar7 + 1;\n          if (uVar4 <= uVar7) {\n            return piVar2;\n          }\n        }\n        return piVar2;\n      }\n      break;\n    case 2:\n      piVar2 = (int *)FUN_0004e144(param_1[2],param_1[3],0);\n      return piVar2;\n    case 3:\n      if ((param_1 == (int *)0x0) || (*param_1 != 3)) {\n        iVar5 = 0;\n        iVar6 = 0;\n      }\n      else {\n        iVar5 = param_1[2];\n        iVar6 = param_1[3];\n      }\n      piVar2 = (int *)FUN_0004d880(0x10);\n      if (piVar2 == (int *)0x0) {\n        return (int *)0x0;\n      }\n      piVar2[2] = iVar5;\n      piVar2[3] = iVar6;\n      *piVar2 = 3;\n      piVar2[1] = 1;\n      return piVar2;\n    case 4:\n      piVar2 = (int *)FUN_0004ea14((int)*(undefined8 *)(param_1 + 2));\n      return piVar2;\n    case 5:\n    case 6:\n    case 7:\n      return param_1;\n    }\n  }\n  return (int *)0x0;\n}\n\n",
    "FUN_0004f744": "\nint * FUN_0004f744(int *param_1)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  int *piVar3;\n  uint uVar4;\n  int iVar5;\n  int iVar6;\n  uint uVar7;\n  \n  if (param_1 != (int *)0x0) {\n    switch(*param_1) {\n    case 0:\n      piVar3 = (int *)FUN_0004e1b0();\n      if (piVar3 != (int *)0x0) {\n        if (*param_1 != 0) {\n          return piVar3;\n        }\n        iVar5 = FUN_0004be20(param_1 + 2);\n        while( true ) {\n          if (iVar5 == 0) {\n            return piVar3;\n          }\n          uVar2 = FUN_0004beb0(iVar5);\n          FUN_0004beb8(iVar5);\n          uVar1 = FUN_0004f744();\n          FUN_0004ee2c(piVar3,uVar2,uVar1);\n          if (*param_1 != 0) break;\n          iVar5 = FUN_0004be98(param_1 + 2,iVar5);\n        }\n        return piVar3;\n      }\n      break;\n    case 1:\n      piVar3 = (int *)FUN_0004e540();\n      if (piVar3 != (int *)0x0) {\n        if (*param_1 != 1) {\n          return piVar3;\n        }\n        uVar4 = param_1[3];\n        if (uVar4 == 0) {\n          return piVar3;\n        }\n        uVar7 = 0;\n        while( true ) {\n          uVar2 = 0;\n          if (uVar7 < uVar4) {\n            uVar2 = *(undefined4 *)(param_1[4] + uVar7 * 4);\n          }\n          uVar2 = FUN_0004f744(uVar2);\n          FUN_0004f494(piVar3,uVar2);\n          if (*param_1 != 1) break;\n          uVar4 = param_1[3];\n          uVar7 = uVar7 + 1;\n          if (uVar4 <= uVar7) {\n            return piVar3;\n          }\n        }\n        return piVar3;\n      }\n      break;\n    case 2:\n      piVar3 = (int *)FUN_0004e144(param_1[2],param_1[3],0);\n      return piVar3;\n    case 3:\n      if ((param_1 == (int *)0x0) || (*param_1 != 3)) {\n        iVar5 = 0;\n        iVar6 = 0;\n      }\n      else {\n        iVar5 = param_1[2];\n        iVar6 = param_1[3];\n      }\n      piVar3 = (int *)FUN_0004d880(0x10);\n      if (piVar3 != (int *)0x0) {\n        piVar3[2] = iVar5;\n        piVar3[3] = iVar6;\n        *piVar3 = 3;\n        piVar3[1] = 1;\n        return piVar3;\n      }\n      return (int *)0x0;\n    case 4:\n      piVar3 = (int *)FUN_0004ea14((int)*(undefined8 *)(param_1 + 2));\n      return piVar3;\n    case 5:\n    case 6:\n    case 7:\n      return param_1;\n    }\n  }\n  return (int *)0x0;\n}\n\n",
    "FUN_0004f90c": "\nvoid FUN_0004f90c(undefined4 *param_1,char *param_2)\n\n{\n  size_t sVar1;\n  \n  if (param_1 == (undefined4 *)0x0) {\n    return;\n  }\n  *(undefined *)(param_1 + 0x17) = 0;\n  param_1[2] = 0;\n  *param_1 = 0xffffffff;\n  param_1[1] = 0xffffffff;\n  if (param_2 == (char *)0x0) {\n    *(undefined *)(param_1 + 3) = 0;\n    return;\n  }\n  sVar1 = strlen(param_2);\n  if (0x4f < sVar1) {\n    *(undefined2 *)(param_1 + 3) = 0x2e2e;\n    *(char *)((int)param_1 + 0xe) = '.';\n    strncpy((char *)((int)param_1 + 0xf),param_2 + (sVar1 - 0x4c),0x4d);\n    return;\n  }\n  strncpy((char *)(param_1 + 3),param_2,sVar1 + 1);\n  return;\n}\n\n",
    "FUN_0004f95c": "\nvoid FUN_0004f95c(undefined4 *param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 undefined param_5,char *param_6)\n\n{\n  if ((param_1 != (undefined4 *)0x0) && (*(char *)(param_1 + 0x17) == '\\0')) {\n    *param_1 = param_2;\n    param_1[1] = param_3;\n    param_1[2] = param_4;\n    vsnprintf((char *)(param_1 + 0x17),0x9f,param_6,&stack0x00000008);\n    *(undefined *)((int)param_1 + 0xfa) = 0;\n    *(undefined *)((int)param_1 + 0xfb) = param_5;\n    return;\n  }\n  return;\n}\n\n",
    "FUN_0004f9c0": "\nvoid FUN_0004f9c0(undefined4 *param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 undefined param_5,char *param_6,__gnuc_va_list param_7)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    return;\n  }\n  if (*(char *)(param_1 + 0x17) != '\\0') {\n    return;\n  }\n  *param_1 = param_2;\n  param_1[1] = param_3;\n  param_1[2] = param_4;\n  vsnprintf((char *)(param_1 + 0x17),0x9f,param_6,param_7);\n  *(undefined *)((int)param_1 + 0xfa) = 0;\n  *(undefined *)((int)param_1 + 0xfb) = param_5;\n  return;\n}\n\n",
    "FUN_0004fa10": "\nundefined4\nFUN_0004fa10(undefined4 param_1,int param_2,undefined4 param_3,undefined4 param_4,undefined4 param_5\n            )\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined auStack_2c [12];\n  \n  iVar1 = FUN_00051cac(param_2,param_3,param_4,param_5,auStack_2c);\n  if (iVar1 == 0) {\n    FUN_00051e54(param_1,auStack_2c,9);\n    FUN_00051b44(param_2 != 1,param_1);\n    uVar2 = 0;\n  }\n  else {\n    uVar2 = 0xffffffff;\n  }\n  return uVar2;\n}\n\n",
    "FUN_0004fa9c": "\nundefined4 FUN_0004fa9c(void)\n\n{\n  undefined4 uVar1;\n  uint in_r3;\n  \n  if (in_r3 < 4) {\n    uVar1 = FUN_0004fa10();\n    return uVar1;\n  }\n  return 0xffffffff;\n}\n\n",
    "FUN_0004fbdc": "\nvoid FUN_0004fbdc(void)\n\n{\n  FUN_0004fa10();\n  return;\n}\n\n",
    "FUN_0004fcbc": "\nundefined4 FUN_0004fcbc(undefined4 param_1,int param_2,undefined4 param_3,uint param_4)\n\n{\n  uint uVar1;\n  undefined uVar2;\n  undefined uVar3;\n  undefined uVar4;\n  undefined4 local_1c;\n  \n  FUN_0004fa10();\n  usleep(10000);\n  if (param_2 == 0) {\n    FUN_00051a20(1,param_1,param_3,0xb0,&local_1c);\n  }\n  else {\n    FUN_00051a20(0,param_1,0,0xb0,&local_1c);\n  }\n  uVar2 = (undefined)local_1c;\n  uVar4 = local_1c._2_1_;\n  uVar3 = local_1c._1_1_;\n  local_1c = (uint)(local_1c._3_1_ & 0x33 | 0x20) << 0x18;\n  uVar1 = CONCAT31(local_1c._1_3_,uVar2) & 0xffffffb4;\n  local_1c._3_1_ = (byte)(uVar1 >> 0x18);\n  uVar1 = CONCAT13(local_1c._3_1_,CONCAT12(uVar4,(short)uVar1)) & 0xfffbffff;\n  local_1c = CONCAT22((short)(uVar1 >> 0x10),CONCAT11(uVar3,(char)uVar1)) & 0xfffff0ff | 0x783143;\n  FUN_0004fa10(param_1,param_2,param_3,0xb0,local_1c);\n  usleep(10000);\n  FUN_0004fa10(param_1,param_2,param_3,0xbc,param_4 & 7 | 0x1f8);\n  usleep(10000);\n  FUN_0004fa10(param_1,param_2,param_3,0xb0,local_1c);\n  usleep(10000);\n  return 0;\n}\n\n",
    "FUN_0004fdf0": "\nvoid FUN_0004fdf0(void)\n\n{\n  FUN_0004fa10();\n  return;\n}\n\n",
    "FUN_0004fe70": "\nundefined4 FUN_0004fe70(undefined4 param_1)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined auStack_10 [8];\n  \n  iVar1 = FUN_00051e08(auStack_10);\n  if (iVar1 == 0) {\n    uVar2 = FUN_00051e54(param_1,auStack_10,5);\n  }\n  else {\n    uVar2 = 0xffffffff;\n  }\n  return uVar2;\n}\n\n",
    "FUN_0004feac": "\nundefined4 FUN_0004feac(undefined4 param_1,undefined4 param_2)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined auStack_10 [8];\n  \n  iVar1 = FUN_00051d44(param_2,auStack_10);\n  if (iVar1 == 0) {\n    uVar2 = FUN_00051e54(param_1,auStack_10,5);\n  }\n  else {\n    uVar2 = 0xffffffff;\n  }\n  return uVar2;\n}\n\n",
    "FUN_0004fef0": "\nundefined4 FUN_0004fef0(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined auStack_10 [8];\n  \n  iVar1 = FUN_00051d98(param_2,param_3,param_4,auStack_10);\n  if (iVar1 == 0) {\n    uVar2 = FUN_00051e54(param_1,auStack_10,5);\n  }\n  else {\n    uVar2 = 0xffffffff;\n  }\n  return uVar2;\n}\n\n",
    "FUN_0004ff50": "\nundefined4 FUN_0004ff50(undefined4 param_1,int param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  \n  iVar1 = FUN_0005f880(0x100);\n  if (iVar1 != 0) {\n    iVar2 = 0;\n    iVar3 = 0;\n    do {\n      FUN_0004feac(param_1,iVar3);\n      iVar2 = iVar2 + 1;\n      usleep(10000);\n      iVar3 = iVar3 + param_2;\n    } while (iVar2 != iVar1);\n  }\n  return 0;\n}\n\n",
    "FUN_0004ffa0": "\nundefined4 FUN_0004ffa0(undefined4 param_1,int param_2,int param_3)\n\n{\n  int iVar1;\n  int iVar2;\n  \n  if (param_3 != 0) {\n    iVar1 = 0;\n    iVar2 = 0;\n    do {\n      FUN_0004feac(param_1,iVar2);\n      iVar1 = iVar1 + 1;\n      usleep(10000);\n      iVar2 = iVar2 + param_2;\n    } while (param_3 != iVar1);\n  }\n  return 0;\n}\n\n",
    "FUN_0004ffe8": "\nundefined4 FUN_0004ffe8(undefined4 param_1,uint param_2)\n\n{\n  uint uVar1;\n  uint uVar2;\n  char cVar3;\n  undefined4 local_24;\n  undefined4 local_20;\n  undefined4 local_1c;\n  \n  if (param_2 < 0x2dc6c1) {\n    cVar3 = FUN_0005f880(25000000,param_2 << 3);\n    FUN_00051a20(0,param_1,0,0x18,&local_24);\n    local_24._0_2_ = CONCAT11(local_24._1_1_ & 0xe0 | cVar3 - 1U & 0x1f,(undefined)local_24);\n    local_24 = CONCAT13(local_24._3_1_ & 0xf0 | (byte)(cVar3 - 1U) >> 5,\n                        CONCAT12(local_24._2_1_,(undefined2)local_24)) & 0xfffeffff;\n  }\n  else {\n    cVar3 = FUN_0005f880(100000000,param_2 << 3);\n    FUN_00051a20(0,param_1,0,0x68,&local_20);\n    FUN_00051a20(0,param_1,0,0x28,&local_1c);\n    uVar1 = local_20;\n    local_20 = (uint)(local_20._3_1_ & 0xdf | 0x40) << 0x18;\n    local_20 = CONCAT22(local_20._2_2_,(short)uVar1) & 0xf000c088 | 0x700111;\n    FUN_0004fa10(param_1,1,0,0x68,local_20);\n    usleep(10000);\n    FUN_0004fa10(param_1,1,0,0x68,local_20);\n    usleep(10000);\n    uVar2 = local_1c >> 8;\n    uVar1 = CONCAT13(local_1c._3_1_,0x3000f) & 0x30ffffff;\n    local_1c._0_1_ = (undefined)uVar1;\n    local_1c = CONCAT22((short)(uVar1 >> 0x10),\n                        CONCAT11(~((byte)~(byte)((uVar2 << 0x19) >> 0x18) >> 1),(undefined)local_1c)\n                       ) & 0xffff8fff | 0x6000000;\n    FUN_0004fa10(param_1,1,0,0x28,local_1c);\n    usleep(10000);\n    FUN_00051a20(0,param_1,0,0x18,&local_24);\n    local_24._0_2_ = CONCAT11(local_24._1_1_ & 0xe0 | cVar3 - 1U & 0x1f,(undefined)local_24);\n    local_24 = CONCAT13(local_24._3_1_ & 0xf0 | (byte)(cVar3 - 1U) >> 5,\n                        CONCAT12(local_24._2_1_,(undefined2)local_24)) | 0x10000;\n  }\n  FUN_0004fa10(param_1,1,0,0x18,local_24);\n  usleep(50000);\n  FUN_00045cbc(param_1,param_2);\n  return 0;\n}\n\n",
    "FUN_0005021c": "\nvoid FUN_0005021c(undefined4 param_1,uint param_2)\n\n{\n  FUN_0004fa10(param_1,1,0,0x14,\n               CONCAT13((&DAT_0006a944)[param_2 >> 0x18],\n                        CONCAT12((&DAT_0006a944)[(param_2 << 8) >> 0x18],\n                                 CONCAT11((&DAT_0006a944)[(param_2 << 0x10) >> 0x18],\n                                          (&DAT_0006a944)[param_2 & 0xff]))));\n  return;\n}\n\n",
    "FUN_00050288": "\nvoid FUN_00050288(undefined4 param_1,int param_2,uint param_3)\n\n{\n  uint uVar1;\n  \n  if (param_2 == 0) {\n    uVar1 = 0;\n  }\n  else {\n    uVar1 = 0x80000000;\n  }\n  FUN_0004fa10(param_1,1,0,0xc,uVar1 | param_3 & 0xffff);\n  return;\n}\n\n",
    "FUN_000502c0": "\nundefined4 FUN_000502c0(float param_1,undefined *param_2,undefined *param_3,float *param_4)\n\n{\n  undefined uVar1;\n  int iVar2;\n  undefined4 uVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  int iVar7;\n  int iVar8;\n  uint uVar9;\n  uint uVar10;\n  int iVar11;\n  int iVar12;\n  uint uVar13;\n  float fVar14;\n  int iVar15;\n  float fVar16;\n  \n  iVar12 = 2;\n  iVar7 = 0;\n  iVar8 = 0;\n  uVar9 = 0;\n  iVar5 = 2;\n  uVar10 = 0;\n  iVar11 = 0;\n  fVar14 = 10.0;\n  while( true ) {\n    uVar4 = 1;\n    do {\n      iVar2 = uVar4 * uVar4;\n      uVar6 = uVar4;\n      uVar13 = uVar4 & 0xff;\n      do {\n        iVar15 = (int)(longlong)\n                      (((float)(longlong)(int)uVar6 * (float)(longlong)(int)uVar4 * param_1 *\n                       (float)(longlong)iVar5) / 25.0 + 0.5);\n        if (((iVar15 - 0x10U < 0xeb) &&\n            (((fVar16 = (float)(longlong)iVar15 * (25.0 / (float)(longlong)iVar5), iVar5 != 1 ||\n              (fVar16 == 3125.0 || fVar16 < 3125.0 != NAN(fVar16))) &&\n             (fVar16 == 3200.0 || fVar16 < 3200.0 != NAN(fVar16))))) &&\n           ((2000.0 <= fVar16 &&\n            (fVar16 = ABS(param_1 - fVar16 / (float)(longlong)iVar2), fVar16 < fVar14)))) {\n          iVar8 = 1;\n          iVar7 = iVar15;\n          uVar9 = uVar4 & 0xff;\n          uVar10 = uVar13;\n          iVar11 = iVar5;\n          fVar14 = fVar16;\n        }\n        uVar6 = uVar6 + 1;\n        iVar2 = iVar2 + uVar4;\n        uVar13 = uVar6 & 0xff;\n      } while (uVar13 != 8);\n      uVar4 = uVar4 + 1;\n    } while (uVar4 != 8);\n    iVar5 = 1;\n    if (iVar12 == 1) break;\n    iVar12 = 1;\n  }\n  if (iVar7 == 0) {\n    puts(\"find div fail, use default value\");\n    uVar3 = 0xffffffff;\n  }\n  else {\n    if (param_4 != (float *)0x0) {\n      *param_4 = ((25.0 / (float)(longlong)iVar11) * (float)(longlong)iVar7) /\n                 (float)(longlong)(iVar8 * (int)(short)uVar10 * (int)(short)uVar9);\n    }\n    printf(\"final refdiv: %d, fbdiv: %d, postdiv1: %d, postdiv2: %d, usr divider: %d, min diff value: %f\\n\"\n           ,iVar11,iVar7,uVar10,uVar9,iVar8,(double)fVar14);\n    printf(\"Want freq: %f, Real freq: %f\\n\");\n    uVar3 = 0;\n    *param_2 = (char)uVar10;\n    param_2[1] = (char)uVar9;\n    param_2[2] = (char)iVar11;\n    *(short *)(param_2 + 4) = (short)iVar7;\n    uVar1 = (undefined)iVar8;\n    *param_3 = uVar1;\n    param_3[1] = uVar1;\n    param_3[2] = uVar1;\n    param_3[3] = uVar1;\n  }\n  return uVar3;\n}\n\n",
    "FUN_000504e8": "\nundefined4\nFUN_000504e8(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n            uint param_5)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined auStack_24 [4];\n  undefined local_20;\n  undefined local_1f;\n  undefined local_1e;\n  undefined2 local_1c;\n  \n  iVar1 = FUN_000502c0((float)(ulonglong)param_5,&local_20,auStack_24,0);\n  if (iVar1 == 0) {\n    uVar2 = FUN_0004fa9c(param_1,param_2,param_3,param_4,local_20,local_1f,local_1e,local_1c);\n  }\n  else {\n    uVar2 = 0xffffffff;\n  }\n  return uVar2;\n}\n\n",
    "FUN_00050560": "\nvoid FUN_00050560(undefined4 param_1,undefined4 param_2,uint param_3,undefined2 param_4)\n\n{\n  FUN_0004fa9c(param_1,1,0,param_2,param_3 & 0xff,param_3 >> 8 & 0xff,param_3 >> 0x10 & 0xff,param_4\n              );\n  return;\n}\n\n",
    "FUN_000505a4": "\nvoid FUN_000505a4(undefined4 param_1,undefined4 param_2,undefined4 param_3,uint param_4,\n                 undefined2 param_5)\n\n{\n  FUN_0004fa9c(param_1,0,param_2,param_3,param_4 & 0xff,(param_4 << 0x10) >> 0x18,\n               (param_4 << 8) >> 0x18,param_5);\n  return;\n}\n\n",
    "FUN_000506f8": "\nundefined4 FUN_000506f8(undefined4 param_1,undefined4 param_2,uint param_3,undefined4 param_4)\n\n{\n  char cVar1;\n  byte bVar2;\n  byte bVar3;\n  undefined4 uVar4;\n  undefined4 local_1c;\n  \n  if (param_3 < 4) {\n    cVar1 = \"ptx|find div fail, use default value\"[param_3];\n    FUN_00051a20(1,param_1,param_2,cVar1,&local_1c);\n    bVar2 = (byte)local_1c & 0x30;\n    bVar3 = local_1c._1_1_ & 0x30;\n    uVar4 = FUN_0004fa10(param_1,0,param_2,cVar1,local_1c);\n  }\n  else {\n    uVar4 = 0xffffffff;\n  }\n  return uVar4;\n}\n\n",
    "FUN_00050794": "\nundefined4 FUN_00050794(undefined4 param_1,uint param_2,undefined4 param_3)\n\n{\n  char cVar1;\n  byte bVar2;\n  byte bVar3;\n  undefined4 uVar4;\n  undefined4 local_1c;\n  \n  if (param_2 < 4) {\n    cVar1 = \"ptx|find div fail, use default value\"[param_2];\n    FUN_00051a20(0,param_1,0,cVar1,&local_1c);\n    bVar2 = (byte)local_1c & 0x30;\n    bVar3 = local_1c._1_1_ & 0x30;\n    uVar4 = FUN_0004fa10(param_1,1,0,cVar1,local_1c);\n  }\n  else {\n    uVar4 = 0xffffffff;\n  }\n  return uVar4;\n}\n\n",
    "FUN_0005082c": "\nvoid FUN_0005082c(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  FUN_000504e8(param_1,0,param_2,param_3,param_4);\n  return;\n}\n\n",
    "FUN_00050874": "\nvoid FUN_00050874(undefined4 param_1,undefined4 param_2,uint param_3)\n\n{\n  FUN_0004fa10(param_1,0,param_2,0x54,param_3 & 7);\n  return;\n}\n\n",
    "FUN_000508a0": "\nvoid FUN_000508a0(undefined4 param_1,uint param_2)\n\n{\n  FUN_0004fa10(param_1,1,0,0x54,param_2 & 7);\n  return;\n}\n\n",
    "FUN_000508dc": "\nundefined4 FUN_000508dc(void)\n\n{\n  return 0;\n}\n\n",
    "FUN_000508e4": "\nundefined4 FUN_000508e4(undefined4 param_1,int param_2,int param_3,undefined2 param_4)\n\n{\n  ushort uVar1;\n  undefined uVar2;\n  undefined4 uVar3;\n  byte bVar4;\n  undefined4 local_1c;\n  \n  FUN_00051a20(0,param_1,0,0xa4,&local_1c);\n  if (param_2 == 0) {\n    bVar4 = local_1c._3_1_ & 0x7f;\n  }\n  else {\n    bVar4 = local_1c._3_1_ | 0x80;\n  }\n  local_1c = CONCAT13(bVar4,(undefined3)local_1c);\n  uVar1 = (ushort)(local_1c >> 0x10);\n  if (param_3 == 4) {\n    local_1c._2_2_ = uVar1 & 0xcfff;\n  }\n  else if (param_3 == 8) {\n    local_1c._2_2_ = uVar1 & 0xcfff | 0x1000;\n  }\n  else {\n    if (param_3 != 0xc) {\n      return 0xffffffff;\n    }\n    local_1c._2_2_ = (ushort)(CONCAT13(bVar4,(undefined3)local_1c) >> 0x10) & 0xcfff | 0x2000;\n  }\n  uVar2 = local_1c._3_1_;\n  local_1c = CONCAT22(local_1c._2_2_,param_4);\n  local_1c = CONCAT13(uVar2,(undefined3)local_1c) & 0xbfffffff;\n  uVar3 = FUN_0004fa10(param_1,1,0,0xa4,local_1c);\n  return uVar3;\n}\n\n",
    "FUN_000509b4": "\nvoid FUN_000509b4(undefined4 param_1,int param_2)\n\n{\n  byte bVar1;\n  undefined4 local_14;\n  \n  FUN_00051a20(0,param_1,0,0x18,&local_14);\n  if (param_2 == 0) {\n    bVar1 = (byte)local_14 & 0xfb;\n  }\n  else {\n    bVar1 = (byte)local_14 | 4;\n  }\n  local_14 = CONCAT31(local_14._1_3_,bVar1);\n  FUN_0004fa10(param_1,1,0,0x18,local_14);\n  return;\n}\n\n",
    "FUN_00050a18": "\nvoid FUN_00050a18(undefined4 param_1,undefined4 param_2,int param_3)\n\n{\n  byte bVar1;\n  undefined4 local_14;\n  \n  FUN_00051a20(1,param_1,param_2,0x18,&local_14);\n  if (param_3 == 0) {\n    bVar1 = (byte)local_14 & 0xfb;\n  }\n  else {\n    bVar1 = (byte)local_14 | 4;\n  }\n  local_14 = CONCAT31(local_14._1_3_,bVar1);\n  FUN_0004fa10(param_1,0,param_2,0x18,local_14);\n  return;\n}\n\n",
    "FUN_00050a80": "\nvoid FUN_00050a80(undefined4 param_1,undefined4 param_2,int param_3)\n\n{\n  byte bVar1;\n  undefined4 local_14;\n  \n  FUN_00051a20(1,param_1,param_2,0x18,&local_14);\n  if (param_3 == 0) {\n    bVar1 = local_14._1_1_ & 0xdf;\n  }\n  else {\n    bVar1 = local_14._1_1_ | 0x20;\n  }\n  FUN_0004fa10(param_1,0,param_2,0x18,local_14);\n  return;\n}\n\n",
    "FUN_00050ae8": "\nvoid FUN_00050ae8(undefined4 param_1,undefined4 param_2,uint param_3)\n\n{\n  byte bVar1;\n  undefined4 local_14;\n  \n  FUN_00051a20(1,param_1,param_2,0x58,&local_14);\n  bVar1 = local_14._1_1_ & 0xf;\n  FUN_0004fa10(param_1,0,param_2,0x58,local_14);\n  return;\n}\n\n",
    "FUN_00050b48": "\nvoid FUN_00050b48(undefined4 param_1,uint param_2)\n\n{\n  byte bVar1;\n  undefined4 local_14;\n  \n  FUN_00051a20(0,param_1,0,0x58,&local_14);\n  bVar1 = local_14._1_1_ & 0xf;\n  FUN_0004fa10(param_1,1,0,0x58,local_14);\n  return;\n}\n\n",
    "FUN_00050bd4": "\nvoid FUN_00050bd4(undefined4 param_1,int param_2)\n\n{\n  byte bVar1;\n  undefined4 local_14;\n  \n  FUN_00051a20(0,param_1,0,0x18,&local_14);\n  if (param_2 == 0) {\n    bVar1 = local_14._1_1_ & 0x7f;\n  }\n  else {\n    bVar1 = local_14._1_1_ | 0x80;\n  }\n  FUN_0004fa10(param_1,1,0,0x18,local_14);\n  return;\n}\n\n",
    "FUN_00050c38": "\nvoid FUN_00050c38(undefined4 param_1,int param_2)\n\n{\n  uint local_14 [2];\n  \n  FUN_00051a20(0,param_1,0,0x18,local_14);\n  if (param_2 == 0) {\n    local_14[0] = local_14[0] & 0xffbfffff | 0xf0000000;\n  }\n  else {\n    local_14[0] = local_14[0] & 0xfffffff | 0x400000;\n  }\n  FUN_0004fa10(param_1,1,0,0x18,local_14[0]);\n  return;\n}\n\n",
    "FUN_00050cc4": "\nvoid FUN_00050cc4(undefined4 param_1,undefined4 param_2,int param_3)\n\n{\n  uint local_14;\n  \n  FUN_00051a20(1,param_1,param_2,0x18,&local_14);\n  if (param_3 == 0) {\n    local_14 = local_14 & 0xffbfffff | 0xf0000000;\n  }\n  else {\n    local_14 = local_14 & 0xfffffff | 0x400000;\n  }\n  FUN_0004fa10(param_1,0,param_2,0x18,local_14);\n  return;\n}\n\n",
    "FUN_00050d54": "\nvoid FUN_00050d54(undefined4 param_1,undefined4 param_2)\n\n{\n  FUN_0004fa10(param_1,1,0,0x10,param_2);\n  return;\n}\n\n",
    "FUN_00050da8": "\nvoid FUN_00050da8(undefined4 param_1,undefined4 param_2)\n\n{\n  FUN_0004fa10(param_1,0,param_2,0x3c,0x8000851f);\n  usleep(10000);\n  FUN_0004fa10(param_1,0,param_2,0x3c,0x80000600);\n  return;\n}\n\n",
    "FUN_00050dc4": "\nvoid FUN_00050dc4(undefined4 param_1,undefined4 param_2,uint param_3)\n\n{\n  FUN_0004fa10(param_1,0,param_2,0x3c,param_3 & 3 | 0x80008104);\n  usleep(10000);\n  FUN_0004fa10(param_1,0,param_2,0x3c,param_3 & 3 | 0x80000204);\n  return;\n}\n\n",
    "FUN_00050dd4": "\nvoid FUN_00050dd4(undefined4 param_1)\n\n{\n  FUN_0004fbdc(param_1,1,0,1,0);\n  return;\n}\n\n",
    "FUN_00050df8": "\nvoid FUN_00050df8(undefined4 param_1,undefined4 param_2)\n\n{\n  FUN_0004fbdc(param_1,0,param_2,1,0);\n  return;\n}\n\n",
    "FUN_00050e78": "\nvoid FUN_00050e78(undefined4 param_1)\n\n{\n  uint local_c;\n  \n  FUN_00051a20(0,param_1,0,0x90,&local_c);\n  local_c = local_c | 0x800;\n  FUN_0004fa10(param_1,1,0,0x90,local_c);\n  return;\n}\n\n",
    "FUN_00050ed0": "\nvoid FUN_00050ed0(undefined4 param_1)\n\n{\n  uint local_c;\n  \n  FUN_00051a20(0,param_1,0,0x34,&local_c);\n  local_c = local_c | 1;\n  FUN_0004fa10(param_1,1,0,0x34,local_c);\n  return;\n}\n\n",
    "FUN_00050f28": "\nvoid FUN_00050f28(undefined4 param_1)\n\n{\n  uint local_c;\n  \n  FUN_00051a20(0,param_1,0,0x34,&local_c);\n  local_c = local_c & 0xfffffffe;\n  FUN_0004fa10(param_1,1,0,0x34,local_c);\n  return;\n}\n\n",
    "FUN_00050f80": "\nvoid FUN_00050f80(undefined4 param_1,undefined4 param_2)\n\n{\n  FUN_0004fa10(param_1,1,0,0x9c,param_2);\n  return;\n}\n\n",
    "FUN_00050fa4": "\nvoid FUN_00050fa4(undefined4 param_1,int param_2)\n\n{\n  FUN_0004fa10(param_1,1,0,0x90,(param_2 - 1U & 7) << 4 | 0x38001801);\n  return;\n}\n\n",
    "FUN_00050fdc": "\nvoid FUN_00050fdc(undefined4 param_1)\n\n{\n  uint local_c;\n  \n  FUN_00051a20(0,param_1,0,0x90,&local_c);\n  local_c = local_c & 0xfffff7ff | 0x800008a;\n  FUN_0004fa10(param_1,1,0,0x90,local_c);\n  return;\n}\n\n",
    "FUN_0005104c": "\nvoid FUN_0005104c(undefined4 param_1)\n\n{\n  uint uVar1;\n  undefined4 local_c;\n  \n  FUN_00051a20(0,param_1,0,0x90,&local_c);\n  uVar1 = CONCAT31((int3)(local_c >> 8),~(~(byte)local_c & 0x77)) & 0xfffffffd;\n  local_c._0_1_ = (byte)uVar1;\n  local_c = CONCAT22((short)(uVar1 >> 0x10),CONCAT11(local_c._1_1_,(byte)local_c)) & 0xfffff7ff |\n            0x8000000;\n  FUN_0004fa10(param_1,1,0,0x90,local_c);\n  return;\n}\n\n",
    "FUN_000510d8": "\nvoid FUN_000510d8(undefined4 param_1,undefined param_2)\n\n{\n  undefined4 local_14;\n  \n  FUN_00051a20(0,param_1,0,0x90,&local_14);\n  FUN_0004fa10(param_1,1,0,0x90,local_14);\n  return;\n}\n\n",
    "FUN_00051164": "\nvoid FUN_00051164(undefined4 param_1,undefined4 param_2)\n\n{\n  uint local_14;\n  \n  FUN_00051a20(1,param_1,param_2,0x18,&local_14);\n  local_14 = local_14 & 0xffffff8f | 0x4030;\n  FUN_0004fa10(param_1,0,param_2,0x18,local_14);\n  return;\n}\n\n",
    "FUN_0005129c": "\nvoid FUN_0005129c(undefined4 param_1,undefined4 param_2)\n\n{\n  FUN_0004fa10(param_1,0,param_2,0x2c);\n  return;\n}\n\n",
    "FUN_000512cc": "\nvoid FUN_000512cc(undefined4 param_1,uint param_2)\n\n{\n  undefined4 local_14;\n  \n  FUN_00051a20(0,param_1,0,0x18,&local_14);\n  local_14 = CONCAT31(local_14._1_3_,(byte)local_14 & 0xf7 | (byte)((param_2 & 1) << 3));\n  FUN_0004fa10(param_1,1,0,0x18,local_14);\n  return;\n}\n\n",
    "FUN_00051388": "\nvoid FUN_00051388(undefined4 param_1,undefined4 param_2)\n\n{\n  uint local_14;\n  \n  FUN_00051a20(1,param_1,param_2,0xb0,&local_14);\n  local_14 = local_14 & 0xdffbffbf;\n  FUN_0004fa10(param_1,0,param_2,0xb0,local_14);\n  return;\n}\n\n",
    "FUN_000513fc": "\nvoid FUN_000513fc(undefined4 param_1)\n\n{\n  uint local_c;\n  \n  FUN_00051a20(0,param_1,0,0xb0,&local_c);\n  local_c = local_c & 0xdffbffbf;\n  FUN_0004fa10(param_1,1,0,0xb0,local_c);\n  return;\n}\n\n",
    "FUN_0005146c": "\n/* WARNING: Removing unreachable block (ram,0x0004fc48) */\n\nundefined4 FUN_0005146c(undefined4 param_1,undefined4 param_2)\n\n{\n  undefined4 local_14;\n  \n  FUN_0004fa10();\n  usleep(10000);\n  FUN_00051a20(1,param_1,param_2,0xb0,&local_14);\n  local_14 = 0x207c310b;\n  FUN_0004fa10(param_1,0,param_2,0xb0,0x207c310b);\n  usleep(10000);\n  return 0;\n}\n\n",
    "FUN_00051478": "\n/* WARNING: Removing unreachable block (ram,0x0004fc9c) */\n\nundefined4 FUN_00051478(undefined4 param_1)\n\n{\n  undefined4 uStack_14;\n  \n  FUN_0004fa10();\n  usleep(10000);\n  FUN_00051a20(0,param_1,0,0xb0,&uStack_14);\n  uStack_14 = 0x207c310b;\n  FUN_0004fa10(param_1,1,0,0xb0,0x207c310b);\n  usleep(10000);\n  return 0;\n}\n\n",
    "FUN_000514a4": "\nundefined4 FUN_000514a4(undefined4 param_1)\n\n{\n  uint local_c;\n  \n  FUN_00051a20(0,param_1,0,0xb0,&local_c);\n  local_c = local_c | 0x10;\n  FUN_0004fa10(param_1,1,0,0xb0,local_c);\n  usleep(30000);\n  return 0;\n}\n\n",
    "FUN_00051508": "\nundefined4 FUN_00051508(undefined4 param_1,undefined4 param_2)\n\n{\n  uint local_14 [2];\n  \n  FUN_00051a20(1,param_1,param_2,0xb0,local_14);\n  local_14[0] = local_14[0] | 0x10;\n  FUN_0004fa10(param_1,0,param_2,0xb0,local_14[0]);\n  usleep(30000);\n  return 0;\n}\n\n",
    "FUN_000515d0": "\nvoid FUN_000515d0(undefined4 param_1,undefined4 param_2,uint param_3,uint param_4)\n\n{\n  FUN_0004fa10(param_1,0,param_2,0x3c,(param_3 & 3) << 4 | param_4 & 7 | 0x80008700);\n  return;\n}\n\n",
    "FUN_0005161c": "\nvoid FUN_0005161c(undefined4 param_1,uint param_2,uint param_3)\n\n{\n  FUN_0004fa10(param_1,1,0,0x3c,(param_2 & 3) << 4 | param_3 & 7 | 0x80008700);\n  return;\n}\n\n",
    "FUN_00051668": "\nvoid FUN_00051668(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 undefined param_5)\n\n{\n  FUN_0004fdf0(param_1,0,param_2,param_3,param_4,param_5);\n  return;\n}\n\n",
    "FUN_00051694": "\nvoid FUN_00051694(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  FUN_0004fdf0(param_1,1,0,param_2,param_3,param_4);\n  return;\n}\n\n",
    "FUN_00051708": "\nvoid FUN_00051708(undefined4 param_1,uint param_2)\n\n{\n  if (param_2 != 0) {\n    param_2 = 0x40;\n  }\n  FUN_0004fa10(param_1,1,0,0x3c,param_2 & 0xff | 0x80008d00);\n  return;\n}\n\n",
    "FUN_00051728": "\nvoid FUN_00051728(undefined4 param_1,undefined4 param_2)\n\n{\n  FUN_0004fa10(param_1,1,0,0x80,param_2);\n  return;\n}\n\n",
    "FUN_00051794": "\nvoid FUN_00051794(undefined4 param_1,undefined4 param_2)\n\n{\n  FUN_0004fa10(param_1,0,param_2,0x80,0);\n  return;\n}\n\n",
    "FUN_000517f8": "\nvoid FUN_000517f8(undefined4 param_1,undefined4 param_2,uint param_3)\n\n{\n  if (param_3 != 0) {\n    param_3 = 0xff;\n  }\n  FUN_0004fa10(param_1,0,param_2,0x20,param_3 & 0xffff);\n  return;\n}\n\n",
    "FUN_0005182c": "\nvoid FUN_0005182c(undefined4 param_1,int param_2)\n\n{\n  byte bVar1;\n  undefined4 local_14;\n  \n  FUN_00051a20(0,param_1,0,0x34,&local_14);\n  if (param_2 == 0) {\n    bVar1 = (byte)local_14 & 0xf7;\n  }\n  else {\n    bVar1 = (byte)local_14 | 8;\n  }\n  local_14 = CONCAT31(local_14._1_3_,bVar1);\n  FUN_0004fa10(param_1,1,0,0x34,local_14);\n  return;\n}\n\n",
    "FUN_00051890": "\nvoid FUN_00051890(undefined4 param_1,undefined4 param_2,int param_3)\n\n{\n  byte bVar1;\n  undefined4 local_14;\n  \n  FUN_00051a20(1,param_1,param_2,0x34,&local_14);\n  if (param_3 == 0) {\n    bVar1 = (byte)local_14 & 0xf7;\n  }\n  else {\n    bVar1 = (byte)local_14 | 8;\n  }\n  local_14 = CONCAT31(local_14._1_3_,bVar1);\n  FUN_0004fa10(param_1,0,param_2,0x34,local_14);\n  return;\n}\n\n",
    "FUN_0005193c": "\nvoid FUN_0005193c(undefined4 param_1,undefined4 param_2,uint param_3)\n\n{\n  FUN_0004fa10(param_1,0,param_2,0x3c,(param_3 & 0xf) << 8 | 0x80000000);\n  return;\n}\n\n",
    "FUN_00051970": "\nuint FUN_00051970(uint param_1)\n\n{\n  return param_1 >> 0x18;\n}\n\n",
    "FUN_00051978": "\nundefined FUN_00051978(int param_1)\n\n{\n  undefined uVar1;\n  \n  uVar1 = FUN_0005f880((uint)(param_1 << 8) >> 0x18);\n  return uVar1;\n}\n\n",
    "FUN_0005198c": "\nundefined4 FUN_0005198c(uint param_1)\n\n{\n  undefined *__dest;\n  undefined *puVar1;\n  uint uVar2;\n  \n  if (param_1 < 4) {\n    uVar2 = 0;\n    do {\n      if (param_1 == uVar2) {\n        __dest = &DAT_005059e0 + param_1 * 0x20000;\n        do {\n          puVar1 = __dest + 0x200;\n          memcpy(__dest,&DAT_0007f588,0x200);\n          __dest = puVar1;\n        } while (puVar1 != (undefined *)(param_1 * 0x20000 + 0x5259e0));\n        memcpy(&DAT_005051c8 + param_1 * 0x200,&DAT_0007f588,0x200);\n      }\n      uVar2 = uVar2 + 1;\n    } while (uVar2 != 4);\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
    "FUN_00051a20": "\nundefined4 FUN_00051a20(int param_1,uint param_2,uint param_3,int param_4,undefined4 *param_5)\n\n{\n  uint uVar1;\n  int iVar2;\n  undefined *puVar3;\n  undefined4 uVar4;\n  \n  uVar1 = (uint)(param_4 << 0x16) >> 0x18;\n  if (param_2 < 4) {\n    if (param_3 < 0x100) {\n      if (uVar1 < 0x40) {\n        pthread_mutex_lock((pthread_mutex_t *)&DAT_005059c8);\n        if (param_1 == 0) {\n          iVar2 = uVar1 + param_2 * 0x40;\n          if (*(int *)(&DAT_005051c8 + iVar2 * 8) == param_4) {\n            puVar3 = &DAT_005051c8 + iVar2 * 8;\nLAB_00051b00:\n            *param_5 = *(undefined4 *)(puVar3 + 4);\n            pthread_mutex_unlock((pthread_mutex_t *)&DAT_005059c8);\n            return 0;\n          }\n          uVar4 = 0xfffffffc;\n          pthread_mutex_unlock((pthread_mutex_t *)&DAT_005059c8);\n        }\n        else if (param_1 == 1) {\n          iVar2 = uVar1 + (param_3 + param_2 * 0x100) * 0x40;\n          if (*(int *)(&DAT_005059e0 + iVar2 * 8) == param_4) {\n            puVar3 = &DAT_005059e0 + iVar2 * 8;\n            goto LAB_00051b00;\n          }\n          uVar4 = 0xfffffffb;\n          pthread_mutex_unlock((pthread_mutex_t *)&DAT_005059c8);\n        }\n        else {\n          uVar4 = 0xfffffffa;\n          pthread_mutex_unlock((pthread_mutex_t *)&DAT_005059c8);\n        }\n        printf(\"[%s] level::%d, which_chain::%u, which_asic::%u, register_address::%02x failed.\\r\\n\"\n               ,\"get_register_cache_value\",param_1,param_2,param_3,param_4);\n      }\n      else {\n        uVar4 = 0xfffffffd;\n      }\n    }\n    else {\n      uVar4 = 0xfffffffe;\n    }\n  }\n  else {\n    uVar4 = 0xffffffff;\n  }\n  return uVar4;\n}\n\n",
    "FUN_00051b44": "\nundefined4 FUN_00051b44(int param_1,uint param_2,uint param_3,uint param_4,undefined4 param_5)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined *puVar3;\n  undefined4 uVar4;\n  int iVar5;\n  \n  if (param_2 < 4) {\n    if (param_3 < 0x100) {\n      uVar2 = param_4 >> 2;\n      if (uVar2 < 0x41) {\n        pthread_mutex_lock((pthread_mutex_t *)&DAT_005059c8);\n        if (param_1 == 0) {\n          iVar5 = uVar2 + param_2 * 0x40;\n          if (*(uint *)(&DAT_005051c8 + iVar5 * 8) == param_4) {\n            iVar1 = (uVar2 + param_2 * 0x4000) * 8;\n            *(undefined4 *)(&DAT_005051cc + iVar5 * 8) = param_5;\n            puVar3 = &DAT_005059e0 + iVar1;\n            do {\n              *(undefined4 *)(puVar3 + 4) = param_5;\n              puVar3 = puVar3 + 0x200;\n            } while (puVar3 != (undefined *)(iVar1 + 0x5259e0));\n            pthread_mutex_unlock((pthread_mutex_t *)&DAT_005059c8);\n            return 0;\n          }\n          uVar4 = 0xfffffffc;\n          pthread_mutex_unlock((pthread_mutex_t *)&DAT_005059c8);\n        }\n        else if (param_1 == 1) {\n          iVar5 = uVar2 + (param_3 + param_2 * 0x100) * 0x40;\n          if (*(uint *)(&DAT_005059e0 + iVar5 * 8) == param_4) {\n            *(undefined4 *)(&DAT_005059e4 + iVar5 * 8) = param_5;\n            pthread_mutex_unlock((pthread_mutex_t *)&DAT_005059c8);\n            return 0;\n          }\n          uVar4 = 0xfffffffb;\n          pthread_mutex_unlock((pthread_mutex_t *)&DAT_005059c8);\n        }\n        else {\n          uVar4 = 0xfffffffa;\n          pthread_mutex_unlock((pthread_mutex_t *)&DAT_005059c8);\n        }\n        printf(\"[%s] level::%d, which_chain::%u, which_asic::%u, register_address::%02x failed.\\r\\n\"\n               ,\"set_register_cache_value\",param_1,param_2,param_3,param_4);\n      }\n      else {\n        uVar4 = 0xfffffffd;\n      }\n    }\n    else {\n      uVar4 = 0xfffffffe;\n    }\n  }\n  else {\n    uVar4 = 0xffffffff;\n  }\n  return uVar4;\n}\n\n",
    "FUN_00051cac": "\nundefined4\nFUN_00051cac(uint param_1,undefined param_2,undefined param_3,undefined4 param_4,undefined4 *param_5\n            )\n\n{\n  byte bVar1;\n  undefined4 uVar2;\n  \n  if (param_5 == (undefined4 *)0x0) {\n    uVar2 = 0xffffffff;\n  }\n  else {\n    uVar2 = 0;\n    *param_5 = 0;\n    if (param_1 != 0) {\n      param_1 = 1;\n    }\n    *(undefined *)((int)param_5 + 3) = param_3;\n    *(char *)((int)param_5 + 7) = (char)param_4;\n    *(undefined *)((int)param_5 + 2) = param_2;\n    *(char *)(param_5 + 1) = (char)((uint)param_4 >> 0x18);\n    *(char *)((int)param_5 + 5) = (char)((uint)param_4 >> 0x10);\n    *(char *)((int)param_5 + 6) = (char)((uint)param_4 >> 8);\n    *(undefined *)(param_5 + 2) = 0;\n    *(byte *)param_5 = (byte)((param_1 & 1) << 4) | 0x41;\n    *(undefined *)((int)param_5 + 1) = 9;\n    bVar1 = FUN_00051f28(param_5,0x40);\n    *(byte *)(param_5 + 2) = *(byte *)(param_5 + 2) & 0xe0 | bVar1 & 0x1f;\n  }\n  return uVar2;\n}\n\n",
    "FUN_00051d44": "\nundefined4 FUN_00051d44(undefined param_1,undefined4 *param_2)\n\n{\n  byte bVar1;\n  undefined4 uVar2;\n  \n  if (param_2 == (undefined4 *)0x0) {\n    uVar2 = 0xffffffff;\n  }\n  else {\n    uVar2 = 0;\n    *param_2 = 0;\n    *(undefined *)(param_2 + 1) = 0;\n    *(undefined *)((int)param_2 + 2) = param_1;\n    *(undefined *)((int)param_2 + 1) = 5;\n    *(undefined *)param_2 = 0x40;\n    bVar1 = FUN_00051f28(param_2,0x20);\n    *(byte *)(param_2 + 1) = *(byte *)(param_2 + 1) & 0xe0 | bVar1 & 0x1f;\n  }\n  return uVar2;\n}\n\n",
    "FUN_00051d98": "\nundefined4 FUN_00051d98(uint param_1,undefined param_2,undefined param_3,undefined4 *param_4)\n\n{\n  byte bVar1;\n  undefined4 uVar2;\n  \n  if (param_4 == (undefined4 *)0x0) {\n    uVar2 = 0xffffffff;\n  }\n  else {\n    uVar2 = 0;\n    *param_4 = 0;\n    if (param_1 != 0) {\n      param_1 = 1;\n    }\n    *(undefined *)((int)param_4 + 3) = param_3;\n    *(undefined *)((int)param_4 + 2) = param_2;\n    *(undefined *)(param_4 + 1) = 0;\n    *(undefined *)((int)param_4 + 1) = 5;\n    *(byte *)param_4 = (byte)((param_1 & 1) << 4) | 0x42;\n    bVar1 = FUN_00051f28(param_4,0x20);\n    *(byte *)(param_4 + 1) = *(byte *)(param_4 + 1) & 0xe0 | bVar1 & 0x1f;\n  }\n  return uVar2;\n}\n\n",
    "FUN_00051e08": "\nundefined4 FUN_00051e08(undefined4 *param_1)\n\n{\n  byte bVar1;\n  undefined4 uVar2;\n  \n  if (param_1 == (undefined4 *)0x0) {\n    uVar2 = 0xffffffff;\n  }\n  else {\n    uVar2 = 0;\n    *param_1 = 0;\n    *(undefined *)(param_1 + 1) = 0;\n    *(undefined *)((int)param_1 + 1) = 5;\n    *(undefined *)param_1 = 0x53;\n    bVar1 = FUN_00051f28(param_1,0x20);\n    *(byte *)(param_1 + 1) = *(byte *)(param_1 + 1) & 0xe0 | bVar1 & 0x1f;\n  }\n  return uVar2;\n}\n\n",
    "FUN_00051e54": "\nundefined4 FUN_00051e54(undefined4 param_1,int param_2,uint param_3)\n\n{\n  int iVar1;\n  uint *unaff_r4;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint local_24;\n  undefined4 local_20;\n  undefined4 local_1c;\n  \n  uVar4 = 0;\n  local_24 = 0;\n  if (param_3 != 0) {\n    unaff_r4 = &local_24;\n  }\n  local_20 = 0;\n  local_1c = 0;\n  if (param_3 != 0) {\nLAB_00051e80:\n    do {\n      iVar1 = 0;\n      uVar3 = uVar4;\n      while (uVar3 < param_3) {\n        uVar3 = *unaff_r4;\n        if (iVar1 == 0) {\n          *unaff_r4 = uVar3 | (uint)*(byte *)(param_2 + uVar4) << 0x18;\n        }\n        else {\n          uVar2 = (uint)*(byte *)(param_2 + uVar4 + iVar1);\n          if (iVar1 == 1) {\n            *unaff_r4 = uVar3 | uVar2 << 0x10;\n          }\n          else if (iVar1 == 2) {\n            *unaff_r4 = uVar3 | uVar2 << 8;\n          }\n          else {\n            *unaff_r4 = uVar2 | uVar3;\n            if (iVar1 == 3) {\n              uVar4 = uVar4 + 4;\n              unaff_r4 = unaff_r4 + 1;\n              if (param_3 <= uVar4) goto LAB_00051ecc;\n              goto LAB_00051e80;\n            }\n          }\n        }\n        iVar1 = iVar1 + 1;\n        uVar3 = uVar4 + iVar1;\n      }\n      uVar4 = uVar4 + 4;\n      unaff_r4 = unaff_r4 + 1;\n    } while (uVar4 < param_3);\n  }\nLAB_00051ecc:\n  FUN_000457e0(&local_24,param_1);\n  return 0;\n}\n\n",
    "FUN_00051f28": "\nuint FUN_00051f28(byte *param_1,uint param_2)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  char cVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  \n  if (param_2 != 0) {\n    cVar4 = '\\0';\n    uVar12 = 0;\n    uVar7 = 0x80;\n    uVar5 = 1;\n    uVar1 = 1;\n    uVar2 = 1;\n    uVar3 = 1;\n    uVar9 = 1;\n    do {\n      uVar6 = uVar9;\n      uVar11 = uVar3;\n      uVar10 = uVar2;\n      uVar9 = uVar1;\n      uVar8 = uVar5;\n      cVar4 = cVar4 + '\\x01';\n      uVar12 = uVar12 + 1 & 0xff;\n      uVar5 = *param_1 & uVar7;\n      uVar7 = uVar7 >> 1;\n      if (uVar5 != 0) {\n        uVar6 = uVar6 ^ 1;\n      }\n      if (cVar4 == '\\b') {\n        param_1 = param_1 + 1;\n        cVar4 = '\\0';\n        uVar7 = 0x80;\n      }\n      uVar5 = uVar10;\n      uVar1 = uVar11;\n      uVar2 = uVar6;\n      uVar3 = uVar6 ^ uVar8;\n    } while (uVar12 < param_2);\n    if (uVar9 == 0) {\n      uVar7 = 0;\n    }\n    else {\n      uVar7 = 0x10;\n    }\n    if (uVar11 != 0) {\n      uVar7 = uVar7 | 8;\n    }\n    if (uVar6 != uVar8) {\n      uVar7 = uVar7 | 4;\n    }\n    if (uVar10 != 0) {\n      uVar7 = uVar7 | 2;\n    }\n    if (uVar6 != 0) {\n      uVar7 = uVar7 | 1;\n    }\n    return uVar7;\n  }\n  return 0x1f;\n}\n\n",
    "FUN_00052050": "\nundefined4 FUN_00052050(uint *param_1)\n\n{\n  pthread_t __th;\n  int iVar1;\n  int iVar2;\n  size_t sVar3;\n  void *__buf;\n  ssize_t sVar4;\n  uint uVar5;\n  code *pcVar6;\n  undefined4 local_260;\n  socklen_t local_25c;\n  undefined4 local_258;\n  undefined4 local_254;\n  undefined4 local_250;\n  undefined4 local_24c;\n  sockaddr local_248;\n  sockaddr sStack_238;\n  undefined4 local_228;\n  undefined auStack_224 [252];\n  undefined4 local_128;\n  undefined auStack_124 [256];\n  \n  __th = pthread_self();\n  pthread_detach(__th);\n  local_258 = 0;\n  local_254 = 0;\n  local_250 = 0;\n  local_24c = 0;\n  sprintf((char *)&local_258,\"ct_b/fcb/%d\",*param_1);\n  prctl(0xf,&local_258);\n  local_248.sa_family = 2;\n  local_248.sa_data._2_4_ = inet_addr(\"127.0.0.1\");\n  iVar1 = socket(2,1,0);\n  if (iVar1 < 0) {\n    perror(\"socket error\");\n    return 0;\n  }\n  local_260 = 1;\n  iVar2 = setsockopt(iVar1,1,2,&local_260,4);\n  if (iVar2 < 0) {\n    perror(\"set sockopt err\");\n    return 0;\n  }\n  uVar5 = *param_1;\n  while( true ) {\n    local_248.sa_data._0_2_ = (ushort)((uVar5 & 0xff) << 8) | (ushort)(uVar5 >> 8) & 0xff;\n    iVar2 = bind(iVar1,&local_248,0x10);\n    if (-1 < iVar2) break;\n    perror(\"bind error\");\n    uVar5 = *param_1 + 1;\n    *param_1 = uVar5;\n  }\n  iVar2 = listen(iVar1,5);\n  if (iVar2 < 0) {\n    perror(\"listen error\");\n  }\n  else {\n    local_25c = 0x10;\n    param_1[0x24] = 1;\n    iVar1 = accept(iVar1,&sStack_238,&local_25c);\n    if (-1 < iVar1) {\n      local_228 = 0;\n      memset(auStack_224,0,0xfc);\n      sprintf((char *)&local_228,\"%x %s\\n\",0x3f,param_1 + 4);\n      sVar3 = strlen((char *)&local_228);\n      send(iVar1,&local_228,sVar3 + 1,0);\n      sVar3 = param_1[0x25];\n      __buf = malloc(sVar3);\n      sVar4 = recv(iVar1,__buf,sVar3,0);\n      if (0 < sVar4) {\n        *(undefined *)((int)__buf + sVar4) = 0;\n      }\n      do {\n        sVar4 = recv(iVar1,__buf,param_1[0x25],0);\n        if (sVar4 < 1) {\n          pcVar6 = (code *)0x0;\n        }\n        else {\n          pcVar6 = (code *)param_1[3];\n          if (pcVar6 != (code *)0x0) {\n            pcVar6 = (code *)(*pcVar6)(__buf);\n          }\n        }\n        local_128 = 0;\n        memset(auStack_124,0,0xfc);\n        sprintf((char *)&local_128,\"%x %d %s %s\",0x3f,pcVar6,param_1 + 4,&DAT_0006aee4);\n        sVar3 = strlen((char *)&local_128);\n        send(iVar1,&local_128,sVar3 + 1,0);\n      } while( true );\n    }\n    perror(\"accept error\");\n  }\n  return 0;\n}\n\n",
    "FUN_000522dc": "\nundefined4 FUN_000522dc(int param_1)\n\n{\n  pthread_t __th;\n  ssize_t sVar1;\n  int iVar2;\n  int *__arg;\n  int iVar3;\n  size_t sVar4;\n  int iVar5;\n  char *__s2;\n  int __fd;\n  undefined4 local_224;\n  pthread_t pStack_220;\n  undefined4 local_21c;\n  undefined4 uStack_218;\n  undefined4 local_214;\n  undefined4 local_210;\n  undefined4 local_20c;\n  undefined4 local_208;\n  undefined4 local_204;\n  undefined4 local_200;\n  undefined4 local_1fc;\n  undefined4 local_1f8;\n  undefined4 local_1f4;\n  undefined4 local_1f0;\n  undefined4 local_1ec;\n  undefined4 local_1e8;\n  undefined4 local_1e4;\n  undefined4 local_1e0;\n  undefined4 local_1dc;\n  undefined4 local_1d8;\n  undefined4 local_1d4;\n  undefined4 local_1d0;\n  pthread_attr_t pStack_1cc;\n  undefined4 local_1a8;\n  undefined auStack_1a4 [124];\n  undefined4 local_128;\n  undefined auStack_124 [256];\n  \n  __th = pthread_self();\n  pthread_detach(__th);\n  local_210 = 0;\n  local_21c._0_1_ = 'c';\n  local_21c._1_1_ = 't';\n  local_21c._2_1_ = '_';\n  local_21c._3_1_ = 'b';\n  uStack_218._0_1_ = '/';\n  uStack_218._1_1_ = 'm';\n  uStack_218._2_1_ = 'a';\n  uStack_218._3_1_ = 'i';\n  local_214 = 0x6e;\n  prctl(0xf,&local_21c);\n  pthread_attr_init(&pStack_1cc);\n  pthread_attr_setstacksize(&pStack_1cc,0x100000);\n  __fd = *(int *)(param_1 + 8);\n  do {\n    while( true ) {\n      while( true ) {\n        local_1a8 = 0;\n        memset(auStack_1a4,0,0x7c);\n        sVar1 = recv(__fd,&local_1a8,0x80,0);\n        if (sVar1 < 1) {\n          return 0;\n        }\n        auStack_1a4[sVar1 + -4] = 0;\n        local_20c = 0;\n        local_208 = 0;\n        local_1ec = 0;\n        local_1e8 = 0;\n        local_224 = 0;\n        local_204 = 0;\n        local_200 = 0;\n        local_1fc = 0;\n        local_1f8 = 0;\n        local_1f4 = 0;\n        local_1f0 = 0;\n        local_1e4 = 0;\n        local_1e0 = 0;\n        local_1dc = 0;\n        local_1d8 = 0;\n        local_1d4 = 0;\n        local_1d0 = 0;\n        __isoc99_sscanf(&local_1a8,\"%x%s%s\",&local_224,&local_1ec,&local_20c);\n        iVar2 = strcmp((char *)&local_1ec,\"regist\");\n        if (iVar2 == 0) break;\n        iVar2 = DAT_005859e0 + 1;\n        memcpy((void *)(DAT_005859e0 * 0x80 + 0x585a08),&local_1a8,0x80);\n        DAT_005859e0 = iVar2;\n      }\n      __arg = (int *)calloc(0x98,1);\n      iVar2 = DAT_005859e4;\n      if (DAT_005859e4 != 0) break;\nLAB_000525a0:\n      local_128 = 0;\n      memset(auStack_124,0,0xfc);\n      sprintf((char *)&local_128,\"%x %d %s %s %s\",0x3f,0,\"reg_resp\",\"no_name\",&local_20c);\n      sVar4 = strlen((char *)&local_128);\n      send(__fd,&local_128,sVar4 + 1,0);\n      free(__arg);\n    }\n    __s2 = &DAT_00589a0c;\n    iVar5 = 0;\n    do {\n      iVar3 = strcmp((char *)&local_20c,__s2);\n      __s2 = __s2 + 0x88;\n      if (iVar3 == 0) {\n        iVar3 = *(int *)(&DAT_00589a8c + iVar5 * 0x88);\n        __arg[3] = *(int *)(&DAT_00589a08 + iVar5 * 0x88);\n        __arg[0x25] = iVar3;\n        break;\n      }\n      iVar5 = iVar5 + 1;\n    } while (iVar5 != iVar2);\n    if (iVar2 == iVar5) goto LAB_000525a0;\n    *__arg = DAT_0007f788;\n    sVar4 = strlen((char *)&local_20c);\n    memcpy(__arg + 4,&local_20c,sVar4 + 1);\n    __arg[0x24] = 0;\n    pthread_create(&pStack_220,&pStack_1cc,FUN_00052050,__arg);\n    iVar2 = __arg[0x24];\n    while (iVar2 == 0) {\n      usleep(10000);\n      iVar2 = __arg[0x24];\n    }\n    iVar2 = *__arg;\n    local_128 = 0;\n    if (iVar2 != DAT_0007f788) {\n      DAT_0007f788 = iVar2;\n    }\n    memset(auStack_124,0,0xfc);\n    sprintf((char *)&local_128,\"%x %d %s %s %s\",0x3f,iVar2,\"reg_resp\",&DAT_0006aee4,&local_20c);\n    sVar4 = strlen((char *)&local_128);\n    send(__fd,&local_128,sVar4 + 1,0);\n    DAT_0007f788 = DAT_0007f788 + 1;\n  } while( true );\n}\n\n",
    "FUN_0005261c": "\nundefined4 FUN_0005261c(int param_1,int param_2)\n\n{\n  void *pvVar1;\n  in_addr_t iVar2;\n  int __fd;\n  int iVar3;\n  size_t sVar4;\n  ssize_t sVar5;\n  void *pvVar6;\n  undefined4 uVar7;\n  undefined *__dest;\n  void *pvVar8;\n  uint uVar9;\n  undefined4 local_470;\n  socklen_t local_46c;\n  pthread_t pStack_468;\n  sockaddr local_464;\n  sockaddr sStack_454;\n  pthread_attr_t pStack_444;\n  undefined4 local_420;\n  undefined auStack_41c [124];\n  undefined4 local_3a0;\n  undefined auStack_39c [124];\n  undefined4 uStack_320;\n  undefined4 uStack_31c;\n  undefined4 uStack_318;\n  undefined *puStack_314;\n  undefined auStack_310 [240];\n  undefined4 local_220;\n  undefined auStack_21c [512];\n  \n  if (DAT_005859e8 == 0) {\n    pthread_attr_init(&pStack_444);\n    pthread_attr_setstacksize(&pStack_444,0x100000);\n    pthread_mutex_init((pthread_mutex_t *)&DAT_005859ec,(pthread_mutexattr_t *)0x0);\n    DAT_005859e4 = param_2;\n    if (param_2 != 0) {\n      __dest = &DAT_00589a0c;\n      pvVar6 = (void *)(param_1 + 4);\n      do {\n        pvVar1 = memcpy(__dest,pvVar6,0x80);\n        pvVar8 = (void *)((int)pvVar6 + 0x88);\n        uVar7 = *(undefined4 *)((int)pvVar6 + -4);\n        __dest = (undefined *)((int)pvVar1 + 0x88);\n        *(undefined4 *)((int)pvVar1 + 0x80) = *(undefined4 *)((int)pvVar6 + 0x80);\n        *(undefined4 *)((int)pvVar1 + -4) = uVar7;\n        pvVar6 = pvVar8;\n      } while ((int)pvVar8 + (param_2 * -0x88 - (int)(void *)(param_1 + 4)) != 0);\n    }\n    local_464.sa_data[4] = '\\0';\n    local_464.sa_data[5] = '\\0';\n    local_464.sa_data[6] = '\\0';\n    local_464.sa_data[7] = '\\0';\n    local_464.sa_data[8] = '\\0';\n    local_464.sa_data[9] = '\\0';\n    local_464.sa_data[10] = '\\0';\n    local_464.sa_data[11] = '\\0';\n    local_464.sa_data[12] = '\\0';\n    local_464.sa_data[13] = '\\0';\n    local_464.sa_data[0] = '\\0';\n    local_464.sa_data[1] = '\\0';\n    local_464.sa_data[2] = '\\0';\n    local_464.sa_data[3] = '\\0';\n    local_464.sa_family = 2;\n    iVar2 = inet_addr(\"127.0.0.1\");\n    local_464.sa_data._2_2_ = (undefined2)iVar2;\n    local_464.sa_data._4_2_ = (undefined2)(iVar2 >> 0x10);\n    local_470 = 1;\n    __fd = socket(2,1,0);\n    if (__fd < 0) {\n      uVar7 = 0xfffffffc;\n      perror(\"socket error\");\n    }\n    else {\n      iVar3 = setsockopt(__fd,1,2,&local_470,4);\n      if (iVar3 < 0) {\n        uVar7 = 0xfffffffc;\n        perror(\"set sockopt err\");\n      }\n      else {\n        uVar9 = 0x560a;\n        while( true ) {\n          local_464.sa_data._0_2_ = (ushort)((uVar9 & 0xff) << 8) | (ushort)(uVar9 >> 8) & 0xff;\n          uVar9 = uVar9 + 1;\n          iVar3 = bind(__fd,&local_464,0x10);\n          if (-1 < iVar3) break;\n          perror(\"bind error\");\n        }\n        iVar3 = listen(__fd,5);\n        if (iVar3 < 0) {\n          uVar7 = 0xfffffffc;\n          perror(\"listen error\");\n        }\n        else {\n          local_46c = 0x10;\n          iVar3 = accept(__fd,&sStack_454,&local_46c);\n          if (iVar3 < 0) {\n            uVar7 = 0xfffffffc;\n            perror(\"accept error\");\n          }\n          else {\n            local_420 = 0;\n            memset(auStack_41c,0,0x7c);\n            sprintf((char *)&local_420,\"Hello!0x%x\\n\",0x3f);\n            sVar4 = strlen((char *)&local_420);\n            send(iVar3,&local_420,sVar4 + 1,0);\n            DAT_005859e8 = 1;\n            local_220 = 0;\n            DAT_00585a04 = iVar3;\n            memset(auStack_21c,0,0x1fc);\n            sVar5 = recv(iVar3,&local_220,0x400,0);\n            if (0 < sVar5) {\n              auStack_21c[sVar5 + -4] = 0;\n            }\n            uStack_320 = 0x20333231;\n            uStack_31c = 0x20363534;\n            uStack_318 = 0x20393837;\n            puStack_314 = &DAT_00636261;\n            memset(auStack_310,0,0xf0);\n            send(iVar3,&uStack_320,0x10,0);\n            local_3a0 = 0;\n            memset(auStack_39c,0,0x7c);\n            sVar5 = recv(iVar3,&local_3a0,0x80,0);\n            if (0 < sVar5) {\n              auStack_39c[sVar5 + -4] = 0;\n            }\n            pvVar6 = malloc(0xc);\n            *(int *)((int)pvVar6 + 8) = iVar3;\n            *(int *)((int)pvVar6 + 4) = __fd;\n            pthread_create(&pStack_468,&pStack_444,FUN_000522dc,pvVar6);\n            uVar7 = 0;\n          }\n        }\n      }\n    }\n  }\n  else {\n    uVar7 = 0xffffffff;\n  }\n  return uVar7;\n}\n\n",
    "FUN_00052930": "\nundefined4 FUN_00052930(int param_1)\n\n{\n  pthread_mutex_t *__mutex;\n  size_t sVar1;\n  in_addr_t iVar2;\n  int iVar3;\n  int iVar4;\n  ssize_t sVar5;\n  undefined4 uVar6;\n  uint local_498;\n  undefined4 local_494;\n  sockaddr local_490;\n  undefined4 local_480;\n  undefined4 local_47c;\n  undefined4 local_478;\n  undefined4 local_474;\n  undefined4 local_470;\n  undefined4 local_46c;\n  undefined4 local_468;\n  undefined4 local_464;\n  undefined4 local_460;\n  undefined4 local_45c;\n  undefined4 local_458;\n  undefined4 local_454;\n  undefined4 local_450;\n  undefined4 local_44c;\n  undefined4 local_448;\n  undefined4 local_444;\n  undefined4 local_440;\n  undefined4 local_43c;\n  undefined4 local_438;\n  undefined4 local_434;\n  undefined4 local_430;\n  undefined4 local_42c;\n  undefined4 local_428;\n  undefined4 local_424;\n  undefined4 local_420;\n  undefined auStack_41c [124];\n  undefined *local_3a0;\n  undefined auStack_39c [124];\n  undefined4 local_320;\n  undefined auStack_31c [252];\n  undefined4 local_220;\n  undefined auStack_21c [512];\n  \n  if (DAT_005859e8 == 0) {\n    uVar6 = 0xffffffff;\n  }\n  else {\n    __mutex = (pthread_mutex_t *)malloc(0x24);\n    pthread_mutex_init(__mutex,(pthread_mutexattr_t *)0x0);\n    iVar4 = DAT_00585a04;\n    local_320 = 0;\n    memset(auStack_31c,0,0xfc);\n    sprintf((char *)&local_320,\"%x regist %s\",0x3f,param_1);\n    iVar3 = DAT_005859e0;\n    sVar1 = strlen((char *)&local_320);\n    send(iVar4,&local_320,sVar1 + 1,0);\n    local_420 = 0;\n    memset(auStack_41c,0,0x7c);\n    while (iVar3 == DAT_005859e0) {\n      usleep(1000);\n    }\n    memcpy(&local_420,(void *)(iVar3 * 0x80 + 0x585a08),0x80);\n    local_498 = 0;\n    local_494 = 0;\n    local_480 = 0;\n    local_47c = 0;\n    local_460 = 0;\n    local_45c = 0;\n    local_440 = 0;\n    local_43c = 0;\n    local_478 = 0;\n    local_474 = 0;\n    local_470 = 0;\n    local_46c = 0;\n    local_468 = 0;\n    local_464 = 0;\n    local_458 = 0;\n    local_454 = 0;\n    local_450 = 0;\n    local_44c = 0;\n    local_448 = 0;\n    local_444 = 0;\n    local_438 = 0;\n    local_434 = 0;\n    local_430 = 0;\n    local_42c = 0;\n    local_428 = 0;\n    local_424 = 0;\n    __isoc99_sscanf(&local_420,\"%x%d%s%s%s\",&local_494,&local_498,&local_480,&local_460,&local_440);\n    if (local_498 == 0) {\n      uVar6 = 0xfffffffc;\n    }\n    else {\n      local_490.sa_family = 2;\n      local_490.sa_data[0] = '\\0';\n      local_490.sa_data[1] = '\\0';\n      local_490.sa_data[2] = '\\0';\n      local_490.sa_data[3] = '\\0';\n      local_490.sa_data[4] = '\\0';\n      local_490.sa_data[5] = '\\0';\n      local_490.sa_data[6] = '\\0';\n      local_490.sa_data[7] = '\\0';\n      local_490.sa_data[8] = '\\0';\n      local_490.sa_data[9] = '\\0';\n      local_490.sa_data[10] = '\\0';\n      local_490.sa_data[11] = '\\0';\n      local_490.sa_data[12] = '\\0';\n      local_490.sa_data[13] = '\\0';\n      iVar2 = inet_addr(\"127.0.0.1\");\n      local_490.sa_data._2_2_ = (undefined2)iVar2;\n      local_490.sa_data._4_2_ = (undefined2)(iVar2 >> 0x10);\n      local_490.sa_data._0_2_ = (ushort)((local_498 & 0xff) << 8) | (ushort)(local_498 >> 8) & 0xff;\n      iVar3 = socket(2,1,0);\n      if (iVar3 < 0) {\n        perror(\"socket err:\");\n        uVar6 = 0xfffffffc;\n      }\n      else {\n        iVar4 = connect(iVar3,&local_490,0x10);\n        if (iVar4 < 0) {\n          perror(\"connect err:\");\n          uVar6 = 0xfffffffd;\n        }\n        else {\n          local_220 = 0;\n          memset(auStack_21c,0,0x1fc);\n          sVar5 = recv(iVar3,&local_220,0x200,0);\n          if (0 < sVar5) {\n            auStack_21c[sVar5 + -4] = 0;\n          }\n          memset(auStack_39c,0,0x7c);\n          local_3a0 = &DAT_00214b4f;\n          send(iVar3,&local_3a0,4,0);\n          uVar6 = 0;\n          *(int *)((int)__mutex + 0x20) = iVar3;\n          *(pthread_mutex_t **)(param_1 + 0x80) = __mutex;\n          __mutex[1].__data.__lock = local_498;\n        }\n      }\n    }\n  }\n  return uVar6;\n}\n\n",
    "FUN_00052bf0": "\nundefined4 FUN_00052bf0(int param_1,void *param_2,size_t param_3,int *param_4)\n\n{\n  int iVar1;\n  ssize_t sVar2;\n  undefined4 uVar3;\n  pthread_mutex_t *__mutex;\n  int local_160;\n  int local_15c;\n  int local_158;\n  int local_154;\n  int local_150;\n  int local_14c;\n  int local_148;\n  int local_144;\n  int local_140;\n  int local_13c;\n  int local_138;\n  int local_134;\n  int local_130;\n  int local_12c;\n  int local_128;\n  int local_124;\n  int local_120;\n  int local_11c;\n  int local_118;\n  undefined auStack_114 [252];\n  \n  if (DAT_005859e8 == 0) {\n    uVar3 = 0xffffffff;\n  }\n  else {\n    __mutex = *(pthread_mutex_t **)(param_1 + 0x80);\n    if (__mutex == (pthread_mutex_t *)0x0) {\n      uVar3 = 0xfffffffe;\n    }\n    else {\n      iVar1 = pthread_mutex_trylock(__mutex);\n      if (iVar1 == 0) {\n        sVar2 = send(*(int *)((int)__mutex + 0x20),param_2,param_3,0);\n        if (sVar2 < 1) {\n          uVar3 = 0xfffffffc;\n          pthread_mutex_unlock(__mutex);\n        }\n        else {\n          local_118 = iVar1;\n          memset(auStack_114,0,0xfc);\n          sVar2 = recv(*(int *)((int)__mutex + 0x20),&local_118,0x100,0);\n          local_160 = iVar1;\n          local_15c = iVar1;\n          local_158 = iVar1;\n          local_154 = iVar1;\n          local_150 = iVar1;\n          local_14c = iVar1;\n          local_148 = iVar1;\n          local_144 = iVar1;\n          local_140 = iVar1;\n          local_13c = iVar1;\n          local_138 = iVar1;\n          local_134 = iVar1;\n          local_130 = iVar1;\n          local_12c = iVar1;\n          local_128 = iVar1;\n          local_124 = iVar1;\n          local_120 = iVar1;\n          local_11c = iVar1;\n          if (0 < sVar2) {\n            __isoc99_sscanf(&local_118,&DAT_0006af6c,&local_160,&local_15c,&local_158,&local_138);\n          }\n          if (param_4 != (int *)0x0) {\n            *param_4 = local_15c;\n          }\n          pthread_mutex_unlock(__mutex);\n          uVar3 = 0;\n        }\n      }\n      else {\n        uVar3 = 0xfffffffd;\n      }\n    }\n  }\n  return uVar3;\n}\n\n",
    "FUN_00052d68": "\nvoid FUN_00052d68(void)\n\n{\n  if (DAT_0058de0c != 0) {\n    FUN_00055d5c();\n  }\n  DAT_0058de0c = 0;\n  DAT_0058de10 = 0;\n  if (DAT_0058de14 != 0) {\n    FUN_000584a4();\n  }\n  DAT_0058de14 = 0;\n  if (DAT_0099eec8 != 0) {\n    FUN_00056e0c();\n  }\n  DAT_0099eec8 = 0;\n  return;\n}\n\n",
    "FUN_00052dcc": "\nundefined4 FUN_00052dcc(undefined4 param_1)\n\n{\n  int iVar1;\n  \n  if (DAT_0058de18 == 0) {\n    iVar1 = pthread_key_create(&DAT_0058de08,FUN_0005cfa8);\n    if (iVar1 != 0) {\n      FUN_0005df98(2,\"src/zlog.c\",0x4c,\"pthread_key_create fail, rc[%d]\",iVar1);\n      goto LAB_00052e88;\n    }\n    iVar1 = FUN_00060318(&LAB_00052d44);\n    if (iVar1 != 0) {\n      FUN_0005df98(2,\"src/zlog.c\",0x55,\"atexit fail, rc[%d]\",iVar1);\n      goto LAB_00052e88;\n    }\n    DAT_0058de18 = 1;\n  }\n  DAT_0099eec8 = FUN_00056eb8(param_1);\n  if (DAT_0099eec8 == 0) {\n    FUN_0005df98(2,\"src/zlog.c\",0x5d,\"zlog_conf_new[%s] fail\",param_1);\n  }\n  else {\n    DAT_0058de0c = FUN_00055db8();\n    if (DAT_0058de0c == 0) {\n      FUN_0005df98(2,\"src/zlog.c\",99,\"zlog_category_table_new fail\");\n    }\n    else {\n      DAT_0058de14 = FUN_00058500();\n      if (DAT_0058de14 != 0) {\n        return 0;\n      }\n      FUN_0005df98(2,\"src/zlog.c\",0x69,\"zlog_record_table_new fail\");\n    }\n  }\nLAB_00052e88:\n  FUN_00052d68();\n  return 0xffffffff;\n}\n\n",
    "FUN_00052f1c": "\nundefined4 FUN_00052f1c(char *param_1)\n\n{\n  int iVar1;\n  char *pcVar2;\n  char *pcVar3;\n  char *pcVar4;\n  \n  FUN_0005df98(0,\"src/zlog.c\",0x77,\"------zlog_init start------\");\n  pcVar4 = \"1.2.12\";\n  pcVar3 = \"16:28:36\";\n  pcVar2 = \"Dec  6 2022\";\n  FUN_0005df98(0,\"src/zlog.c\",0x78,\"------compile time[%s %s], version[%s]------\",\"Dec  6 2022\",\n               \"16:28:36\",\"1.2.12\");\n  iVar1 = pthread_rwlock_wrlock((pthread_rwlock_t *)&DAT_0058de1c);\n  if (iVar1 == 0) {\n    if (DAT_0058de3c == 0) {\n      iVar1 = FUN_00052dcc(param_1);\n      if (iVar1 == 0) {\n        DAT_0058de18 = DAT_0058de18 + 1;\n        DAT_0058de3c = 1;\n        FUN_0005df98(0,\"src/zlog.c\",0x8e,\"------zlog_init success end------\",pcVar2,pcVar3,pcVar4);\n        iVar1 = pthread_rwlock_unlock((pthread_rwlock_t *)&DAT_0058de1c);\n        if (iVar1 != 0) {\n          FUN_0005df98(2,\"src/zlog.c\",0x91,\"pthread_rwlock_unlock fail, rc=[%d]\",iVar1);\n          return 0xffffffff;\n        }\n        return 0;\n      }\n      FUN_0005df98(2,\"src/zlog.c\",0x87,\"zlog_init_inner[%s] fail\",param_1,pcVar3,pcVar4);\n      pcVar2 = param_1;\n    }\n    else {\n      FUN_0005df98(2,\"src/zlog.c\",0x81,\"already init, use zlog_reload pls\",pcVar2,pcVar3,pcVar4);\n    }\n    FUN_0005df98(2,\"src/zlog.c\",0x96,\"------zlog_init fail end------\",pcVar2,pcVar3,pcVar4);\n    iVar1 = pthread_rwlock_unlock((pthread_rwlock_t *)&DAT_0058de1c);\n    if (iVar1 != 0) {\n      FUN_0005df98(2,\"src/zlog.c\",0x99,\"pthread_rwlock_unlock fail, rc=[%d]\",iVar1);\n      return 0xffffffff;\n    }\n  }\n  else {\n    FUN_0005df98(2,\"src/zlog.c\",0x7c,\"pthread_rwlock_wrlock fail, rc[%d]\",iVar1,pcVar3,pcVar4);\n  }\n  return 0xffffffff;\n}\n\n",
    "FUN_000530ec": "\nundefined4 FUN_000530ec(char *param_1,char *param_2)\n\n{\n  int iVar1;\n  char *pcVar2;\n  char *pcVar3;\n  char *pcVar4;\n  \n  FUN_0005df98(0,\"src/zlog.c\",0xa2,\"------dzlog_init start------\");\n  pcVar4 = \"1.2.12\";\n  pcVar3 = \"16:28:36\";\n  pcVar2 = \"Dec  6 2022\";\n  FUN_0005df98(0,\"src/zlog.c\",0xa4,\"------compile time[%s %s], version[%s]------\",\"Dec  6 2022\",\n               \"16:28:36\",\"1.2.12\");\n  iVar1 = pthread_rwlock_wrlock((pthread_rwlock_t *)&DAT_0058de1c);\n  if (iVar1 == 0) {\n    if (DAT_0058de3c == 0) {\n      iVar1 = FUN_00052dcc(param_1);\n      if (iVar1 == 0) {\n        DAT_0058de10 = FUN_00055f6c(DAT_0058de0c,param_2,*(undefined4 *)(DAT_0099eec8 + 0x2448));\n        if (DAT_0058de10 != 0) {\n          DAT_0058de18 = DAT_0058de18 + 1;\n          DAT_0058de3c = 1;\n          FUN_0005df98(0,\"src/zlog.c\",0xc2,\"------dzlog_init success end------\",pcVar2,pcVar3,pcVar4\n                      );\n          iVar1 = pthread_rwlock_unlock((pthread_rwlock_t *)&DAT_0058de1c);\n          if (iVar1 != 0) {\n            FUN_0005df98(2,\"src/zlog.c\",0xc5,\"pthread_rwlock_unlock fail, rc=[%d]\",iVar1);\n            return 0xffffffff;\n          }\n          return 0;\n        }\n        FUN_0005df98(2,\"src/zlog.c\",0xbb,\"zlog_category_table_fetch_category[%s] fail\",param_2,\n                     pcVar3,pcVar4);\n        pcVar2 = param_2;\n      }\n      else {\n        FUN_0005df98(2,\"src/zlog.c\",0xb2,\"zlog_init_inner[%s] fail\",param_1,pcVar3,pcVar4);\n        pcVar2 = param_1;\n      }\n    }\n    else {\n      FUN_0005df98(2,\"src/zlog.c\",0xad,\"already init, use zlog_reload pls\",pcVar2,pcVar3,pcVar4);\n    }\n    FUN_0005df98(2,\"src/zlog.c\",0xca,\"------dzlog_init fail end------\",pcVar2,pcVar3,pcVar4);\n    iVar1 = pthread_rwlock_unlock((pthread_rwlock_t *)&DAT_0058de1c);\n    if (iVar1 != 0) {\n      FUN_0005df98(2,\"src/zlog.c\",0xcd,\"pthread_rwlock_unlock fail, rc=[%d]\",iVar1);\n      return 0xffffffff;\n    }\n  }\n  else {\n    FUN_0005df98(2,\"src/zlog.c\",0xa8,\"pthread_rwlock_wrlock fail, rc[%d]\",iVar1,pcVar3,pcVar4);\n  }\n  return 0xffffffff;\n}\n\n",
    "FUN_00053314": "\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nundefined4 FUN_00053314(int param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  int iVar4;\n  undefined4 uVar5;\n  \n  FUN_0005df98(0,\"src/zlog.c\",0xdb,\"------zlog_reload start------\");\n  iVar2 = pthread_rwlock_wrlock((pthread_rwlock_t *)&DAT_0058de1c);\n  if (iVar2 == 0) {\n    uVar5 = 0;\n    if (DAT_0058de3c == 0) {\n      FUN_0005df98(2,\"src/zlog.c\",0xe3,\"never call zlog_init() or dzlog_init() before\");\n    }\n    else {\n      if (param_1 == 0) {\n        param_1 = DAT_0099eec8;\n      }\n      if ((param_1 != -1) ||\n         (param_1 = DAT_0099eec8, *(uint *)(DAT_0099eec8 + 0x243c) < DAT_0058de40)) {\n        iVar4 = 0;\n        DAT_0058de40 = 0;\n        iVar2 = FUN_00056eb8(param_1);\n        if (iVar2 == 0) {\n          FUN_0005df98(2,\"src/zlog.c\",0xfa,\"zlog_conf_new fail\");\n          FUN_0005df98(1,\"src/zlog.c\",0x118,\"zlog_reload fail, use old conf file, still working\");\n        }\n        else {\n          piVar3 = *(int **)(iVar2 + 0x2448);\n          if (0 < piVar3[1]) {\n            do {\n              iVar1 = iVar4 * 4;\n              iVar4 = iVar4 + 1;\n              FUN_0005bccc(*(undefined4 *)(*piVar3 + iVar1),DAT_0058de14);\n              piVar3 = *(int **)(iVar2 + 0x2448);\n            } while (iVar4 < piVar3[1]);\n          }\n          iVar4 = FUN_00055e24(DAT_0058de0c);\n          if (iVar4 == 0) {\n            DAT_0058de18 = DAT_0058de18 + 1;\n            FUN_00055ebc(DAT_0058de0c);\n            FUN_00056e0c(DAT_0099eec8);\n            DAT_0099eec8 = iVar2;\n            FUN_0005df98(0,\"src/zlog.c\",0x10f,\n                         \"------zlog_reload success, total init verison[%d] ------\",DAT_0058de18);\n            iVar2 = pthread_rwlock_unlock((pthread_rwlock_t *)&DAT_0058de1c);\n            if (iVar2 == 0) {\n              return 0;\n            }\n            FUN_0005df98(2,\"src/zlog.c\",0x112,\"pthread_rwlock_unlock fail, rc=[%d]\",iVar2);\n            return 0xffffffff;\n          }\n          FUN_0005df98(2,\"src/zlog.c\",0x104,\"zlog_category_table_update fail\");\n          FUN_0005df98(1,\"src/zlog.c\",0x118,\"zlog_reload fail, use old conf file, still working\");\n          FUN_00056e0c(iVar2);\n        }\n        FUN_0005df98(2,\"src/zlog.c\",0x11b,\"------zlog_reload fail, total init version[%d] ------\",\n                     DAT_0058de18);\n        iVar2 = pthread_rwlock_unlock((pthread_rwlock_t *)&DAT_0058de1c);\n        if (iVar2 != 0) {\n          FUN_0005df98(2,\"src/zlog.c\",0x11e,\"pthread_rwlock_unlock fail, rc=[%d]\",iVar2);\n          return 0xffffffff;\n        }\n        return 0xffffffff;\n      }\n    }\n    FUN_0005df98(0,\"src/zlog.c\",0x123,\"------zlog_reload do nothing------\");\n    iVar2 = pthread_rwlock_unlock((pthread_rwlock_t *)&DAT_0058de1c);\n    if (iVar2 != 0) {\n      uVar5 = 0xffffffff;\n      FUN_0005df98(2,\"src/zlog.c\",0x126,\"pthread_rwlock_unlock fail, rc=[%d]\",iVar2);\n    }\n  }\n  else {\n    uVar5 = 0xffffffff;\n    FUN_0005df98(2,\"src/zlog.c\",0xde,\"pthread_rwlock_wrlock fail, rc[%d]\",iVar2);\n  }\n  return uVar5;\n}\n\n",
    "FUN_00053604": "\nvoid FUN_00053604(void)\n\n{\n  int iVar1;\n  \n  FUN_0005df98(0,\"src/zlog.c\",0x130,\"------zlog_fini start------\");\n  iVar1 = pthread_rwlock_wrlock((pthread_rwlock_t *)&DAT_0058de1c);\n  if (iVar1 == 0) {\n    if (DAT_0058de3c == 0) {\n      FUN_0005df98(2,\"src/zlog.c\",0x138,\"before finish, must zlog_init() or dzlog_init() fisrt\");\n    }\n    else {\n      FUN_00052d68();\n      DAT_0058de3c = 0;\n    }\n    FUN_0005df98(0,\"src/zlog.c\",0x140,\"------zlog_fini end------\");\n    iVar1 = pthread_rwlock_unlock((pthread_rwlock_t *)&DAT_0058de1c);\n    if (iVar1 != 0) {\n      FUN_0005df98(2,\"src/zlog.c\",0x143,\"pthread_rwlock_unlock fail, rc=[%d]\",iVar1);\n    }\n    return;\n  }\n  FUN_0005df98(2,\"src/zlog.c\",0x133,\"pthread_rwlock_wrlock fail, rc[%d]\",iVar1);\n  return;\n}\n\n",
    "FUN_000536f4": "\nint FUN_000536f4(int param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  \n  if (param_1 == 0) {\n    FUN_0005df98(2,\"src/zlog.c\",0x14e,\"cname is null or 0\");\n    iVar2 = 0;\n  }\n  else {\n    iVar2 = param_1;\n    FUN_0005df98(0,\"src/zlog.c\",0x14f,\"------zlog_get_category[%s] start------\",param_1);\n    iVar1 = pthread_rwlock_wrlock((pthread_rwlock_t *)&DAT_0058de1c);\n    if (iVar1 == 0) {\n      if (DAT_0058de3c == 0) {\n        FUN_0005df98(2,\"src/zlog.c\",0x157,\"never call zlog_init() or dzlog_init() before\",iVar2);\n      }\n      else {\n        iVar2 = FUN_00055f6c(DAT_0058de0c,param_1,*(undefined4 *)(DAT_0099eec8 + 0x2448));\n        if (iVar2 != 0) {\n          FUN_0005df98(0,\"src/zlog.c\",0x165,\"------zlog_get_category[%s] success, end------ \",\n                       param_1);\n          iVar1 = pthread_rwlock_unlock((pthread_rwlock_t *)&DAT_0058de1c);\n          if (iVar1 == 0) {\n            return iVar2;\n          }\n          FUN_0005df98(2,\"src/zlog.c\",0x168,\"pthread_rwlock_unlock fail, rc=[%d]\",iVar1);\n          return 0;\n        }\n        FUN_0005df98(2,\"src/zlog.c\",0x161,\"zlog_category_table_fetch_category[%s] fail\",param_1);\n      }\n      FUN_0005df98(2,\"src/zlog.c\",0x16d,\"------zlog_get_category[%s] fail, end------ \",param_1);\n      iVar2 = pthread_rwlock_unlock((pthread_rwlock_t *)&DAT_0058de1c);\n      if (iVar2 != 0) {\n        FUN_0005df98(2,\"src/zlog.c\",0x170,\"pthread_rwlock_unlock fail, rc=[%d]\",iVar2);\n        return 0;\n      }\n    }\n    else {\n      iVar2 = 0;\n      FUN_0005df98(2,\"src/zlog.c\",0x152,\"pthread_rwlock_wrlock fail, rc[%d]\",iVar1);\n    }\n  }\n  return iVar2;\n}\n\n",
    "FUN_000538c4": "\nundefined4 FUN_000538c4(int param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  \n  if (param_1 == 0) {\n    FUN_0005df98(2,\"src/zlog.c\",0x179,\"cname is null or 0\");\n  }\n  else {\n    iVar2 = param_1;\n    FUN_0005df98(0,\"src/zlog.c\",0x17b,\"------dzlog_set_category[%s] start------\",param_1);\n    iVar1 = pthread_rwlock_wrlock((pthread_rwlock_t *)&DAT_0058de1c);\n    if (iVar1 == 0) {\n      if (DAT_0058de3c == 0) {\n        FUN_0005df98(2,\"src/zlog.c\",0x183,\"never call zlog_init() or dzlog_init() before\",iVar2);\n      }\n      else {\n        DAT_0058de10 = FUN_00055f6c(DAT_0058de0c,param_1,*(undefined4 *)(DAT_0099eec8 + 0x2448));\n        if (DAT_0058de10 != 0) {\n          FUN_0005df98(0,\"src/zlog.c\",400,\"------dzlog_set_category[%s] end, success------ \",param_1\n                      );\n          iVar2 = pthread_rwlock_unlock((pthread_rwlock_t *)&DAT_0058de1c);\n          if (iVar2 != 0) {\n            FUN_0005df98(2,\"src/zlog.c\",0x193,\"pthread_rwlock_unlock fail, rc=[%d]\",iVar2);\n            return 0xffffffff;\n          }\n          return 0;\n        }\n        FUN_0005df98(2,\"src/zlog.c\",0x18c,\"zlog_category_table_fetch_category[%s] fail\",param_1);\n      }\n      FUN_0005df98(2,\"src/zlog.c\",0x198,\"------dzlog_set_category[%s] end, fail------ \",param_1);\n      iVar2 = pthread_rwlock_unlock((pthread_rwlock_t *)&DAT_0058de1c);\n      if (iVar2 != 0) {\n        FUN_0005df98(2,\"src/zlog.c\",0x19b,\"pthread_rwlock_unlock fail, rc=[%d]\",iVar2);\n        return 0xffffffff;\n      }\n    }\n    else {\n      FUN_0005df98(2,\"src/zlog.c\",0x17e,\"pthread_rwlock_wrlock fail, rc[%d]\",iVar1);\n    }\n  }\n  return 0xffffffff;\n}\n\n",
    "FUN_00053a94": "\nundefined4 FUN_00053a94(int param_1,int param_2)\n\n{\n  int iVar1;\n  int *__pointer;\n  \n  if (param_1 == 0) {\n    FUN_0005df98(2,\"src/zlog.c\",0x1ce,\"key is null or 0\");\n    return 0xffffffff;\n  }\n  if (param_2 == 0) {\n    FUN_0005df98(2,\"src/zlog.c\",0x1cf,\"value is null or 0\");\n    return 0xffffffff;\n  }\n  iVar1 = pthread_rwlock_rdlock((pthread_rwlock_t *)&DAT_0058de1c);\n  if (iVar1 != 0) {\n    FUN_0005df98(2,\"src/zlog.c\",0x1d3,\"pthread_rwlock_wrlock fail, rc[%d]\",iVar1);\n    return 0xffffffff;\n  }\n  if (DAT_0058de3c == 0) {\n    FUN_0005df98(2,\"src/zlog.c\",0x1d8,\"never call zlog_init() or dzlog_init() before\");\n    goto LAB_00053af0;\n  }\n  __pointer = (int *)pthread_getspecific(DAT_0058de08);\n  if (__pointer == (int *)0x0) {\n    __pointer = (int *)FUN_0005d07c(DAT_0058de18,*(undefined4 *)(DAT_0099eec8 + 0x41c),\n                                    *(undefined4 *)(DAT_0099eec8 + 0x420),\n                                    *(undefined4 *)(DAT_0099eec8 + 0x244c));\n    if (__pointer == (int *)0x0) {\n      FUN_0005df98(2,\"src/zlog.c\",0x1dc,\"zlog_thread_new fail\");\n      goto LAB_00053af0;\n    }\n    iVar1 = pthread_setspecific(DAT_0058de08,__pointer);\n    if (iVar1 != 0) {\n      FUN_0005cfa8(__pointer);\n      FUN_0005df98(2,\"src/zlog.c\",0x1dc,\"pthread_setspecific fail, rd[%d]\",iVar1);\n      goto LAB_00053af0;\n    }\n  }\n  if (*__pointer != DAT_0058de18) {\n    iVar1 = FUN_0005d290(__pointer,*(undefined4 *)(DAT_0099eec8 + 0x41c),\n                         *(undefined4 *)(DAT_0099eec8 + 0x420));\n    if ((iVar1 != 0) ||\n       (iVar1 = FUN_0005d3b0(__pointer,*(undefined4 *)(DAT_0099eec8 + 0x244c)), iVar1 != 0)) {\n      FUN_0005df98(2,\"src/zlog.c\",0x1dc,\"zlog_thread_resize_msg_buf fail, rd[%d]\",iVar1);\n      goto LAB_00053af0;\n    }\n    *__pointer = DAT_0058de18;\n  }\n  iVar1 = FUN_000580c0(__pointer[1],param_1,param_2);\n  if (iVar1 == 0) {\n    iVar1 = pthread_rwlock_unlock((pthread_rwlock_t *)&DAT_0058de1c);\n    if (iVar1 == 0) {\n      return 0;\n    }\n    FUN_0005df98(2,\"src/zlog.c\",0x1e5,\"pthread_rwlock_unlock fail, rc=[%d]\",iVar1);\n    return 0xffffffff;\n  }\n  FUN_0005df98(2,\"src/zlog.c\",0x1df,\"zlog_mdc_put fail, key[%s], value[%s]\",param_1,param_2);\nLAB_00053af0:\n  iVar1 = pthread_rwlock_unlock((pthread_rwlock_t *)&DAT_0058de1c);\n  if (iVar1 == 0) {\n    return 0xffffffff;\n  }\n  FUN_0005df98(2,\"src/zlog.c\",0x1ec,\"pthread_rwlock_unlock fail, rc=[%d]\",iVar1);\n  return 0xffffffff;\n}\n\n",
    "FUN_00053d3c": "\nint FUN_00053d3c(int param_1)\n\n{\n  int iVar1;\n  void *pvVar2;\n  int iVar3;\n  \n  if (param_1 == 0) {\n    FUN_0005df98(2,\"src/zlog.c\",0x1f8,\"key is null or 0\");\n    iVar3 = 0;\n  }\n  else {\n    iVar1 = pthread_rwlock_rdlock((pthread_rwlock_t *)&DAT_0058de1c);\n    if (iVar1 == 0) {\n      if (DAT_0058de3c == 0) {\n        FUN_0005df98(2,\"src/zlog.c\",0x201,\"never call zlog_init() or dzlog_init() before\");\n      }\n      else {\n        pvVar2 = pthread_getspecific(DAT_0058de08);\n        if (pvVar2 == (void *)0x0) {\n          FUN_0005df98(2,\"src/zlog.c\",0x207,\"thread not found, maybe not use zlog_put_mdc before\");\n        }\n        else {\n          iVar3 = FUN_000581b8(*(undefined4 *)((int)pvVar2 + 4),param_1);\n          if (iVar3 != 0) {\n            iVar1 = pthread_rwlock_unlock((pthread_rwlock_t *)&DAT_0058de1c);\n            if (iVar1 == 0) {\n              return iVar3;\n            }\n            FUN_0005df98(2,\"src/zlog.c\",0x213,\"pthread_rwlock_unlock fail, rc=[%d]\",iVar1);\n            return 0;\n          }\n          FUN_0005df98(2,\"src/zlog.c\",0x20d,\"key[%s] not found in mdc\",param_1);\n        }\n      }\n      iVar3 = pthread_rwlock_unlock((pthread_rwlock_t *)&DAT_0058de1c);\n      if (iVar3 != 0) {\n        FUN_0005df98(2,\"src/zlog.c\",0x21a,\"pthread_rwlock_unlock fail, rc=[%d]\",iVar3);\n        return 0;\n      }\n    }\n    else {\n      iVar3 = 0;\n      FUN_0005df98(2,\"src/zlog.c\",0x1fc,\"pthread_rwlock_rdlock fail, rc[%d]\",iVar1);\n    }\n  }\n  return iVar3;\n}\n\n",
    "FUN_00053ec8": "\nvoid FUN_00053ec8(int param_1)\n\n{\n  int iVar1;\n  void *pvVar2;\n  \n  if (param_1 == 0) {\n    FUN_0005df98(2,\"src/zlog.c\",0x225,\"key is null or 0\");\n    return;\n  }\n  iVar1 = pthread_rwlock_rdlock((pthread_rwlock_t *)&DAT_0058de1c);\n  if (iVar1 == 0) {\n    if (DAT_0058de3c == 0) {\n      FUN_0005df98(2,\"src/zlog.c\",0x22e,\"never call zlog_init() or dzlog_init() before\");\n    }\n    else {\n      pvVar2 = pthread_getspecific(DAT_0058de08);\n      if (pvVar2 == (void *)0x0) {\n        FUN_0005df98(2,\"src/zlog.c\",0x234,\"thread not found, maybe not use zlog_put_mdc before\");\n      }\n      else {\n        FUN_00058238(*(undefined4 *)((int)pvVar2 + 4),param_1);\n      }\n    }\n    iVar1 = pthread_rwlock_unlock((pthread_rwlock_t *)&DAT_0058de1c);\n    if (iVar1 != 0) {\n      FUN_0005df98(2,\"src/zlog.c\",0x23d,\"pthread_rwlock_unlock fail, rc=[%d]\",iVar1);\n    }\n    return;\n  }\n  FUN_0005df98(2,\"src/zlog.c\",0x229,\"pthread_rwlock_rdlock fail, rc[%d]\",iVar1);\n  return;\n}\n\n",
    "FUN_00053fe0": "\nvoid FUN_00053fe0(void)\n\n{\n  int iVar1;\n  void *pvVar2;\n  \n  iVar1 = pthread_rwlock_rdlock((pthread_rwlock_t *)&DAT_0058de1c);\n  if (iVar1 == 0) {\n    if (DAT_0058de3c == 0) {\n      FUN_0005df98(2,\"src/zlog.c\",0x24f,\"never call zlog_init() or dzlog_init() before\");\n    }\n    else {\n      pvVar2 = pthread_getspecific(DAT_0058de08);\n      if (pvVar2 == (void *)0x0) {\n        FUN_0005df98(2,\"src/zlog.c\",0x255,\"thread not found, maybe not use zlog_put_mdc before\");\n      }\n      else {\n        FUN_000581b0(*(undefined4 *)((int)pvVar2 + 4));\n      }\n    }\n    iVar1 = pthread_rwlock_unlock((pthread_rwlock_t *)&DAT_0058de1c);\n    if (iVar1 != 0) {\n      FUN_0005df98(2,\"src/zlog.c\",0x25e,\"pthread_rwlock_unlock fail, rc=[%d]\",iVar1);\n    }\n    return;\n  }\n  FUN_0005df98(2,\"src/zlog.c\",0x24a,\"pthread_rwlock_rdlock fail, rc[%d]\",iVar1);\n  return;\n}\n\n",
    "FUN_000540c8": "\nundefined4 FUN_000540c8(int param_1,uint param_2)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  \n  memset((void *)(param_1 + 0x408),0,0x20);\n  uVar2 = param_2 + 7;\n  if (-1 < (int)param_2) {\n    uVar2 = param_2;\n  }\n  uVar3 = param_2 & 7;\n  iVar1 = (int)uVar2 >> 3;\n  if ((int)param_2 < 1) {\n    uVar3 = -(-param_2 & 7);\n  }\n  *(byte *)(param_1 + iVar1 + 0x408) =\n       ~(byte)(0xff << (8 - uVar3 & 0xff)) | *(byte *)(param_1 + iVar1 + 0x408);\n  memset((void *)((int)(void *)(param_1 + 0x408) + iVar1 + 1),0xff,0x1f - iVar1);\n  return 0;\n}\n\n",
    "FUN_00054140": "\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nvoid FUN_00054140(int param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 undefined4 param_5,undefined4 param_6,uint param_7,undefined4 param_8,\n                 undefined4 param_9)\n\n{\n  int *__pointer;\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  \n  uVar3 = param_7 + 7;\n  if (-1 < (int)param_7) {\n    uVar3 = param_7;\n  }\n  uVar2 = param_7 & 7;\n  if ((int)param_7 < 1) {\n    uVar2 = -(-param_7 & 7);\n  }\n  if (((int)(uint)*(byte *)(param_1 + ((int)uVar3 >> 3) + 0x408) >> (7 - uVar2 & 0xff) & 1U) == 0) {\n    return;\n  }\n  pthread_rwlock_rdlock((pthread_rwlock_t *)&DAT_0058de1c);\n  if (DAT_0058de3c == 0) {\n    FUN_0005df98(2,\"src/zlog.c\",0x287,\"never call zlog_init() or dzlog_init() before\");\n    goto LAB_00054304;\n  }\n  __pointer = (int *)pthread_getspecific(DAT_0058de08);\n  if (__pointer == (int *)0x0) {\n    __pointer = (int *)FUN_0005d07c(DAT_0058de18,*(undefined4 *)(DAT_0099eec8 + 0x41c),\n                                    *(undefined4 *)(DAT_0099eec8 + 0x420),\n                                    *(undefined4 *)(DAT_0099eec8 + 0x244c));\n    if (__pointer == (int *)0x0) {\n      FUN_0005df98(2,\"src/zlog.c\",0x28b,\"zlog_thread_new fail\");\n      goto LAB_00054304;\n    }\n    iVar1 = pthread_setspecific(DAT_0058de08,__pointer);\n    if (iVar1 != 0) {\n      FUN_0005cfa8(__pointer);\n      FUN_0005df98(2,\"src/zlog.c\",0x28b,\"pthread_setspecific fail, rd[%d]\",iVar1);\n      goto LAB_00054304;\n    }\n  }\n  if (*__pointer != DAT_0058de18) {\n    iVar1 = FUN_0005d290(__pointer,*(undefined4 *)(DAT_0099eec8 + 0x41c),\n                         *(undefined4 *)(DAT_0099eec8 + 0x420));\n    if ((iVar1 != 0) ||\n       (iVar1 = FUN_0005d3b0(__pointer,*(undefined4 *)(DAT_0099eec8 + 0x244c)), iVar1 != 0)) {\n      FUN_0005df98(2,\"src/zlog.c\",0x28b,\"zlog_thread_resize_msg_buf fail, rd[%d]\",iVar1);\n      goto LAB_00054304;\n    }\n    *__pointer = DAT_0058de18;\n  }\n  FUN_00057540(__pointer[2],param_1,*(undefined4 *)(param_1 + 0x404),param_2,param_3,param_4,param_5\n               ,param_6,param_7,param_8,param_9);\n  iVar1 = FUN_00055c7c(param_1,__pointer);\n  if (iVar1 == 0) {\n    if ((*(uint *)(DAT_0099eec8 + 0x243c) != 0) &&\n       (DAT_0058de40 = DAT_0058de40 + 1, *(uint *)(DAT_0099eec8 + 0x243c) < DAT_0058de40)) {\n      pthread_rwlock_unlock((pthread_rwlock_t *)&DAT_0058de1c);\n      iVar1 = FUN_00053314(0xffffffff);\n      if (iVar1 == 0) {\n        return;\n      }\n      FUN_0005df98(2,\"src/zlog.c\",0x2a4,\n                   \"reach reload-conf-period but zlog_reload fail, zlog-chk-conf [file] see detail\")\n      ;\n      return;\n    }\n  }\n  else {\n    FUN_0005df98(2,\"src/zlog.c\",0x293,\"zlog_output fail, srcfile[%s], srcline[%ld]\",param_2,param_6)\n    ;\n  }\nLAB_00054304:\n  pthread_rwlock_unlock((pthread_rwlock_t *)&DAT_0058de1c);\n  return;\n}\n\n",
    "FUN_00054400": "\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nvoid FUN_00054400(int param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 undefined4 param_5,undefined4 param_6,uint param_7,undefined4 param_8,\n                 undefined4 param_9)\n\n{\n  int *__pointer;\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  \n  uVar3 = param_7 + 7;\n  if (-1 < (int)param_7) {\n    uVar3 = param_7;\n  }\n  uVar2 = param_7 & 7;\n  if ((int)param_7 < 1) {\n    uVar2 = -(-param_7 & 7);\n  }\n  if (((int)(uint)*(byte *)(param_1 + ((int)uVar3 >> 3) + 0x408) >> (7 - uVar2 & 0xff) & 1U) == 0) {\n    return;\n  }\n  pthread_rwlock_rdlock((pthread_rwlock_t *)&DAT_0058de1c);\n  if (DAT_0058de3c == 0) {\n    FUN_0005df98(2,\"src/zlog.c\",0x2b6,\"never call zlog_init() or dzlog_init() before\");\n    goto LAB_000545c4;\n  }\n  __pointer = (int *)pthread_getspecific(DAT_0058de08);\n  if (__pointer == (int *)0x0) {\n    __pointer = (int *)FUN_0005d07c(DAT_0058de18,*(undefined4 *)(DAT_0099eec8 + 0x41c),\n                                    *(undefined4 *)(DAT_0099eec8 + 0x420),\n                                    *(undefined4 *)(DAT_0099eec8 + 0x244c));\n    if (__pointer == (int *)0x0) {\n      FUN_0005df98(2,\"src/zlog.c\",0x2ba,\"zlog_thread_new fail\");\n      goto LAB_000545c4;\n    }\n    iVar1 = pthread_setspecific(DAT_0058de08,__pointer);\n    if (iVar1 != 0) {\n      FUN_0005cfa8(__pointer);\n      FUN_0005df98(2,\"src/zlog.c\",0x2ba,\"pthread_setspecific fail, rd[%d]\",iVar1);\n      goto LAB_000545c4;\n    }\n  }\n  if (*__pointer != DAT_0058de18) {\n    iVar1 = FUN_0005d290(__pointer,*(undefined4 *)(DAT_0099eec8 + 0x41c),\n                         *(undefined4 *)(DAT_0099eec8 + 0x420));\n    if ((iVar1 != 0) ||\n       (iVar1 = FUN_0005d3b0(__pointer,*(undefined4 *)(DAT_0099eec8 + 0x244c)), iVar1 != 0)) {\n      FUN_0005df98(2,\"src/zlog.c\",0x2ba,\"zlog_thread_resize_msg_buf fail, rd[%d]\",iVar1);\n      goto LAB_000545c4;\n    }\n    *__pointer = DAT_0058de18;\n  }\n  FUN_0005759c(__pointer[2],param_1,*(undefined4 *)(param_1 + 0x404),param_2,param_3,param_4,param_5\n               ,param_6,param_7,param_8,param_9);\n  iVar1 = FUN_00055c7c(param_1,__pointer);\n  if (iVar1 == 0) {\n    if ((*(uint *)(DAT_0099eec8 + 0x243c) != 0) &&\n       (DAT_0058de40 = DAT_0058de40 + 1, *(uint *)(DAT_0099eec8 + 0x243c) < DAT_0058de40)) {\n      pthread_rwlock_unlock((pthread_rwlock_t *)&DAT_0058de1c);\n      iVar1 = FUN_00053314(0xffffffff);\n      if (iVar1 == 0) {\n        return;\n      }\n      FUN_0005df98(2,\"src/zlog.c\",0x2d3,\n                   \"reach reload-conf-period but zlog_reload fail, zlog-chk-conf [file] see detail\")\n      ;\n      return;\n    }\n  }\n  else {\n    FUN_0005df98(2,\"src/zlog.c\",0x2c2,\"zlog_output fail, srcfile[%s], srcline[%ld]\",param_2,param_6)\n    ;\n  }\nLAB_000545c4:\n  pthread_rwlock_unlock((pthread_rwlock_t *)&DAT_0058de1c);\n  return;\n}\n\n",
    "FUN_000546c0": "\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nvoid FUN_000546c0(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 undefined4 param_5,uint param_6,undefined4 param_7,undefined4 param_8)\n\n{\n  int *__pointer;\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  \n  uVar2 = param_6 + 7;\n  if (-1 < (int)param_6) {\n    uVar2 = param_6;\n  }\n  uVar3 = param_6 & 7;\n  if ((int)param_6 < 1) {\n    uVar3 = -(-param_6 & 7);\n  }\n  if (((int)(uint)*(byte *)(DAT_0058de10 + ((int)uVar2 >> 3) + 0x408) >> (7 - uVar3 & 0xff) & 1U) ==\n      0) {\n    return;\n  }\n  pthread_rwlock_rdlock((pthread_rwlock_t *)&DAT_0058de1c);\n  if (DAT_0058de3c == 0) {\n    FUN_0005df98(2,\"src/zlog.c\",0x2e6,\"never call zlog_init() or dzlog_init() before\");\n    pthread_rwlock_unlock((pthread_rwlock_t *)&DAT_0058de1c);\n    return;\n  }\n  if (DAT_0058de10 == 0) {\n    FUN_0005df98(2,\"src/zlog.c\",0x2ed,\n                 \"zlog_default_category is null,dzlog_init() or dzlog_set_cateogry() is not called above\"\n                );\n    goto LAB_00054894;\n  }\n  __pointer = (int *)pthread_getspecific(DAT_0058de08);\n  if (__pointer == (int *)0x0) {\n    __pointer = (int *)FUN_0005d07c(DAT_0058de18,*(undefined4 *)(DAT_0099eec8 + 0x41c),\n                                    *(undefined4 *)(DAT_0099eec8 + 0x420),\n                                    *(undefined4 *)(DAT_0099eec8 + 0x244c));\n    if (__pointer == (int *)0x0) {\n      FUN_0005df98(2,\"src/zlog.c\",0x2f1,\"zlog_thread_new fail\");\n      goto LAB_00054894;\n    }\n    iVar1 = pthread_setspecific(DAT_0058de08,__pointer);\n    if (iVar1 != 0) {\n      FUN_0005cfa8(__pointer);\n      FUN_0005df98(2,\"src/zlog.c\",0x2f1,\"pthread_setspecific fail, rd[%d]\",iVar1);\n      goto LAB_00054894;\n    }\n  }\n  if (*__pointer != DAT_0058de18) {\n    iVar1 = FUN_0005d290(__pointer,*(undefined4 *)(DAT_0099eec8 + 0x41c),\n                         *(undefined4 *)(DAT_0099eec8 + 0x420));\n    if ((iVar1 != 0) ||\n       (iVar1 = FUN_0005d3b0(__pointer,*(undefined4 *)(DAT_0099eec8 + 0x244c)), iVar1 != 0)) {\n      FUN_0005df98(2,\"src/zlog.c\",0x2f1,\"zlog_thread_resize_msg_buf fail, rd[%d]\",iVar1);\n      goto LAB_00054894;\n    }\n    *__pointer = DAT_0058de18;\n  }\n  FUN_00057540(__pointer[2],DAT_0058de10,*(undefined4 *)(DAT_0058de10 + 0x404),param_1,param_2,\n               param_3,param_4,param_5,param_6,param_7,param_8);\n  iVar1 = FUN_00055c7c(DAT_0058de10,__pointer);\n  if (iVar1 == 0) {\n    if ((*(uint *)(DAT_0099eec8 + 0x243c) != 0) &&\n       (DAT_0058de40 = DAT_0058de40 + 1, *(uint *)(DAT_0099eec8 + 0x243c) < DAT_0058de40)) {\n      pthread_rwlock_unlock((pthread_rwlock_t *)&DAT_0058de1c);\n      iVar1 = FUN_00053314(0xffffffff);\n      if (iVar1 == 0) {\n        return;\n      }\n      FUN_0005df98(2,\"src/zlog.c\",0x30a,\n                   \"reach reload-conf-period but zlog_reload fail, zlog-chk-conf [file] see detail\")\n      ;\n      return;\n    }\n  }\n  else {\n    FUN_0005df98(2,\"src/zlog.c\",0x2f9,\"zlog_output fail, srcfile[%s], srcline[%ld]\",param_1,param_5)\n    ;\n  }\nLAB_00054894:\n  pthread_rwlock_unlock((pthread_rwlock_t *)&DAT_0058de1c);\n  return;\n}\n\n",
    "FUN_000549b8": "\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nvoid FUN_000549b8(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 undefined4 param_5,uint param_6,undefined4 param_7,undefined4 param_8)\n\n{\n  int *__pointer;\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  \n  uVar2 = param_6 + 7;\n  if (-1 < (int)param_6) {\n    uVar2 = param_6;\n  }\n  uVar3 = param_6 & 7;\n  if ((int)param_6 < 1) {\n    uVar3 = -(-param_6 & 7);\n  }\n  if (((int)(uint)*(byte *)(DAT_0058de10 + ((int)uVar2 >> 3) + 0x408) >> (7 - uVar3 & 0xff) & 1U) ==\n      0) {\n    return;\n  }\n  pthread_rwlock_rdlock((pthread_rwlock_t *)&DAT_0058de1c);\n  if (DAT_0058de3c == 0) {\n    FUN_0005df98(2,\"src/zlog.c\",0x31b,\"never call zlog_init() or dzlog_init() before\");\n    pthread_rwlock_unlock((pthread_rwlock_t *)&DAT_0058de1c);\n    return;\n  }\n  if (DAT_0058de10 == 0) {\n    FUN_0005df98(2,\"src/zlog.c\",0x322,\n                 \"zlog_default_category is null,dzlog_init() or dzlog_set_cateogry() is not called above\"\n                );\n    goto LAB_00054b8c;\n  }\n  __pointer = (int *)pthread_getspecific(DAT_0058de08);\n  if (__pointer == (int *)0x0) {\n    __pointer = (int *)FUN_0005d07c(DAT_0058de18,*(undefined4 *)(DAT_0099eec8 + 0x41c),\n                                    *(undefined4 *)(DAT_0099eec8 + 0x420),\n                                    *(undefined4 *)(DAT_0099eec8 + 0x244c));\n    if (__pointer == (int *)0x0) {\n      FUN_0005df98(2,\"src/zlog.c\",0x326,\"zlog_thread_new fail\");\n      goto LAB_00054b8c;\n    }\n    iVar1 = pthread_setspecific(DAT_0058de08,__pointer);\n    if (iVar1 != 0) {\n      FUN_0005cfa8(__pointer);\n      FUN_0005df98(2,\"src/zlog.c\",0x326,\"pthread_setspecific fail, rd[%d]\",iVar1);\n      goto LAB_00054b8c;\n    }\n  }\n  if (*__pointer != DAT_0058de18) {\n    iVar1 = FUN_0005d290(__pointer,*(undefined4 *)(DAT_0099eec8 + 0x41c),\n                         *(undefined4 *)(DAT_0099eec8 + 0x420));\n    if ((iVar1 != 0) ||\n       (iVar1 = FUN_0005d3b0(__pointer,*(undefined4 *)(DAT_0099eec8 + 0x244c)), iVar1 != 0)) {\n      FUN_0005df98(2,\"src/zlog.c\",0x326,\"zlog_thread_resize_msg_buf fail, rd[%d]\",iVar1);\n      goto LAB_00054b8c;\n    }\n    *__pointer = DAT_0058de18;\n  }\n  FUN_0005759c(__pointer[2],DAT_0058de10,*(undefined4 *)(DAT_0058de10 + 0x404),param_1,param_2,\n               param_3,param_4,param_5,param_6,param_7,param_8);\n  iVar1 = FUN_00055c7c(DAT_0058de10,__pointer);\n  if (iVar1 == 0) {\n    if ((*(uint *)(DAT_0099eec8 + 0x243c) != 0) &&\n       (DAT_0058de40 = DAT_0058de40 + 1, *(uint *)(DAT_0099eec8 + 0x243c) < DAT_0058de40)) {\n      pthread_rwlock_unlock((pthread_rwlock_t *)&DAT_0058de1c);\n      iVar1 = FUN_00053314(0xffffffff);\n      if (iVar1 == 0) {\n        return;\n      }\n      FUN_0005df98(2,\"src/zlog.c\",0x33f,\n                   \"reach reload-conf-period but zlog_reload fail, zlog-chk-conf [file] see detail\")\n      ;\n      return;\n    }\n  }\n  else {\n    FUN_0005df98(2,\"src/zlog.c\",0x32e,\"zlog_output fail, srcfile[%s], srcline[%ld]\",param_1,param_5)\n    ;\n  }\nLAB_00054b8c:\n  pthread_rwlock_unlock((pthread_rwlock_t *)&DAT_0058de1c);\n  return;\n}\n\n",
    "FUN_00054cb0": "\nvoid FUN_00054cb0(int param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 undefined4 param_5,undefined4 param_6,uint param_7,undefined4 param_8)\n\n{\n  int *__pointer;\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  \n  if (param_1 != 0) {\n    uVar2 = param_7 + 7;\n    if (-1 < (int)param_7) {\n      uVar2 = param_7;\n    }\n    uVar3 = param_7 & 7;\n    if ((int)param_7 < 1) {\n      uVar3 = -(-param_7 & 7);\n    }\n    if (((int)(uint)*(byte *)(param_1 + ((int)uVar2 >> 3) + 0x408) >> (7 - uVar3 & 0xff) & 1U) == 0)\n    {\n      return;\n    }\n  }\n  pthread_rwlock_rdlock((pthread_rwlock_t *)&DAT_0058de1c);\n  if (DAT_0058de3c == 0) {\n    FUN_0005df98(2,\"src/zlog.c\",0x352,\"never call zlog_init() or dzlog_init() before\");\n    goto LAB_00054d3c;\n  }\n  __pointer = (int *)pthread_getspecific(DAT_0058de08);\n  if (__pointer == (int *)0x0) {\n    __pointer = (int *)FUN_0005d07c(DAT_0058de18,*(undefined4 *)(DAT_0099eec8 + 0x41c),\n                                    *(undefined4 *)(DAT_0099eec8 + 0x420),\n                                    *(undefined4 *)(DAT_0099eec8 + 0x244c));\n    if (__pointer == (int *)0x0) {\n      FUN_0005df98(2,\"src/zlog.c\",0x356,\"zlog_thread_new fail\");\n      goto LAB_00054d3c;\n    }\n    iVar1 = pthread_setspecific(DAT_0058de08,__pointer);\n    if (iVar1 != 0) {\n      FUN_0005cfa8(__pointer);\n      FUN_0005df98(2,\"src/zlog.c\",0x356,\"pthread_setspecific fail, rd[%d]\",iVar1);\n      goto LAB_00054d3c;\n    }\n  }\n  if (*__pointer != DAT_0058de18) {\n    iVar1 = FUN_0005d290(__pointer,*(undefined4 *)(DAT_0099eec8 + 0x41c),\n                         *(undefined4 *)(DAT_0099eec8 + 0x420));\n    if ((iVar1 != 0) ||\n       (iVar1 = FUN_0005d3b0(__pointer,*(undefined4 *)(DAT_0099eec8 + 0x244c)), iVar1 != 0)) {\n      FUN_0005df98(2,\"src/zlog.c\",0x356,\"zlog_thread_resize_msg_buf fail, rd[%d]\",iVar1);\n      goto LAB_00054d3c;\n    }\n    *__pointer = DAT_0058de18;\n  }\n  FUN_00057540(__pointer[2],param_1,*(undefined4 *)(param_1 + 0x404),param_2,param_3,param_4,param_5\n               ,param_6,param_7,param_8,&stack0x00000010);\n  iVar1 = FUN_00055c7c(param_1,__pointer);\n  if (iVar1 == 0) {\n    if ((*(uint *)(DAT_0099eec8 + 0x243c) != 0) &&\n       (DAT_0058de40 = DAT_0058de40 + 1, *(uint *)(DAT_0099eec8 + 0x243c) < DAT_0058de40)) {\n      pthread_rwlock_unlock((pthread_rwlock_t *)&DAT_0058de1c);\n      iVar1 = FUN_00053314(0xffffffff);\n      if (iVar1 == 0) {\n        return;\n      }\n      FUN_0005df98(2,\"src/zlog.c\",0x370,\n                   \"reach reload-conf-period but zlog_reload fail, zlog-chk-conf [file] see detail\")\n      ;\n      return;\n    }\n  }\n  else {\n    FUN_0005df98(2,\"src/zlog.c\",0x35d,\"zlog_output fail, srcfile[%s], srcline[%ld]\",param_2,param_6)\n    ;\n  }\nLAB_00054d3c:\n  pthread_rwlock_unlock((pthread_rwlock_t *)&DAT_0058de1c);\n  return;\n}\n\n",
    "FUN_00054f58": "\nvoid FUN_00054f58(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 undefined4 param_5,uint param_6,undefined4 param_7)\n\n{\n  int *__pointer;\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  \n  pthread_rwlock_rdlock((pthread_rwlock_t *)&DAT_0058de1c);\n  if (DAT_0058de3c == 0) {\n    FUN_0005df98(2,\"src/zlog.c\",0x380,\"never call zlog_init() or dzlog_init() before\");\n  }\n  else if (DAT_0058de10 == 0) {\n    FUN_0005df98(2,\"src/zlog.c\",0x387,\n                 \"zlog_default_category is null,dzlog_init() or dzlog_set_cateogry() is not called above\"\n                );\n  }\n  else {\n    uVar2 = param_6 + 7;\n    if (-1 < (int)param_6) {\n      uVar2 = param_6;\n    }\n    uVar3 = param_6 & 7;\n    if ((int)param_6 < 1) {\n      uVar3 = -(-param_6 & 7);\n    }\n    if (((int)(uint)*(byte *)(DAT_0058de10 + ((int)uVar2 >> 3) + 0x408) >> (7 - uVar3 & 0xff) & 1U)\n        != 0) {\n      __pointer = (int *)pthread_getspecific(DAT_0058de08);\n      if (__pointer == (int *)0x0) {\n        __pointer = (int *)FUN_0005d07c(DAT_0058de18,*(undefined4 *)(DAT_0099eec8 + 0x41c),\n                                        *(undefined4 *)(DAT_0099eec8 + 0x420),\n                                        *(undefined4 *)(DAT_0099eec8 + 0x244c));\n        if (__pointer == (int *)0x0) {\n          FUN_0005df98(2,\"src/zlog.c\",0x38d,\"zlog_thread_new fail\");\n          goto LAB_00054fd0;\n        }\n        iVar1 = pthread_setspecific(DAT_0058de08,__pointer);\n        if (iVar1 != 0) {\n          FUN_0005cfa8(__pointer);\n          FUN_0005df98(2,\"src/zlog.c\",0x38d,\"pthread_setspecific fail, rd[%d]\",iVar1);\n          goto LAB_00054fd0;\n        }\n      }\n      if (*__pointer != DAT_0058de18) {\n        iVar1 = FUN_0005d290(__pointer,*(undefined4 *)(DAT_0099eec8 + 0x41c),\n                             *(undefined4 *)(DAT_0099eec8 + 0x420));\n        if ((iVar1 != 0) ||\n           (iVar1 = FUN_0005d3b0(__pointer,*(undefined4 *)(DAT_0099eec8 + 0x244c)), iVar1 != 0)) {\n          FUN_0005df98(2,\"src/zlog.c\",0x38d,\"zlog_thread_resize_msg_buf fail, rd[%d]\",iVar1);\n          goto LAB_00054fd0;\n        }\n        *__pointer = DAT_0058de18;\n      }\n      FUN_00057540(__pointer[2],DAT_0058de10,*(undefined4 *)(DAT_0058de10 + 0x404),param_1,param_2,\n                   param_3,param_4,param_5,param_6,param_7,&stack0x0000000c);\n      iVar1 = FUN_00055c7c(DAT_0058de10,__pointer);\n      if (iVar1 == 0) {\n        if ((*(uint *)(DAT_0099eec8 + 0x243c) != 0) &&\n           (DAT_0058de40 = DAT_0058de40 + 1, *(uint *)(DAT_0099eec8 + 0x243c) < DAT_0058de40)) {\n          pthread_rwlock_unlock((pthread_rwlock_t *)&DAT_0058de1c);\n          iVar1 = FUN_00053314(0xffffffff);\n          if (iVar1 == 0) {\n            return;\n          }\n          FUN_0005df98(2,\"src/zlog.c\",0x3a9,\n                       \"reach reload-conf-period but zlog_reload fail, zlog-chk-conf [file] see detail\"\n                      );\n          return;\n        }\n      }\n      else {\n        FUN_0005df98(2,\"src/zlog.c\",0x396,\"zlog_output fail, srcfile[%s], srcline[%ld]\",param_1,\n                     param_5);\n      }\n    }\n  }\nLAB_00054fd0:\n  pthread_rwlock_unlock((pthread_rwlock_t *)&DAT_0058de1c);\n  return;\n}\n\n",
    "FUN_0005521c": "\nvoid FUN_0005521c(void)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  \n  iVar1 = pthread_rwlock_rdlock((pthread_rwlock_t *)&DAT_0058de1c);\n  if (iVar1 != 0) {\n    FUN_0005df98(2,\"src/zlog.c\",0x3b4,\"pthread_rwlock_wrlock fail, rc[%d]\",iVar1);\n    return;\n  }\n  FUN_0005df98(1,\"src/zlog.c\",0x3b7,\"------zlog_profile start------ \");\n  FUN_0005df98(1,\"src/zlog.c\",0x3b8,\"is init:[%d]\",DAT_0058de3c);\n  uVar2 = DAT_0058de18;\n  FUN_0005df98(1,\"src/zlog.c\",0x3b9,\"init version:[%d]\",DAT_0058de18);\n  FUN_00056b38(DAT_0099eec8,1);\n  FUN_00058414(DAT_0058de14,1);\n  FUN_00055ccc(DAT_0058de0c,1);\n  if (DAT_0058de10 != 0) {\n    FUN_0005df98(1,\"src/zlog.c\",0x3be,\"-default_category-\",uVar2);\n    FUN_000557c4(DAT_0058de10,1);\n  }\n  FUN_0005df98(1,\"src/zlog.c\",0x3c1,\"------zlog_profile end------ \");\n  iVar1 = pthread_rwlock_unlock((pthread_rwlock_t *)&DAT_0058de1c);\n  if (iVar1 == 0) {\n    return;\n  }\n  FUN_0005df98(2,\"src/zlog.c\",0x3c4,\"pthread_rwlock_unlock fail, rc=[%d]\",iVar1);\n  return;\n}\n\n",
    "FUN_00055388": "\nint FUN_00055388(int param_1,int param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  int iVar4;\n  \n  if (param_1 == 0) {\n    FUN_0005df98(2,\"src/zlog.c\",0x3d2,\"rname is null or 0\");\n    iVar4 = -1;\n  }\n  else if (param_2 == 0) {\n    FUN_0005df98(2,\"src/zlog.c\",0x3d3,\"record_output is null or 0\");\n    iVar4 = -1;\n  }\n  else {\n    iVar2 = pthread_rwlock_wrlock((pthread_rwlock_t *)&DAT_0058de1c);\n    if (iVar2 == 0) {\n      if (DAT_0058de3c == 0) {\n        FUN_0005df98(2,\"src/zlog.c\",0x3dc,\"never call zlog_init() or dzlog_init() before\");\n        iVar4 = 0;\n      }\n      else {\n        iVar2 = FUN_00058304(param_1,param_2);\n        if (iVar2 == 0) {\n          FUN_0005df98(2,\"src/zlog.c\",0x3e3,\"zlog_record_new fail\");\n          iVar4 = -1;\n        }\n        else {\n          iVar4 = FUN_0005dac0(DAT_0058de14,iVar2,iVar2);\n          if (iVar4 == 0) {\n            piVar3 = *(int **)(DAT_0099eec8 + 0x2448);\n            if (0 < piVar3[1]) {\n              iVar2 = 0;\n              do {\n                iVar1 = iVar2 * 4;\n                iVar2 = iVar2 + 1;\n                FUN_0005bccc(*(undefined4 *)(*piVar3 + iVar1),DAT_0058de14);\n                piVar3 = *(int **)(DAT_0099eec8 + 0x2448);\n              } while (iVar2 < piVar3[1]);\n            }\n          }\n          else {\n            FUN_000582a0(iVar2);\n            FUN_0005df98(2,\"src/zlog.c\",0x3ea,\"zc_hashtable_put fail\");\n          }\n        }\n      }\n      iVar2 = pthread_rwlock_unlock((pthread_rwlock_t *)&DAT_0058de1c);\n      if (iVar2 != 0) {\n        iVar4 = -1;\n        FUN_0005df98(2,\"src/zlog.c\",0x3f5,\"pthread_rwlock_unlock fail, rd=[%d]\",iVar2);\n      }\n    }\n    else {\n      iVar4 = -1;\n      FUN_0005df98(2,\"src/zlog.c\",0x3d7,\"pthread_rwlock_rdlock fail, rd[%d]\",iVar2);\n    }\n  }\n  return iVar4;\n}\n\n",
    "FUN_000555b0": "\nundefined4 FUN_000555b0(int param_1,int *param_2,int *param_3)\n\n{\n  int iVar1;\n  int iVar2;\n  byte *pbVar3;\n  byte *pbVar4;\n  int iVar5;\n  int iVar6;\n  int iVar7;\n  \n  if (*(int *)(param_1 + 0x448) != 0) {\n    FUN_0005d580();\n  }\n  memset((void *)(param_1 + 0x408),0,0x20);\n  iVar1 = FUN_0005d4c0(0);\n  *(int *)(param_1 + 0x448) = iVar1;\n  if (iVar1 == 0) {\n    FUN_0005df98(2,\"src/category.c\",0x48,\"zc_arraylist_new fail\");\n    return 0xffffffff;\n  }\n  if (0 < *param_3) {\n    iVar1 = 0;\n    iVar6 = 0;\n    iVar7 = 0;\n    do {\n      iVar5 = *(int *)(*param_2 + iVar6 * 4);\n      iVar2 = FUN_0005bbe8(iVar5,param_1);\n      if (iVar2 != 0) {\n        iVar2 = FUN_0005d694(*(undefined4 *)(param_1 + 0x448),iVar5);\n        if (iVar2 != 0) {\n          FUN_0005df98(2,\"src/category.c\",0x51,\"zc_arrylist_add fail\");\n          goto LAB_00055740;\n        }\n        pbVar4 = (byte *)(param_1 + 0x407);\n        pbVar3 = (byte *)(iVar5 + 0x1007);\n        do {\n          pbVar4 = pbVar4 + 1;\n          pbVar3 = pbVar3 + 1;\n          *pbVar4 = *pbVar4 | *pbVar3;\n        } while (pbVar4 != (byte *)(param_1 + 0x427));\n        iVar7 = iVar7 + 1;\n      }\n      iVar6 = iVar6 + 1;\n      iVar2 = FUN_0005bb9c(iVar5);\n      if (iVar2 != 0) {\n        iVar1 = iVar5;\n      }\n    } while (iVar6 < *param_3);\n    if (iVar7 != 0) {\n      return 0;\n    }\n    if (iVar1 != 0) {\n      iVar6 = param_1;\n      FUN_0005df98(0,\"src/category.c\",0x5f,\"category[%s], no match rules, use wastebin_rule\",param_1\n                  );\n      iVar7 = FUN_0005d694(*(undefined4 *)(param_1 + 0x448),iVar1);\n      if (iVar7 == 0) {\n        pbVar4 = (byte *)(iVar1 + 0x1007);\n        pbVar3 = (byte *)(param_1 + 0x407);\n        do {\n          pbVar3 = pbVar3 + 1;\n          pbVar4 = pbVar4 + 1;\n          *pbVar3 = *pbVar3 | *pbVar4;\n        } while ((byte *)(param_1 + 0x427) != pbVar3);\n        return 0;\n      }\n      FUN_0005df98(2,\"src/category.c\",0x61,\"zc_arrylist_add fail\",iVar6);\nLAB_00055740:\n      FUN_0005d580(*(undefined4 *)(param_1 + 0x448));\n      *(undefined4 *)(param_1 + 0x448) = 0;\n      return 0xffffffff;\n    }\n  }\n  FUN_0005df98(0,\"src/category.c\",0x67,\"category[%s], no match rules & no wastebin_rule\",param_1);\n  return 0;\n}\n\n",
    "FUN_000557c4": "\nvoid FUN_000557c4(int param_1,undefined4 param_2)\n\n{\n  int iVar1;\n  int *piVar2;\n  int iVar3;\n  \n  if (param_1 != 0) {\n    FUN_0005df98(param_2,\"src/category.c\",0x1a,\"--category[%p][%s][%p]--\",param_1,param_1,\n                 *(undefined4 *)(param_1 + 0x448));\n    piVar2 = *(int **)(param_1 + 0x448);\n    if ((piVar2 != (int *)0x0) && (0 < piVar2[1])) {\n      iVar3 = 0;\n      do {\n        iVar1 = iVar3 * 4;\n        iVar3 = iVar3 + 1;\n        FUN_0005a850(*(undefined4 *)(*piVar2 + iVar1),param_2);\n        piVar2 = *(int **)(param_1 + 0x448);\n      } while (iVar3 < piVar2[1]);\n    }\n    return;\n  }\n  FUN_0005df98(2,\"src/category.c\",0x16,\"a_category is null or 0\");\n  return;\n}\n\n",
    "FUN_00055870": "\nvoid FUN_00055870(void *param_1)\n\n{\n  if (param_1 != (void *)0x0) {\n    if (*(int *)((int)param_1 + 0x448) != 0) {\n      FUN_0005d580();\n    }\n    FUN_0005df98(0,\"src/category.c\",0x28,\"zlog_category_del[%p]\",param_1);\n    free(param_1);\n    return;\n  }\n  FUN_0005df98(2,\"src/category.c\",0x26,\"a_category is null or 0\");\n  return;\n}\n\n",
    "FUN_000558e4": "\nvoid * FUN_000558e4(char *param_1,int param_2)\n\n{\n  size_t sVar1;\n  void *__dest;\n  int iVar2;\n  int *piVar3;\n  \n  if (param_1 == (char *)0x0) {\n    FUN_0005df98(2,\"src/category.c\",0x77,\"name is null or 0\");\n    __dest = (void *)0x0;\n  }\n  else if (param_2 == 0) {\n    FUN_0005df98(2,\"src/category.c\",0x78,\"rules is null or 0\");\n    __dest = (void *)0x0;\n  }\n  else {\n    sVar1 = strlen(param_1);\n    if (sVar1 < 0x401) {\n      __dest = calloc(1,0x450);\n      if (__dest == (void *)0x0) {\n        piVar3 = __errno_location();\n        FUN_0005df98(2,\"src/category.c\",0x81,\"calloc fail, errno[%d]\",*piVar3);\n      }\n      else {\n        memcpy(__dest,param_1,sVar1 + 1);\n        *(size_t *)((int)__dest + 0x404) = sVar1;\n        iVar2 = FUN_000555b0(__dest,param_2,param_2 + 4);\n        if (iVar2 == 0) {\n          FUN_000557c4(__dest);\n        }\n        else {\n          FUN_0005df98(2,\"src/category.c\",0x87,\"zlog_category_fit_rules fail\");\n          FUN_00055870(__dest);\n          __dest = (void *)0x0;\n        }\n      }\n    }\n    else {\n      __dest = (void *)0x0;\n      FUN_0005df98(2,\"src/category.c\",0x7c,\"name[%s] too long\",param_1);\n    }\n  }\n  return __dest;\n}\n\n",
    "FUN_00055a28": "\nundefined4 FUN_00055a28(int param_1,int param_2)\n\n{\n  int iVar1;\n  \n  if (param_1 == 0) {\n    FUN_0005df98(2,\"src/category.c\",0x96,\"a_category is null or 0\");\n    return 0xffffffff;\n  }\n  if (param_2 != 0) {\n    if (*(int *)(param_1 + 0x44c) != 0) {\n      FUN_0005d580();\n    }\n    *(undefined4 *)(param_1 + 0x428) = *(undefined4 *)(param_1 + 0x408);\n    *(undefined4 *)(param_1 + 0x42c) = *(undefined4 *)(param_1 + 0x40c);\n    *(undefined4 *)(param_1 + 0x430) = *(undefined4 *)(param_1 + 0x410);\n    *(undefined4 *)(param_1 + 0x434) = *(undefined4 *)(param_1 + 0x414);\n    *(undefined4 *)(param_1 + 0x44c) = *(undefined4 *)(param_1 + 0x448);\n    *(undefined4 *)(param_1 + 0x438) = *(undefined4 *)(param_1 + 0x418);\n    *(undefined4 *)(param_1 + 0x448) = 0;\n    *(undefined4 *)(param_1 + 0x43c) = *(undefined4 *)(param_1 + 0x41c);\n    *(undefined4 *)(param_1 + 0x440) = *(undefined4 *)(param_1 + 0x420);\n    *(undefined4 *)(param_1 + 0x444) = *(undefined4 *)(param_1 + 0x424);\n    iVar1 = FUN_000555b0(param_1,param_2,param_2 + 4);\n    if (iVar1 == 0) {\n      return 0;\n    }\n    FUN_0005df98(2,\"src/category.c\",0xa3,\"zlog_category_obtain_rules fail\");\n    *(undefined4 *)(param_1 + 0x448) = 0;\n    return 0xffffffff;\n  }\n  FUN_0005df98(2,\"src/category.c\",0x97,\"new_rules is null or 0\");\n  return 0xffffffff;\n}\n\n",
    "FUN_00055b28": "\nvoid FUN_00055b28(int param_1)\n\n{\n  if (param_1 == 0) {\n    FUN_0005df98(2,\"src/category.c\",0xb0,\"a_category is null or 0\");\n    return;\n  }\n  if (*(int *)(param_1 + 0x44c) != 0) {\n    FUN_0005d580();\n    *(undefined4 *)(param_1 + 0x44c) = 0;\n    memset((void *)(param_1 + 0x428),0,0x20);\n    return;\n  }\n  FUN_0005df98(1,\"src/category.c\",0xb2,\"a_category->fit_rules_backup is NULL, never update before\");\n  return;\n}\n\n",
    "FUN_00055ba0": "\nvoid FUN_00055ba0(int param_1)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == 0) {\n    FUN_0005df98(2,\"src/category.c\",0xc2,\"a_category is null or 0\");\n    return;\n  }\n  if (*(int *)(param_1 + 0x44c) == 0) {\n    FUN_0005df98(1,\"src/category.c\",0xc4,\"a_category->fit_rules_backup in NULL, never update before\"\n                );\n    return;\n  }\n  if (*(int *)(param_1 + 0x448) == 0) {\n    *(int *)(param_1 + 0x448) = *(int *)(param_1 + 0x44c);\n    *(undefined4 *)(param_1 + 0x44c) = 0;\n  }\n  else {\n    FUN_0005d580();\n    uVar1 = *(undefined4 *)(param_1 + 0x44c);\n    *(undefined4 *)(param_1 + 0x44c) = 0;\n    *(undefined4 *)(param_1 + 0x448) = uVar1;\n  }\n  *(undefined4 *)(param_1 + 0x408) = *(undefined4 *)(param_1 + 0x428);\n  *(undefined4 *)(param_1 + 0x40c) = *(undefined4 *)(param_1 + 0x42c);\n  *(undefined4 *)(param_1 + 0x410) = *(undefined4 *)(param_1 + 0x430);\n  *(undefined4 *)(param_1 + 0x414) = *(undefined4 *)(param_1 + 0x434);\n  *(undefined4 *)(param_1 + 0x418) = *(undefined4 *)(param_1 + 0x438);\n  *(undefined4 *)(param_1 + 0x41c) = *(undefined4 *)(param_1 + 0x43c);\n  *(undefined4 *)(param_1 + 0x420) = *(undefined4 *)(param_1 + 0x440);\n  *(undefined4 *)(param_1 + 0x424) = *(undefined4 *)(param_1 + 0x444);\n  memset((undefined4 *)(param_1 + 0x428),0,0x20);\n  return;\n}\n\n",
    "FUN_00055c7c": "\nundefined4 FUN_00055c7c(int param_1,undefined4 param_2)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  int *piVar3;\n  int iVar4;\n  \n  piVar3 = *(int **)(param_1 + 0x448);\n  if (0 < piVar3[1]) {\n    iVar4 = 0;\n    do {\n      iVar1 = iVar4 * 4;\n      iVar4 = iVar4 + 1;\n      uVar2 = FUN_0005babc(*(undefined4 *)(*piVar3 + iVar1),param_2);\n      piVar3 = *(int **)(param_1 + 0x448);\n    } while (iVar4 < piVar3[1]);\n    return uVar2;\n  }\n  return 0;\n}\n\n",
    "FUN_00055ccc": "\nvoid FUN_00055ccc(int param_1,undefined4 param_2)\n\n{\n  int iVar1;\n  \n  if (param_1 == 0) {\n    FUN_0005df98(2,\"src/category_table.c\",0x15,\"categories is null or 0\");\n    return;\n  }\n  FUN_0005df98(param_2,\"src/category_table.c\",0x16,\"-category_table[%p]-\",param_1);\n  for (iVar1 = FUN_0005de60(param_1); iVar1 != 0; iVar1 = FUN_0005dea8(param_1,iVar1)) {\n    FUN_000557c4(*(undefined4 *)(iVar1 + 8),param_2);\n  }\n  return;\n}\n\n",
    "FUN_00055d5c": "\nvoid FUN_00055d5c(int param_1)\n\n{\n  if (param_1 != 0) {\n    FUN_0005d890();\n    FUN_0005df98(0,\"src/category_table.c\",0x24,\"zlog_category_table_del[%p]\",param_1);\n    return;\n  }\n  FUN_0005df98(2,\"src/category_table.c\",0x22,\"categories is null or 0\");\n  return;\n}\n\n",
    "FUN_00055db8": "\nint FUN_00055db8(void)\n\n{\n  int iVar1;\n  \n  iVar1 = FUN_0005d7b8(0x14,&LAB_0005df18,FUN_0005df44,0,FUN_00055870);\n  if (iVar1 == 0) {\n    FUN_0005df98(2,\"src/category_table.c\",0x31,\"zc_hashtable_new fail\");\n  }\n  else {\n    FUN_00055ccc(iVar1,0);\n  }\n  return iVar1;\n}\n\n",
    "FUN_00055e24": "\nundefined4 FUN_00055e24(int param_1,undefined4 param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  \n  if (param_1 == 0) {\n    FUN_0005df98(2,\"src/category_table.c\",0x3e,\"categories is null or 0\");\n    return 0xffffffff;\n  }\n  iVar1 = FUN_0005de60();\n  while( true ) {\n    if (iVar1 == 0) {\n      return 0;\n    }\n    iVar2 = FUN_00055a28(*(undefined4 *)(iVar1 + 8),param_2);\n    if (iVar2 != 0) break;\n    iVar1 = FUN_0005dea8(param_1,iVar1);\n  }\n  FUN_0005df98(2,\"src/category_table.c\",0x42,\"zlog_category_update_rules fail, try rollback\");\n  return 0xffffffff;\n}\n\n",
    "FUN_00055ebc": "\nvoid FUN_00055ebc(int param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 == 0) {\n    FUN_0005df98(2,\"src/category_table.c\",0x4e,\"categories is null or 0\");\n    return;\n  }\n  iVar1 = FUN_0005de60();\n  if (iVar1 == 0) {\n    return;\n  }\n  do {\n    FUN_00055b28(*(undefined4 *)(iVar1 + 8));\n    iVar1 = FUN_0005dea8(param_1,iVar1);\n  } while (iVar1 != 0);\n  return;\n}\n\n",
    "FUN_00055f14": "\nvoid FUN_00055f14(int param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 == 0) {\n    FUN_0005df98(2,\"src/category_table.c\",0x5b,\"categories is null or 0\");\n    return;\n  }\n  iVar1 = FUN_0005de60();\n  if (iVar1 == 0) {\n    return;\n  }\n  do {\n    FUN_00055ba0(*(undefined4 *)(iVar1 + 8));\n    iVar1 = FUN_0005dea8(param_1,iVar1);\n  } while (iVar1 != 0);\n  return;\n}\n\n",
    "FUN_00055f6c": "\nint FUN_00055f6c(int param_1,undefined4 param_2,undefined4 param_3)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  \n  if (param_1 == 0) {\n    FUN_0005df98(2,\"src/category_table.c\",0x69,\"categories is null or 0\");\n    iVar2 = 0;\n  }\n  else {\n    iVar1 = FUN_0005da58();\n    iVar2 = iVar1;\n    if (iVar1 == 0) {\n      iVar2 = FUN_000558e4(param_2,param_3);\n      if (iVar2 == 0) {\n        FUN_0005df98(2,\"src/category_table.c\",0x72,\"zc_category_new fail\");\n        iVar2 = iVar1;\n      }\n      else {\n        iVar3 = FUN_0005dac0(param_1,iVar2,iVar2);\n        if (iVar3 != 0) {\n          FUN_0005df98(2,\"src/category_table.c\",0x77,\"zc_hashtable_put fail\");\n          FUN_00055870(iVar2);\n          iVar2 = iVar1;\n        }\n      }\n    }\n  }\n  return iVar2;\n}\n\n",
    "FUN_00056030": "\nundefined4 FUN_00056030(char *param_1)\n\n{\n  ushort uVar1;\n  bool bVar2;\n  int iVar3;\n  FILE *__stream;\n  char *pcVar4;\n  size_t sVar5;\n  ushort **ppuVar6;\n  byte *pbVar7;\n  int iVar8;\n  undefined4 uVar9;\n  int *piVar10;\n  byte bVar11;\n  byte *pbVar12;\n  char *pcVar13;\n  uint uVar14;\n  byte *pbVar15;\n  int iVar16;\n  ushort *puVar17;\n  uint uVar18;\n  uint local_60e8;\n  undefined4 local_60e4;\n  int local_60d8;\n  tm tStack_60d4;\n  stat64 sStack_60a8;\n  byte local_6040 [4100];\n  char acStack_503c [4100];\n  char acStack_4038 [4100];\n  char local_3034;\n  char local_3033;\n  char local_3032;\n  char local_3031;\n  char acStack_2030 [4100];\n  char acStack_102c [4104];\n  \n  iVar3 = __lxstat64(3,param_1,&sStack_60a8);\n  if (iVar3 == 0) {\n    localtime_r(&sStack_60a8.st_mtim.tv_sec,&tStack_60d4);\n    strftime(param_1 + 0x401,0x15,(char *)&DAT_0006bacc,&tStack_60d4);\n    __stream = fopen64(param_1,\"r\");\n    if (__stream != (FILE *)0x0) {\n      memset(local_6040,0,0x1001);\n      pcVar13 = param_1 + 0x244c;\n      iVar3 = 0;\n      iVar16 = 0;\n      local_60e8 = 0;\n      pbVar15 = local_6040;\nLAB_000560d8:\n      do {\n        do {\n          pcVar4 = fgets((char *)pbVar15,0x1001 - iVar16,__stream);\n          local_60e4 = 0;\n          if (pcVar4 == (char *)0x0) {\nLAB_000562fc:\n            fclose(__stream);\n            return local_60e4;\n          }\n          iVar3 = iVar3 + 1;\n          sVar5 = strlen((char *)pbVar15);\n          if (pbVar15[sVar5 - 1] == 10) {\n            pbVar15[sVar5 - 1] = 0;\n          }\n          uVar18 = (uint)*pbVar15;\n        } while (uVar18 == 0);\n        ppuVar6 = __ctype_b_loc();\n        puVar17 = *ppuVar6;\n        pbVar12 = pbVar15;\n        while (uVar14 = puVar17[uVar18] & 0x2000, (puVar17[uVar18] & 0x2000) != 0) {\n          pbVar12 = pbVar12 + 1;\n          uVar18 = (uint)*pbVar12;\n          if (uVar18 == 0) goto LAB_000560d8;\n        }\n        if (uVar18 == 0x23) goto LAB_000560d8;\n        bVar11 = *pbVar12;\n        pbVar7 = pbVar15;\n        if (bVar11 != 0) {\n          pbVar7 = pbVar15 + -1;\n          do {\n            pbVar7 = pbVar7 + 1;\n            *pbVar7 = bVar11;\n            uVar14 = uVar14 + 1;\n            pbVar12 = pbVar12 + 1;\n            bVar11 = *pbVar12;\n          } while (bVar11 != 0);\n          pbVar7 = pbVar15 + uVar14;\n        }\n        *pbVar7 = 0;\n        sVar5 = strlen((char *)pbVar15);\n        pbVar15 = pbVar15 + (sVar5 - 1);\n        do {\n          pbVar12 = pbVar15;\n          pbVar15 = pbVar12 + -1;\n        } while ((puVar17[*pbVar12] & 0x2000) != 0);\n        if ((*pbVar12 != 0x5c) || (0xfe2 < (int)pbVar12 - (int)local_6040)) {\n          bVar2 = false;\n          pbVar12[1] = 0;\n          pbVar15 = local_6040;\n          bVar11 = local_6040[0];\n          if (local_6040[0] == 0) {\n            sVar5 = strlen((char *)local_6040);\n            if (0x1000 < sVar5) goto LAB_000568d8;\nLAB_00056270:\n            switch(local_60e8) {\n            case 1:\n              memset(acStack_503c,0,0x1001);\n              memset(acStack_102c,0,0x1001);\n              iVar16 = __isoc99_sscanf(local_6040,\" %[^=]= %s \",acStack_503c,acStack_102c);\n              if (iVar16 == 2) {\n                memset(acStack_4038,0,0x1001);\n                memset(&local_3034,0,0x1001);\n                memset(acStack_2030,0,0x1001);\n                local_60d8 = 0;\n                __isoc99_sscanf(acStack_503c,\"%s%n%s%s\",acStack_4038,&local_60d8,&local_3034,\n                                acStack_2030);\n                iVar16 = strcmp(acStack_4038,\"strict\");\n                if ((iVar16 == 0) && (iVar16 = strcmp(&local_3034,\"init\"), iVar16 == 0)) {\n                  iVar16 = strcasecmp(acStack_102c,\"false\");\n                  if ((iVar16 == 0) && (pcVar4 = getenv(\"ZLOG_STRICT_INIT\"), pcVar4 == (char *)0x0))\n                  {\n                    *(undefined4 *)(param_1 + 0x418) = 0;\n                    iVar16 = 0;\n                    pbVar15 = local_6040;\n                  }\n                  else {\n                    *(undefined4 *)(param_1 + 0x418) = 1;\n                    iVar16 = 0;\n                    pbVar15 = local_6040;\n                  }\n                  goto LAB_000560d8;\n                }\n                iVar16 = strcmp(acStack_4038,\"buffer\");\n                if ((iVar16 == 0) && (local_3034 == 'm')) {\n                  if (local_3033 == 'i') {\n                    if ((local_3032 == 'n') && (local_3031 == '\\0')) {\n                      uVar9 = FUN_0005e140(acStack_102c);\n                      *(undefined4 *)(param_1 + 0x41c) = uVar9;\n                      iVar16 = 0;\n                      pbVar15 = local_6040;\n                      goto LAB_000560d8;\n                    }\n                  }\n                  else if (((local_3033 == 'a') && (local_3032 == 'x')) && (local_3031 == '\\0')) {\n                    uVar9 = FUN_0005e140(acStack_102c);\n                    *(undefined4 *)(param_1 + 0x420) = uVar9;\n                    iVar16 = 0;\n                    pbVar15 = local_6040;\n                    goto LAB_000560d8;\n                  }\n                }\n                iVar16 = strcmp(acStack_4038,\"file\");\n                if ((iVar16 == 0) && (iVar16 = strcmp(&local_3034,\"perms\"), iVar16 == 0)) {\n                  __isoc99_sscanf(acStack_102c,&DAT_0006bca0,param_1 + 0x2434);\n                  iVar16 = 0;\n                  pbVar15 = local_6040;\n                  goto LAB_000560d8;\n                }\n                iVar16 = strcmp(acStack_4038,\"rotate\");\n                if (((iVar16 == 0) && (iVar16 = strcmp(&local_3034,\"lock\"), iVar16 == 0)) &&\n                   (iVar16 = strcmp(acStack_2030,\"file\"), iVar16 == 0)) {\n                  iVar16 = strcmp(acStack_102c,\"self\");\n                  if (iVar16 == 0) {\n                    strcpy(param_1 + 0x424,param_1);\n                    iVar16 = 0;\n                    pbVar15 = local_6040;\n                  }\n                  else {\n                    strcpy(param_1 + 0x424,acStack_102c);\n                    iVar16 = 0;\n                    pbVar15 = local_6040;\n                  }\n                  goto LAB_000560d8;\n                }\n                iVar16 = strcmp(acStack_4038,\"default\");\n                if ((iVar16 == 0) && (iVar16 = strcmp(&local_3034,\"format\"), iVar16 == 0)) {\n                  strcpy(param_1 + 0x142c,(char *)(local_6040 + local_60d8));\n                  iVar16 = 0;\n                  pbVar15 = local_6040;\n                  goto LAB_000560d8;\n                }\n                iVar16 = strcmp(acStack_4038,\"reload\");\n                if (((iVar16 == 0) && (iVar16 = strcmp(&local_3034,\"conf\"), iVar16 == 0)) &&\n                   (iVar16 = strcmp(acStack_2030,\"period\"), iVar16 == 0)) {\n                  uVar9 = FUN_0005e140(acStack_102c);\n                  *(undefined4 *)(param_1 + 0x243c) = uVar9;\n                  iVar16 = 0;\n                  pbVar15 = local_6040;\n                  goto LAB_000560d8;\n                }\n                iVar16 = strcmp(acStack_4038,\"fsync\");\n                if ((iVar16 == 0) && (iVar16 = strcmp(&local_3034,\"period\"), iVar16 == 0)) {\n                  uVar9 = FUN_0005e140(acStack_102c);\n                  *(undefined4 *)(param_1 + 0x2438) = uVar9;\n                  iVar16 = 0;\n                  pbVar15 = local_6040;\n                  goto LAB_000560d8;\n                }\n                FUN_0005df98(2,\"src/conf.c\",0x1c6,\"name[%s] is not any one of global options\",\n                             acStack_503c);\n                if (*(int *)(param_1 + 0x418) == 0) goto LAB_00056644;\n              }\n              else {\n                FUN_0005df98(2,\"src/conf.c\",0x19c,\"sscanf [%s] fail, name or value is null\",\n                             local_6040);\n              }\n              break;\n            case 2:\n              iVar16 = FUN_00057b80(*(undefined4 *)(param_1 + 0x2440),local_6040);\n              if (iVar16 == 0) goto LAB_0005639c;\n              FUN_0005df98(2,\"src/conf.c\",0x1cc,\"zlog_level_list_set fail\");\n              if (*(int *)(param_1 + 0x418) == 0) {\n                iVar16 = 0;\n                pbVar15 = local_6040;\n                goto LAB_000560d8;\n              }\n              break;\n            case 3:\n              iVar16 = FUN_000576e4(local_6040,pcVar13);\n              if (iVar16 == 0) {\n                FUN_0005df98(2,\"src/conf.c\",0x1d3,\"zlog_format_new fail [%s]\",local_6040);\n                if (*(int *)(param_1 + 0x418) == 0) goto LAB_0005639c;\n              }\n              else {\n                iVar8 = FUN_0005d694(*(undefined4 *)(param_1 + 0x2444),iVar16);\n                if (iVar8 == 0) {\nLAB_0005639c:\n                  iVar16 = 0;\n                  pbVar15 = local_6040;\n                  goto LAB_000560d8;\n                }\n                FUN_0005766c(iVar16);\n                FUN_0005df98(2,\"src/conf.c\",0x1d9,\"zc_arraylist_add fail\");\n              }\n              break;\n            case 4:\n              iVar16 = FUN_0005aa9c(local_6040,*(undefined4 *)(param_1 + 0x2440),\n                                    *(undefined4 *)(param_1 + 0x2430),\n                                    *(undefined4 *)(param_1 + 0x2444),\n                                    *(undefined4 *)(param_1 + 0x2434),\n                                    *(undefined4 *)(param_1 + 0x2438),pcVar13);\n              if (iVar16 == 0) {\n                FUN_0005df98(2,\"src/conf.c\",0x1e7,\"zlog_rule_new fail [%s]\",local_6040);\n                if (*(int *)(param_1 + 0x418) == 0) goto LAB_0005635c;\n              }\n              else {\n                iVar8 = FUN_0005d694(*(undefined4 *)(param_1 + 0x2448),iVar16);\n                if (iVar8 == 0) {\nLAB_0005635c:\n                  local_60e8 = 4;\n                  iVar16 = 0;\n                  pbVar15 = local_6040;\n                  goto LAB_000560d8;\n                }\n                FUN_0005a97c(iVar16);\n                FUN_0005df98(2,\"src/conf.c\",0x1ed,\"zc_arraylist_add fail\");\n              }\n              break;\n            default:\n              FUN_0005df98(2,\"src/conf.c\",0x1f2,\"not in any section\");\n            }\n          }\n          else {\n            do {\n              if (bVar11 != 0x22) {\n                if ((bVar11 != 0x23) || (bVar2)) goto LAB_00056228;\n                *pbVar15 = bVar2;\n                break;\n              }\n              bVar2 = (bool)(bVar2 ^ 1);\nLAB_00056228:\n              bVar11 = pbVar15[1];\n              pbVar15 = pbVar15 + 1;\n            } while (bVar11 != 0);\n            sVar5 = strlen((char *)local_6040);\n            if (sVar5 < 0x1001) {\n              if (local_6040[0] != 0x5b) goto LAB_00056270;\n              __isoc99_sscanf(local_6040,&DAT_0006bb30,acStack_503c);\n              iVar16 = strcmp(acStack_503c,\"global\");\n              if (iVar16 != 0) {\n                iVar16 = strcmp(acStack_503c,\"levels\");\n                if (iVar16 == 0) {\n                  if (local_60e8 < 2) {\n                    local_60e8 = 2;\n                    goto LAB_0005639c;\n                  }\n                }\n                else {\n                  iVar16 = strcmp(acStack_503c,\"formats\");\n                  if (iVar16 != 0) {\n                    iVar16 = strcmp(acStack_503c,\"rules\");\n                    if (iVar16 == 0) {\n                      if (local_60e8 == 4) goto LAB_00056a9c;\n                      if ((*(uint *)(param_1 + 0x243c) != 0) &&\n                         (*(uint *)(param_1 + 0x243c) <= *(uint *)(param_1 + 0x2438))) {\n                        FUN_0005df98(1,\"src/conf.c\",0x17e,\n                                     \"fsync_period[%ld] >= reload_conf_period[%ld],set fsync_period to zero\"\n                                    );\n                        *(undefined4 *)(param_1 + 0x2438) = 0;\n                      }\n                      iVar16 = FUN_00058834(param_1 + 0x424);\n                      *(int *)(param_1 + 0x1428) = iVar16;\n                      if (iVar16 == 0) {\n                        FUN_0005df98(2,\"src/conf.c\",0x187,\"zlog_rotater_new fail\");\n                      }\n                      else {\n                        iVar16 = FUN_000576e4(param_1 + 0x142c,pcVar13);\n                        *(int *)(param_1 + 0x2430) = iVar16;\n                        if (iVar16 != 0) goto LAB_0005635c;\n                        FUN_0005df98(2,\"src/conf.c\",0x18e,\"zlog_format_new fail\");\n                      }\n                    }\n                    else {\n                      FUN_0005df98(2,\"src/conf.c\",0x16b,\"wrong section name[%s]\",acStack_503c);\n                    }\n                    goto LAB_000562b0;\n                  }\n                  if (local_60e8 < 3) {\n                    local_60e8 = 3;\n                    goto LAB_0005639c;\n                  }\n                }\nLAB_00056a9c:\n                FUN_0005df98(2,\"src/conf.c\",0x170,\n                             \"wrong sequence of section, must follow global->levels->formats->rules\"\n                            );\n                goto LAB_000562b0;\n              }\n              if (local_60e8 != 0) goto LAB_00056a9c;\nLAB_00056644:\n              local_60e8 = 1;\n              iVar16 = 0;\n              pbVar15 = local_6040;\n              goto LAB_000560d8;\n            }\nLAB_000568d8:\n            FUN_0005df98(2,\"src/conf.c\",0x15a,\n                         \"line_len[%ld] > MAXLEN_CFG_LINE[%ld], may cause overflow\",sVar5,0x1000);\n          }\nLAB_000562b0:\n          FUN_0005df98(2,\"src/conf.c\",0x13a,\"parse configure file[%s]line_no[%ld] fail\",param_1,\n                       iVar3);\n          local_60e4 = 0xffffffff;\n          FUN_0005df98(2,\"src/conf.c\",0x13b,\"line[%s]\",local_6040);\n          goto LAB_000562fc;\n        }\n        uVar1 = puVar17[pbVar12[-1]];\n        while ((uVar1 & 0x2000) != 0) {\n          pbVar15 = pbVar15 + -1;\n          uVar1 = puVar17[*pbVar15];\n        }\n        iVar16 = (int)(pbVar15 + 1) - (int)local_6040;\n        pbVar15[1] = 0;\n        pbVar15 = pbVar15 + 1;\n      } while( true );\n    }\n    FUN_0005df98(2,\"src/conf.c\",0xf5,\"open configure file[%s] fail\",param_1);\n  }\n  else {\n    piVar10 = __errno_location();\n    FUN_0005df98(2,\"src/conf.c\",0xee,\"lstat conf file[%s] fail, errno[%d]\",param_1,*piVar10);\n  }\n  return 0xffffffff;\n}\n\n",
    "FUN_00056b38": "\nvoid FUN_00056b38(int param_1,undefined4 param_2)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  int iVar3;\n  int *piVar4;\n  \n  if (param_1 != 0) {\n    FUN_0005df98(param_2,\"src/conf.c\",0x2d,\"-conf[%p]-\",param_1);\n    FUN_0005df98(param_2,\"src/conf.c\",0x2e,\"--global--\");\n    iVar3 = param_1 + 0x401;\n    FUN_0005df98(param_2,\"src/conf.c\",0x2f,\"---file[%s],mtime[%s]---\",param_1,iVar3);\n    FUN_0005df98(param_2,\"src/conf.c\",0x30,\"---strict init[%d]---\",*(undefined4 *)(param_1 + 0x418))\n    ;\n    FUN_0005df98(param_2,\"src/conf.c\",0x31,\"---buffer min[%ld]---\",*(undefined4 *)(param_1 + 0x41c))\n    ;\n    uVar2 = *(undefined4 *)(param_1 + 0x420);\n    FUN_0005df98(param_2,\"src/conf.c\",0x32,\"---buffer max[%ld]---\",uVar2);\n    if (*(int *)(param_1 + 0x2430) != 0) {\n      FUN_0005df98(param_2,\"src/conf.c\",0x34,\"---default_format---\",uVar2,iVar3);\n      FUN_000575fc(*(undefined4 *)(param_1 + 0x2430),param_2);\n    }\n    FUN_0005df98(param_2,\"src/conf.c\",0x37,\"---file perms[0%o]---\",*(undefined4 *)(param_1 + 0x2434)\n                );\n    FUN_0005df98(param_2,\"src/conf.c\",0x38,\"---reload conf period[%ld]---\",\n                 *(undefined4 *)(param_1 + 0x243c));\n    FUN_0005df98(param_2,\"src/conf.c\",0x39,\"---fsync period[%ld]---\",\n                 *(undefined4 *)(param_1 + 0x2438));\n    FUN_0005df98(param_2,\"src/conf.c\",0x3b,\"---rotate lock file[%s]---\",param_1 + 0x424);\n    if (*(int *)(param_1 + 0x1428) != 0) {\n      FUN_00058638(*(int *)(param_1 + 0x1428),param_2);\n    }\n    if (*(int *)(param_1 + 0x2440) != 0) {\n      FUN_00057a8c(*(int *)(param_1 + 0x2440),param_2);\n    }\n    if (*(int *)(param_1 + 0x2444) != 0) {\n      FUN_0005df98(param_2,\"src/conf.c\",0x41,\"--format list[%p]--\",*(int *)(param_1 + 0x2444));\n      piVar4 = *(int **)(param_1 + 0x2444);\n      if (0 < piVar4[1]) {\n        iVar3 = 0;\n        do {\n          iVar1 = iVar3 * 4;\n          iVar3 = iVar3 + 1;\n          FUN_000575fc(*(undefined4 *)(*piVar4 + iVar1),param_2);\n          piVar4 = *(int **)(param_1 + 0x2444);\n        } while (iVar3 < piVar4[1]);\n      }\n    }\n    if (*(int *)(param_1 + 0x2448) != 0) {\n      FUN_0005df98(param_2,\"src/conf.c\",0x48,\"--rule_list[%p]--\",*(int *)(param_1 + 0x2448));\n      piVar4 = *(int **)(param_1 + 0x2448);\n      if (0 < piVar4[1]) {\n        iVar3 = 0;\n        do {\n          iVar1 = iVar3 * 4;\n          iVar3 = iVar3 + 1;\n          FUN_0005a850(*(undefined4 *)(*piVar4 + iVar1),param_2);\n          piVar4 = *(int **)(param_1 + 0x2448);\n        } while (iVar3 < piVar4[1]);\n      }\n    }\n    return;\n  }\n  FUN_0005df98(2,\"src/conf.c\",0x2c,\"a_conf is null or 0\");\n  return;\n}\n\n",
    "FUN_00056e0c": "\nvoid FUN_00056e0c(void *param_1)\n\n{\n  if (param_1 != (void *)0x0) {\n    if (*(int *)((int)param_1 + 0x1428) != 0) {\n      FUN_00058750();\n    }\n    if (*(int *)((int)param_1 + 0x2440) != 0) {\n      FUN_00057b24();\n    }\n    if (*(int *)((int)param_1 + 0x2430) != 0) {\n      FUN_0005766c();\n    }\n    if (*(int *)((int)param_1 + 0x2444) != 0) {\n      FUN_0005d580();\n    }\n    if (*(int *)((int)param_1 + 0x2448) != 0) {\n      FUN_0005d580();\n    }\n    free(param_1);\n    FUN_0005df98(0,\"src/conf.c\",0x5a,\"zlog_conf_del[%p]\");\n    return;\n  }\n  FUN_0005df98(2,\"src/conf.c\",0x53,\"a_conf is null or 0\");\n  return;\n}\n\n",
    "FUN_00056eb8": "\nchar * FUN_00056eb8(char *param_1)\n\n{\n  bool bVar1;\n  char *__s;\n  char *pcVar2;\n  uint uVar3;\n  int iVar4;\n  int iVar5;\n  int *piVar6;\n  \n  __s = (char *)calloc(1,0x2450);\n  if (__s == (char *)0x0) {\n    piVar6 = __errno_location();\n    FUN_0005df98(2,\"src/conf.c\",0x69,\"calloc fail, errno[%d]\",*piVar6);\n    return (char *)0x0;\n  }\n  if ((param_1 == (char *)0x0) || (*param_1 == '\\0')) {\n    pcVar2 = getenv(\"ZLOG_CONF_PATH\");\n    if (pcVar2 != (char *)0x0) {\n      pcVar2 = getenv(\"ZLOG_CONF_PATH\");\n      uVar3 = snprintf(__s,0x401,\"%s\",pcVar2);\n      goto joined_r0x00057148;\n    }\n    memset(__s,0,0x401);\n    *(undefined4 *)(__s + 0x418) = 1;\n    *(undefined4 *)(__s + 0x420) = 0x200000;\n    *(undefined4 *)(__s + 0x41c) = 0x400;\n    *(undefined4 *)(__s + 0x424) = 0x706d742f;\n    *(undefined4 *)(__s + 0x428) = 0x6f6c7a2f;\n    *(undefined4 *)(__s + 0x42c) = 0x6f6c2e67;\n    *(undefined2 *)(__s + 0x430) = 0x6b63;\n    __s[0x432] = '\\0';\n    bVar1 = false;\n  }\n  else {\n    uVar3 = snprintf(__s,0x401,\"%s\",param_1);\njoined_r0x00057148:\n    if (0x400 < uVar3) {\n      piVar6 = __errno_location();\n      FUN_0005df98(2,\"src/conf.c\",0x78,\"not enough space for path name, nwrite=[%d], errno[%d]\",\n                   uVar3,*piVar6);\n      goto LAB_00057178;\n    }\n    *(undefined4 *)(__s + 0x418) = 1;\n    *(undefined4 *)(__s + 0x41c) = 0x400;\n    *(undefined4 *)(__s + 0x420) = 0x200000;\n    bVar1 = true;\n    strcpy(__s + 0x424,__s);\n  }\n  *(undefined4 *)(__s + 0x142c) = 0x61666564;\n  *(undefined4 *)(__s + 0x1430) = 0x20746c75;\n  *(undefined4 *)(__s + 0x1434) = 0x2522203d;\n  *(undefined4 *)(__s + 0x1438) = 0x56252044;\n  *(undefined4 *)(__s + 0x143c) = 0x70255b20;\n  *(undefined4 *)(__s + 0x1440) = 0x3a46253a;\n  *(undefined4 *)(__s + 0x1444) = 0x205d4c25;\n  *(undefined4 *)(__s + 0x1448) = 0x6e256d25;\n  *(undefined2 *)(__s + 0x144c) = 0x22;\n  *(undefined4 *)(__s + 0x2434) = 0x180;\n  *(undefined4 *)(__s + 0x243c) = 0;\n  *(undefined4 *)(__s + 0x2438) = 0;\n  iVar4 = FUN_00057c30();\n  *(int *)(__s + 0x2440) = iVar4;\n  if (iVar4 == 0) {\n    FUN_0005df98(2,\"src/conf.c\",0x8e,\"zlog_level_list_new fail\");\n  }\n  else {\n    iVar4 = FUN_0005d4c0(FUN_0005766c);\n    *(int *)(__s + 0x2444) = iVar4;\n    if (iVar4 == 0) {\n      FUN_0005df98(2,\"src/conf.c\",0x94,\"zc_arraylist_new fail\");\n    }\n    else {\n      iVar4 = FUN_0005d4c0(FUN_0005a97c);\n      *(int *)(__s + 0x2448) = iVar4;\n      if (iVar4 == 0) {\n        FUN_0005df98(2,\"src/conf.c\",0x9a,\"init rule_list fail\");\n      }\n      else if (bVar1) {\n        iVar4 = FUN_00056030(__s);\n        if (iVar4 == 0) {\nLAB_00056ffc:\n          FUN_00056b38(__s,0);\n          return __s;\n        }\n        FUN_0005df98(2,\"src/conf.c\",0xa0,\"zlog_conf_build_with_file fail\");\n      }\n      else {\n        iVar4 = FUN_000576e4(__s + 0x142c,__s + 0x244c);\n        *(int *)(__s + 0x2430) = iVar4;\n        if (iVar4 == 0) {\n          FUN_0005df98(2,\"src/conf.c\",0xb7,\"zlog_format_new fail\");\n        }\n        else {\n          iVar4 = FUN_00058834(__s + 0x424);\n          *(int *)(__s + 0x1428) = iVar4;\n          if (iVar4 == 0) {\n            FUN_0005df98(2,\"src/conf.c\",0xbd,\"zlog_rotater_new fail\");\n          }\n          else {\n            iVar4 = FUN_0005aa9c(\"*.*        >stdout\",*(undefined4 *)(__s + 0x2440),\n                                 *(undefined4 *)(__s + 0x2430),*(undefined4 *)(__s + 0x2444),\n                                 *(undefined4 *)(__s + 0x2434),*(undefined4 *)(__s + 0x2438),\n                                 __s + 0x244c);\n            if (iVar4 == 0) {\n              FUN_0005df98(2,\"src/conf.c\",0xca,\"zlog_rule_new fail\");\n            }\n            else {\n              iVar5 = FUN_0005d694(*(undefined4 *)(__s + 0x2448),iVar4);\n              if (iVar5 == 0) goto LAB_00056ffc;\n              FUN_0005a97c(iVar4);\n              FUN_0005df98(2,\"src/conf.c\",0xd1,\"zc_arraylist_add fail\");\n            }\n          }\n        }\n        FUN_0005df98(2,\"src/conf.c\",0xa5,\"zlog_conf_build_without_file fail\");\n      }\n    }\n  }\nLAB_00057178:\n  FUN_00056e0c(__s);\n  return (char *)0x0;\n}\n\n",
    "FUN_0005729c": "\nvoid FUN_0005729c(undefined4 *param_1,undefined4 param_2)\n\n{\n  if (param_1 != (undefined4 *)0x0) {\n    FUN_0005df98(param_2,\"src/event.c\",0x28,\n                 \"---event[%p][%s,%s][%s(%ld),%s(%ld),%ld,%d][%p,%s][%ld,%ld][%ld,%ld][%d]---\",\n                 param_1,*param_1,param_1 + 2,param_1[0x44],param_1[0x45],param_1[0x46],\n                 param_1[0x47],param_1[0x48],param_1[0x49],param_1[0x4a],param_1[0x4c],param_1[0x4f]\n                 ,param_1[0x50],param_1[0x5f],param_1[0x6a],param_1[0x5e]);\n    return;\n  }\n  FUN_0005df98(2,\"src/event.c\",0x1e,\"a_event is null or 0\");\n  return;\n}\n\n",
    "FUN_00057364": "\nvoid FUN_00057364(void *param_1)\n\n{\n  if (param_1 != (void *)0x0) {\n    if (*(void **)((int)param_1 + 0x174) != (void *)0x0) {\n      free(*(void **)((int)param_1 + 0x174));\n    }\n    FUN_0005df98(0,\"src/event.c\",0x32,\"zlog_event_del[%p]\",param_1);\n    free(param_1);\n    return;\n  }\n  FUN_0005df98(2,\"src/event.c\",0x30,\"a_event is null or 0\");\n  return;\n}\n\n",
    "FUN_000573d8": "\nvoid * FUN_000573d8(size_t param_1)\n\n{\n  void *__ptr;\n  void *pvVar1;\n  int iVar2;\n  size_t sVar3;\n  pthread_t pVar4;\n  long lVar5;\n  int *piVar6;\n  \n  __ptr = calloc(1,0x21c);\n  if (__ptr == (void *)0x0) {\n    piVar6 = __errno_location();\n    FUN_0005df98(2,\"src/event.c\",0x3d,\"calloc fail, errno[%d]\",*piVar6);\n  }\n  else {\n    pvVar1 = calloc(param_1,0x100c);\n    *(void **)((int)__ptr + 0x174) = pvVar1;\n    if (pvVar1 == (void *)0x0) {\n      piVar6 = __errno_location();\n      FUN_0005df98(2,\"src/event.c\",0x43,\"calloc fail, errno[%d]\",*piVar6);\n      free(__ptr);\n      __ptr = (void *)0x0;\n    }\n    else {\n      *(size_t *)((int)__ptr + 0x178) = param_1;\n      iVar2 = gethostname((char *)((int)__ptr + 8),0x100);\n      if (iVar2 == 0) {\n        sVar3 = strlen((char *)((int)__ptr + 8));\n        *(size_t *)((int)__ptr + 0x10c) = sVar3;\n        pVar4 = pthread_self();\n        *(pthread_t *)((int)__ptr + 0x1a8) = pVar4;\n        iVar2 = sprintf((char *)((int)__ptr + 0x1ac),\"%lu\");\n        *(int *)((int)__ptr + 0x1cc) = iVar2;\n        iVar2 = sprintf((char *)((int)__ptr + 0x1d0),\"%x\",*(undefined4 *)((int)__ptr + 0x1a8));\n        *(int *)((int)__ptr + 0x1f0) = iVar2;\n        lVar5 = syscall(0xe0);\n        *(long *)((int)__ptr + 500) = lVar5;\n        iVar2 = sprintf((char *)((int)__ptr + 0x1f8),\"%u\");\n        *(int *)((int)__ptr + 0x218) = iVar2;\n      }\n      else {\n        piVar6 = __errno_location();\n        FUN_0005df98(2,\"src/event.c\",0x4e,\"gethostname fail, errno[%d]\",*piVar6);\n        FUN_00057364(__ptr);\n        __ptr = (void *)0x0;\n      }\n    }\n  }\n  return __ptr;\n}\n\n",
    "FUN_00057540": "\nvoid FUN_00057540(undefined4 *param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 undefined4 param_5,undefined4 param_6,undefined4 param_7,undefined4 param_8,\n                 undefined4 param_9,undefined4 param_10,undefined4 param_11)\n\n{\n  *param_1 = param_2;\n  param_1[1] = param_3;\n  param_1[0x44] = param_4;\n  param_1[0x45] = param_5;\n  param_1[0x46] = param_6;\n  param_1[0x47] = param_7;\n  param_1[0x48] = param_8;\n  param_1[0x49] = param_9;\n  param_1[0x4c] = param_10;\n  param_1[0x4d] = param_11;\n  param_1[0x4e] = 0;\n  param_1[0x5f] = 0;\n  param_1[0x4f] = 0;\n  return;\n}\n\n",
    "FUN_0005759c": "\nvoid FUN_0005759c(undefined4 *param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 undefined4 param_5,undefined4 param_6,undefined4 param_7,undefined4 param_8,\n                 undefined4 param_9,undefined4 param_10,undefined4 param_11)\n\n{\n  param_1[1] = param_3;\n  param_1[0x44] = param_4;\n  param_1[0x45] = param_5;\n  *param_1 = param_2;\n  param_1[0x46] = param_6;\n  param_1[0x47] = param_7;\n  param_1[0x48] = param_8;\n  param_1[0x49] = param_9;\n  param_1[0x4e] = 1;\n  param_1[0x4a] = param_10;\n  param_1[0x4b] = param_11;\n  param_1[0x5f] = 0;\n  param_1[0x4f] = 0;\n  return;\n}\n\n",
    "FUN_000575fc": "\nvoid FUN_000575fc(int param_1,undefined4 param_2)\n\n{\n  if (param_1 != 0) {\n    FUN_0005df98(param_2,\"src/format.c\",0x1d,\"---format[%p][%s = %s(%p)]---\",param_1,param_1,\n                 param_1 + 0x1001,*(undefined4 *)(param_1 + 0x2004));\n    return;\n  }\n  FUN_0005df98(2,\"src/format.c\",0x18,\"a_format is null or 0\");\n  return;\n}\n\n",
    "FUN_0005766c": "\nvoid FUN_0005766c(void *param_1)\n\n{\n  if (param_1 != (void *)0x0) {\n    if (*(int *)((int)param_1 + 0x2004) != 0) {\n      FUN_0005d580();\n    }\n    FUN_0005df98(0,\"src/format.c\",0x31,\"zlog_format_del[%p]\",param_1);\n    free(param_1);\n    return;\n  }\n  FUN_0005df98(2,\"src/format.c\",0x2d,\"a_format is null or 0\");\n  return;\n}\n\n",
    "FUN_000576e4": "\nbyte * FUN_000576e4(char *param_1,undefined4 param_2)\n\n{\n  byte bVar1;\n  byte *__s;\n  int iVar2;\n  ushort **ppuVar3;\n  char *pcVar4;\n  int iVar5;\n  int *piVar6;\n  byte *pbVar7;\n  uint uVar8;\n  uint uVar9;\n  char *__s_00;\n  byte *local_24 [2];\n  \n  if (param_1 == (char *)0x0) {\n    FUN_0005df98(2,\"src/format.c\",0x41,\"line is null or 0\");\n  }\n  else {\n    __s = (byte *)calloc(1,0x2008);\n    if (__s == (byte *)0x0) {\n      piVar6 = __errno_location();\n      FUN_0005df98(2,\"src/format.c\",0x45,\"calloc fail, errno[%d]\",*piVar6);\n    }\n    else {\n      memset(__s,0,0x1001);\n      iVar2 = __isoc99_sscanf(param_1,\" %[^= \\t] = %n\",__s);\n      if (iVar2 == 1) {\n        if (*param_1 == '\\\"') {\n          uVar8 = (uint)*__s;\n          if (uVar8 != 0) {\n            ppuVar3 = __ctype_b_loc();\n            pbVar7 = __s;\n            do {\n              uVar9 = uVar8 - 0x5f;\n              if (uVar9 != 0) {\n                uVar9 = 1;\n              }\n              if ((uVar9 & ((*ppuVar3)[uVar8] ^ 8) >> 3) != 0) {\n                FUN_0005df98(2,\"src/format.c\",0x5c,\n                             \"a_format->name[%s] character is not in [a-Z][0-9][_]\",__s);\n                goto LAB_000578a8;\n              }\n              pbVar7 = pbVar7 + 1;\n              uVar8 = (uint)*pbVar7;\n            } while (uVar8 != 0);\n          }\n          __s_00 = param_1 + 1;\n          pcVar4 = strrchr(__s_00,0x22);\n          if (pcVar4 == (char *)0x0) {\n            FUN_0005df98(2,\"src/format.c\",100,\"there is no \\\" at end of pattern, line[%s]\",param_1);\n          }\n          else if ((uint)((int)pcVar4 - (int)__s_00) < 0x1001) {\n            pbVar7 = __s + 0x1001;\n            memset(pbVar7,0,0x1001);\n            memcpy(pbVar7,__s_00,(int)pcVar4 - (int)__s_00);\n            iVar2 = FUN_0005e310(pbVar7,0x1001);\n            if (iVar2 == 0) {\n              iVar2 = FUN_0005d4c0(FUN_0005c6f4);\n              *(int *)(__s + 0x2004) = iVar2;\n              if (iVar2 == 0) {\n                FUN_0005df98(2,\"src/format.c\",0x77,\"zc_arraylist_new fail\");\n              }\n              else {\n                bVar1 = __s[0x1001];\n                while( true ) {\n                  if (bVar1 == 0) {\n                    FUN_000575fc(__s,0);\n                    return __s;\n                  }\n                  iVar2 = FUN_0005c758(pbVar7,local_24,param_2);\n                  if (iVar2 == 0) break;\n                  iVar5 = FUN_0005d694(*(undefined4 *)(__s + 0x2004),iVar2);\n                  if (iVar5 != 0) {\n                    FUN_0005c6f4(iVar2);\n                    FUN_0005df98(2,\"src/format.c\",0x84,\"zc_arraylist_add fail\");\n                    goto LAB_000578a8;\n                  }\n                  bVar1 = *local_24[0];\n                  pbVar7 = local_24[0];\n                }\n                FUN_0005df98(2,\"src/format.c\",0x7e,\"zlog_spec_new fail\");\n              }\n            }\n            else {\n              FUN_0005df98(2,\"src/format.c\",0x70,\"zc_str_replace_env fail\");\n            }\n          }\n          else {\n            FUN_0005df98(2,\"src/format.c\",0x69,\"pattern is too long\");\n          }\n        }\n        else {\n          FUN_0005df98(2,\"src/format.c\",0x56,\"the 1st char of pattern is not \\\", line+nread[%s]\",\n                       param_1);\n        }\n      }\n      else {\n        FUN_0005df98(2,\"src/format.c\",0x51,\"format[%s], syntax wrong\",param_1);\n      }\nLAB_000578a8:\n      FUN_0005766c(__s);\n    }\n  }\n  return (byte *)0x0;\n}\n\n",
    "FUN_00057a1c": "\nundefined4 FUN_00057a1c(int param_1,int param_2)\n\n{\n  int *piVar1;\n  int unaff_r4;\n  int unaff_r5;\n  int iVar2;\n  \n  piVar1 = *(int **)(param_1 + 0x2004);\n  iVar2 = piVar1[1];\n  if (0 < iVar2) {\n    unaff_r4 = 0;\n    unaff_r5 = param_2;\n  }\n  (*(undefined4 **)(param_2 + 0x1c))[1] = **(undefined4 **)(param_2 + 0x1c);\n  if (0 < iVar2) {\n    do {\n      iVar2 = *(int *)(*piVar1 + unaff_r4 * 4);\n      unaff_r4 = unaff_r4 + 1;\n      iVar2 = (**(code **)(iVar2 + 0x2428))(iVar2,unaff_r5);\n      if (iVar2 != 0) {\n        return 0xffffffff;\n      }\n      piVar1 = *(int **)(param_1 + 0x2004);\n    } while (unaff_r4 < piVar1[1]);\n  }\n  return 0;\n}\n\n",
    "FUN_00057a8c": "\nvoid FUN_00057a8c(int *param_1,undefined4 param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  \n  if (param_1 == (int *)0x0) {\n    FUN_0005df98(2,\"src/level_list.c\",0x19,\"levels is null or 0\");\n    return;\n  }\n  FUN_0005df98(param_2,\"src/level_list.c\",0x1a,\"--level_list[%p]--\",param_1);\n  iVar1 = param_1[1];\n  if (0 < iVar1) {\n    iVar3 = 0;\n    do {\n      iVar2 = *(int *)(*param_1 + iVar3 * 4);\n      if (iVar2 != 0) {\n        FUN_0005f3f8(iVar2,param_2);\n        iVar1 = param_1[1];\n      }\n      iVar3 = iVar3 + 1;\n    } while (iVar3 < iVar1);\n  }\n  return;\n}\n\n",
    "FUN_00057b24": "\nvoid FUN_00057b24(int param_1)\n\n{\n  if (param_1 != 0) {\n    FUN_0005d580();\n    FUN_0005df98(0,\"src/level_list.c\",0x27,\"zc_level_list_del[%p]\",param_1);\n    return;\n  }\n  FUN_0005df98(2,\"src/level_list.c\",0x25,\"levels is null or 0\");\n  return;\n}\n\n",
    "FUN_00057b80": "\nint FUN_00057b80(undefined4 param_1,undefined4 param_2)\n\n{\n  undefined4 *puVar1;\n  int iVar2;\n  \n  puVar1 = (undefined4 *)FUN_0005f4d8(param_2);\n  if (puVar1 == (undefined4 *)0x0) {\n    FUN_0005df98(2,\"src/level_list.c\",0x55,\"zlog_level_new fail\");\n    iVar2 = -1;\n  }\n  else {\n    iVar2 = FUN_0005d5f0(param_1,*puVar1,puVar1);\n    if (iVar2 != 0) {\n      FUN_0005df98(2,\"src/level_list.c\",0x5a,\"zc_arraylist_set fail\");\n      FUN_0005df98(2,\"src/level_list.c\",0x60,\"line[%s]\",param_2);\n      FUN_0005f474(puVar1);\n      iVar2 = -1;\n    }\n  }\n  return iVar2;\n}\n\n",
    "FUN_00057c30": "\nint FUN_00057c30(void)\n\n{\n  int iVar1;\n  int iVar2;\n  \n  iVar1 = FUN_0005d4c0(FUN_0005f474);\n  if (iVar1 == 0) {\n    FUN_0005df98(2,\"src/level_list.c\",0x3e,\"zc_arraylist_new fail\");\n  }\n  else {\n    iVar2 = FUN_00057b80(iVar1,\"* = 0, LOG_INFO\");\n    if ((((((iVar2 != 0) || (iVar2 = FUN_00057b80(iVar1,\"DEBUG = 20, LOG_DEBUG\"), iVar2 != 0)) ||\n          (iVar2 = FUN_00057b80(iVar1,\"INFO = 40, LOG_INFO\"), iVar2 != 0)) ||\n         ((iVar2 = FUN_00057b80(iVar1,\"NOTICE = 60, LOG_NOTICE\"), iVar2 != 0 ||\n          (iVar2 = FUN_00057b80(iVar1,\"WARN = 80, LOG_WARNING\"), iVar2 != 0)))) ||\n        ((iVar2 = FUN_00057b80(iVar1,\"ERROR = 100, LOG_ERR\"), iVar2 != 0 ||\n         ((iVar2 = FUN_00057b80(iVar1,\"FATAL = 120, LOG_ALERT\"), iVar2 != 0 ||\n          (iVar2 = FUN_00057b80(iVar1,\"UNKNOWN = 254, LOG_ERR\"), iVar2 != 0)))))) ||\n       (iVar2 = FUN_00057b80(iVar1,\"! = 255, LOG_INFO\"), iVar2 != 0)) {\n      FUN_0005df98(2,\"src/level_list.c\",0x43,\"zlog_level_set_default fail\");\n      FUN_0005d580(iVar1);\n      iVar1 = 0;\n    }\n  }\n  return iVar1;\n}\n\n",
    "FUN_00057d70": "\nint FUN_00057d70(int *param_1,int param_2)\n\n{\n  int iVar1;\n  \n  if ((param_2 < param_1[1]) && (iVar1 = *(int *)(*param_1 + param_2 * 4), iVar1 != 0)) {\n    return iVar1;\n  }\n  FUN_0005df98(2,\"src/level_list.c\",0x77,\n               \"l[%d] not in (0,254), or has no level defined,see configure file define, set to UNKOWN\"\n               ,param_2);\n  if (param_1[1] < 0xff) {\n    iVar1 = 0;\n  }\n  else {\n    iVar1 = *(int *)(*param_1 + 0x3f8);\n  }\n  return iVar1;\n}\n\n",
    "FUN_00057de4": "\nint FUN_00057de4(int *param_1,char *param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  int iVar4;\n  \n  if ((param_2 == (char *)0x0) || (*param_2 == '\\0')) {\n    FUN_0005df98(2,\"src/level_list.c\",0x84,\"str is [%s], can\\'t find level\",param_2);\n  }\n  else {\n    iVar4 = param_1[1];\n    if (0 < iVar4) {\n      piVar3 = (int *)(*param_1 + -4);\n      iVar2 = 0;\n      do {\n        piVar3 = piVar3 + 1;\n        if ((*piVar3 != 0) && (iVar1 = strcasecmp(param_2,(char *)(*piVar3 + 4)), iVar1 == 0)) {\n          return iVar2;\n        }\n        iVar2 = iVar2 + 1;\n      } while (iVar2 != iVar4);\n    }\n    FUN_0005df98(2,\"src/level_list.c\",0x8e,\"str[%s] can\\'t found in level list\",param_2);\n  }\n  return -1;\n}\n\n",
    "FUN_00057e98": "\nvoid FUN_00057e98(void *param_1)\n\n{\n  FUN_0005df98(0,\"src/mdc.c\",0x2c,\"zlog_mdc_kv_del[%p]\",param_1);\n  free(param_1);\n  return;\n}\n\n",
    "FUN_00057ed4": "\nvoid FUN_00057ed4(undefined4 *param_1,undefined4 param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  \n  if (param_1 != (undefined4 *)0x0) {\n    FUN_0005df98(param_2,\"src/mdc.c\",0x16,\"---mdc[%p]---\",param_1);\n    for (iVar1 = FUN_0005de60(*param_1); iVar1 != 0; iVar1 = FUN_0005dea8(*param_1,iVar1)) {\n      iVar2 = *(int *)(iVar1 + 8);\n      FUN_0005df98(param_2,\"src/mdc.c\",0x1c,\"----mdc_kv[%p][%s]-[%s]----\",iVar2,iVar2,iVar2 + 0x401)\n      ;\n    }\n    return;\n  }\n  FUN_0005df98(2,\"src/mdc.c\",0x15,\"a_mdc is null or 0\");\n  return;\n}\n\n",
    "FUN_00057f94": "\nvoid FUN_00057f94(int *param_1)\n\n{\n  if (param_1 != (int *)0x0) {\n    if (*param_1 != 0) {\n      FUN_0005d890();\n    }\n    FUN_0005df98(0,\"src/mdc.c\",0x25,\"zlog_mdc_del[%p]\",param_1);\n    free(param_1);\n    return;\n  }\n  FUN_0005df98(2,\"src/mdc.c\",0x23,\"a_mdc is null or 0\");\n  return;\n}\n\n",
    "FUN_00058008": "\nint * FUN_00058008(void)\n\n{\n  int *piVar1;\n  int iVar2;\n  int *piVar3;\n  \n  piVar1 = (int *)calloc(1,4);\n  if (piVar1 == (int *)0x0) {\n    piVar3 = __errno_location();\n    FUN_0005df98(2,\"src/mdc.c\",0x45,\"calloc fail, errno[%d]\",*piVar3);\n  }\n  else {\n    iVar2 = FUN_0005d7b8(0x14,&LAB_0005df18,FUN_0005df44,0,FUN_00057e98);\n    *piVar1 = iVar2;\n    if (iVar2 == 0) {\n      FUN_0005df98(2,\"src/mdc.c\",0x4e,\"zc_hashtable_new fail\");\n      FUN_00057f94(piVar1);\n      piVar1 = (int *)0x0;\n    }\n  }\n  return piVar1;\n}\n\n",
    "FUN_000580c0": "\nint FUN_000580c0(undefined4 *param_1,undefined4 param_2,undefined4 param_3)\n\n{\n  char *__s;\n  int iVar1;\n  int *piVar2;\n  \n  __s = (char *)calloc(1,0x808);\n  if (__s == (char *)0x0) {\n    piVar2 = __errno_location();\n    FUN_0005df98(2,\"src/mdc.c\",0x36,\"calloc fail, errno[%d]\",*piVar2);\n    FUN_0005df98(2,\"src/mdc.c\",0x60,\"zlog_mdc_kv_new failed\");\n    iVar1 = -1;\n  }\n  else {\n    snprintf(__s,0x401,\"%s\",param_2);\n    iVar1 = snprintf(__s + 0x401,0x401,\"%s\",param_3);\n    *(int *)(__s + 0x804) = iVar1;\n    iVar1 = FUN_0005dac0(*param_1,__s,__s);\n    if (iVar1 != 0) {\n      FUN_0005df98(2,\"src/mdc.c\",0x65,\"zc_hashtable_put fail\");\n      FUN_00057e98(__s);\n      iVar1 = -1;\n    }\n  }\n  return iVar1;\n}\n\n",
    "FUN_000581b0": "\nvoid FUN_000581b0(undefined4 *param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  int iVar3;\n  void *__ptr;\n  void *pvVar4;\n  uint uVar5;\n  \n  param_1 = (undefined4 *)*param_1;\n  uVar2 = param_1[2];\n  if (uVar2 != 0) {\n    iVar3 = param_1[1];\n    uVar5 = 0;\n    do {\n      __ptr = *(void **)(iVar3 + uVar5 * 4);\n      iVar1 = uVar5 * 4;\n      if (__ptr != (void *)0x0) {\n        do {\n          pvVar4 = *(void **)((int)__ptr + 0x10);\n          if ((code *)param_1[5] != (code *)0x0) {\n            (*(code *)param_1[5])(*(undefined4 *)((int)__ptr + 4));\n          }\n          if ((code *)param_1[6] != (code *)0x0) {\n            (*(code *)param_1[6])(*(undefined4 *)((int)__ptr + 8));\n          }\n          free(__ptr);\n          __ptr = pvVar4;\n        } while (pvVar4 != (void *)0x0);\n        iVar3 = param_1[1];\n        uVar2 = param_1[2];\n      }\n      uVar5 = uVar5 + 1;\n      *(undefined4 *)(iVar3 + iVar1) = 0;\n    } while (uVar5 < uVar2);\n  }\n  *param_1 = 0;\n  return;\n}\n\n",
    "FUN_000581b8": "\nint FUN_000581b8(undefined4 *param_1)\n\n{\n  int iVar1;\n  \n  iVar1 = FUN_0005da58(*param_1);\n  if (iVar1 != 0) {\n    return iVar1 + 0x401;\n  }\n  FUN_0005df98(2,\"src/mdc.c\",0x79,\"zc_hashtable_get fail\");\n  return 0;\n}\n\n",
    "FUN_000581fc": "\nint FUN_000581fc(undefined4 *param_1)\n\n{\n  int iVar1;\n  \n  iVar1 = FUN_0005da58(*param_1);\n  if (iVar1 == 0) {\n    FUN_0005df98(2,\"src/mdc.c\",0x86,\"zc_hashtable_get fail\");\n  }\n  return iVar1;\n}\n\n",
    "FUN_00058238": "\nvoid FUN_00058238(int **param_1,int param_2)\n\n{\n  int *piVar1;\n  undefined4 uVar2;\n  int iVar3;\n  int extraout_r1;\n  int extraout_r1_00;\n  undefined4 *__ptr;\n  int iVar4;\n  \n  piVar1 = *param_1;\n  if (param_2 == 0 || piVar1 == (int *)0x0) {\n    FUN_0005df98(2,\"src/zc_hashtable.c\",0xf0,\"a_table[%p] or a_key[%p] is NULL, just do nothing\",\n                 piVar1,param_2);\n  }\n  else {\n    uVar2 = (*(code *)piVar1[3])(param_2);\n    FUN_0005fadc(uVar2,piVar1[2]);\n    __ptr = *(undefined4 **)(piVar1[1] + extraout_r1 * 4);\n    while( true ) {\n      if (__ptr == (undefined4 *)0x0) {\n        FUN_0005df98(2,\"src/zc_hashtable.c\",0xfb,\"p[%p] not found in hashtable\",0);\n        return;\n      }\n      iVar3 = (*(code *)piVar1[4])(param_2,__ptr[1]);\n      if (iVar3 != 0) break;\n      __ptr = (undefined4 *)__ptr[4];\n    }\n    if ((code *)piVar1[5] != (code *)0x0) {\n      (*(code *)piVar1[5])(__ptr[1]);\n    }\n    if ((code *)piVar1[6] != (code *)0x0) {\n      (*(code *)piVar1[6])(__ptr[2]);\n    }\n    iVar4 = __ptr[4];\n    iVar3 = __ptr[3];\n    if (iVar4 != 0) {\n      *(int *)(iVar4 + 0xc) = iVar3;\n      iVar3 = __ptr[3];\n    }\n    if (iVar3 == 0) {\n      FUN_0005fadc(*__ptr,piVar1[2]);\n      *(int *)(piVar1[1] + extraout_r1_00 * 4) = iVar4;\n    }\n    else {\n      *(int *)(iVar3 + 0x10) = iVar4;\n    }\n    free(__ptr);\n    *piVar1 = *piVar1 + -1;\n  }\n  return;\n}\n\n",
    "FUN_00058240": "\nvoid FUN_00058240(int param_1,undefined4 param_2)\n\n{\n  if (param_1 != 0) {\n    FUN_0005df98(param_2,\"src/record.c\",0xf,\"--record:[%p][%s:%p]--\",param_1,param_1,\n                 *(undefined4 *)(param_1 + 0x404));\n    return;\n  }\n  FUN_0005df98(2,\"src/record.c\",0xe,\"a_record is null or 0\");\n  return;\n}\n\n",
    "FUN_000582a0": "\nvoid FUN_000582a0(void *param_1)\n\n{\n  if (param_1 != (void *)0x0) {\n    FUN_0005df98(0,\"src/record.c\",0x16,\"zlog_record_del[%p]\",param_1);\n    free(param_1);\n    return;\n  }\n  FUN_0005df98(2,\"src/record.c\",0x15,\"a_record is null or 0\");\n  return;\n}\n\n",
    "FUN_00058304": "\nvoid * FUN_00058304(char *param_1,int param_2)\n\n{\n  void *__dest;\n  size_t sVar1;\n  int *piVar2;\n  \n  if (param_1 == (char *)0x0) {\n    FUN_0005df98(2,\"src/record.c\",0x1f,\"name is null or 0\");\n    __dest = (void *)0x0;\n  }\n  else if (param_2 == 0) {\n    FUN_0005df98(2,\"src/record.c\",0x20,\"output is null or 0\");\n    __dest = (void *)0x0;\n  }\n  else {\n    __dest = calloc(1,0x408);\n    if (__dest == (void *)0x0) {\n      piVar2 = __errno_location();\n      FUN_0005df98(2,\"src/record.c\",0x24,\"calloc fail, errno[%d]\",*piVar2);\n    }\n    else {\n      sVar1 = strlen(param_1);\n      if (sVar1 < 0x401) {\n        memcpy(__dest,param_1,sVar1 + 1);\n        *(int *)((int)__dest + 0x404) = param_2;\n        FUN_00058240(__dest,0);\n      }\n      else {\n        FUN_0005df98(2,\"src/record.c\",0x29,\"name[%s] is too long\",param_1);\n        FUN_000582a0(__dest);\n        __dest = (void *)0x0;\n      }\n    }\n  }\n  return __dest;\n}\n\n",
    "FUN_00058414": "\nvoid FUN_00058414(int param_1,undefined4 param_2)\n\n{\n  int iVar1;\n  \n  if (param_1 == 0) {\n    FUN_0005df98(2,\"src/record_table.c\",0x15,\"records is null or 0\");\n    return;\n  }\n  FUN_0005df98(param_2,\"src/record_table.c\",0x16,\"-record_table[%p]-\",param_1);\n  for (iVar1 = FUN_0005de60(param_1); iVar1 != 0; iVar1 = FUN_0005dea8(param_1,iVar1)) {\n    FUN_00058240(*(undefined4 *)(iVar1 + 8),param_2);\n  }\n  return;\n}\n\n",
    "FUN_000584a4": "\nvoid FUN_000584a4(int param_1)\n\n{\n  if (param_1 != 0) {\n    FUN_0005d890();\n    FUN_0005df98(0,\"src/record_table.c\",0x24,\"zlog_record_table_del[%p]\",param_1);\n    return;\n  }\n  FUN_0005df98(2,\"src/record_table.c\",0x22,\"records is null or 0\");\n  return;\n}\n\n",
    "FUN_00058500": "\nint FUN_00058500(void)\n\n{\n  int iVar1;\n  \n  iVar1 = FUN_0005d7b8(0x14,&LAB_0005df18,FUN_0005df44,0,FUN_000582a0);\n  if (iVar1 == 0) {\n    FUN_0005df98(2,\"src/record_table.c\",0x31,\"zc_hashtable_new fail\");\n  }\n  else {\n    FUN_00058414(iVar1,0);\n  }\n  return iVar1;\n}\n\n",
    "FUN_00058584": "\nvoid FUN_00058584(void *param_1)\n\n{\n  FUN_0005df98(0,\"src/rotater.c\",0x7e,\"del onefile[%p]\",param_1);\n  FUN_0005df98(0,\"src/rotater.c\",0x7f,\"a_file->path[%s]\",(int)param_1 + 4);\n  free(param_1);\n  return;\n}\n\n",
    "FUN_000585e4": "\nvoid FUN_000585e4(int param_1)\n\n{\n  *(undefined4 *)(param_1 + 0x20) = 0;\n  *(undefined4 *)(param_1 + 0x24) = 0;\n  *(undefined4 *)(param_1 + 0x43c) = 0;\n  *(undefined4 *)(param_1 + 0x438) = 0;\n  *(undefined4 *)(param_1 + 0x434) = 0;\n  *(undefined4 *)(param_1 + 0x42c) = 0;\n  *(undefined4 *)(param_1 + 0x430) = 0;\n  memset((void *)(param_1 + 0x28),0,0x401);\n  if (*(int *)(param_1 + 0x440) != 0) {\n    FUN_0005d580();\n  }\n  *(undefined4 *)(param_1 + 0x440) = 0;\n  return;\n}\n\n",
    "FUN_00058638": "\nvoid FUN_00058638(int param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  int *piVar2;\n  int iVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  undefined4 uVar10;\n  undefined4 uVar11;\n  undefined4 *puVar12;\n  int iVar13;\n  \n  if (param_1 != 0) {\n    uVar1 = *(undefined4 *)(param_1 + 0x43c);\n    iVar13 = param_1 + 0x28;\n    uVar4 = *(undefined4 *)(param_1 + 0x438);\n    uVar5 = *(undefined4 *)(param_1 + 0x434);\n    uVar6 = *(undefined4 *)(param_1 + 0x430);\n    uVar7 = *(undefined4 *)(param_1 + 0x42c);\n    uVar8 = *(undefined4 *)(param_1 + 0x24);\n    uVar9 = *(undefined4 *)(param_1 + 0x20);\n    uVar10 = *(undefined4 *)(param_1 + 0x1c);\n    uVar11 = *(undefined4 *)(param_1 + 0x18);\n    FUN_0005df98(param_2,\"src/rotater.c\",0x32,\"--rotater[%p][%p,%s,%d][%s,%s,%s,%ld,%ld,%d,%d,%d]--\"\n                 ,param_1,param_1,uVar11,uVar10,uVar9,uVar8,iVar13,uVar7,uVar6,uVar5,uVar4,uVar1);\n    piVar2 = *(int **)(param_1 + 0x440);\n    if ((piVar2 != (int *)0x0) && (0 < piVar2[1])) {\n      iVar3 = 0;\n      do {\n        puVar12 = *(undefined4 **)(*piVar2 + iVar3 * 4);\n        iVar3 = iVar3 + 1;\n        FUN_0005df98(param_2,\"src/rotater.c\",0x37,\"[%s,%d]->\",puVar12 + 1,*puVar12,uVar11,uVar10,\n                     uVar9,uVar8,iVar13,uVar7,uVar6,uVar5,uVar4,uVar1);\n        piVar2 = *(int **)(param_1 + 0x440);\n      } while (iVar3 < piVar2[1]);\n    }\n    return;\n  }\n  FUN_0005df98(2,\"src/rotater.c\",0x22,\"a_rotater is null or 0\");\n  return;\n}\n\n",
    "FUN_00058750": "\nvoid FUN_00058750(pthread_mutex_t *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if (param_1 != (pthread_mutex_t *)0x0) {\n    if ((*(int *)((int)param_1 + 0x1c) != 0) &&\n       (iVar1 = close(*(int *)((int)param_1 + 0x1c)), iVar1 != 0)) {\n      piVar2 = __errno_location();\n      FUN_0005df98(2,\"src/rotater.c\",0x44,\"close fail, errno[%d]\",*piVar2);\n    }\n    iVar1 = pthread_mutex_destroy(param_1);\n    if (iVar1 != 0) {\n      piVar2 = __errno_location();\n      FUN_0005df98(2,\"src/rotater.c\",0x49,\"pthread_mutex_destroy fail, errno[%d]\",*piVar2);\n    }\n    FUN_0005df98(0,\"src/rotater.c\",0x4c,\"zlog_rotater_del[%p]\",param_1);\n    free(param_1);\n    return;\n  }\n  FUN_0005df98(2,\"src/rotater.c\",0x40,\"a_rotater is null or 0\");\n  return;\n}\n\n",
    "FUN_00058834": "\npthread_mutex_t * FUN_00058834(char *param_1)\n\n{\n  pthread_mutex_t *__mutex;\n  int iVar1;\n  int *piVar2;\n  \n  if (param_1 == (char *)0x0) {\n    FUN_0005df98(2,\"src/rotater.c\",0x56,\"lock_file is null or 0\");\n    __mutex = (pthread_mutex_t *)0x0;\n  }\n  else {\n    __mutex = (pthread_mutex_t *)calloc(1,0x444);\n    if (__mutex == (pthread_mutex_t *)0x0) {\n      piVar2 = __errno_location();\n      FUN_0005df98(2,\"src/rotater.c\",0x5a,\"calloc fail, errno[%d]\",*piVar2);\n    }\n    else {\n      iVar1 = pthread_mutex_init(__mutex,(pthread_mutexattr_t *)0x0);\n      if (iVar1 == 0) {\n        iVar1 = open64(param_1,0x42,0x1b6);\n        if (iVar1 < 0) {\n          piVar2 = __errno_location();\n          FUN_0005df98(2,\"src/rotater.c\",0x6c,\"open file[%s] fail, errno[%d]\",param_1,*piVar2);\n          FUN_00058750(__mutex);\n          __mutex = (pthread_mutex_t *)0x0;\n        }\n        else {\n          *(int *)((int)__mutex + 0x1c) = iVar1;\n          __mutex[1].__data.__lock = (int)param_1;\n        }\n      }\n      else {\n        piVar2 = __errno_location();\n        FUN_0005df98(2,\"src/rotater.c\",0x5f,\"pthread_mutex_init fail, errno[%d]\",*piVar2);\n        free(__mutex);\n        __mutex = (pthread_mutex_t *)0x0;\n      }\n    }\n  }\n  return __mutex;\n}\n\n",
    "FUN_00058958": "\nundefined4\nFUN_00058958(pthread_mutex_t *param_1,char *param_2,uint param_3,char *param_4,uint param_5,\n            undefined4 param_6)\n\n{\n  int iVar1;\n  int *piVar2;\n  size_t sVar3;\n  char *pcVar4;\n  uint uVar5;\n  size_t sVar6;\n  void *__ptr;\n  int iVar7;\n  uint uVar8;\n  int iVar9;\n  undefined4 uVar10;\n  char **ppcVar11;\n  bool bVar12;\n  char *local_4b0;\n  int local_49c;\n  undefined auStack_498 [52];\n  int iStack_464;\n  glob64_t local_430 [28];\n  \n  if (param_2 == (char *)0x0) {\n    FUN_0005df98(2,\"src/rotater.c\",0x218,\"base_path is null or 0\");\n    return 0xffffffff;\n  }\n  local_430[0].gl_offs = 0;\n  local_430[0].gl_flags = 0;\n  local_430[0].gl_closedir = (_func_5031 *)0x0;\n  local_430[0].gl_readdir = (_func_5032 *)0x0;\n  local_430[0].gl_pathc = 1;\n  iVar1 = pthread_mutex_trylock(param_1);\n  if (iVar1 == 0x10) {\n    FUN_0005df98(1,\"src/rotater.c\",0x1e1,\n                 \"pthread_mutex_trylock fail, as lock_mutex is locked by other threads\");\nLAB_00058a0c:\n    FUN_0005df98(1,\"src/rotater.c\",0x21b,\n                 \"zlog_rotater_trylock fail, maybe lock by other process or threads\");\n    return 0;\n  }\n  if (iVar1 != 0) {\n    FUN_0005df98(2,\"src/rotater.c\",0x1e4,\"pthread_mutex_trylock fail, rc[%d]\",iVar1);\n    goto LAB_00058a0c;\n  }\n  iVar1 = fcntl(*(int *)((int)param_1 + 0x1c),0xd,local_430);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((*piVar2 - 0xbU & 0xfffffffd) == 0) {\n      FUN_0005df98(1,\"src/rotater.c\",0x1ed,\"fcntl lock fail, as file is lock by other process\");\n      iVar1 = pthread_mutex_unlock(param_1);\n    }\n    else {\n      FUN_0005df98(2,\"src/rotater.c\",0x1ef,\"lock fd[%d] fail, errno[%d]\",\n                   *(undefined4 *)((int)param_1 + 0x1c),*piVar2);\n      iVar1 = pthread_mutex_unlock(param_1);\n    }\n    if (iVar1 != 0) {\n      FUN_0005df98(2,\"src/rotater.c\",0x1f2,\"pthread_mutex_unlock fail, errno[%d]\",*piVar2);\n    }\n    goto LAB_00058a0c;\n  }\n  sVar3 = __xstat64(3,param_2,(stat64 *)auStack_498);\n  if (sVar3 == 0) {\n    iVar1 = (int)param_5 >> 0x1f;\n    iStack_464 = iStack_464 + (uint)CARRY4(auStack_498._48_4_,param_3);\n    bVar12 = param_5 < auStack_498._48_4_ + param_3;\n    uVar10 = 0;\n    if ((int)(iVar1 - (iStack_464 + (uint)bVar12)) < 0 !=\n        (SBORROW4(iVar1,iStack_464) != SBORROW4(iVar1 - iStack_464,(uint)bVar12))) {\n      *(char **)((int)param_1 + 0x20) = param_2;\n      *(char **)((int)param_1 + 0x24) = param_4;\n      *(undefined4 *)((int)param_1 + 0x43c) = param_6;\n      if (*param_4 == '\\0') {\n        uVar8 = snprintf((char *)((int)param_1 + 0x28),0x401,\"%s.*\",param_2);\n        if (0x401 < uVar8) {\n          piVar2 = __errno_location();\n          FUN_0005df98(2,\"src/rotater.c\",0x168,\"nwirte[%d], overflow or errno[%d]\",uVar8,*piVar2);\n          goto LAB_00059408;\n        }\n        pcVar4 = *(char **)((int)param_1 + 0x20);\n        param_1[0x2d].__data.__lock = 1;\n        *(undefined4 *)((int)param_1 + 0x434) = 0;\n        sVar3 = strlen(pcVar4);\n        *(size_t *)((int)param_1 + 0x42c) = sVar3 + 1;\n        sVar3 = strlen(pcVar4);\n        *(size_t *)((int)param_1 + 0x430) = sVar3 + 2;\nLAB_00058ca0:\n        local_4b0 = (char *)((int)param_1 + 0x28);\n        iVar1 = FUN_0005d4c0(FUN_00058584);\n        *(int *)((int)param_1 + 0x440) = iVar1;\n        if (iVar1 == 0) {\n          FUN_0005df98(2,\"src/rotater.c\",0xbf,\"zc_arraylist_new fail\");\nLAB_00058e84:\n          FUN_0005df98(2,\"src/rotater.c\",0x1bb,\"zlog_rotater_add_archive_files fail\");\n        }\n        else {\n          iVar1 = glob64(local_4b0,7,(__errfunc *)0x0,local_430);\n          if (iVar1 != 3) {\n            if (iVar1 != 0) {\n              piVar2 = __errno_location();\n              FUN_0005df98(2,\"src/rotater.c\",200,\"glob err, rc=[%d], errno[%d]\",iVar1,*piVar2);\n              goto LAB_00058e84;\n            }\n            if (local_430[0].gl_pathc != 0) {\n              ppcVar11 = local_430[0].gl_pathv + -1;\n              sVar3 = local_430[0].gl_pathc;\n              do {\n                sVar3 = sVar3 - 1;\n                ppcVar11 = ppcVar11 + 1;\n                pcVar4 = *ppcVar11;\n                iVar1 = strcmp(*(char **)((int)param_1 + 0x20),pcVar4);\n                if ((iVar1 == 0) || (sVar6 = strlen(pcVar4), pcVar4[sVar6 - 1] == '/')) {\nLAB_00058de8:\n                  FUN_0005df98(1,\"src/rotater.c\",0xd3,\"not the expect pattern file\");\n                }\n                else {\n                  __ptr = calloc(1,0x408);\n                  if (__ptr == (void *)0x0) {\n                    piVar2 = __errno_location();\n                    FUN_0005df98(2,\"src/rotater.c\",0x95,\"calloc fail, errno[%d]\",*piVar2);\n                    goto LAB_00058de8;\n                  }\n                  uVar8 = snprintf((char *)((int)__ptr + 4),0x401,\"%s\",pcVar4);\n                  if (0x400 < uVar8) {\n                    piVar2 = __errno_location();\n                    FUN_0005df98(2,\"src/rotater.c\",0x9b,\n                                 \"snprintf fail or overflow, nwrite=[%d], errno[%d]\",uVar8,*piVar2);\nLAB_00058e54:\n                    free(__ptr);\n                    goto LAB_00058de8;\n                  }\n                  local_49c = 0;\n                  __isoc99_sscanf((char *)((int)__ptr + 4) + *(int *)((int)param_1 + 0x42c),\n                                  &DAT_0006c96c,__ptr,&local_49c);\n                  if ((*(int *)((int)param_1 + 0x434) != 0) &&\n                     (local_49c < *(int *)((int)param_1 + 0x434))) {\n                    FUN_0005df98(1,\"src/rotater.c\",0xa4,\"aa.1.log is not expect, need aa.01.log\");\n                    goto LAB_00058e54;\n                  }\n                  iVar1 = FUN_0005d6a0(*(undefined4 *)((int)param_1 + 0x440),&LAB_0005856c,__ptr);\n                  if (iVar1 != 0) {\n                    FUN_0005df98(2,\"src/rotater.c\",0xdb,\"zc_arraylist_sortadd fail\");\n                    globfree64(local_430);\n                    goto LAB_00058e84;\n                  }\n                }\n              } while (sVar3 != 0);\n            }\n          }\n          globfree64(local_430);\n          if (param_1[0x2d].__data.__lock == 1) {\n            iVar1 = (*(int **)((int)param_1 + 0x440))[1] + -1;\n            if (iVar1 < 0) {\nLAB_000592c0:\n              memset(local_430,0,0x401);\n              uVar8 = snprintf((char *)local_430,0x401,\"%.*s%0*d%s\",\n                               *(undefined4 *)((int)param_1 + 0x42c),local_4b0,\n                               *(undefined4 *)((int)param_1 + 0x434),0,\n                               local_4b0 + *(int *)((int)param_1 + 0x430));\n              if (uVar8 < 0x401) {\n                iVar1 = rename(*(char **)((int)param_1 + 0x20),(char *)local_430);\n                if (iVar1 == 0) goto LAB_00058e20;\n                piVar2 = __errno_location();\n                FUN_0005df98(2,\"src/rotater.c\",0x154,\"rename[%s]->[%s] fail, errno[%d]\",\n                             *(undefined4 *)((int)param_1 + 0x20),local_430,*piVar2);\n              }\n              else {\n                piVar2 = __errno_location();\n                FUN_0005df98(2,\"src/rotater.c\",0x14f,\"nwirte[%d], overflow or errno[%d]\",uVar8,\n                             *piVar2);\n              }\n            }\n            else {\n              iVar7 = iVar1 * 4;\n              iVar9 = *(int *)(**(int **)((int)param_1 + 0x440) + iVar1 * 4);\n              while (iVar9 != 0) {\n                iVar7 = iVar7 + -4;\n                pcVar4 = (char *)(iVar9 + 4);\n                if ((*(int *)((int)param_1 + 0x43c) < 1) ||\n                   (iVar1 < *(int *)((int)param_1 + 0x43c) + -1)) {\n                  memset(local_430,0,0x401);\n                  uVar8 = snprintf((char *)local_430,0x401,\"%.*s%0*d%s\",\n                                   *(undefined4 *)((int)param_1 + 0x42c),local_4b0,\n                                   *(undefined4 *)((int)param_1 + 0x434),iVar1 + 1,\n                                   local_4b0 + *(int *)((int)param_1 + 0x430));\n                  if (0x400 < uVar8) {\n                    piVar2 = __errno_location();\n                    FUN_0005df98(2,\"src/rotater.c\",0x13e,\"nwirte[%d], overflow or errno[%d]\",uVar8,\n                                 *piVar2);\n                    goto LAB_00059050;\n                  }\n                  iVar9 = rename(pcVar4,(char *)local_430);\n                  if (iVar9 != 0) {\n                    piVar2 = __errno_location();\n                    FUN_0005df98(2,\"src/rotater.c\",0x143,\"rename[%s]->[%s] fail, errno[%d]\",pcVar4,\n                                 local_430,*piVar2);\n                    goto LAB_00059050;\n                  }\n                }\n                else {\n                  iVar9 = unlink(pcVar4);\n                  if (iVar9 != 0) {\n                    piVar2 = __errno_location();\n                    FUN_0005df98(2,\"src/rotater.c\",0x131,\"unlink[%s] fail, errno[%d]\",pcVar4,*piVar2\n                                );\n                    goto LAB_00059050;\n                  }\n                }\n                bVar12 = iVar1 == 0;\n                iVar1 = iVar1 + -1;\n                if (bVar12) goto LAB_000592c0;\n                if ((*(int **)((int)param_1 + 0x440))[1] <= iVar1) break;\n                iVar9 = *(int *)(**(int **)((int)param_1 + 0x440) + iVar7);\n              }\n              FUN_0005df98(2,\"src/rotater.c\",0x129,\"zc_arraylist_get fail\");\n            }\nLAB_00059050:\n            FUN_0005df98(2,\"src/rotater.c\",0x1c2,\"zlog_rotater_roll_files fail\");\n          }\n          else {\n            if (param_1[0x2d].__data.__lock != 2) {\nLAB_00058e20:\n              FUN_000585e4(param_1);\n              goto LAB_00058a74;\n            }\n            piVar2 = *(int **)((int)param_1 + 0x440);\n            iVar1 = piVar2[1];\n            if (iVar1 < 1) {\nLAB_00059368:\n              iVar7 = 0;\nLAB_00059150:\n              memset(local_430,0,0x401);\n              uVar8 = snprintf((char *)local_430,0x401,\"%.*s%0*d%s\",\n                               *(undefined4 *)((int)param_1 + 0x42c),local_4b0,\n                               *(undefined4 *)((int)param_1 + 0x434),iVar7,\n                               local_4b0 + *(int *)((int)param_1 + 0x430));\n              if (uVar8 < 0x401) {\n                iVar1 = rename(*(char **)((int)param_1 + 0x20),(char *)local_430);\n                if (iVar1 == 0) goto LAB_00058e20;\n                piVar2 = __errno_location();\n                FUN_0005df98(2,\"src/rotater.c\",0x115,\"rename[%s]->[%s] fail, errno[%d]\",\n                             *(undefined4 *)((int)param_1 + 0x20),local_430,*piVar2);\n              }\n              else {\n                piVar2 = __errno_location();\n                FUN_0005df98(2,\"src/rotater.c\",0x110,\"nwirte[%d], overflow or errno[%d]\",uVar8,\n                             *piVar2);\n              }\n            }\n            else {\n              iVar7 = 0;\n              do {\n                if ((0 < *(int *)((int)param_1 + 0x43c)) &&\n                   (iVar7 < iVar1 - *(int *)((int)param_1 + 0x43c))) {\n                  pcVar4 = (char *)(*(int *)(*piVar2 + iVar7 * 4) + 4);\n                  iVar1 = unlink(pcVar4);\n                  if (iVar1 != 0) {\n                    piVar2 = __errno_location();\n                    FUN_0005df98(2,\"src/rotater.c\",0xf6,\"unlink[%s] fail, errno[%d]\",pcVar4,*piVar2)\n                    ;\n                    goto LAB_000591f0;\n                  }\n                  piVar2 = *(int **)((int)param_1 + 0x440);\n                }\n                iVar1 = piVar2[1];\n                iVar7 = iVar7 + 1;\n              } while (iVar7 < iVar1);\n              if (iVar1 < 1) goto LAB_00059368;\n              piVar2 = *(int **)(*piVar2 + (iVar1 + 0x3fffffff) * 4);\n              if (piVar2 != (int *)0x0) {\n                iVar9 = *piVar2;\n                iVar7 = iVar1 + -1;\n                if (iVar1 + -1 < iVar9) {\n                  iVar7 = iVar9;\n                }\n                iVar7 = iVar7 + 1;\n                goto LAB_00059150;\n              }\n              FUN_0005df98(2,\"src/rotater.c\",0x100,\"zc_arraylist_get fail\");\n            }\nLAB_000591f0:\n            FUN_0005df98(2,\"src/rotater.c\",0x1c8,\"zlog_rotater_seq_files fail\");\n          }\n        }\n      }\n      else {\n        pcVar4 = strchr(param_4,0x23);\n        if (pcVar4 == (char *)0x0) {\n          FUN_0005df98(2,\"src/rotater.c\",0x176,\"no # in archive_path[%s]\",param_4);\n        }\n        else {\n          local_430[0].gl_pathc = sVar3;\n          __isoc99_sscanf(pcVar4,\"#%d%n\",(int)param_1 + 0x434,local_430);\n          if (local_430[0].gl_pathc == 0) {\n            local_430[0].gl_pathc = 1;\n          }\n          if (pcVar4[local_430[0].gl_pathc] == 'r') {\n            param_1[0x2d].__data.__lock = 1;\n          }\n          else {\n            if (pcVar4[local_430[0].gl_pathc] != 's') {\n              FUN_0005df98(2,\"src/rotater.c\",0x182,\"#r or #s not found\");\n              goto LAB_00059408;\n            }\n            param_1[0x2d].__data.__lock = 2;\n          }\n          uVar8 = (int)pcVar4 - (int)*(void **)((int)param_1 + 0x24);\n          if (uVar8 < 0x401) {\n            memcpy((void *)((int)param_1 + 0x28),*(void **)((int)param_1 + 0x24),uVar8);\n            uVar5 = snprintf((char *)((int)(void *)((int)param_1 + 0x28) + uVar8),0x401 - uVar8,\n                             \"*%s\");\n            if ((-1 < (int)uVar5) && (uVar5 <= 0x401 - uVar8)) {\n              *(uint *)((int)param_1 + 0x42c) = uVar8;\n              *(uint *)((int)param_1 + 0x430) = uVar8 + 1;\n              goto LAB_00058ca0;\n            }\n            piVar2 = __errno_location();\n            FUN_0005df98(2,\"src/rotater.c\",0x191,\"nwirte[%d], overflow or errno[%d]\",uVar5,*piVar2);\n          }\n          else {\n            FUN_0005df98(2,\"src/rotater.c\",0x189,\"sizeof glob_path not enough,len[%ld]\",uVar8);\n          }\n        }\nLAB_00059408:\n        FUN_0005df98(2,\"src/rotater.c\",0x1b5,\"zlog_rotater_parse_archive_path fail\");\n      }\n      uVar10 = 0xffffffff;\n      FUN_000585e4(param_1);\n      FUN_0005df98(2,\"src/rotater.c\",0x230,\"zlog_rotater_lsmv [%s] fail, return\",param_2);\n    }\n  }\n  else {\n    piVar2 = __errno_location();\n    uVar10 = 0xffffffff;\n    FUN_0005df98(2,\"src/rotater.c\",0x221,\"stat [%s] fail, errno[%d]\",param_2,*piVar2);\n  }\nLAB_00058a74:\n  local_430[0].gl_offs = 0;\n  local_430[0].gl_flags = 0;\n  local_430[0].gl_closedir = (_func_5031 *)0x0;\n  local_430[0].gl_readdir = (_func_5032 *)0x0;\n  local_430[0].gl_pathc = 2;\n  iVar1 = fcntl(*(int *)((int)param_1 + 0x1c),0xd,local_430);\n  if (iVar1 == 0) {\n    iVar1 = pthread_mutex_unlock(param_1);\n    if (iVar1 == 0) {\n      return uVar10;\n    }\n    piVar2 = __errno_location();\n  }\n  else {\n    piVar2 = __errno_location();\n    iVar7 = *(int *)((int)param_1 + 0x1c);\n    FUN_0005df98(2,\"src/rotater.c\",0x206,\"unlock fd[%s] fail, errno[%d]\",iVar7,*piVar2);\n    iVar1 = pthread_mutex_unlock(param_1);\n    if (iVar1 == 0) goto LAB_00058b90;\n  }\n  iVar7 = *piVar2;\n  FUN_0005df98(2,\"src/rotater.c\",0x20b,\"pthread_mutext_unlock fail, errno[%d]\",iVar7);\nLAB_00058b90:\n  FUN_0005df98(2,\"src/rotater.c\",0x239,\"zlog_rotater_unlock fail\",iVar7);\n  return uVar10;\n}\n\n",
    "FUN_000595c0": "\nint FUN_000595c0(int param_1,int param_2)\n\n{\n  int iVar1;\n  int local_1c;\n  int local_18;\n  int local_14;\n  \n  if (*(int *)(param_1 + 0x2084) == 0) {\n    FUN_0005df98(2,\"src/rule.c\",0x182,\"user defined record funcion for [%s] not set, no output\",\n                 param_1 + 0x1880);\n    iVar1 = -1;\n  }\n  else {\n    iVar1 = FUN_00057a1c(*(undefined4 *)(param_1 + 0x1878));\n    if (iVar1 == 0) {\n      local_14 = param_1 + 0x1c81;\n      **(undefined **)(*(int *)(param_2 + 0x1c) + 4) = 0;\n      local_1c = **(int **)(param_2 + 0x1c);\n      local_18 = (*(int **)(param_2 + 0x1c))[1] - local_1c;\n      iVar1 = (**(code **)(param_1 + 0x2084))(&local_1c);\n      if (iVar1 != 0) {\n        FUN_0005df98(2,\"src/rule.c\",0x191,\"a_rule->record fail\");\n        iVar1 = -1;\n      }\n    }\n    else {\n      FUN_0005df98(2,\"src/rule.c\",0x187,\"zlog_format_gen_msg fail\");\n      iVar1 = -1;\n    }\n  }\n  return iVar1;\n}\n\n",
    "FUN_000596b0": "\nundefined4 FUN_000596b0(int param_1,int param_2)\n\n{\n  int iVar1;\n  ssize_t sVar2;\n  int *piVar3;\n  uint uVar4;\n  void *__buf;\n  char *__filename;\n  undefined4 uVar5;\n  int local_90;\n  int iStack_8c;\n  int local_30;\n  int iStack_2c;\n  \n  iVar1 = FUN_00057a1c(*(undefined4 *)(param_1 + 0x1878));\n  if (iVar1 != 0) {\n    FUN_0005df98(2,\"src/rule.c\",0x54,\"zlog_format_gen_msg fail\");\n    return 0xffffffff;\n  }\n  __filename = (char *)(param_1 + 0x1030);\n  iVar1 = __xstat64(3,__filename,(stat64 *)&local_90);\n  if (iVar1 == 0) {\n    iVar1 = *(int *)(param_1 + 0x1438);\n    if ((iStack_2c == *(int *)(param_1 + 0x144c) && local_30 == *(int *)(param_1 + 0x1448)) &&\n       (iStack_8c == *(int *)(param_1 + 0x1444) && local_90 == *(int *)(param_1 + 0x1440)))\n    goto LAB_00059750;\n    close(iVar1);\n    iVar1 = open64(__filename,*(uint *)(param_1 + 0x102c) | 0x441,*(undefined4 *)(param_1 + 0x1028))\n    ;\n    *(int *)(param_1 + 0x1438) = iVar1;\n    if (iVar1 < 0) {\n      piVar3 = __errno_location();\n      goto LAB_000598f4;\n    }\n  }\n  else {\n    piVar3 = __errno_location();\n    if (*piVar3 != 2) {\n      FUN_0005df98(2,\"src/rule.c\",0x5b,\"stat fail on [%s], errno[%d]\",__filename,*piVar3);\n      return 0xffffffff;\n    }\n    close(*(int *)(param_1 + 0x1438));\n    iVar1 = open64(__filename,*(uint *)(param_1 + 0x102c) | 0x441,*(undefined4 *)(param_1 + 0x1028))\n    ;\n    *(int *)(param_1 + 0x1438) = iVar1;\n    if (iVar1 < 0) {\nLAB_000598f4:\n      FUN_0005df98(2,\"src/rule.c\",0x6b,\"open file[%s] fail, errno[%d]\",__filename,*piVar3);\n      return 0xffffffff;\n    }\n    iVar1 = __xstat64(3,__filename,(stat64 *)&local_90);\n    if (iVar1 != 0) {\n      FUN_0005df98(2,\"src/rule.c\",0x72,\"stat fail on new file[%s], errno[%d]\",__filename,*piVar3);\n      return 0xffffffff;\n    }\n    iVar1 = *(int *)(param_1 + 0x1438);\n  }\n  *(int *)(param_1 + 0x1440) = local_90;\n  *(int *)(param_1 + 0x1444) = iStack_8c;\n  *(int *)(param_1 + 0x1448) = local_30;\n  *(int *)(param_1 + 0x144c) = iStack_2c;\nLAB_00059750:\n  __buf = **(void ***)(param_2 + 0x1c);\n  sVar2 = write(iVar1,__buf,(int)(*(void ***)(param_2 + 0x1c))[1] - (int)__buf);\n  if (sVar2 < 0) {\n    piVar3 = __errno_location();\n    FUN_0005df98(2,\"src/rule.c\",0x7d,\"write fail, errno[%d]\",*piVar3);\n    uVar5 = 0xffffffff;\n  }\n  else {\n    uVar5 = 0;\n    if (*(uint *)(param_1 + 0x1868) != 0) {\n      uVar4 = *(int *)(param_1 + 0x186c) + 1;\n      if (uVar4 < *(uint *)(param_1 + 0x1868)) {\n        *(uint *)(param_1 + 0x186c) = uVar4;\n      }\n      else {\n        *(undefined4 *)(param_1 + 0x186c) = 0;\n        iVar1 = fsync(*(int *)(param_1 + 0x1438));\n        if (iVar1 != 0) {\n          piVar3 = __errno_location();\n          FUN_0005df98(2,\"src/rule.c\",0x85,\"fsync[%d] fail, errno[%d]\",\n                       *(undefined4 *)(param_1 + 0x1438),*piVar3);\n        }\n      }\n    }\n  }\n  return uVar5;\n}\n\n",
    "FUN_00059954": "\nint FUN_00059954(int param_1,int param_2)\n\n{\n  int iVar1;\n  undefined *puVar2;\n  int *piVar3;\n  int unaff_r4;\n  \n  piVar3 = *(int **)(param_1 + 0x185c);\n  if (piVar3 == (int *)0x0) {\n    return param_1 + 0x1458;\n  }\n  iVar1 = piVar3[1];\n  puVar2 = (undefined *)**(undefined4 **)(param_2 + 0x14);\n  if (0 < iVar1) {\n    unaff_r4 = 0;\n  }\n  (*(undefined4 **)(param_2 + 0x14))[1] = puVar2;\n  if (0 < iVar1) {\n    do {\n      iVar1 = *(int *)(*piVar3 + unaff_r4 * 4);\n      unaff_r4 = unaff_r4 + 1;\n      iVar1 = (**(code **)(iVar1 + 0x2430))(iVar1,param_2);\n      if (iVar1 != 0) {\n        FUN_0005df98(2,\"src/rule.c\",0x97,\"zlog_spec_gen_path fail\");\n        return 0;\n      }\n      piVar3 = *(int **)(param_1 + 0x185c);\n    } while (unaff_r4 < piVar3[1]);\n    puVar2 = *(undefined **)(*(int *)(param_2 + 0x14) + 4);\n  }\n  *puVar2 = 0;\n  return **(int **)(param_2 + 0x14);\n}\n\n",
    "FUN_00059a0c": "\nundefined4 FUN_00059a0c(int param_1,int param_2)\n\n{\n  int iVar1;\n  ssize_t sVar2;\n  int iVar3;\n  int *piVar4;\n  uint uVar5;\n  void *__buf;\n  uint __n;\n  char *__file;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  bool bVar8;\n  undefined auStack_88 [52];\n  int iStack_54;\n  \n  iVar1 = FUN_00057a1c(*(undefined4 *)(param_1 + 0x1878));\n  if (iVar1 == 0) {\n    __file = (char *)(param_1 + 0x1030);\n    iVar1 = open64(__file,*(uint *)(param_1 + 0x102c) | 0x441,*(undefined4 *)(param_1 + 0x1028));\n    if (iVar1 < 0) {\n      piVar4 = __errno_location();\n      uVar7 = 0xffffffff;\n      FUN_0005df98(2,\"src/rule.c\",0xae,\"open file[%s] fail, errno[%d]\",__file,*piVar4);\n    }\n    else {\n      __buf = **(void ***)(param_2 + 0x1c);\n      __n = (int)(*(void ***)(param_2 + 0x1c))[1] - (int)__buf;\n      sVar2 = write(iVar1,__buf,__n);\n      if (sVar2 < 0) {\n        piVar4 = __errno_location();\n        FUN_0005df98(2,\"src/rule.c\",0xb4,\"write fail, errno[%d]\",*piVar4);\n        uVar7 = 0xffffffff;\n        close(iVar1);\n      }\n      else {\n        if (*(uint *)(param_1 + 0x1868) != 0) {\n          uVar5 = *(int *)(param_1 + 0x186c) + 1;\n          if (uVar5 < *(uint *)(param_1 + 0x1868)) {\n            *(uint *)(param_1 + 0x186c) = uVar5;\n          }\n          else {\n            *(undefined4 *)(param_1 + 0x186c) = 0;\n            iVar3 = fsync(iVar1);\n            if (iVar3 != 0) {\n              piVar4 = __errno_location();\n              FUN_0005df98(2,\"src/rule.c\",0xbb,\"fsync[%d] fail, errno[%d]\",iVar1,*piVar4);\n            }\n          }\n        }\n        iVar1 = close(iVar1);\n        if (iVar1 < 0) {\n          piVar4 = __errno_location();\n          FUN_0005df98(2,\"src/rule.c\",0xbf,\"close fail, maybe cause by write, errno[%d]\",*piVar4);\n          uVar7 = 0xffffffff;\n        }\n        else {\n          if (*(uint *)(param_1 + 0x1450) < __n) {\n            FUN_0005df98(0,\"src/rule.c\",0xc5,\n                         \"one msg\\'s len[%ld] > archive_max_size[%ld], no rotate\",__n,\n                         *(uint *)(param_1 + 0x1450));\n            return 0;\n          }\n          iVar1 = __xstat64(3,__file,(stat64 *)auStack_88);\n          if (iVar1 != 0) {\n            piVar4 = __errno_location();\n            FUN_0005df98(1,\"src/rule.c\",0xca,\"stat [%s] fail, errno[%d], maybe in rotating\",__file,\n                         *piVar4);\n            return 0;\n          }\n          uVar5 = *(uint *)(param_1 + 0x1450);\n          iVar1 = (int)uVar5 >> 0x1f;\n          iStack_54 = iStack_54 + (uint)CARRY4(auStack_88._48_4_,__n);\n          bVar8 = auStack_88._48_4_ + __n < uVar5;\n          if ((int)(iStack_54 - (iVar1 + (uint)bVar8)) < 0 ==\n              (SBORROW4(iStack_54,iVar1) != SBORROW4(iStack_54 - iVar1,(uint)bVar8))) {\n            uVar6 = *(undefined4 *)(DAT_0099eec8 + 0x1428);\n            uVar7 = FUN_00059954(param_1,param_2);\n            iVar1 = FUN_00058958(uVar6,__file,__n,uVar7,*(undefined4 *)(param_1 + 0x1450),\n                                 *(undefined4 *)(param_1 + 0x1454));\n            if (iVar1 != 0) {\n              FUN_0005df98(2,\"src/rule.c\",0xd6,\"zlog_rotater_rotate fail\");\n              return 0xffffffff;\n            }\n          }\n          uVar7 = 0;\n        }\n      }\n    }\n  }\n  else {\n    FUN_0005df98(2,\"src/rule.c\",0xa7,\"zlog_format_gen_msg fail\");\n    uVar7 = 0xffffffff;\n  }\n  return uVar7;\n}\n\n",
    "FUN_00059cd4": "\nint FUN_00059cd4(int param_1,int param_2)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  int *piVar4;\n  int local_24;\n  int local_20;\n  undefined4 local_1c;\n  \n  if (*(int *)(param_1 + 0x2084) == 0) {\n    FUN_0005df98(2,\"src/rule.c\",0x19d,\"user defined record funcion for [%s] not set, no output\",\n                 param_1 + 0x1880);\n    iVar3 = -1;\n  }\n  else {\n    piVar4 = *(int **)(param_1 + 0x1434);\n    puVar1 = (undefined *)**(undefined4 **)(param_2 + 0x10);\n    iVar3 = piVar4[1];\n    (*(undefined4 **)(param_2 + 0x10))[1] = puVar1;\n    if (0 < iVar3) {\n      iVar3 = 0;\n      do {\n        iVar2 = *(int *)(*piVar4 + iVar3 * 4);\n        iVar3 = iVar3 + 1;\n        iVar2 = (**(code **)(iVar2 + 0x242c))(iVar2,param_2);\n        if (iVar2 != 0) {\n          FUN_0005df98(2,\"src/rule.c\",0x1a1,\"zlog_spec_gen_path fail\");\n          return -1;\n        }\n        piVar4 = *(int **)(param_1 + 0x1434);\n      } while (iVar3 < piVar4[1]);\n      puVar1 = *(undefined **)(*(int *)(param_2 + 0x10) + 4);\n    }\n    *puVar1 = 0;\n    iVar3 = FUN_00057a1c(*(undefined4 *)(param_1 + 0x1878),param_2);\n    if (iVar3 == 0) {\n      **(undefined **)(*(int *)(param_2 + 0x1c) + 4) = 0;\n      local_24 = **(int **)(param_2 + 0x1c);\n      local_1c = **(undefined4 **)(param_2 + 0x10);\n      local_20 = (*(int **)(param_2 + 0x1c))[1] - local_24;\n      iVar3 = (**(code **)(param_1 + 0x2084))(&local_24);\n      if (iVar3 != 0) {\n        FUN_0005df98(2,\"src/rule.c\",0x1ae,\"a_rule->record fail\");\n        iVar3 = -1;\n      }\n    }\n    else {\n      FUN_0005df98(2,\"src/rule.c\",0x1a4,\"zlog_format_gen_msg fail\");\n      iVar3 = -1;\n    }\n  }\n  return iVar3;\n}\n\n",
    "FUN_00059f9c": "\nundefined4 FUN_00059f9c(int param_1,int param_2)\n\n{\n  int iVar1;\n  ssize_t sVar2;\n  int *piVar3;\n  void *__buf;\n  undefined4 uVar4;\n  \n  iVar1 = FUN_00057a1c(*(undefined4 *)(param_1 + 0x1878));\n  if (iVar1 == 0) {\n    __buf = **(void ***)(param_2 + 0x1c);\n    sVar2 = write(*(int *)(param_1 + 0x1864),__buf,\n                  (int)(*(void ***)(param_2 + 0x1c))[1] - (int)__buf);\n    uVar4 = 0;\n    if (sVar2 < 0) {\n      piVar3 = __errno_location();\n      uVar4 = 0xffffffff;\n      FUN_0005df98(2,\"src/rule.c\",0x160,\"write fail, errno[%d]\",*piVar3);\n    }\n  }\n  else {\n    FUN_0005df98(2,\"src/rule.c\",0x159,\"zlog_format_gen_msg fail\");\n    uVar4 = 0xffffffff;\n  }\n  return uVar4;\n}\n\n",
    "FUN_0005a040": "\nundefined4 FUN_0005a040(int param_1,int param_2)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  \n  iVar1 = FUN_00057a1c(*(undefined4 *)(param_1 + 0x1878));\n  if (iVar1 == 0) {\n    iVar1 = FUN_00057d70(*(undefined4 *)(DAT_0099eec8 + 0x2440),\n                         *(undefined4 *)(*(int *)(param_2 + 8) + 0x124));\n    **(undefined **)(*(int *)(param_2 + 0x1c) + 4) = 0;\n    syslog(*(uint *)(param_1 + 0x1874) | *(uint *)(iVar1 + 0x80c),\"%s\",\n           **(undefined4 **)(param_2 + 0x1c));\n    uVar2 = 0;\n  }\n  else {\n    FUN_0005df98(2,\"src/rule.c\",0x16c,\"zlog_format_gen_msg fail\");\n    uVar2 = 0xffffffff;\n  }\n  return uVar2;\n}\n\n",
    "FUN_0005a0d4": "\nundefined4 FUN_0005a0d4(int param_1,int param_2)\n\n{\n  undefined *puVar1;\n  ssize_t sVar2;\n  int iVar3;\n  int iVar4;\n  uint uVar5;\n  int *piVar6;\n  void *__buf;\n  int unaff_r4;\n  undefined4 uVar7;\n  \n  piVar6 = *(int **)(param_1 + 0x1434);\n  iVar4 = piVar6[1];\n  puVar1 = (undefined *)**(undefined4 **)(param_2 + 0x10);\n  if (0 < iVar4) {\n    unaff_r4 = 0;\n  }\n  (*(undefined4 **)(param_2 + 0x10))[1] = puVar1;\n  if (0 < iVar4) {\n    do {\n      iVar4 = *(int *)(*piVar6 + unaff_r4 * 4);\n      unaff_r4 = unaff_r4 + 1;\n      iVar4 = (**(code **)(iVar4 + 0x242c))(iVar4,param_2);\n      if (iVar4 != 0) {\n        FUN_0005df98(2,\"src/rule.c\",0xf5,\"zlog_spec_gen_path fail\");\n        return 0xffffffff;\n      }\n      piVar6 = *(int **)(param_1 + 0x1434);\n    } while (unaff_r4 < piVar6[1]);\n    puVar1 = *(undefined **)(*(int *)(param_2 + 0x10) + 4);\n  }\n  *puVar1 = 0;\n  iVar4 = FUN_00057a1c(*(undefined4 *)(param_1 + 0x1878),param_2);\n  if (iVar4 == 0) {\n    iVar4 = open64(**(char ***)(param_2 + 0x10),*(uint *)(param_1 + 0x102c) | 0x441,\n                   *(undefined4 *)(param_1 + 0x1028));\n    if (iVar4 < 0) {\n      piVar6 = __errno_location();\n      uVar7 = 0xffffffff;\n      FUN_0005df98(2,\"src/rule.c\",0xff,\"open file[%s] fail, errno[%d]\",\n                   **(undefined4 **)(param_2 + 0x10),*piVar6);\n    }\n    else {\n      __buf = **(void ***)(param_2 + 0x1c);\n      sVar2 = write(iVar4,__buf,(int)(*(void ***)(param_2 + 0x1c))[1] - (int)__buf);\n      if (sVar2 < 0) {\n        piVar6 = __errno_location();\n        FUN_0005df98(2,\"src/rule.c\",0x104,\"write fail, errno[%d]\",*piVar6);\n        uVar7 = 0xffffffff;\n        close(iVar4);\n      }\n      else {\n        if (*(uint *)(param_1 + 0x1868) != 0) {\n          uVar5 = *(int *)(param_1 + 0x186c) + 1;\n          if (uVar5 < *(uint *)(param_1 + 0x1868)) {\n            *(uint *)(param_1 + 0x186c) = uVar5;\n          }\n          else {\n            *(undefined4 *)(param_1 + 0x186c) = 0;\n            iVar3 = fsync(iVar4);\n            if (iVar3 != 0) {\n              piVar6 = __errno_location();\n              FUN_0005df98(2,\"src/rule.c\",0x10b,\"fsync[%d] fail, errno[%d]\",iVar4,*piVar6);\n            }\n          }\n        }\n        iVar4 = close(iVar4);\n        uVar7 = 0;\n        if (iVar4 < 0) {\n          piVar6 = __errno_location();\n          uVar7 = 0xffffffff;\n          FUN_0005df98(2,\"src/rule.c\",0x10f,\"close fail, maybe cause by write, errno[%d]\",*piVar6);\n        }\n      }\n    }\n  }\n  else {\n    FUN_0005df98(2,\"src/rule.c\",0xf8,\"zlog_format_output fail\");\n    uVar7 = 0xffffffff;\n  }\n  return uVar7;\n}\n\n",
    "FUN_0005a30c": "\nundefined4 FUN_0005a30c(int param_1,int param_2)\n\n{\n  undefined *puVar1;\n  ssize_t sVar2;\n  int iVar3;\n  undefined4 uVar4;\n  int iVar5;\n  uint uVar6;\n  int *piVar7;\n  void *__buf;\n  int unaff_r4;\n  uint __n;\n  undefined4 uVar8;\n  char *__file;\n  bool bVar9;\n  undefined auStack_90 [52];\n  int iStack_5c;\n  \n  piVar7 = *(int **)(param_1 + 0x1434);\n  iVar5 = piVar7[1];\n  puVar1 = (undefined *)**(undefined4 **)(param_2 + 0x10);\n  if (0 < iVar5) {\n    unaff_r4 = 0;\n  }\n  (*(undefined4 **)(param_2 + 0x10))[1] = puVar1;\n  if (0 < iVar5) {\n    do {\n      iVar5 = *(int *)(*piVar7 + unaff_r4 * 4);\n      unaff_r4 = unaff_r4 + 1;\n      iVar5 = (**(code **)(iVar5 + 0x242c))(iVar5,param_2);\n      if (iVar5 != 0) {\n        FUN_0005df98(2,\"src/rule.c\",0x11d,\"zlog_spec_gen_path fail\");\n        return 0xffffffff;\n      }\n      piVar7 = *(int **)(param_1 + 0x1434);\n    } while (unaff_r4 < piVar7[1]);\n    puVar1 = *(undefined **)(*(int *)(param_2 + 0x10) + 4);\n  }\n  *puVar1 = 0;\n  iVar5 = FUN_00057a1c(*(undefined4 *)(param_1 + 0x1878),param_2);\n  if (iVar5 == 0) {\n    __file = **(char ***)(param_2 + 0x10);\n    iVar5 = open64(__file,*(uint *)(param_1 + 0x102c) | 0x441,*(undefined4 *)(param_1 + 0x1028));\n    if (iVar5 < 0) {\n      piVar7 = __errno_location();\n      uVar4 = 0xffffffff;\n      FUN_0005df98(2,\"src/rule.c\",0x127,\"open file[%s] fail, errno[%d]\",\n                   **(undefined4 **)(param_2 + 0x10),*piVar7);\n    }\n    else {\n      __buf = **(void ***)(param_2 + 0x1c);\n      __n = (int)(*(void ***)(param_2 + 0x1c))[1] - (int)__buf;\n      sVar2 = write(iVar5,__buf,__n);\n      if (sVar2 < 0) {\n        piVar7 = __errno_location();\n        FUN_0005df98(2,\"src/rule.c\",0x12d,\"write fail, errno[%d]\",*piVar7);\n        uVar4 = 0xffffffff;\n        close(iVar5);\n      }\n      else {\n        if (*(uint *)(param_1 + 0x1868) != 0) {\n          uVar6 = *(int *)(param_1 + 0x186c) + 1;\n          if (uVar6 < *(uint *)(param_1 + 0x1868)) {\n            *(uint *)(param_1 + 0x186c) = uVar6;\n          }\n          else {\n            *(undefined4 *)(param_1 + 0x186c) = 0;\n            iVar3 = fsync(iVar5);\n            if (iVar3 != 0) {\n              piVar7 = __errno_location();\n              FUN_0005df98(2,\"src/rule.c\",0x134,\"fsync[%d] fail, errno[%d]\",iVar5,*piVar7);\n            }\n          }\n        }\n        iVar5 = close(iVar5);\n        if (iVar5 < 0) {\n          piVar7 = __errno_location();\n          FUN_0005df98(2,\"src/rule.c\",0x138,\"write fail, maybe cause by write, errno[%d]\",*piVar7);\n          uVar4 = 0xffffffff;\n        }\n        else {\n          if (*(uint *)(param_1 + 0x1450) < __n) {\n            FUN_0005df98(0,\"src/rule.c\",0x13e,\n                         \"one msg\\'s len[%ld] > archive_max_size[%ld], no rotate\",__n,\n                         *(uint *)(param_1 + 0x1450));\n            return 0;\n          }\n          iVar5 = __xstat64(3,__file,(stat64 *)auStack_90);\n          if (iVar5 == 0) {\n            uVar6 = *(uint *)(param_1 + 0x1450);\n            iVar5 = (int)uVar6 >> 0x1f;\n            iStack_5c = iStack_5c + (uint)CARRY4(auStack_90._48_4_,__n);\n            bVar9 = auStack_90._48_4_ + __n < uVar6;\n            if ((int)(iStack_5c - (iVar5 + (uint)bVar9)) < 0 ==\n                (SBORROW4(iStack_5c,iVar5) != SBORROW4(iStack_5c - iVar5,(uint)bVar9))) {\n              uVar8 = *(undefined4 *)(DAT_0099eec8 + 0x1428);\n              uVar4 = FUN_00059954(param_1,param_2);\n              iVar5 = FUN_00058958(uVar8,__file,__n,uVar4,*(undefined4 *)(param_1 + 0x1450),\n                                   *(undefined4 *)(param_1 + 0x1454));\n              if (iVar5 != 0) {\n                FUN_0005df98(2,\"src/rule.c\",0x14f,\"zlog_rotater_rotate fail\");\n                return 0xffffffff;\n              }\n            }\n            return 0;\n          }\n          piVar7 = __errno_location();\n          FUN_0005df98(1,\"src/rule.c\",0x143,\"stat [%s] fail, errno[%d], maybe in rotating\",__file,\n                       *piVar7);\n          uVar4 = 0;\n        }\n      }\n    }\n  }\n  else {\n    FUN_0005df98(2,\"src/rule.c\",0x120,\"zlog_format_output fail\");\n    uVar4 = 0xffffffff;\n  }\n  return uVar4;\n}\n\n",
    "FUN_0005a66c": "\nundefined4 FUN_0005a66c(int param_1,char *param_2,int *param_3,undefined4 param_4)\n\n{\n  char cVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  size_t __n;\n  char *pcVar5;\n  undefined4 uVar6;\n  char *local_1c;\n  \n  pcVar5 = (char *)(param_1 + 1);\n  local_1c = strrchr(pcVar5,0x22);\n  if (local_1c == (char *)0x0) {\n    uVar6 = 0xffffffff;\n    FUN_0005df98(2,\"src/rule.c\",0x204,\"matching \\\" not found in conf line[%s]\",param_1);\n  }\n  else {\n    __n = (int)local_1c - (int)pcVar5;\n    if (__n < 0x401) {\n      memcpy(param_2,pcVar5,__n);\n      iVar2 = FUN_0005e310(param_2,0x401);\n      if (iVar2 == 0) {\n        pcVar5 = strchr(param_2,0x25);\n        uVar6 = 0;\n        if (pcVar5 != (char *)0x0) {\n          iVar2 = FUN_0005d4c0(FUN_0005c6f4);\n          cVar1 = *param_2;\n          while( true ) {\n            if (cVar1 == '\\0') {\n              *param_3 = iVar2;\n              return 0;\n            }\n            iVar4 = FUN_0005c758(param_2,&local_1c,param_4);\n            if (iVar4 == 0) break;\n            iVar3 = FUN_0005d694(iVar2,iVar4);\n            if (iVar3 != 0) {\n              FUN_0005df98(2,\"src/rule.c\",0x227,\"zc_arraylist_add fail\");\n              if (iVar2 != 0) {\n                FUN_0005d580(iVar2);\n              }\n              FUN_0005c6f4(iVar4);\n              return 0xffffffff;\n            }\n            cVar1 = *local_1c;\n            param_2 = local_1c;\n          }\n          FUN_0005df98(2,\"src/rule.c\",0x222,\"zlog_spec_new fail\");\n          if (iVar2 == 0) {\n            uVar6 = 0xffffffff;\n          }\n          else {\n            uVar6 = 0xffffffff;\n            FUN_0005d580(iVar2);\n          }\n        }\n      }\n      else {\n        FUN_0005df98(2,\"src/rule.c\",0x210,\"zc_str_replace_env fail\");\n        uVar6 = 0xffffffff;\n      }\n    }\n    else {\n      uVar6 = 0xffffffff;\n      FUN_0005df98(2,\"src/rule.c\",0x209,\"file_path too long %ld > %ld\",__n,0x400);\n    }\n  }\n  return uVar6;\n}\n\n",
    "FUN_0005a850": "\nvoid FUN_0005a850(int param_1,undefined4 param_2)\n\n{\n  int iVar1;\n  int *piVar2;\n  int iVar3;\n  \n  if (param_1 != 0) {\n    FUN_0005df98(param_2,\"src/rule.c\",0x41,\n                 \"---rule:[%p][%s%c%d]-[%d,%d][%s,%p,%d:%ld*%d~%s][%d][%d][%s:%s:%p];[%p]---\",\n                 param_1,param_1,*(undefined *)(param_1 + 0x1001),*(undefined4 *)(param_1 + 0x1004),\n                 *(undefined4 *)(param_1 + 0x1028),*(undefined4 *)(param_1 + 0x102c),\n                 param_1 + 0x1030,*(undefined4 *)(param_1 + 0x1434),\n                 *(undefined4 *)(param_1 + 0x1438),*(undefined4 *)(param_1 + 0x1450),\n                 *(undefined4 *)(param_1 + 0x1454),param_1 + 0x1458,\n                 *(undefined4 *)(param_1 + 0x1864),*(undefined4 *)(param_1 + 0x1874),\n                 param_1 + 0x1880,param_1 + 0x1c81,*(undefined4 *)(param_1 + 0x2084),\n                 *(undefined4 *)(param_1 + 0x1878));\n    piVar2 = *(int **)(param_1 + 0x1434);\n    if ((piVar2 != (int *)0x0) && (0 < piVar2[1])) {\n      iVar3 = 0;\n      do {\n        iVar1 = iVar3 * 4;\n        iVar3 = iVar3 + 1;\n        FUN_0005c630(*(undefined4 *)(*piVar2 + iVar1),param_2);\n        piVar2 = *(int **)(param_1 + 0x1434);\n      } while (iVar3 < piVar2[1]);\n    }\n    return;\n  }\n  FUN_0005df98(2,\"src/rule.c\",0x27,\"a_rule is null or 0\");\n  return;\n}\n\n",
    "FUN_0005a97c": "\nvoid FUN_0005a97c(void *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if (param_1 != (void *)0x0) {\n    if (*(int *)((int)param_1 + 0x1434) != 0) {\n      FUN_0005d580();\n      *(undefined4 *)((int)param_1 + 0x1434) = 0;\n    }\n    if ((*(int *)((int)param_1 + 0x1438) != 0) &&\n       (iVar1 = close(*(int *)((int)param_1 + 0x1438)), iVar1 != 0)) {\n      piVar2 = __errno_location();\n      FUN_0005df98(2,\"src/rule.c\",0x3b5,\"close fail, maybe cause by write, errno[%d]\",*piVar2);\n    }\n    if ((*(FILE **)((int)param_1 + 0x1860) != (FILE *)0x0) &&\n       (iVar1 = pclose(*(FILE **)((int)param_1 + 0x1860)), iVar1 == -1)) {\n      piVar2 = __errno_location();\n      FUN_0005df98(2,\"src/rule.c\",0x3ba,\"pclose fail, errno[%d]\",*piVar2);\n    }\n    if (*(int *)((int)param_1 + 0x185c) != 0) {\n      FUN_0005d580();\n      *(undefined4 *)((int)param_1 + 0x185c) = 0;\n    }\n    FUN_0005df98(0,\"src/rule.c\",0x3c1,\"zlog_rule_del[%p]\",param_1);\n    free(param_1);\n    return;\n  }\n  FUN_0005df98(2,\"src/rule.c\",0x3ae,\"a_rule is null or 0\");\n  return;\n}\n\n",
    "FUN_0005aa9c": "\nchar * FUN_0005aa9c(int param_1,undefined4 param_2,int param_3,int *param_4,undefined4 param_5,\n                   undefined4 param_6,undefined4 param_7)\n\n{\n  char cVar1;\n  char *__dest;\n  int iVar2;\n  ushort **ppuVar3;\n  int iVar4;\n  char *pcVar5;\n  FILE *__stream;\n  byte *pbVar6;\n  char *pcVar7;\n  undefined4 uVar8;\n  int *piVar9;\n  byte *pbVar10;\n  size_t __n;\n  uint uVar11;\n  uint uVar12;\n  code *pcVar13;\n  uint uVar14;\n  int iVar15;\n  char **ppcVar16;\n  char *pcVar17;\n  int local_70b4;\n  undefined local_70b0 [96];\n  undefined4 local_7050;\n  undefined4 uStack_704c;\n  undefined auStack_7044 [4100];\n  byte local_6040;\n  byte local_603f [4099];\n  char local_503c;\n  char acStack_503b [4099];\n  char cStack_4038;\n  char acStack_4037 [4099];\n  char local_3034 [4100];\n  byte local_2030;\n  byte local_202f [4099];\n  undefined auStack_102c [4104];\n  \n  local_70b4 = 0;\n  if (param_1 == 0) {\n    FUN_0005df98(2,\"src/rule.c\",0x250,\"line is null or 0\");\n    return (char *)0x0;\n  }\n  if (param_3 == 0) {\n    FUN_0005df98(2,\"src/rule.c\",0x251,\"default_format is null or 0\");\n    return (char *)0x0;\n  }\n  if (param_4 == (int *)0x0) {\n    FUN_0005df98(2,\"src/rule.c\",0x252,\"formats is null or 0\");\n    return (char *)0x0;\n  }\n  __dest = (char *)calloc(1,0x2088);\n  if (__dest == (char *)0x0) {\n    piVar9 = __errno_location();\n    FUN_0005df98(2,\"src/rule.c\",0x256,\"calloc fail, errno[%d]\",*piVar9);\n    return (char *)0x0;\n  }\n  *(undefined4 *)(__dest + 0x1028) = param_5;\n  *(undefined4 *)(__dest + 0x1868) = param_6;\n  memset(auStack_7044,0,0x1001);\n  iVar2 = __isoc99_sscanf(param_1,\"%s %n\",auStack_7044,&local_70b4);\n  if (iVar2 != 1) {\n    FUN_0005df98(2,\"src/rule.c\",0x264,\"sscanf [%s] fail, selector\",param_1);\n    goto LAB_0005afdc;\n  }\n  param_1 = param_1 + local_70b4;\n  memset(&local_6040,0,0x1001);\n  memset(&local_503c,0,0x1001);\n  iVar2 = __isoc99_sscanf(auStack_7044,\" %[^.].%s\",&local_6040,&local_503c);\n  if (iVar2 != 2) {\n    FUN_0005df98(2,\"src/rule.c\",0x273,\"sscanf [%s] fail, category or level is null\",auStack_7044);\n    goto LAB_0005afdc;\n  }\n  uVar12 = 0;\n  uVar14 = (uint)local_6040;\n  if (uVar14 != 0) {\n    ppuVar3 = __ctype_b_loc();\n    pbVar10 = &local_6040;\n    do {\n      if (uVar14 != 0x2d && uVar14 != 0x5f) {\n        uVar12 = 1;\n      }\n      if (uVar14 == 0x2d || uVar14 == 0x5f) {\n        uVar12 = 0;\n      }\n      if (uVar14 == 0x2a) {\n        uVar12 = 0;\n      }\n      else {\n        uVar12 = uVar12 & 1;\n      }\n      if (uVar14 == 0x21) {\n        uVar12 = 0;\n      }\n      if ((uVar12 & ((*ppuVar3)[uVar14] ^ 8) >> 3) != 0) {\n        FUN_0005df98(2,\"src/rule.c\",0x27a,\"category name[%s] character is not in [a-Z][0-9][_!*-]\",\n                     &local_6040);\n        goto LAB_0005afdc;\n      }\n      pbVar10 = pbVar10 + 1;\n      uVar14 = (uint)*pbVar10;\n      uVar12 = 0;\n    } while (uVar14 != 0);\n  }\n  strcpy(__dest,(char *)&local_6040);\n  if (local_503c == '*') {\n    __dest[0x1001] = '*';\n    pcVar17 = &local_503c;\n  }\n  else if ((local_503c == '=') || (local_503c == '!')) {\n    __dest[0x1001] = local_503c;\n    pcVar17 = acStack_503b;\n  }\n  else {\n    pcVar17 = &local_503c;\n    __dest[0x1001] = '.';\n  }\n  uVar12 = FUN_00057de4(param_2,pcVar17);\n  *(uint *)(__dest + 0x1004) = uVar12;\n  switch(__dest[0x1001]) {\n  case '!':\n    memset(__dest + 0x1008,0xff,0x20);\n    uVar14 = uVar12 + 7;\n    if (-1 < (int)uVar12) {\n      uVar14 = uVar12;\n    }\n    uVar11 = uVar12 & 7;\n    if ((int)uVar12 < 1) {\n      uVar11 = -(-uVar12 & 7);\n    }\n    __dest[((int)uVar14 >> 3) + 0x1008] =\n         __dest[((int)uVar14 >> 3) + 0x1008] & ~(byte)(1 << (7 - uVar11 & 0xff));\n    break;\n  case '*':\n    memset(__dest + 0x1008,0xff,0x20);\n    break;\n  case '.':\n    memset(__dest + 0x1008,0,0x20);\n    uVar14 = uVar12 + 7;\n    if (-1 < (int)uVar12) {\n      uVar14 = uVar12;\n    }\n    iVar2 = (int)uVar14 >> 3;\n    uVar14 = uVar12 & 7;\n    if ((int)uVar12 < 1) {\n      uVar14 = -(-uVar12 & 7);\n    }\n    __dest[iVar2 + 0x1008] = ~(byte)(0xff << (8 - uVar14 & 0xff)) | __dest[iVar2 + 0x1008];\n    memset(__dest + 0x1008 + iVar2 + 1,0xff,0x1f - iVar2);\n    break;\n  case '=':\n    memset(__dest + 0x1008,0,0x20);\n    uVar14 = uVar12 + 7;\n    if (-1 < (int)uVar12) {\n      uVar14 = uVar12;\n    }\n    uVar11 = uVar12 & 7;\n    if ((int)uVar12 < 1) {\n      uVar11 = -(-uVar12 & 7);\n    }\n    __dest[((int)uVar14 >> 3) + 0x1008] =\n         __dest[((int)uVar14 >> 3) + 0x1008] | (byte)(1 << (7 - uVar11 & 0xff));\n  }\n  memset(&cStack_4038,0,0x1001);\n  memset(local_3034,0,0x1001);\n  iVar2 = __isoc99_sscanf(param_1,\" %[^;];%s\",&cStack_4038,local_3034);\n  if (iVar2 < 1) {\n    FUN_0005df98(2,\"src/rule.c\",700,\"sscanf [%s] fail\",param_1);\n    goto LAB_0005afdc;\n  }\n  if (local_3034[0] != '\\0') {\n    iVar2 = param_4[1];\n    if (0 < iVar2) {\n      ppcVar16 = (char **)(*param_4 + -4);\n      iVar15 = 0;\n      do {\n        ppcVar16 = ppcVar16 + 1;\n        pcVar17 = *ppcVar16;\n        iVar15 = iVar15 + 1;\n        iVar4 = strcmp(pcVar17,local_3034);\n        if (iVar4 == 0) {\n          *(char **)(__dest + 0x1878) = pcVar17;\n          goto LAB_0005ade8;\n        }\n      } while (iVar15 != iVar2);\n    }\n    FUN_0005df98(2,\"src/rule.c\",0x2d2,\"in conf file can\\'t find format[%s], pls check\",local_3034);\n    goto LAB_0005afdc;\n  }\n  FUN_0005df98(0,\"src/rule.c\",0x2c2,\"no format specified, use default\");\n  *(int *)(__dest + 0x1878) = param_3;\nLAB_0005ade8:\n  memset(&local_2030,0,0x1001);\n  iVar2 = __isoc99_sscanf(&cStack_4038,\" %[^,],\",&local_2030);\n  if (iVar2 < 1) {\n    FUN_0005df98(2,\"src/rule.c\",0x2de,\"sscanf [%s] fail\",param_1);\n    goto LAB_0005afdc;\n  }\n  pbVar10 = (byte *)strchr(&cStack_4038,0x2c);\n  if (pbVar10 == (byte *)0x0) {\n    pbVar10 = (byte *)0x0;\n    if (local_2030 == 0x2d) goto LAB_0005b254;\n    if (0x2d < local_2030) {\n      if (local_2030 != 0x3e) goto LAB_0005b110;\n      iVar2 = strncmp((char *)local_202f,\"syslog\",6);\n      if (iVar2 == 0) {\n        FUN_0005df98(2,\"src/rule.c\",0x1dd,\"facility is null or 0\");\n        *(undefined4 *)(__dest + 0x1874) = 0xffffff45;\n        FUN_0005df98(2,\"src/rule.c\",0x355,\"-187 get\");\n        goto LAB_0005afdc;\n      }\nLAB_0005b1b0:\n      iVar2 = strncmp((char *)local_202f,\"stdout\",6);\n      if (iVar2 == 0) {\n        *(undefined **)(__dest + 0x187c) = &DAT_00059ef8;\n        return __dest;\n      }\n      iVar2 = strncmp((char *)local_202f,\"stderr\",6);\n      if (iVar2 == 0) {\n        *(undefined **)(__dest + 0x187c) = &DAT_00059e54;\n        return __dest;\n      }\n      FUN_0005df98(2,\"src/rule.c\",0x360,\"[%s]the string after is not syslog, stdout or stderr\",\n                   &cStack_4038);\n      goto LAB_0005afdc;\n    }\n    pbVar10 = (byte *)0x0;\n    if (local_2030 != 0x22) {\n      if (local_2030 != 0x24) goto LAB_0005b3b8;\n      __isoc99_sscanf(local_202f,\"%s\",__dest + 0x1880);\nLAB_0005aef4:\n      pcVar17 = __dest + 0x1c81;\n      iVar2 = FUN_0005e310(pcVar17,0x401);\n      if (iVar2 == 0) {\n        pcVar5 = strchr(pcVar17,0x25);\n        if (pcVar5 == (char *)0x0) {\n          *(code **)(__dest + 0x187c) = FUN_000595c0;\n          return __dest;\n        }\n        *(code **)(__dest + 0x187c) = FUN_00059cd4;\n        iVar2 = FUN_0005d4c0(FUN_0005c6f4);\n        *(int *)(__dest + 0x1434) = iVar2;\n        if (iVar2 == 0) {\n          FUN_0005df98(2,\"src/rule.c\",0x38d,\"zc_arraylist_new fail\");\n        }\n        else {\n          cVar1 = __dest[0x1c81];\n          while( true ) {\n            if (cVar1 == '\\0') {\n              return __dest;\n            }\n            iVar2 = FUN_0005c758(pcVar17,local_70b0,param_7);\n            if (iVar2 == 0) break;\n            iVar15 = FUN_0005d694(*(undefined4 *)(__dest + 0x1434),iVar2);\n            if (iVar15 != 0) {\n              FUN_0005c6f4(iVar2);\n              FUN_0005df98(2,\"src/rule.c\",0x39a,\"zc_arraylist_add fail\");\n              goto LAB_0005afdc;\n            }\n            cVar1 = *(char *)local_70b0._0_4_;\n            pcVar17 = (char *)local_70b0._0_4_;\n          }\n          FUN_0005df98(2,\"src/rule.c\",0x393,\"zlog_spec_new fail\");\n        }\n      }\n      else {\n        FUN_0005df98(2,\"src/rule.c\",0x37f,\"zc_str_replace_env fail\");\n      }\n      goto LAB_0005afdc;\n    }\nLAB_0005b3e8:\n    pbVar6 = &local_2030;\n  }\n  else {\n    ppuVar3 = __ctype_b_loc();\n    do {\n      pbVar10 = pbVar10 + 1;\n    } while (((*ppuVar3)[*pbVar10] & 0x2000) != 0);\n    if (local_2030 != 0x2d) {\n      if (local_2030 < 0x2e) {\n        if (local_2030 == 0x22) goto LAB_0005b3e8;\n        if (local_2030 == 0x24) {\n          __isoc99_sscanf(local_202f,\"%s\",__dest + 0x1880);\n          pcVar17 = strchr((char *)pbVar10,0x22);\n          if (pcVar17 == (char *)0x0) {\n            FUN_0005df98(2,\"src/rule.c\",0x36a,\"record_path not start with \\\", [%s]\",pbVar10);\n            goto LAB_0005afdc;\n          }\n          pcVar17 = pcVar17 + 1;\n          local_70b0._0_4_ = strrchr(pcVar17,0x22);\n          if ((char *)local_70b0._0_4_ == (char *)0x0) {\n            FUN_0005df98(2,\"src/rule.c\",0x371,\"matching \\\" not found in conf line[%s]\",pcVar17);\n            goto LAB_0005afdc;\n          }\n          __n = local_70b0._0_4_ - (int)pcVar17;\n          if (0x400 < __n) {\n            FUN_0005df98(2,\"src/rule.c\",0x376,\"record_path too long %ld > %ld\",__n,0x400);\n            goto LAB_0005afdc;\n          }\n          memcpy(__dest + 0x1c81,pcVar17,__n);\n          goto LAB_0005aef4;\n        }\n      }\n      else {\n        if (local_2030 == 0x3e) {\n          iVar2 = strncmp((char *)local_202f,\"syslog\",6);\n          if (iVar2 == 0) {\n            iVar2 = strcasecmp((char *)pbVar10,\"LOG_LOCAL0\");\n            if (iVar2 == 0) {\n              *(undefined4 *)(__dest + 0x1874) = 0x80;\n            }\n            else {\n              iVar2 = strcasecmp((char *)pbVar10,\"LOG_LOCAL1\");\n              if (iVar2 == 0) {\n                *(undefined4 *)(__dest + 0x1874) = 0x88;\n              }\n              else {\n                iVar2 = strcasecmp((char *)pbVar10,\"LOG_LOCAL2\");\n                if (iVar2 == 0) {\n                  *(undefined4 *)(__dest + 0x1874) = 0x90;\n                }\n                else {\n                  iVar2 = strcasecmp((char *)pbVar10,\"LOG_LOCAL3\");\n                  if (iVar2 == 0) {\n                    *(undefined4 *)(__dest + 0x1874) = 0x98;\n                  }\n                  else {\n                    iVar2 = strcasecmp((char *)pbVar10,\"LOG_LOCAL4\");\n                    if (iVar2 == 0) {\n                      *(undefined4 *)(__dest + 0x1874) = 0xa0;\n                    }\n                    else {\n                      iVar2 = strcasecmp((char *)pbVar10,\"LOG_LOCAL5\");\n                      if (iVar2 == 0) {\n                        *(undefined4 *)(__dest + 0x1874) = 0xa8;\n                      }\n                      else {\n                        iVar2 = strcasecmp((char *)pbVar10,\"LOG_LOCAL6\");\n                        if (iVar2 == 0) {\n                          *(undefined4 *)(__dest + 0x1874) = 0xb0;\n                        }\n                        else {\n                          iVar2 = strcasecmp((char *)pbVar10,\"LOG_LOCAL7\");\n                          if (iVar2 == 0) {\n                            *(undefined4 *)(__dest + 0x1874) = 0xb8;\n                          }\n                          else {\n                            iVar2 = strcasecmp((char *)pbVar10,\"LOG_USER\");\n                            if (iVar2 == 0) {\n                              *(undefined4 *)(__dest + 0x1874) = 8;\n                            }\n                            else {\n                              iVar2 = strcasecmp((char *)pbVar10,\"LOG_AUTHPRIV\");\n                              if (iVar2 != 0) {\n                                iVar2 = strcasecmp((char *)pbVar10,\"LOG_CRON\");\n                                if (iVar2 == 0) {\n                                  *(undefined4 *)(__dest + 0x1874) = 0x48;\n                                  goto LAB_0005b7c0;\n                                }\n                                iVar2 = strcasecmp((char *)pbVar10,\"LOG_DAEMON\");\n                                if (iVar2 == 0) {\n                                  *(undefined4 *)(__dest + 0x1874) = 0x18;\n                                  goto LAB_0005b7c0;\n                                }\n                                iVar2 = strcasecmp((char *)pbVar10,\"LOG_FTP\");\n                                if (iVar2 == 0) {\n                                  *(undefined4 *)(__dest + 0x1874) = 0x58;\n                                  goto LAB_0005b7c0;\n                                }\n                                iVar2 = strcasecmp((char *)pbVar10,\"LOG_KERN\");\n                                if (iVar2 == 0) {\n                                  *(undefined4 *)(__dest + 0x1874) = 0;\n                                  goto LAB_0005b7c0;\n                                }\n                                iVar2 = strcasecmp((char *)pbVar10,\"LOG_LPR\");\n                                if (iVar2 == 0) {\n                                  *(undefined4 *)(__dest + 0x1874) = 0x30;\n                                  goto LAB_0005b7c0;\n                                }\n                                iVar2 = strcasecmp((char *)pbVar10,\"LOG_MAIL\");\n                                if (iVar2 == 0) {\n                                  *(undefined4 *)(__dest + 0x1874) = 0x10;\n                                  goto LAB_0005b7c0;\n                                }\n                                iVar2 = strcasecmp((char *)pbVar10,\"LOG_NEWS\");\n                                if (iVar2 == 0) {\n                                  *(undefined4 *)(__dest + 0x1874) = 0x38;\n                                  goto LAB_0005b7c0;\n                                }\n                                iVar2 = strcasecmp((char *)pbVar10,\"LOG_SYSLOG\");\n                                if (iVar2 == 0) {\n                                  *(undefined4 *)(__dest + 0x1874) = 0x28;\n                                  goto LAB_0005b7c0;\n                                }\n                              }\n                              *(undefined4 *)(__dest + 0x1874) = 0x50;\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\nLAB_0005b7c0:\n            *(code **)(__dest + 0x187c) = FUN_0005a040;\n            openlog((char *)0x0,0x19,8);\n            return __dest;\n          }\n          goto LAB_0005b1b0;\n        }\nLAB_0005b110:\n        if (local_2030 == 0x7c) {\n          __stream = popen(acStack_4037,\"w\");\n          *(FILE **)(__dest + 0x1860) = __stream;\n          if (__stream == (FILE *)0x0) {\n            piVar9 = __errno_location();\n            FUN_0005df98(2,\"src/rule.c\",0x347,\"popen fail, errno[%d]\",*piVar9);\n          }\n          else {\n            iVar2 = fileno(__stream);\n            *(int *)(__dest + 0x1864) = iVar2;\n            if (-1 < iVar2) {\n              *(code **)(__dest + 0x187c) = FUN_00059f9c;\n              return __dest;\n            }\n            piVar9 = __errno_location();\n            FUN_0005df98(2,\"src/rule.c\",0x34c,\"fileno fail, errno[%d]\",*piVar9);\n          }\n          goto LAB_0005afdc;\n        }\n      }\nLAB_0005b3b8:\n      FUN_0005df98(2,\"src/rule.c\",0x3a2,\"the 1st char[%c] of file_path[%s] is wrong\",local_2030,\n                   &local_2030);\n      goto LAB_0005afdc;\n    }\nLAB_0005b254:\n    if (local_202f[0] != 0x22) {\n      FUN_0005df98(2,\"src/rule.c\",0x2ef,\" - must set before a file output\");\n      goto LAB_0005afdc;\n    }\n    pbVar6 = local_202f;\n    *(undefined **)(__dest + 0x102c) = &DAT_00101000;\n    *(undefined4 *)(__dest + 0x1868) = 0;\n  }\n  pcVar17 = __dest + 0x1030;\n  iVar2 = FUN_0005a66c(pbVar6,pcVar17,__dest + 0x1434,param_7);\n  if (iVar2 != 0) {\n    FUN_0005df98(2,\"src/rule.c\",0x2ff,\"zlog_rule_parse_path fail\");\n    goto LAB_0005afdc;\n  }\n  if (pbVar10 != (byte *)0x0) {\n    memset(auStack_102c,0,0x1001);\n    iVar2 = __isoc99_sscanf(pbVar10,\" %[0-9MmKkBb] * %d ~\",auStack_102c,__dest + 0x1454);\n    if (iVar2 != 0) {\n      uVar8 = FUN_0005e140(auStack_102c);\n      *(undefined4 *)(__dest + 0x1450) = uVar8;\n    }\n    pcVar5 = strchr((char *)pbVar10,0x22);\n    if (pcVar5 != (char *)0x0) {\n      iVar2 = FUN_0005a66c(pcVar5,__dest + 0x1458,__dest + 0x185c,param_7);\n      if (iVar2 != 0) {\n        FUN_0005df98(2,\"src/rule.c\",0x310,\"zlog_rule_parse_path fail\");\n        goto LAB_0005afdc;\n      }\n      pcVar5 = strchr(__dest + 0x1458,0x23);\n      if ((pcVar5 == (char *)0x0) ||\n         ((pcVar7 = strchr(pcVar5,0x72), pcVar7 == (char *)0x0 &&\n          (pcVar5 = strchr(pcVar5,0x73), pcVar5 == (char *)0x0)))) {\n        FUN_0005df98(2,\"src/rule.c\",0x316,\"archive_path must contain #r or #s\");\n        goto LAB_0005afdc;\n      }\n    }\n  }\n  if (*(int *)(__dest + 0x1434) != 0) {\n    if (*(int *)(__dest + 0x1450) < 1) {\n      pcVar13 = FUN_0005a0d4;\n    }\n    else {\n      pcVar13 = FUN_0005a30c;\n    }\n    *(code **)(__dest + 0x187c) = pcVar13;\n    return __dest;\n  }\n  if (*(int *)(__dest + 0x1450) < 1) {\n    pcVar13 = FUN_000596b0;\n  }\n  else {\n    pcVar13 = FUN_00059a0c;\n  }\n  *(code **)(__dest + 0x187c) = pcVar13;\n  iVar2 = open64(pcVar17,*(uint *)(__dest + 0x102c) | 0x441,*(undefined4 *)(__dest + 0x1028));\n  *(int *)(__dest + 0x1438) = iVar2;\n  if (iVar2 < 0) {\n    piVar9 = __errno_location();\n    FUN_0005df98(2,\"src/rule.c\",0x331,\"open file[%s] fail, errno[%d]\",pcVar17,*piVar9);\n  }\n  else {\n    iVar2 = __fxstat64(3,iVar2,(stat64 *)local_70b0);\n    if (iVar2 == 0) {\n      if (0 < *(int *)(__dest + 0x1450)) {\n        close(*(int *)(__dest + 0x1438));\n        *(undefined4 *)(__dest + 0x1438) = 0xffffffff;\n      }\n      *(undefined4 *)(__dest + 0x1440) = local_70b0._0_4_;\n      *(undefined4 *)(__dest + 0x1444) = local_70b0._4_4_;\n      *(undefined4 *)(__dest + 0x1448) = local_7050;\n      *(undefined4 *)(__dest + 0x144c) = uStack_704c;\n      return __dest;\n    }\n    piVar9 = __errno_location();\n    FUN_0005df98(2,\"src/rule.c\",0x337,\"stat [%s] fail, errno[%d], failing to open static_fd\",pcVar17\n                 ,*piVar9);\n  }\nLAB_0005afdc:\n  FUN_0005a97c(__dest);\n  return (char *)0x0;\n}\n\n",
    "FUN_0005babc": "\nundefined4 FUN_0005babc(int param_1,int param_2)\n\n{\n  undefined4 uVar1;\n  \n  switch(*(undefined *)(param_1 + 0x1001)) {\n  case 0x21:\n    if (*(int *)(*(int *)(param_2 + 8) + 0x124) == *(int *)(param_1 + 0x1004)) {\n      return 0;\n    }\n    break;\n  default:\n    return 0;\n  case 0x2a:\n    break;\n  case 0x2e:\n    if (*(int *)(*(int *)(param_2 + 8) + 0x124) < *(int *)(param_1 + 0x1004)) {\n      return 0;\n    }\n                    /* WARNING: Could not recover jumptable at 0x0005bb98. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    uVar1 = (**(code **)(param_1 + 0x187c))();\n    return uVar1;\n  case 0x3d:\n    if (*(int *)(*(int *)(param_2 + 8) + 0x124) != *(int *)(param_1 + 0x1004)) {\n      return 0;\n    }\n  }\n                    /* WARNING: Could not recover jumptable at 0x0005bb60. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  uVar1 = (**(code **)(param_1 + 0x187c))();\n  return uVar1;\n}\n\n",
    "FUN_0005bb9c": "\nuint FUN_0005bb9c(char *param_1)\n\n{\n  uint uVar1;\n  \n  if (param_1 == (char *)0x0) {\n    FUN_0005df98(2,\"src/rule.c\",0x3ea,\"a_rule is null or 0\");\n    return 0xffffffff;\n  }\n  if (*param_1 == '!') {\n    uVar1 = (uint)(param_1[1] == '\\0');\n  }\n  else {\n    uVar1 = 0;\n  }\n  return uVar1;\n}\n\n",
    "FUN_0005bbe8": "\nuint FUN_0005bbe8(char *param_1,char *param_2)\n\n{\n  int iVar1;\n  size_t sVar2;\n  size_t __n;\n  \n  if (param_1 == (char *)0x0) {\n    FUN_0005df98(2,\"src/rule.c\",0x3f6,\"a_rule is null or 0\");\n    return 0xffffffff;\n  }\n  if (param_2 != (char *)0x0) {\n    if (((*param_1 != '*') || (param_1[1] != '\\0')) && (iVar1 = strcmp(param_1,param_2), iVar1 != 0)\n       ) {\n      sVar2 = strlen(param_1);\n      if (param_1[sVar2 - 1] != '_') {\n        return 0;\n      }\n      __n = strlen(param_2);\n      if (sVar2 - 1 != __n) {\n        __n = sVar2;\n      }\n      iVar1 = strncmp(param_1,param_2,__n);\n      return (uint)(iVar1 == 0);\n    }\n    return 1;\n  }\n  FUN_0005df98(2,\"src/rule.c\",0x3f7,\"category is null or 0\");\n  return 0xffffffff;\n}\n\n",
    "FUN_0005bccc": "\nundefined4 FUN_0005bccc(int param_1,undefined4 param_2)\n\n{\n  int iVar1;\n  \n  if (*(code **)(param_1 + 0x187c) == FUN_000595c0 || *(code **)(param_1 + 0x187c) == FUN_00059cd4)\n  {\n    iVar1 = FUN_0005da58(param_2,param_1 + 0x1880);\n    if (iVar1 != 0) {\n      *(undefined4 *)(param_1 + 0x2084) = *(undefined4 *)(iVar1 + 0x404);\n    }\n    return 0;\n  }\n  return 0;\n}\n\n",
    "FUN_0005be70": "\nvoid FUN_0005be70(undefined4 param_1,int param_2,undefined4 param_3)\n\n{\n  __pid_t _Var1;\n  int iVar2;\n  int iVar3;\n  \n  iVar2 = *(int *)(param_2 + 8);\n  if (*(int *)(iVar2 + 0x17c) == 0) {\n    _Var1 = getpid();\n    *(__pid_t *)(iVar2 + 0x17c) = _Var1;\n    iVar2 = *(int *)(param_2 + 8);\n    if (*(int *)(iVar2 + 0x17c) != *(int *)(iVar2 + 0x180)) {\n      *(int *)(iVar2 + 0x180) = *(int *)(iVar2 + 0x17c);\n      iVar2 = sprintf((char *)(iVar2 + 0x184),\"%u\");\n      iVar3 = *(int *)(param_2 + 8);\n      *(int *)(iVar3 + 0x1a4) = iVar2;\n      FUN_0005f0d4(param_3,iVar3 + 0x184,iVar2);\n      return;\n    }\n  }\n  FUN_0005f0d4(param_3,iVar2 + 0x184,*(undefined4 *)(iVar2 + 0x1a4));\n  return;\n}\n\n",
    "FUN_0005c204": "\nvoid FUN_0005c204(undefined4 param_1,int param_2,undefined4 param_3)\n\n{\n  char *pcVar1;\n  char *__s;\n  int iVar2;\n  \n  iVar2 = *(int *)(param_2 + 8);\n  __s = *(char **)(iVar2 + 0x110);\n  pcVar1 = strrchr(__s,0x2f);\n  iVar2 = *(int *)(iVar2 + 0x114);\n  if (pcVar1 != (char *)0x0) {\n    FUN_0005f0d4(param_3,pcVar1 + 1,__s + (iVar2 - (int)pcVar1) + -1);\n    return;\n  }\n  FUN_0005f0d4(param_3,__s,iVar2);\n  return;\n}\n\n",
    "FUN_0005c358": "\nvoid FUN_0005c358(int param_1,int param_2,undefined4 param_3)\n\n{\n  int iVar1;\n  size_t sVar2;\n  char *__s;\n  tm *__tp;\n  int local_1c;\n  \n  iVar1 = *(int *)(param_2 + 8);\n  local_1c = *(int *)(iVar1 + 0x13c);\n  __tp = (tm *)(iVar1 + 0x148);\n  __s = (char *)(*(int *)(param_1 + 0x100c) * 0x100c + *(int *)(iVar1 + 0x174));\n  if (local_1c == 0) {\n    gettimeofday((timeval *)(iVar1 + 0x13c),(__timezone_ptr_t)0x0);\n    iVar1 = *(int *)(param_2 + 8);\n    local_1c = *(int *)(iVar1 + 0x13c);\n  }\n  if (*(int *)(iVar1 + 0x144) != local_1c) {\n    localtime_r(&local_1c,__tp);\n    *(int *)(*(int *)(param_2 + 8) + 0x144) = local_1c;\n  }\n  if (*(int *)(__s + 0x1008) == local_1c) {\n    sVar2 = *(size_t *)(__s + 0x1004);\n  }\n  else {\n    sVar2 = strftime(__s,0x1001,(char *)(param_1 + 8),__tp);\n    *(size_t *)(__s + 0x1004) = sVar2;\n    *(int *)(__s + 0x1008) = local_1c;\n  }\n  FUN_0005f0d4(param_3,__s,sVar2);\n  return;\n}\n\n",
    "FUN_0005c630": "\nvoid FUN_0005c630(undefined4 *param_1,undefined4 param_2)\n\n{\n  char *pcVar1;\n  \n  if (param_1 != (undefined4 *)0x0) {\n    pcVar1 = \"true\";\n    if (param_1[0x906] == 0) {\n      pcVar1 = \"false\";\n    }\n    FUN_0005df98(param_2,\"src/spec.c\",0x29,\"----spec[%p][%.*s][%s|%d][%s,%ld,%ld,%s][%s]----\",\n                 param_1,param_1[1],*param_1,param_1 + 2,param_1[0x403],(int)param_1 + 0x1411,\n                 param_1[0x907],param_1[0x908],pcVar1,param_1 + 0x404);\n    return;\n  }\n  FUN_0005df98(2,\"src/spec.c\",0x22,\"a_spec is null or 0\");\n  return;\n}\n\n",
    "FUN_0005c6f4": "\nvoid FUN_0005c6f4(void *param_1)\n\n{\n  if (param_1 != (void *)0x0) {\n    FUN_0005df98(0,\"src/spec.c\",0x1cd,\"zlog_spec_del[%p]\",param_1);\n    free(param_1);\n    return;\n  }\n  FUN_0005df98(2,\"src/spec.c\",0x1cc,\"a_spec is null or 0\");\n  return;\n}\n\n",
    "FUN_0005c758": "\nchar ** FUN_0005c758(char *param_1,char **param_2,char **param_3)\n\n{\n  char cVar1;\n  char **ppcVar2;\n  char *pcVar3;\n  int iVar4;\n  int *piVar5;\n  char *pcVar6;\n  char *pcVar7;\n  int local_2c;\n  char *local_28;\n  char *local_24;\n  \n  local_2c = 0;\n  if (param_1 == (char *)0x0) {\n    FUN_0005df98(2,\"src/spec.c\",0x1dc,\"pattern_start is null or 0\");\n    return (char **)0x0;\n  }\n  if (param_2 == (char **)0x0) {\n    FUN_0005df98(2,\"src/spec.c\",0x1dd,\"pattern_next is null or 0\");\n    return (char **)0x0;\n  }\n  ppcVar2 = (char **)calloc(1,0x2434);\n  if (ppcVar2 == (char **)0x0) {\n    piVar5 = __errno_location();\n    FUN_0005df98(2,\"src/spec.c\",0x1e1,\"calloc fail, errno[%d]\",*piVar5);\n    return (char **)0x0;\n  }\n  cVar1 = *param_1;\n  *ppcVar2 = param_1;\n  if (cVar1 == '%') {\n    pcVar3 = (char *)((int)ppcVar2 + 0x1411);\n    local_2c = 0;\n    iVar4 = __isoc99_sscanf(param_1,\"%%%[.0-9-]%n\",pcVar3,&local_2c);\n    if (iVar4 == 1) {\n      ppcVar2[0x90a] = &LAB_0005c5a0;\n      ppcVar2[0x90b] = &LAB_0005c510;\n      ppcVar2[0x90c] = &LAB_0005c480;\n      if (*(char *)((int)ppcVar2 + 0x1411) == '-') {\n        ppcVar2[0x905] = (char *)0x1;\n        pcVar3 = (char *)((int)ppcVar2 + 0x1412);\n      }\n      else {\n        if (*(char *)((int)ppcVar2 + 0x1411) == '0') {\n          ppcVar2[0x906] = (char *)0x1;\n        }\n        ppcVar2[0x905] = (char *)0x0;\n      }\n      local_28 = (char *)0x0;\n      local_24 = (char *)0x0;\n      __isoc99_sscanf(pcVar3,&DAT_0006d388);\n      pcVar3 = strchr(pcVar3,0x2e);\n      if (pcVar3 != (char *)0x0) {\n        __isoc99_sscanf(pcVar3,&DAT_0006d390,&local_24);\n      }\n      ppcVar2[0x908] = local_28;\n      ppcVar2[0x907] = local_24;\n    }\n    else {\n      ppcVar2[0x90a] = &LAB_0005bd24;\n      ppcVar2[0x90b] = &LAB_0005bd34;\n      ppcVar2[0x90c] = &LAB_0005bd44;\n      local_2c = 1;\n    }\n    pcVar3 = param_1 + local_2c;\n    if (param_1[local_2c] == 'd') {\n      if (pcVar3[1] == '(') {\n        iVar4 = strncmp(pcVar3,\"d()\",3);\n        if (iVar4 == 0) {\n          pcVar3 = pcVar3 + 3;\n          ppcVar2[2] = (char *)0x25204625;\n          *(undefined2 *)(ppcVar2 + 3) = 0x54;\n          pcVar7 = *ppcVar2;\n        }\n        else {\n          local_2c = 0;\n          iVar4 = __isoc99_sscanf(pcVar3,\"d(%[^)])%n\",ppcVar2 + 2);\n          pcVar7 = *ppcVar2;\n          if (iVar4 == 1) {\n            pcVar3 = pcVar3 + local_2c;\n          }\n          else {\n            local_2c = 0;\n          }\n          if (pcVar3[-1] != ')') {\n            FUN_0005df98(2,\"src/spec.c\",0x211,\"in string[%s] can\\'t find match \\')\\'\",pcVar7);\n            goto LAB_0005caa8;\n          }\n        }\n      }\n      else {\n        pcVar3 = pcVar3 + 1;\n        ppcVar2[2] = (char *)0x25204625;\n        *(undefined2 *)(ppcVar2 + 3) = 0x54;\n        pcVar7 = *ppcVar2;\n      }\n      pcVar6 = *param_3;\n      ppcVar2[0x403] = pcVar6;\n      *param_3 = pcVar6 + 1;\n      ppcVar2[0x909] = (char *)FUN_0005c358;\n      *param_2 = pcVar3;\n      ppcVar2[1] = pcVar3 + -(int)pcVar7;\n    }\n    else if (param_1[local_2c] == 'M') {\n      local_2c = 0;\n      iVar4 = __isoc99_sscanf(pcVar3,\"M(%[^)])%n\",ppcVar2 + 0x404);\n      if (iVar4 == 1) {\n        pcVar3 = pcVar3 + local_2c;\n      }\n      else {\n        local_2c = 0;\n        iVar4 = strncmp(pcVar3,\"M()\",3);\n        if (iVar4 == 0) {\n          pcVar3 = pcVar3 + 3;\n          local_2c = 3;\n        }\n      }\n      if (pcVar3[-1] != ')') {\n        FUN_0005df98(2,\"src/spec.c\",0x22a,\"in string[%s] can\\'t find match \\')\\'\",*ppcVar2);\nLAB_0005caa8:\n        FUN_0005c6f4(ppcVar2);\n        return (char **)0x0;\n      }\n      ppcVar2[1] = pcVar3 + -(int)*ppcVar2;\n      *param_2 = pcVar3;\n      ppcVar2[0x909] = &LAB_0005c2e4;\n    }\n    else {\n      iVar4 = strncmp(pcVar3,\"ms\",2);\n      pcVar7 = *ppcVar2;\n      if (iVar4 == 0) {\n        ppcVar2[1] = pcVar3 + 2 + -(int)pcVar7;\n        *param_2 = pcVar3 + 2;\n        ppcVar2[0x909] = \"\\b\";\n      }\n      else {\n        iVar4 = strncmp(pcVar3,\"us\",2);\n        if (iVar4 == 0) {\n          ppcVar2[1] = pcVar3 + 2 + -(int)pcVar7;\n          *param_2 = pcVar3 + 2;\n          ppcVar2[0x909] = \"\\b\";\n        }\n        else {\n          *param_2 = pcVar3 + 1;\n          cVar1 = *pcVar3;\n          ppcVar2[1] = pcVar3 + (1 - (int)pcVar7);\n          switch(cVar1) {\n          case '%':\n            ppcVar2[0x909] = &LAB_0005bd64;\n            break;\n          default:\n            FUN_0005df98(2,\"src/spec.c\",0x27a,\"str[%s] in wrong format, p[%c]\",pcVar7,cVar1);\n            goto LAB_0005caa8;\n          case 'D':\n            pcVar3 = *param_3;\n            *(undefined2 *)(ppcVar2 + 3) = 0x54;\n            ppcVar2[2] = (char *)0x25204625;\n            *param_3 = pcVar3 + 1;\n            ppcVar2[0x403] = pcVar3;\n            ppcVar2[0x909] = (char *)FUN_0005c358;\n            break;\n          case 'F':\n            ppcVar2[0x909] = &LAB_0005c454;\n            break;\n          case 'H':\n            ppcVar2[0x909] = &LAB_0005bdc8;\n            break;\n          case 'L':\n            ppcVar2[0x909] = &LAB_0005beec;\n            break;\n          case 'T':\n            ppcVar2[0x909] = &LAB_0005bd78;\n            break;\n          case 'U':\n            ppcVar2[0x909] = &LAB_0005c420;\n            break;\n          case 'V':\n            ppcVar2[0x909] = &LAB_0005bdec;\n            break;\n          case 'c':\n            ppcVar2[0x909] = &LAB_0005bddc;\n            break;\n          case 'f':\n            ppcVar2[0x909] = (char *)FUN_0005c204;\n            break;\n          case 'k':\n            ppcVar2[0x909] = &LAB_0005bdb4;\n            break;\n          case 'm':\n            ppcVar2[0x909] = &DAT_0005bf18;\n            break;\n          case 'n':\n            ppcVar2[0x909] = &LAB_0005bda0;\n            break;\n          case 'p':\n            ppcVar2[0x909] = (char *)FUN_0005be70;\n            break;\n          case 't':\n            ppcVar2[0x909] = &LAB_0005bd8c;\n            break;\n          case 'v':\n            ppcVar2[0x909] = &LAB_0005be2c;\n          }\n        }\n      }\n    }\n  }\n  else {\n    pcVar3 = strchr(param_1,0x25);\n    *param_2 = pcVar3;\n    if (pcVar3 == (char *)0x0) {\n      pcVar3 = (char *)strlen(param_1);\n      ppcVar2[1] = pcVar3;\n      *param_2 = param_1 + (int)pcVar3;\n    }\n    else {\n      ppcVar2[1] = pcVar3 + -(int)param_1;\n    }\n    ppcVar2[0x909] = \"\";\n    ppcVar2[0x90a] = &LAB_0005bd24;\n    ppcVar2[0x90b] = &LAB_0005bd34;\n    ppcVar2[0x90c] = &LAB_0005bd44;\n  }\n  FUN_0005c630(ppcVar2,0);\n  return ppcVar2;\n}\n\n",
    "FUN_0005cec0": "\nvoid FUN_0005cec0(int param_1,undefined4 param_2)\n\n{\n  if (param_1 != 0) {\n    FUN_0005df98(param_2,\"src/thread.c\",0x1d,\"--thread[%p][%p][%p][%p,%p,%p,%p,%p]--\",param_1,\n                 *(undefined4 *)(param_1 + 4),*(undefined4 *)(param_1 + 8),\n                 *(undefined4 *)(param_1 + 0xc),*(undefined4 *)(param_1 + 0x10),\n                 *(undefined4 *)(param_1 + 0x14),*(undefined4 *)(param_1 + 0x18),\n                 *(undefined4 *)(param_1 + 0x1c));\n    FUN_00057ed4(*(undefined4 *)(param_1 + 4),param_2);\n    FUN_0005729c(*(undefined4 *)(param_1 + 8),param_2);\n    FUN_0005e6a4(*(undefined4 *)(param_1 + 0xc),param_2);\n    FUN_0005e6a4(*(undefined4 *)(param_1 + 0x10),param_2);\n    FUN_0005e6a4(*(undefined4 *)(param_1 + 0x14),param_2);\n    FUN_0005e6a4(*(undefined4 *)(param_1 + 0x18),param_2);\n    FUN_0005e6a4(*(undefined4 *)(param_1 + 0x1c),param_2);\n    return;\n  }\n  FUN_0005df98(2,\"src/thread.c\",0x14,\"a_thread is null or 0\");\n  return;\n}\n\n",
    "FUN_0005cfa8": "\nvoid FUN_0005cfa8(void *param_1)\n\n{\n  if (param_1 != (void *)0x0) {\n    if (*(int *)((int)param_1 + 4) != 0) {\n      FUN_00057f94();\n    }\n    if (*(int *)((int)param_1 + 8) != 0) {\n      FUN_00057364();\n    }\n    if (*(int *)((int)param_1 + 0xc) != 0) {\n      FUN_0005e70c();\n    }\n    if (*(int *)((int)param_1 + 0x10) != 0) {\n      FUN_0005e70c();\n    }\n    if (*(int *)((int)param_1 + 0x14) != 0) {\n      FUN_0005e70c();\n    }\n    if (*(int *)((int)param_1 + 0x18) != 0) {\n      FUN_0005e70c();\n    }\n    if (*(int *)((int)param_1 + 0x1c) != 0) {\n      FUN_0005e70c();\n    }\n    FUN_0005df98(0,\"src/thread.c\",0x3b,\"zlog_thread_del[%p]\",param_1);\n    free(param_1);\n    return;\n  }\n  FUN_0005df98(2,\"src/thread.c\",0x2b,\"a_thread is null or 0\");\n  return;\n}\n\n",
    "FUN_0005d07c": "\nundefined4 *\nFUN_0005d07c(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined4 *puVar1;\n  int iVar2;\n  int *piVar3;\n  \n  puVar1 = (undefined4 *)calloc(1,0x20);\n  if (puVar1 == (undefined4 *)0x0) {\n    piVar3 = __errno_location();\n    FUN_0005df98(2,\"src/thread.c\",0x46,\"calloc fail, errno[%d]\",*piVar3);\n    return (undefined4 *)0x0;\n  }\n  *puVar1 = param_1;\n  iVar2 = FUN_00058008();\n  puVar1[1] = iVar2;\n  if (iVar2 == 0) {\n    FUN_0005df98(2,\"src/thread.c\",0x4e,\"zlog_mdc_new fail\");\n  }\n  else {\n    iVar2 = FUN_000573d8(param_4);\n    puVar1[2] = iVar2;\n    if (iVar2 == 0) {\n      FUN_0005df98(2,\"src/thread.c\",0x54,\"zlog_event_new fail\");\n    }\n    else {\n      iVar2 = FUN_0005e758(0x401,0x401,0);\n      puVar1[3] = iVar2;\n      if (iVar2 == 0) {\n        FUN_0005df98(2,\"src/thread.c\",0x5a,\"zlog_buf_new fail\");\n      }\n      else {\n        iVar2 = FUN_0005e758(0x401,0x401,0);\n        puVar1[4] = iVar2;\n        if (iVar2 == 0) {\n          FUN_0005df98(2,\"src/thread.c\",0x60,\"zlog_buf_new fail\");\n        }\n        else {\n          iVar2 = FUN_0005e758(0x401,0x401,0);\n          puVar1[5] = iVar2;\n          if (iVar2 == 0) {\n            FUN_0005df98(2,\"src/thread.c\",0x66,\"zlog_buf_new fail\");\n          }\n          else {\n            iVar2 = FUN_0005e758(param_2,param_3,\"...\\n\");\n            puVar1[6] = iVar2;\n            if (iVar2 == 0) {\n              FUN_0005df98(2,\"src/thread.c\",0x6c,\"zlog_buf_new fail\");\n            }\n            else {\n              iVar2 = FUN_0005e758(param_2,param_3,\"...\\n\");\n              puVar1[7] = iVar2;\n              if (iVar2 != 0) {\n                return puVar1;\n              }\n              FUN_0005df98(2,\"src/thread.c\",0x72,\"zlog_buf_new fail\");\n            }\n          }\n        }\n      }\n    }\n  }\n  FUN_0005cfa8(puVar1);\n  return (undefined4 *)0x0;\n}\n\n",
    "FUN_0005d290": "\nundefined4 FUN_0005d290(int param_1,int param_2,int param_3)\n\n{\n  int iVar1;\n  int iVar2;\n  \n  if (param_1 == 0) {\n    FUN_0005df98(2,\"src/thread.c\",0x83,\"a_thread is null or 0\");\n    return 0xffffffff;\n  }\n  if ((*(int *)(*(int *)(param_1 + 0x1c) + 0x10) == param_2) &&\n     (*(int *)(*(int *)(param_1 + 0x1c) + 0x14) == param_3)) {\n    FUN_0005df98(0,\"src/thread.c\",0x87,\"buf size not changed, no need rebuild\");\n    return 0;\n  }\n  iVar1 = FUN_0005e758(param_2,param_3,\"...\\n\");\n  if (iVar1 == 0) {\n    FUN_0005df98(2,\"src/thread.c\",0x8d,\"zlog_buf_new fail\");\n    return 0xffffffff;\n  }\n  iVar2 = FUN_0005e758(param_2,param_3,\"...\\n\");\n  if (iVar2 != 0) {\n    FUN_0005e70c(*(undefined4 *)(param_1 + 0x18));\n    *(int *)(param_1 + 0x18) = iVar1;\n    FUN_0005e70c(*(undefined4 *)(param_1 + 0x1c));\n    *(int *)(param_1 + 0x1c) = iVar2;\n    return 0;\n  }\n  FUN_0005df98(2,\"src/thread.c\",0x93,\"zlog_buf_new fail\");\n  FUN_0005e70c(iVar1);\n  return 0xffffffff;\n}\n\n",
    "FUN_0005d3b0": "\nundefined4 FUN_0005d3b0(int param_1,undefined4 param_2)\n\n{\n  int iVar1;\n  \n  if (param_1 == 0) {\n    FUN_0005df98(2,\"src/thread.c\",0xa7,\"a_thread is null or 0\");\n    return 0xffffffff;\n  }\n  iVar1 = FUN_000573d8(param_2);\n  if (iVar1 != 0) {\n    FUN_00057364(*(undefined4 *)(param_1 + 8));\n    *(int *)(param_1 + 8) = iVar1;\n    return 0;\n  }\n  FUN_0005df98(2,\"src/thread.c\",0xab,\"zlog_event_new fail\");\n  return 0xffffffff;\n}\n\n",
    "FUN_0005d428": "\nundefined4 FUN_0005d428(void **param_1,int *param_2,int param_3)\n\n{\n  void *pvVar1;\n  undefined4 uVar2;\n  int *piVar3;\n  int iVar4;\n  int iVar5;\n  int iVar6;\n  \n  iVar6 = *param_2 * 2;\n  if (*param_2 * 2 < param_3) {\n    iVar6 = param_3;\n  }\n  pvVar1 = realloc(*param_1,iVar6 << 2);\n  if (pvVar1 == (void *)0x0) {\n    piVar3 = __errno_location();\n    FUN_0005df98(2,\"src/zc_arraylist.c\",0x43,\"realloc fail, errno[%d]\",*piVar3);\n    uVar2 = 0xffffffff;\n  }\n  else {\n    iVar5 = *param_2;\n    *param_1 = pvVar1;\n    iVar4 = iVar6 - iVar5;\n    if (iVar4 != 0) {\n      memset((void *)((int)pvVar1 + iVar5 * 4),0,iVar4 * 4);\n    }\n    uVar2 = 0;\n    *param_2 = iVar6;\n  }\n  return uVar2;\n}\n\n",
    "FUN_0005d4c0": "\nvoid ** FUN_0005d4c0(void *param_1)\n\n{\n  void **__ptr;\n  void *pvVar1;\n  int *piVar2;\n  \n  __ptr = (void **)calloc(1,0x10);\n  if (__ptr == (void **)0x0) {\n    piVar2 = __errno_location();\n    FUN_0005df98(2,\"src/zc_arraylist.c\",0x16,\"calloc fail, errno[%d]\",*piVar2);\n  }\n  else {\n    __ptr[3] = param_1;\n    __ptr[2] = (void *)0x20;\n    __ptr[1] = (void *)0x0;\n    pvVar1 = calloc(0x20,4);\n    *__ptr = pvVar1;\n    if (pvVar1 == (void *)0x0) {\n      piVar2 = __errno_location();\n      FUN_0005df98(2,\"src/zc_arraylist.c\",0x20,\"calloc fail, errno[%d]\",*piVar2);\n      free(__ptr);\n      __ptr = (void **)0x0;\n    }\n  }\n  return __ptr;\n}\n\n",
    "FUN_0005d580": "\nvoid FUN_0005d580(void **param_1)\n\n{\n  int iVar1;\n  void *pvVar2;\n  void *__ptr;\n  int iVar3;\n  \n  if (param_1 == (void **)0x0) {\n    return;\n  }\n  __ptr = *param_1;\n  if ((param_1[3] != (void *)0x0) && (pvVar2 = param_1[1], 0 < (int)pvVar2)) {\n    iVar3 = 0;\n    do {\n      iVar1 = iVar3 * 4;\n      iVar3 = iVar3 + 1;\n      if (*(int *)((int)__ptr + iVar1) != 0) {\n        (*(code *)param_1[3])();\n        __ptr = *param_1;\n        pvVar2 = param_1[1];\n      }\n    } while (iVar3 < (int)pvVar2);\n  }\n  if (__ptr != (void *)0x0) {\n    free(__ptr);\n  }\n  free(param_1);\n  return;\n}\n\n",
    "FUN_0005d5f0": "\nundefined4 FUN_0005d5f0(int *param_1,int param_2,undefined4 param_3)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  \n  if ((param_1[2] <= param_2) && (iVar1 = FUN_0005d428(param_1,param_1 + 2,param_2), iVar1 != 0)) {\n    FUN_0005df98(2,\"src/zc_arraylist.c\",0x51,\"expand_internal fail\");\n    return 0xffffffff;\n  }\n  puVar2 = (undefined4 *)(*param_1 + param_2 * 4);\n  if ((*(int *)(*param_1 + param_2 * 4) != 0) && ((code *)param_1[3] != (code *)0x0)) {\n    (*(code *)param_1[3])();\n    puVar2 = (undefined4 *)(*param_1 + param_2 * 4);\n  }\n  iVar1 = param_1[1];\n  *puVar2 = param_3;\n  if (iVar1 <= param_2) {\n    param_1[1] = param_2 + 1;\n  }\n  return 0;\n}\n\n",
    "FUN_0005d694": "\nvoid FUN_0005d694(int param_1,undefined4 param_2)\n\n{\n  FUN_0005d5f0(param_1,*(undefined4 *)(param_1 + 4),param_2);\n  return;\n}\n\n",
    "FUN_0005d6a0": "\nundefined4 FUN_0005d6a0(int *param_1,code *param_2,undefined4 param_3)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  \n  iVar3 = param_1[1];\n  if (iVar3 < 1) {\n    iVar4 = 0;\n  }\n  else {\n    iVar4 = 0;\n    do {\n      iVar1 = (*param_2)(*(undefined4 *)(*param_1 + iVar4 * 4),param_3);\n      iVar3 = param_1[1];\n      if (0 < iVar1) break;\n      iVar4 = iVar4 + 1;\n    } while (iVar4 < iVar3);\n  }\n  if (iVar4 == iVar3) {\n    uVar2 = FUN_0005d5f0(param_1,iVar4,param_3);\n    return uVar2;\n  }\n  iVar5 = *param_1;\n  iVar1 = iVar4 * 4;\n  if (*(int *)(iVar5 + iVar4 * 4) != 0) {\n    if (param_1[2] <= iVar3) {\n      iVar3 = FUN_0005d428(param_1,param_1 + 2,0);\n      if (iVar3 != 0) {\n        FUN_0005df98(2,\"src/zc_arraylist.c\",0x6b,\"expand_internal fail\");\n        return 0xffffffff;\n      }\n      iVar5 = *param_1;\n      iVar3 = param_1[1];\n    }\n    memmove((void *)(iVar5 + iVar1 + 4),(void *)(iVar5 + iVar1),(iVar3 - iVar4) * 4);\n    iVar3 = param_1[1];\n    *(undefined4 *)(*param_1 + iVar1) = param_3;\n    param_1[1] = iVar3 + 1;\n    return 0;\n  }\n  *(undefined4 *)(iVar5 + iVar4 * 4) = param_3;\n  return 0;\n}\n\n",
    "FUN_0005d7b8": "\nundefined4 *\nFUN_0005d7b8(size_t param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n            undefined4 param_5)\n\n{\n  undefined4 *__ptr;\n  void *pvVar1;\n  int *piVar2;\n  \n  __ptr = (undefined4 *)calloc(1,0x1c);\n  if (__ptr == (undefined4 *)0x0) {\n    piVar2 = __errno_location();\n    FUN_0005df98(2,\"src/zc_hashtable.c\",0x26,\"calloc fail, errno[%d]\",*piVar2);\n  }\n  else {\n    pvVar1 = calloc(param_1,4);\n    __ptr[1] = pvVar1;\n    if (pvVar1 == (void *)0x0) {\n      piVar2 = __errno_location();\n      FUN_0005df98(2,\"src/zc_hashtable.c\",0x2c,\"calloc fail, errno[%d]\",*piVar2);\n      free(__ptr);\n      __ptr = (undefined4 *)0x0;\n    }\n    else {\n      __ptr[2] = param_1;\n      __ptr[3] = param_2;\n      __ptr[4] = param_3;\n      __ptr[5] = param_4;\n      __ptr[6] = param_5;\n      *__ptr = 0;\n    }\n  }\n  return __ptr;\n}\n\n",
    "FUN_0005d890": "\nvoid FUN_0005d890(void *param_1)\n\n{\n  void *pvVar1;\n  uint uVar2;\n  void *__ptr;\n  uint uVar3;\n  \n  if (param_1 == (void *)0x0) {\n    FUN_0005df98(2,\"src/zc_hashtable.c\",0x44,\"a_table[%p] is NULL, just do nothing\",0);\n    return;\n  }\n  pvVar1 = *(void **)((int)param_1 + 4);\n  uVar2 = *(uint *)((int)param_1 + 8);\n  if (uVar2 != 0) {\n    uVar3 = 0;\n    do {\n      __ptr = *(void **)((int)pvVar1 + uVar3 * 4);\n      if (__ptr != (void *)0x0) {\n        do {\n          pvVar1 = *(void **)((int)__ptr + 0x10);\n          if (*(code **)((int)param_1 + 0x14) != (code *)0x0) {\n            (**(code **)((int)param_1 + 0x14))(*(undefined4 *)((int)__ptr + 4));\n          }\n          if (*(code **)((int)param_1 + 0x18) != (code *)0x0) {\n            (**(code **)((int)param_1 + 0x18))(*(undefined4 *)((int)__ptr + 8));\n          }\n          free(__ptr);\n          __ptr = pvVar1;\n        } while (pvVar1 != (void *)0x0);\n        pvVar1 = *(void **)((int)param_1 + 4);\n        uVar2 = *(uint *)((int)param_1 + 8);\n      }\n      uVar3 = uVar3 + 1;\n    } while (uVar3 < uVar2);\n  }\n  if (pvVar1 != (void *)0x0) {\n    free(pvVar1);\n  }\n  free(param_1);\n  return;\n}\n\n",
    "FUN_0005d9ec": "\nint FUN_0005d9ec(int param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  int iVar2;\n  int extraout_r1;\n  int iVar3;\n  \n  uVar1 = (**(code **)(param_1 + 0xc))(param_2);\n  FUN_0005fadc(uVar1,*(undefined4 *)(param_1 + 8));\n  iVar3 = *(int *)(*(int *)(param_1 + 4) + extraout_r1 * 4);\n  while( true ) {\n    if (iVar3 == 0) {\n      return 0;\n    }\n    iVar2 = (**(code **)(param_1 + 0x10))(param_2,*(undefined4 *)(iVar3 + 4));\n    if (iVar2 != 0) break;\n    iVar3 = *(int *)(iVar3 + 0x10);\n  }\n  return iVar3;\n}\n\n",
    "FUN_0005da58": "\nundefined4 FUN_0005da58(int param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  int iVar2;\n  int extraout_r1;\n  int iVar3;\n  \n  uVar1 = (**(code **)(param_1 + 0xc))(param_2);\n  FUN_0005fadc(uVar1,*(undefined4 *)(param_1 + 8));\n  iVar3 = *(int *)(*(int *)(param_1 + 4) + extraout_r1 * 4);\n  while( true ) {\n    if (iVar3 == 0) {\n      return 0;\n    }\n    iVar2 = (**(code **)(param_1 + 0x10))(param_2,*(undefined4 *)(iVar3 + 4));\n    if (iVar2 != 0) break;\n    iVar3 = *(int *)(iVar3 + 0x10);\n  }\n  return *(undefined4 *)(iVar3 + 8);\n}\n\n",
    "FUN_0005dac0": "\nundefined4 FUN_0005dac0(uint *param_1,undefined4 param_2,undefined4 param_3)\n\n{\n  size_t __nmemb;\n  undefined4 uVar1;\n  int iVar2;\n  void *pvVar3;\n  undefined4 *puVar4;\n  int extraout_r1;\n  int extraout_r1_00;\n  int extraout_r1_01;\n  int *piVar5;\n  uint uVar6;\n  int iVar7;\n  uint uVar8;\n  int *piVar9;\n  undefined4 *puVar11;\n  double dVar12;\n  double dVar13;\n  int *piVar10;\n  \n  uVar1 = (*(code *)param_1[3])(param_2);\n  uVar8 = param_1[2];\n  FUN_0005fadc(uVar1,uVar8);\n  iVar7 = *(int *)(param_1[1] + extraout_r1 * 4);\n  if (iVar7 != 0) {\n    do {\n      iVar2 = (*(code *)param_1[4])(param_2,*(undefined4 *)(iVar7 + 4));\n      if (iVar2 != 0) {\n        if ((code *)param_1[5] != (code *)0x0) {\n          (*(code *)param_1[5])(*(undefined4 *)(iVar7 + 4));\n        }\n        if ((code *)param_1[6] != (code *)0x0) {\n          (*(code *)param_1[6])(*(undefined4 *)(iVar7 + 8));\n        }\n        *(undefined4 *)(iVar7 + 4) = param_2;\n        *(undefined4 *)(iVar7 + 8) = param_3;\n        return 0;\n      }\n      iVar7 = *(int *)(iVar7 + 0x10);\n    } while (iVar7 != 0);\n    uVar8 = param_1[2];\n  }\n  dVar13 = (double)(ulonglong)uVar8 * 1.3;\n  dVar12 = (double)(ulonglong)*param_1;\n  if (dVar12 != dVar13 && dVar12 < dVar13 == (NAN(dVar12) || NAN(dVar13))) {\n    __nmemb = uVar8 << 1;\n    pvVar3 = calloc(__nmemb,4);\n    if (pvVar3 == (void *)0x0) {\n      piVar5 = __errno_location();\n      FUN_0005df98(2,\"src/zc_hashtable.c\",0x7e,\"calloc fail, errno[%d]\",*piVar5);\n      FUN_0005df98(2,\"src/zc_hashtable.c\",0xcd,\"rehash fail\");\n      return 0xffffffff;\n    }\n    piVar5 = (int *)param_1[1];\n    if (uVar8 != 0) {\n      piVar9 = piVar5;\n      do {\n        piVar10 = piVar9 + 1;\n        puVar4 = (undefined4 *)*piVar9;\n        while (puVar4 != (undefined4 *)0x0) {\n          puVar11 = (undefined4 *)puVar4[4];\n          puVar4[3] = 0;\n          puVar4[4] = 0;\n          FUN_0005fadc(*puVar4,__nmemb);\n          iVar7 = *(int *)((int)pvVar3 + extraout_r1_00 * 4);\n          if (iVar7 != 0) {\n            *(undefined4 **)(iVar7 + 0xc) = puVar4;\n            puVar4[4] = *(undefined4 *)((int)pvVar3 + extraout_r1_00 * 4);\n          }\n          *(undefined4 **)((int)pvVar3 + extraout_r1_00 * 4) = puVar4;\n          puVar4 = puVar11;\n        }\n        piVar9 = piVar10;\n      } while (piVar5 + uVar8 != piVar10);\n    }\n    free(piVar5);\n    param_1[1] = (uint)pvVar3;\n    param_1[2] = __nmemb;\n  }\n  puVar4 = (undefined4 *)calloc(1,0x14);\n  if (puVar4 == (undefined4 *)0x0) {\n    piVar5 = __errno_location();\n    FUN_0005df98(2,\"src/zc_hashtable.c\",0xd4,\"calloc fail, errno[%d]\",*piVar5);\n    return 0xffffffff;\n  }\n  uVar1 = (*(code *)param_1[3])(param_2);\n  uVar8 = param_1[2];\n  puVar4[4] = 0;\n  puVar4[2] = param_3;\n  puVar4[3] = 0;\n  *puVar4 = uVar1;\n  puVar4[1] = param_2;\n  FUN_0005fadc(uVar1,uVar8);\n  uVar8 = param_1[1];\n  iVar7 = *(int *)(uVar8 + extraout_r1_01 * 4);\n  if (iVar7 != 0) {\n    *(undefined4 **)(iVar7 + 0xc) = puVar4;\n    puVar4[4] = *(undefined4 *)(uVar8 + extraout_r1_01 * 4);\n  }\n  uVar6 = *param_1;\n  *(undefined4 **)(uVar8 + extraout_r1_01 * 4) = puVar4;\n  *param_1 = uVar6 + 1;\n  return 0;\n}\n\n",
    "FUN_0005de60": "\nint FUN_0005de60(int param_1)\n\n{\n  int *piVar1;\n  int iVar2;\n  \n  if (*(int *)(param_1 + 8) == 0) {\n    return 0;\n  }\n  piVar1 = *(int **)(param_1 + 4);\n  if (*piVar1 != 0) {\n    return *piVar1;\n  }\n  iVar2 = 0;\n  do {\n    iVar2 = iVar2 + 1;\n    if (iVar2 == *(int *)(param_1 + 8)) {\n      return 0;\n    }\n    piVar1 = piVar1 + 1;\n  } while (*piVar1 == 0);\n  return *piVar1;\n}\n\n",
    "FUN_0005dea8": "\nint FUN_0005dea8(int param_1,undefined4 *param_2)\n\n{\n  int extraout_r1;\n  uint uVar1;\n  int *piVar2;\n  int iVar3;\n  uint uVar4;\n  \n  iVar3 = param_2[4];\n  if (iVar3 == 0) {\n    uVar4 = *(uint *)(param_1 + 8);\n    FUN_0005fadc(*param_2,uVar4);\n    uVar1 = extraout_r1 + 1;\n    if (uVar1 < uVar4) {\n      iVar3 = *(int *)(*(int *)(param_1 + 4) + uVar1 * 4);\n      piVar2 = (int *)(*(int *)(param_1 + 4) + uVar1 * 4);\n      if (iVar3 == 0) {\n        while (uVar1 = uVar1 + 1, uVar1 < uVar4) {\n          piVar2 = piVar2 + 1;\n          if (*piVar2 != 0) {\n            return *piVar2;\n          }\n        }\n      }\n    }\n  }\n  return iVar3;\n}\n\n",
    "FUN_0005df44": "\nbool FUN_0005df44(char *param_1,char *param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = strcmp(param_1,param_2);\n  return iVar1 == 0;\n}\n\n",
    "FUN_0005df58": "\nvoid FUN_0005df58(char *param_1)\n\n{\n  time_t tStack_38;\n  tm tStack_34;\n  \n  time(&tStack_38);\n  localtime_r(&tStack_38,&tStack_34);\n  strftime(param_1,0x15,\"%m-%d %T\",&tStack_34);\n  return;\n}\n\n",
    "FUN_0005df98": "\nundefined4 FUN_0005df98(int param_1,undefined4 param_2,undefined4 param_3,char *param_4)\n\n{\n  __pid_t _Var1;\n  FILE *__stream;\n  undefined auStack_30 [24];\n  \n  if (DAT_0058de44 == 0) {\n    DAT_0058de44 = 1;\n    DAT_0058de48 = getenv(\"ZLOG_PROFILE_DEBUG\");\n    DAT_0058de4c = getenv(\"ZLOG_PROFILE_ERROR\");\n  }\n  if (param_1 == 1) {\n    if (DAT_0058de4c == (char *)0x0) {\n      return 0;\n    }\n    __stream = fopen64(DAT_0058de4c,\"a\");\n    if (__stream == (FILE *)0x0) {\n      return 0xffffffff;\n    }\n    FUN_0005df58(auStack_30);\n    _Var1 = getpid();\n    fprintf(__stream,\"%s WARN  (%d:%s:%ld) \",auStack_30,_Var1,param_2,param_3);\n  }\n  else if (param_1 == 2) {\n    if (DAT_0058de4c == (char *)0x0) {\n      return 0;\n    }\n    __stream = fopen64(DAT_0058de4c,\"a\");\n    if (__stream == (FILE *)0x0) {\n      return 0xffffffff;\n    }\n    FUN_0005df58(auStack_30);\n    _Var1 = getpid();\n    fprintf(__stream,\"%s ERROR (%d:%s:%ld) \",auStack_30,_Var1,param_2,param_3);\n  }\n  else if (param_1 == 0) {\n    if (DAT_0058de48 == (char *)0x0) {\n      return 0;\n    }\n    __stream = fopen64(DAT_0058de48,\"a\");\n    if (__stream == (FILE *)0x0) {\n      return 0xffffffff;\n    }\n    FUN_0005df58(auStack_30);\n    _Var1 = getpid();\n    fprintf(__stream,\"%s DEBUG (%d:%s:%ld) \",auStack_30,_Var1,param_2,param_3);\n  }\n  else {\n    __stream = (FILE *)0x0;\n  }\n  vfprintf(__stream,param_4,&stack0x00000000);\n  fputc(10,__stream);\n  fclose(__stream);\n  return 0;\n}\n\n",
    "FUN_0005e140": "\nlong FUN_0005e140(byte *param_1)\n\n{\n  ushort **ppuVar1;\n  size_t sVar2;\n  long lVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  byte *pbVar6;\n  int iVar7;\n  uint uVar8;\n  \n  if (param_1 == (byte *)0x0) {\n    FUN_0005df98(2,\"src/zc_util.c\",0x1b,\"astring is null or 0\");\n    return 0;\n  }\n  uVar8 = (uint)*param_1;\n  pbVar5 = param_1;\n  if (uVar8 != 0) {\n    ppuVar1 = __ctype_b_loc();\n    pbVar4 = param_1;\n    pbVar6 = param_1;\n    do {\n      pbVar5 = pbVar4;\n      if (((*ppuVar1)[uVar8] & 0x2000) == 0) {\n        pbVar5 = pbVar4 + 1;\n        *pbVar4 = (byte)uVar8;\n      }\n      pbVar6 = pbVar6 + 1;\n      uVar8 = (uint)*pbVar6;\n      pbVar4 = pbVar5;\n    } while (uVar8 != 0);\n  }\n  *pbVar5 = 0;\n  sVar2 = strlen((char *)param_1);\n  lVar3 = strtol((char *)param_1,(char **)0x0,10);\n  if (lVar3 < 1) {\n    lVar3 = 0;\n  }\n  else {\n    uVar8 = (uint)param_1[sVar2 - 1];\n    if ((uVar8 & 0xdf) == 0x42) {\n      uVar8 = (uint)param_1[sVar2 - 2];\n      iVar7 = 0x400;\n    }\n    else {\n      iVar7 = 1000;\n    }\n    switch(uVar8) {\n    case 0x47:\n    case 0x67:\n      lVar3 = iVar7 * iVar7 * iVar7 * lVar3;\n      break;\n    default:\n      ppuVar1 = __ctype_b_loc();\n      if (((*ppuVar1)[uVar8] & 0x800) == 0) {\n        FUN_0005df98(2,\"src/zc_util.c\",0x46,\n                     \"Wrong suffix parsing size in bytes for string [%s], ignoring suffix\",param_1);\n      }\n      break;\n    case 0x4d:\n    case 0x6d:\n      iVar7 = iVar7 * iVar7;\n    case 0x4b:\n    case 0x6b:\n      lVar3 = iVar7 * lVar3;\n    }\n  }\n  return lVar3;\n}\n\n",
    "FUN_0005e310": "\nundefined4 FUN_0005e310(char *param_1,int param_2)\n\n{\n  size_t sVar1;\n  char *pcVar2;\n  uint __n;\n  size_t sVar3;\n  char *__dest;\n  int iVar4;\n  int *piVar5;\n  int local_3038;\n  undefined2 local_3034;\n  undefined local_3032;\n  char acStack_2030 [4100];\n  char acStack_102c [4104];\n  \n  sVar1 = strlen(param_1);\n  while( true ) {\n    do {\n      __dest = strchr(param_1,0x25);\n      param_1 = __dest + 1;\n      if (__dest == (char *)0x0) {\n        return 0;\n      }\n      memset(&local_3034,0,0x1001);\n      memset(acStack_2030,0,0x1001);\n      memset(acStack_102c,0,0x1001);\n      local_3038 = 0;\n      iVar4 = __isoc99_sscanf(param_1,\"%[.0-9-]%n\",(int)&local_3034 + 1,&local_3038);\n      if (iVar4 == 1) {\n        local_3034 = CONCAT11(local_3034._1_1_,0x25);\n        param_1 = __dest + local_3038 + 1;\n        *(undefined *)((int)&local_3034 + local_3038 + 1) = 0x73;\n      }\n      else {\n        local_3038 = 0;\n        local_3034 = 0x7325;\n        local_3032 = 0;\n      }\n      iVar4 = __isoc99_sscanf(param_1,\"E(%[^)])%n\",acStack_2030,&local_3038);\n    } while (iVar4 == 0);\n    param_1 = param_1 + local_3038;\n    if (param_1[-1] != ')') {\n      FUN_0005df98(2,\"src/zc_util.c\",0x7c,\"in string[%s] can\\'t find match )\",__dest);\n      return 0xffffffff;\n    }\n    pcVar2 = getenv(acStack_2030);\n    __n = snprintf(acStack_102c,0x1001,(char *)&local_3034,pcVar2);\n    if (0x1000 < __n) {\n      piVar5 = __errno_location();\n      FUN_0005df98(2,\"src/zc_util.c\",0x83,\"snprintf fail, errno[%d], evn_value_len[%d]\",*piVar5,__n)\n      ;\n      return 0xffffffff;\n    }\n    sVar1 = (sVar1 - ((int)param_1 - (int)__dest)) + __n;\n    if (param_2 - 1U < sVar1) break;\n    sVar3 = strlen(param_1);\n    memmove(__dest + __n,param_1,sVar3 + 1);\n    memcpy(__dest,acStack_102c,__n);\n  }\n  FUN_0005df98(2,\"src/zc_util.c\",0x89,\"repalce env_value[%s] cause overlap\",acStack_102c);\n  return 0xffffffff;\n}\n\n",
    "FUN_0005e558": "\nuint FUN_0005e558(void **param_1,uint param_2)\n\n{\n  int *piVar1;\n  void *pvVar2;\n  void *pvVar3;\n  void *pvVar4;\n  void *__ptr;\n  uint uVar5;\n  bool bVar6;\n  double dVar7;\n  \n  pvVar4 = param_1[5];\n  pvVar2 = param_1[6];\n  if (pvVar4 == (void *)0x0) {\n    uVar5 = 0;\n    dVar7 = (double)ZEXT48(pvVar2) + (double)(ulonglong)param_2 * 1.5;\n    pvVar2 = (void *)((uint)(0.0 < dVar7) * (int)(longlong)dVar7);\n  }\n  else {\n    if (pvVar4 <= pvVar2) {\n      FUN_0005df98(2,\"src/buf.c\",0xa9,\"a_buf->size_real[%ld] >= a_buf->size_max[%ld]\",pvVar2,pvVar4)\n      ;\n      return 1;\n    }\n    pvVar2 = (void *)((int)pvVar2 + param_2);\n    bVar6 = pvVar4 < pvVar2;\n    if (bVar6) {\n      pvVar2 = pvVar4;\n    }\n    uVar5 = (uint)bVar6;\n  }\n  __ptr = *param_1;\n  pvVar3 = param_1[1];\n  pvVar4 = realloc(__ptr,(size_t)pvVar2);\n  if (pvVar4 == (void *)0x0) {\n    piVar1 = __errno_location();\n    FUN_0005df98(2,\"src/buf.c\",0xbd,\"realloc fail, errno[%d]\",*piVar1);\n    uVar5 = 0xffffffff;\n    free(*param_1);\n    *param_1 = (void *)0x0;\n    param_1[1] = (void *)0x0;\n    param_1[2] = (void *)0x0;\n    param_1[3] = (void *)0x0;\n  }\n  else {\n    param_1[1] = (void *)((int)pvVar4 + ((int)pvVar3 - (int)__ptr));\n    *param_1 = pvVar4;\n    param_1[3] = (void *)((int)pvVar4 + (int)pvVar2);\n    param_1[2] = (void *)((int)(void *)((int)pvVar4 + (int)pvVar2) + -1);\n    param_1[6] = pvVar2;\n  }\n  return uVar5;\n}\n\n",
    "FUN_0005e680": "\nvoid FUN_0005e680(void **param_1)\n\n{\n  void *__dest;\n  \n  __dest = (void *)((int)param_1[1] - (int)param_1[0x108]);\n  if (__dest < *param_1) {\n    __dest = *param_1;\n  }\n  memcpy(__dest,param_1 + 7,(int)param_1[1] - (int)__dest);\n  return;\n}\n\n",
    "FUN_0005e6a4": "\nvoid FUN_0005e6a4(int *param_1,undefined4 param_2)\n\n{\n  FUN_0005df98(param_2,\"src/buf.c\",0x4a,\"---buf[%p][%ld-%ld][%ld][%s][%p:%ld]---\",param_1,param_1[4]\n               ,param_1[5],param_1[6],param_1 + 7,*param_1,param_1[1] - *param_1);\n  return;\n}\n\n",
    "FUN_0005e70c": "\nvoid FUN_0005e70c(void **param_1)\n\n{\n  if (*param_1 != (void *)0x0) {\n    free(*param_1);\n  }\n  FUN_0005df98(0,\"src/buf.c\",0x52,\"zlog_buf_del[%p]\",param_1);\n  free(param_1);\n  return;\n}\n\n",
    "FUN_0005e758": "\nvoid ** FUN_0005e758(void *param_1,void *param_2,char *param_3)\n\n{\n  void **ppvVar1;\n  void *pvVar2;\n  int *piVar3;\n  \n  if (param_1 == (void *)0x0) {\n    FUN_0005df98(2,\"src/buf.c\",0x5c,\"buf_size_min == 0, not allowed\");\n    return (void **)0x0;\n  }\n  if ((param_2 == (void *)0x0 || param_2 <= param_1) &&\n      (param_2 != (void *)0x0 && param_1 != param_2)) {\n    FUN_0005df98(2,\"src/buf.c\",0x62,\"buf_size_max[%lu] < buf_size_min[%lu] && buf_size_max != 0\",\n                 param_2,param_1);\n    return (void **)0x0;\n  }\n  ppvVar1 = (void **)calloc(1,0x424);\n  if (ppvVar1 == (void **)0x0) {\n    piVar3 = __errno_location();\n    FUN_0005df98(2,\"src/buf.c\",0x68,\"calloc fail, errno[%d]\",*piVar3);\n    return (void **)0x0;\n  }\n  if (param_3 != (char *)0x0) {\n    pvVar2 = (void *)strlen(param_3);\n    if ((void *)0x400 < pvVar2) {\n      FUN_0005df98(2,\"src/buf.c\",0x6e,\"truncate_str[%s] overflow\",param_3);\n      goto LAB_0005e850;\n    }\n    memcpy(ppvVar1 + 7,param_3,(int)pvVar2 + 1);\n    ppvVar1[0x108] = pvVar2;\n  }\n  ppvVar1[4] = param_1;\n  ppvVar1[5] = param_2;\n  ppvVar1[6] = param_1;\n  pvVar2 = calloc(1,(size_t)param_1);\n  *ppvVar1 = pvVar2;\n  if (pvVar2 != (void *)0x0) {\n    ppvVar1[1] = pvVar2;\n    ppvVar1[3] = (void *)((int)pvVar2 + (int)param_1);\n    ppvVar1[2] = (void *)((int)(void *)((int)pvVar2 + (int)param_1) + -1);\n    return ppvVar1;\n  }\n  piVar3 = __errno_location();\n  FUN_0005df98(2,\"src/buf.c\",0x7c,\"calloc fail, errno[%d]\",*piVar3);\nLAB_0005e850:\n  FUN_0005e70c(ppvVar1);\n  return (void **)0x0;\n}\n\n",
    "FUN_0005e8dc": "\nundefined4 FUN_0005e8dc(int *param_1,char *param_2,__gnuc_va_list param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  int *piVar4;\n  uint __maxlen;\n  undefined4 uVar5;\n  size_t sVar6;\n  \n  if (*param_1 == 0) {\n    FUN_0005df98(2,\"src/buf.c\",0xd6,\"pre-use of zlog_buf_resize fail, so can\\'t convert\");\n    uVar5 = 0xffffffff;\n  }\n  else {\n    __maxlen = param_1[3] - (int)(char *)param_1[1];\n    uVar1 = vsnprintf((char *)param_1[1],__maxlen,param_2,param_3);\n    uVar2 = ~uVar1 >> 0x1f;\n    if (__maxlen <= uVar1) {\n      uVar2 = 0;\n    }\n    if (uVar2 != 0) {\n      param_1[1] = param_1[1] + uVar1;\n      return 0;\n    }\n    if ((int)uVar1 < 0) {\n      piVar4 = __errno_location();\n      FUN_0005df98(2,\"src/buf.c\",0xe2,\"vsnprintf fail, errno[%d]\",*piVar4);\n      uVar5 = 0xffffffff;\n      FUN_0005df98(2,\"src/buf.c\",0xe3,\"nwrite[%d], size_left[%ld], format[%s]\",uVar1,__maxlen,\n                   param_2);\n    }\n    else if (uVar1 < __maxlen) {\n      uVar5 = 0;\n    }\n    else {\n      iVar3 = FUN_0005e558(param_1,(1 - __maxlen) + uVar1);\n      if (iVar3 < 1) {\n        if (iVar3 == 0) {\n          sVar6 = param_1[3] - (int)(char *)param_1[1];\n          iVar3 = vsnprintf((char *)param_1[1],sVar6,param_2,param_3);\n          if (-1 < iVar3) {\n            param_1[1] = param_1[1] + iVar3;\n            return 0;\n          }\n          piVar4 = __errno_location();\n          FUN_0005df98(2,\"src/buf.c\",0xfc,\"vsnprintf fail, errno[%d]\",*piVar4);\n          uVar5 = 0xffffffff;\n          FUN_0005df98(2,\"src/buf.c\",0xfd,\"nwrite[%d], size_left[%ld], format[%s]\",iVar3,sVar6,\n                       param_2);\n        }\n        else {\n          FUN_0005df98(2,\"src/buf.c\",0xf3,\"zlog_buf_resize fail\");\n          uVar5 = 0xffffffff;\n        }\n      }\n      else {\n        FUN_0005df98(2,\"src/buf.c\",0xea,\"conf limit to %ld, can\\'t extend, so truncate\",param_1[5]);\n        sVar6 = param_1[3] - (int)(char *)param_1[1];\n        vsnprintf((char *)param_1[1],sVar6,param_2,param_3);\n        param_1[1] = param_1[1] + (sVar6 - 1);\n        if (*(char *)(param_1 + 7) == '\\0') {\n          uVar5 = 1;\n        }\n        else {\n          uVar5 = 1;\n          FUN_0005e680(param_1);\n        }\n      }\n    }\n  }\n  return uVar5;\n}\n\n",
    "FUN_0005ed04": "\nvoid * FUN_0005ed04(int *param_1,undefined4 param_2,uint param_3,int param_4,uint param_5)\n\n{\n  void *pvVar1;\n  int iVar2;\n  uint uVar3;\n  char cVar4;\n  size_t __n;\n  undefined4 uVar5;\n  char *__src;\n  char *pcVar6;\n  uint __n_00;\n  size_t __n_01;\n  uint uVar7;\n  longlong lVar8;\n  char local_25 [9];\n  \n  lVar8 = CONCAT44(param_4,param_3);\n  if (*param_1 == 0) {\n    FUN_0005df98(2,\"src/buf.c\",0x156,\"pre-use of zlog_buf_resize fail, so can\\'t convert\");\n    return (void *)0xffffffff;\n  }\n  pcVar6 = local_25 + 1;\n  __src = pcVar6;\n  if ((param_4 != 0 || 0xfffffffe < param_3) && (param_4 != 0 || param_3 != 0xffffffff)) {\n    do {\n      uVar5 = (undefined4)((ulonglong)lVar8 >> 0x20);\n      cVar4 = '\\n';\n      FUN_00060120((int)lVar8,uVar5,10,0);\n      __src = __src + -1;\n      *__src = cVar4 + '0';\n      lVar8 = FUN_00060120((int)lVar8,uVar5,10,0);\n    } while (lVar8 != 0);\n  }\n  else {\n    do {\n      uVar3 = param_3 / 10;\n      __src = __src + -1;\n      *__src = (char)(param_3 % 10) + '0';\n      param_3 = uVar3;\n    } while (uVar3 != 0);\n  }\n  __n_00 = (int)pcVar6 - (int)__src;\n  pvVar1 = (void *)param_1[1];\n  uVar3 = param_1[2];\n  if (__n_00 < param_5) {\n    uVar7 = (int)pvVar1 + param_5;\n    __n = param_5 - __n_00;\n    if (uVar3 < uVar7) goto LAB_0005ee24;\n  }\n  else {\n    uVar7 = (int)pvVar1 + __n_00;\n    if (uVar7 <= uVar3) {\n      __n = 0;\n      goto LAB_0005eda4;\n    }\n    __n = 0;\n    param_5 = __n_00;\nLAB_0005ee24:\n    iVar2 = FUN_0005e558(param_1,param_5 - (uVar3 - (int)pvVar1));\n    if (0 < iVar2) {\n      FUN_0005df98(2,\"src/buf.c\",0x189,\"conf limit to %ld, can\\'t extend, so output\",param_1[5]);\n      pvVar1 = (void *)param_1[1];\n      uVar3 = param_1[2] - (int)pvVar1;\n      if (__n < uVar3) {\n        __n_01 = uVar3 - __n;\n      }\n      else {\n        __n_01 = 0;\n        __n = uVar3;\n      }\n      if (__n != 0) {\n        memset(pvVar1,0x30,__n);\n        pvVar1 = (void *)param_1[1];\n      }\n      pvVar1 = memcpy((void *)((int)pvVar1 + __n),__src,__n_01);\n      if (*(char *)(param_1 + 7) == '\\0') {\n        pvVar1 = (void *)0x1;\n      }\n      param_1[1] = param_1[1] + uVar3;\n      if (*(char *)(param_1 + 7) == '\\0') {\n        return pvVar1;\n      }\n      FUN_0005e680(param_1);\n      return (void *)0x1;\n    }\n    if (iVar2 != 0) {\n      FUN_0005df98(2,\"src/buf.c\",0x199,\"zlog_buf_resize fail\");\n      return (void *)0xffffffff;\n    }\n    pvVar1 = (void *)param_1[1];\n    uVar7 = (int)pvVar1 + param_5;\n  }\n  if (__n != 0) {\n    memset(pvVar1,0x30,__n);\n    pvVar1 = (void *)param_1[1];\n  }\nLAB_0005eda4:\n  memcpy((void *)((int)pvVar1 + __n),__src,__n_00);\n  param_1[1] = uVar7;\n  return (void *)0x0;\n}\n\n",
    "FUN_0005ef24": "\nvoid * FUN_0005ef24(int *param_1,uint param_2,uint param_3)\n\n{\n  void *pvVar1;\n  int iVar2;\n  uint uVar3;\n  size_t __n;\n  char *__src;\n  uint __n_00;\n  size_t __n_01;\n  uint uVar4;\n  char local_22 [6];\n  \n  if (*param_1 == 0) {\n    FUN_0005df98(2,\"src/buf.c\",0x1b2,\"pre-use of zlog_buf_resize fail, so can\\'t convert\");\n    return (void *)0xffffffff;\n  }\n  __src = local_22 + 1;\n  do {\n    uVar3 = param_2 & 0xf;\n    param_2 = param_2 >> 4;\n    __src = __src + -1;\n    *__src = \"0123456789abcdef\"[uVar3];\n  } while (param_2 != 0);\n  __n_00 = (int)(local_22 + 1) - (int)__src;\n  pvVar1 = (void *)param_1[1];\n  uVar3 = param_1[2];\n  if (__n_00 < param_3) {\n    uVar4 = (int)pvVar1 + param_3;\n    __n = param_3 - __n_00;\n    if (uVar3 < uVar4) goto LAB_0005efd4;\n  }\n  else {\n    uVar4 = (int)pvVar1 + __n_00;\n    __n = 0;\n    param_3 = __n_00;\n    if (uVar4 <= uVar3) goto LAB_0005efb0;\nLAB_0005efd4:\n    iVar2 = FUN_0005e558(param_1,param_3 - (uVar3 - (int)pvVar1));\n    if (0 < iVar2) {\n      FUN_0005df98(2,\"src/buf.c\",0x1d9,\"conf limit to %ld, can\\'t extend, so output\",param_1[5]);\n      pvVar1 = (void *)param_1[1];\n      uVar3 = param_1[2] - (int)pvVar1;\n      if (__n < uVar3) {\n        __n_01 = uVar3 - __n;\n      }\n      else {\n        __n_01 = 0;\n        __n = uVar3;\n      }\n      if (__n != 0) {\n        memset(pvVar1,0x30,__n);\n        pvVar1 = (void *)param_1[1];\n      }\n      pvVar1 = memcpy((void *)((int)pvVar1 + __n),__src,__n_01);\n      if (*(char *)(param_1 + 7) == '\\0') {\n        pvVar1 = (void *)0x1;\n      }\n      param_1[1] = param_1[1] + uVar3;\n      if (*(char *)(param_1 + 7) == '\\0') {\n        return pvVar1;\n      }\n      FUN_0005e680(param_1);\n      return (void *)0x1;\n    }\n    if (iVar2 != 0) {\n      FUN_0005df98(2,\"src/buf.c\",0x1e9,\"zlog_buf_resize fail\");\n      return (void *)0xffffffff;\n    }\n    pvVar1 = (void *)param_1[1];\n    uVar4 = (int)pvVar1 + param_3;\n  }\n  if (__n != 0) {\n    memset(pvVar1,0x30,__n);\n    pvVar1 = (void *)param_1[1];\n  }\nLAB_0005efb0:\n  memcpy((void *)((int)pvVar1 + __n),__src,__n_00);\n  param_1[1] = uVar4;\n  return (void *)0x0;\n}\n\n",
    "FUN_0005f0d4": "\nvoid * FUN_0005f0d4(int param_1,void *param_2,size_t param_3)\n\n{\n  int iVar1;\n  void *pvVar2;\n  size_t __n;\n  uint uVar3;\n  bool bVar4;\n  \n  pvVar2 = *(void **)(param_1 + 4);\n  uVar3 = (int)pvVar2 + param_3;\n  if (*(uint *)(param_1 + 8) < uVar3) {\n    iVar1 = FUN_0005e558(param_1,param_3 - (*(uint *)(param_1 + 8) - (int)pvVar2));\n    if (0 < iVar1) {\n      FUN_0005df98(2,\"src/buf.c\",0x20d,\"conf limit to %ld, can\\'t extend, so output\",\n                   *(undefined4 *)(param_1 + 0x14));\n      __n = *(int *)(param_1 + 8) - (int)*(void **)(param_1 + 4);\n      pvVar2 = memcpy(*(void **)(param_1 + 4),param_2,__n);\n      bVar4 = *(char *)(param_1 + 0x1c) == '\\0';\n      if (bVar4) {\n        pvVar2 = (void *)0x1;\n      }\n      *(size_t *)(param_1 + 4) = *(int *)(param_1 + 4) + __n;\n      if (bVar4) {\n        return pvVar2;\n      }\n      FUN_0005e680(param_1);\n      return (void *)0x1;\n    }\n    if (iVar1 != 0) {\n      FUN_0005df98(2,\"src/buf.c\",0x215,\"zlog_buf_resize fail\");\n      return (void *)0xffffffff;\n    }\n    pvVar2 = *(void **)(param_1 + 4);\n    uVar3 = (int)pvVar2 + param_3;\n  }\n  memcpy(pvVar2,param_2,param_3);\n  *(uint *)(param_1 + 4) = uVar3;\n  return (void *)0x0;\n}\n\n",
    "FUN_0005f1cc": "\nvoid * FUN_0005f1cc(int *param_1,void *param_2,uint param_3,int param_4,int param_5,uint param_6,\n                   uint param_7)\n\n{\n  void *pvVar1;\n  int iVar2;\n  uint uVar3;\n  size_t __n;\n  size_t sVar4;\n  \n  if (*param_1 == 0) {\n    FUN_0005df98(2,\"src/buf.c\",0x232,\"pre-use of zlog_buf_resize fail, so can\\'t convert\");\n    return (void *)0xffffffff;\n  }\n  pvVar1 = (void *)param_1[1];\n  if (param_7 == 0 || param_3 < param_7) {\n    param_7 = param_3;\n  }\n  if (param_6 == 0 || param_6 <= param_7) {\n    sVar4 = 0;\n    param_6 = param_7;\n  }\n  else {\n    sVar4 = param_6 - param_7;\n  }\n  if ((uint)(param_1[2] - (int)pvVar1) < param_6) {\n    iVar2 = FUN_0005e558(param_1,param_6 - (param_1[2] - (int)pvVar1));\n    if (0 < iVar2) {\n      FUN_0005df98(2,\"src/buf.c\",0x250,\"conf limit to %ld, can\\'t extend, so output\",param_1[5]);\n      pvVar1 = (void *)param_1[1];\n      uVar3 = param_1[2] - (int)pvVar1;\n      if (param_4 == 0) {\n        if (sVar4 < uVar3) {\n          __n = uVar3 - sVar4;\n        }\n        else {\n          __n = 0;\n          sVar4 = uVar3;\n        }\n        if (sVar4 != 0) {\n          if (param_5 == 0) {\n            iVar2 = 0x20;\n          }\n          else {\n            iVar2 = 0x30;\n          }\n          memset(pvVar1,iVar2,sVar4);\n          pvVar1 = (void *)param_1[1];\n        }\n        pvVar1 = memcpy((void *)((int)pvVar1 + sVar4),param_2,__n);\n      }\n      else {\n        sVar4 = uVar3;\n        if (param_7 < uVar3) {\n          memset((void *)((int)pvVar1 + param_7),0x20,uVar3 - param_7);\n          pvVar1 = (void *)param_1[1];\n          sVar4 = param_7;\n        }\n        pvVar1 = memcpy(pvVar1,param_2,sVar4);\n      }\n      if (*(char *)(param_1 + 7) == '\\0') {\n        pvVar1 = (void *)0x1;\n      }\n      param_1[1] = param_1[1] + uVar3;\n      if (*(char *)(param_1 + 7) == '\\0') {\n        return pvVar1;\n      }\n      FUN_0005e680(param_1);\n      return (void *)0x1;\n    }\n    if (iVar2 != 0) {\n      FUN_0005df98(2,\"src/buf.c\",0x270,\"zlog_buf_resize fail\");\n      return (void *)0xffffffff;\n    }\n    pvVar1 = (void *)param_1[1];\n  }\n  if (param_4 == 0) {\n    if (sVar4 != 0) {\n      if (param_5 == 0) {\n        iVar2 = 0x20;\n      }\n      else {\n        iVar2 = 0x30;\n      }\n      memset(pvVar1,iVar2,sVar4);\n      pvVar1 = (void *)param_1[1];\n    }\n    memcpy((void *)((int)pvVar1 + sVar4),param_2,param_7);\n  }\n  else {\n    if (sVar4 != 0) {\n      memset((void *)((int)pvVar1 + param_7),0x20,sVar4);\n      pvVar1 = (void *)param_1[1];\n    }\n    memcpy(pvVar1,param_2,param_7);\n  }\n  param_1[1] = param_1[1] + param_6;\n  return (void *)0x0;\n}\n\n",
    "FUN_0005f3f8": "\nvoid FUN_0005f3f8(undefined4 *param_1,undefined4 param_2)\n\n{\n  if (param_1 != (undefined4 *)0x0) {\n    FUN_0005df98(param_2,\"src/level.c\",0x1a,\"---level[%p][%d,%s,%s,%d,%d]---\",param_1,*param_1,\n                 param_1 + 1,(int)param_1 + 0x405,param_1[0x202],param_1[0x203]);\n    return;\n  }\n  FUN_0005df98(2,\"src/level.c\",0x13,\"a_level is null or 0\");\n  return;\n}\n\n",
    "FUN_0005f474": "\nvoid FUN_0005f474(void *param_1)\n\n{\n  if (param_1 != (void *)0x0) {\n    FUN_0005df98(0,\"src/level.c\",0x22,\"zlog_level_del[%p]\",param_1);\n    free(param_1);\n    return;\n  }\n  FUN_0005df98(2,\"src/level.c\",0x21,\"a_level is null or 0\");\n  return;\n}\n\n",
    "FUN_0005f4d8": "\nuint * FUN_0005f4d8(int param_1)\n\n{\n  int iVar1;\n  uint *puVar2;\n  __int32_t **pp_Var3;\n  byte *pbVar4;\n  int *piVar5;\n  undefined *puVar6;\n  uint uVar7;\n  uint uVar8;\n  uint *puVar9;\n  ushort uVar10;\n  __int32_t *p_Var11;\n  __int32_t *p_Var12;\n  uint local_2024;\n  byte local_2020;\n  byte local_201f [1023];\n  char local_1c20;\n  char local_101c [4104];\n  \n  local_2024 = 0;\n  if (param_1 == 0) {\n    FUN_0005df98(2,\"src/level.c\",0x4d,\"line is null or 0\");\n    return (uint *)0x0;\n  }\n  memset(&local_2020,0,0x1001);\n  memset(local_101c,0,0x1001);\n  iVar1 = __isoc99_sscanf(param_1,\" %[^= \\t] = %d ,%s\",&local_2020,&local_2024,local_101c);\n  if (iVar1 < 2) {\n    FUN_0005df98(2,\"src/level.c\",0x54,\"level[%s], syntax wrong\",param_1);\n    return (uint *)0x0;\n  }\n  if (0xff < local_2024) {\n    FUN_0005df98(2,\"src/level.c\",0x5a,\"l[%d] not in [0,255], wrong\",local_2024);\n    return (uint *)0x0;\n  }\n  uVar10 = (ushort)local_2020;\n  if (uVar10 == 0) {\n    FUN_0005df98(2,\"src/level.c\",0x5f,\"str[0] = 0\");\n    return (uint *)0x0;\n  }\n  puVar2 = (uint *)calloc(1,0x810);\n  if (puVar2 == (uint *)0x0) {\n    piVar5 = __errno_location();\n    FUN_0005df98(2,\"src/level.c\",0x65,\"calloc fail, errno[%d]\",*piVar5);\n    return (uint *)0x0;\n  }\n  *puVar2 = local_2024;\n  if (local_101c[0] != '\\0') {\n    iVar1 = strcasecmp(local_101c,\"LOG_EMERG\");\n    if (iVar1 == 0) {\n      puVar2[0x203] = 0;\n      goto LAB_0005f594;\n    }\n    iVar1 = strcasecmp(local_101c,\"LOG_ALERT\");\n    if (iVar1 == 0) {\n      puVar2[0x203] = 1;\n      goto LAB_0005f594;\n    }\n    iVar1 = strcasecmp(local_101c,\"LOG_CRIT\");\n    if (iVar1 == 0) {\n      puVar2[0x203] = 2;\n      goto LAB_0005f594;\n    }\n    iVar1 = strcasecmp(local_101c,\"LOG_ERR\");\n    if (iVar1 == 0) {\n      puVar2[0x203] = 3;\n      goto LAB_0005f594;\n    }\n    iVar1 = strcasecmp(local_101c,\"LOG_WARNING\");\n    if (iVar1 == 0) {\n      puVar2[0x203] = 4;\n      goto LAB_0005f594;\n    }\n    iVar1 = strcasecmp(local_101c,\"LOG_NOTICE\");\n    if (iVar1 == 0) {\n      puVar2[0x203] = 5;\n      goto LAB_0005f594;\n    }\n    iVar1 = strcasecmp(local_101c,\"LOG_INFO\");\n    if (iVar1 == 0) {\n      puVar2[0x203] = 6;\n      goto LAB_0005f594;\n    }\n    iVar1 = strcasecmp(local_101c,\"LOG_DEBUG\");\n    if (iVar1 != 0) {\n      FUN_0005df98(2,\"src/level.c\",0x3f,\"wrong syslog level[%s]\",local_101c);\n      puVar2[0x203] = 0xffffff45;\n      FUN_0005df98(2,\"src/level.c\",0x71,\"syslog_level_atoi fail\");\nLAB_0005f74c:\n      FUN_0005df98(2,\"src/level.c\",0x8a,\"line[%s]\",param_1);\n      FUN_0005f474(puVar2);\n      return (uint *)0x0;\n    }\n  }\n  puVar2[0x203] = 7;\nLAB_0005f594:\n  pp_Var3 = __ctype_toupper_loc();\n  p_Var11 = *pp_Var3;\n  pp_Var3 = __ctype_tolower_loc();\n  p_Var12 = *pp_Var3;\n  puVar9 = puVar2 + 0x101;\n  puVar6 = (undefined *)((int)puVar2 + 3);\n  pbVar4 = &local_2020;\n  uVar8 = 0;\n  do {\n    uVar7 = uVar8;\n    uVar8 = uVar7 + 1;\n    puVar6 = puVar6 + 1;\n    *puVar6 = (char)p_Var11[(short)uVar10];\n    puVar9 = (uint *)((int)puVar9 + 1);\n    *(char *)puVar9 = (char)p_Var12[(short)uVar10];\n    if (uVar8 == 0x400) {\n      if (local_1c20 != '\\0') {\n        FUN_0005df98(2,\"src/level.c\",0x7e,\"not enough space for str, str[%s] > %d\",&local_2020,0x400\n                    );\n        goto LAB_0005f74c;\n      }\n      break;\n    }\n    pbVar4 = pbVar4 + 1;\n    uVar10 = (ushort)*pbVar4;\n  } while (uVar10 != 0);\n  *(undefined *)((int)puVar2 + uVar7 + 5) = 0;\n  *(undefined *)((int)puVar2 + uVar7 + 0x406) = 0;\n  puVar2[0x202] = uVar8;\n  return puVar2;\n}\n\n",
    "FUN_0005f880": "\nulonglong FUN_0005f880(uint param_1,uint param_2)\n\n{\n  uint uVar1;\n  ulonglong uVar2;\n  \n  if (param_2 - 1 == 0) {\n    return CONCAT44(param_2,param_1);\n  }\n  if (param_2 == 0) {\n    uVar1 = raise(8);\n    return (ulonglong)uVar1;\n  }\n  if (param_1 <= param_2) {\n    return CONCAT44(param_2,(uint)(param_1 == param_2));\n  }\n  if ((param_2 & param_2 - 1) == 0) {\n    return CONCAT44(param_2,param_1 >> (0x1fU - LZCOUNT(param_2) & 0xff));\n  }\n                    /* WARNING: Could not recover jumptable at 0x0005f8b0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  uVar2 = (*(code *)(&UNK_0005f8b8 + (0x1f - (LZCOUNT(param_2) - LZCOUNT(param_1))) * 0x10))\n                    (param_1,param_2,0);\n  return uVar2;\n}\n\n",
    "FUN_0005fadc": "\nvoid FUN_0005fadc(undefined4 param_1,int param_2)\n\n{\n  if (param_2 != 0) {\n    FUN_0005f880();\n    return;\n  }\n  raise(8);\n  return;\n}\n\n",
    "FUN_0005faf8": "\nulonglong FUN_0005faf8(uint param_1,uint param_2)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  ulonglong uVar4;\n  \n  if (param_2 == 0) {\n    uVar2 = raise(8);\n    return (ulonglong)uVar2;\n  }\n  uVar3 = param_1 ^ param_2;\n  uVar2 = param_2;\n  if ((int)param_2 < 0) {\n    uVar2 = -param_2;\n  }\n  if (uVar2 - 1 == 0) {\n    if ((int)param_2 < 0) {\n      param_1 = -param_1;\n    }\n    return CONCAT44(uVar2,param_1);\n  }\n  uVar1 = param_1;\n  if ((int)param_1 < 0) {\n    uVar1 = -param_1;\n  }\n  if (uVar1 <= uVar2) {\n    if (uVar1 < uVar2) {\n      param_1 = 0;\n    }\n    if (uVar1 == uVar2) {\n      param_1 = (int)uVar3 >> 0x1f | 1;\n    }\n    return CONCAT44(uVar2,param_1);\n  }\n  if ((uVar2 & uVar2 - 1) == 0) {\n    uVar1 = uVar1 >> (0x1fU - LZCOUNT(uVar2) & 0xff);\n    if ((int)uVar3 < 0) {\n      uVar1 = -uVar1;\n    }\n    return CONCAT44(uVar2,uVar1);\n  }\n                    /* WARNING: Could not recover jumptable at 0x0005fb38. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  uVar4 = (*(code *)(&UNK_0005fb40 + (0x1f - (LZCOUNT(uVar2) - LZCOUNT(uVar1))) * 0x10))(0);\n  return uVar4;\n}\n\n",
    "FUN_0005fafe": "\nuint FUN_0005fafe(uint param_1,uint param_2)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  char in_NG;\n  \n  uVar3 = param_1 ^ param_2;\n  uVar1 = param_2;\n  if (in_NG != '\\0') {\n    uVar1 = -param_2;\n  }\n  if (uVar1 - 1 == 0) {\n    if ((int)param_2 < 0) {\n      param_1 = -param_1;\n    }\n    return param_1;\n  }\n  uVar2 = param_1;\n  if ((int)param_1 < 0) {\n    uVar2 = -param_1;\n  }\n  if (uVar2 <= uVar1) {\n    if (uVar2 < uVar1) {\n      param_1 = 0;\n    }\n    if (uVar2 == uVar1) {\n      param_1 = (int)uVar3 >> 0x1f | 1;\n    }\n    return param_1;\n  }\n  if ((uVar1 & uVar1 - 1) == 0) {\n    uVar2 = uVar2 >> (0x1fU - LZCOUNT(uVar1) & 0xff);\n    if ((int)uVar3 < 0) {\n      uVar2 = -uVar2;\n    }\n    return uVar2;\n  }\n                    /* WARNING: Could not recover jumptable at 0x0005fb38. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  uVar1 = (*(code *)(&UNK_0005fb40 + (0x1f - (LZCOUNT(uVar1) - LZCOUNT(uVar2))) * 0x10))(0);\n  return uVar1;\n}\n\n",
    "FUN_0005fd8c": "\nvoid FUN_0005fd8c(undefined4 param_1,int param_2)\n\n{\n  if (param_2 != 0) {\n    FUN_0005fafe();\n    return;\n  }\n  raise(8);\n  return;\n}\n\n",
    "FUN_000600b4": "\nulonglong FUN_000600b4(uint param_1,uint param_2)\n\n{\n  byte bVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  int iVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  bool bVar11;\n  \n  if ((param_1 | param_2) == 0) {\n    return CONCAT44(param_2,param_1);\n  }\n  iVar7 = 0x432;\n  uVar8 = param_2 >> 0x16;\n  if (uVar8 != 0) {\n    iVar7 = 3;\n    if (param_2 >> 0x19 != 0) {\n      iVar7 = 6;\n    }\n    if (param_2 >> 0x1c != 0) {\n      iVar7 = iVar7 + 3;\n    }\n    uVar4 = iVar7 - ((int)param_2 >> 0x1f);\n    uVar8 = param_1 << (0x20 - uVar4 & 0xff);\n    param_1 = param_1 >> (uVar4 & 0xff) | param_2 << (0x20 - uVar4 & 0xff);\n    param_2 = param_2 >> (uVar4 & 0xff);\n    iVar7 = uVar4 + 0x432;\n  }\n  if (0xfffff < param_2) {\n    if (0x1fffff < param_2) {\n      uVar4 = param_2 & 1;\n      param_2 = param_2 >> 1;\n      bVar1 = (byte)param_1;\n      param_1 = (uint)(uVar4 != 0) << 0x1f | param_1 >> 1;\n      uVar8 = (uint)(bVar1 & 1) << 0x1f | uVar8 >> 1;\n      iVar7 = iVar7 + 1;\n      if (0xffbfffff < (uint)(iVar7 * 0x200000)) {\n        return 0x7ff0000000000000;\n      }\n    }\nLAB_0005fec0:\n    bVar10 = 0x7fffffff < uVar8;\n    if (uVar8 == 0x80000000) {\n      bVar10 = (param_1 & 1) != 0;\n    }\n    return CONCAT44(param_2 + iVar7 * 0x100000 + (uint)CARRY4(param_1,(uint)bVar10),param_1 + bVar10\n                   );\n  }\n  bVar9 = (uVar8 & 0x80000000) != 0;\n  uVar8 = uVar8 << 1;\n  uVar4 = param_1 * 2;\n  bVar10 = CARRY4(param_1,param_1);\n  param_1 = param_1 * 2 + (uint)bVar9;\n  param_2 = param_2 * 2 + (uint)(bVar10 || CARRY4(uVar4,(uint)bVar9));\n  iVar7 = iVar7 + -1;\n  if ((param_2 & 0x100000) != 0) goto LAB_0005fec0;\n  uVar2 = param_1;\n  uVar4 = param_2;\n  if (param_2 == 0) {\n    uVar2 = 0;\n    uVar4 = param_1;\n  }\n  iVar5 = LZCOUNT(uVar4);\n  if (param_2 == 0) {\n    iVar5 = iVar5 + 0x20;\n  }\n  uVar6 = iVar5 - 0xb;\n  bVar11 = SBORROW4(uVar6,0x20);\n  uVar3 = iVar5 - 0x2b;\n  bVar10 = (int)uVar3 < 0;\n  bVar9 = uVar3 == 0;\n  if ((int)uVar6 < 0x20) {\n    bVar11 = SCARRY4(uVar3,0xc);\n    iVar5 = iVar5 + -0x1f;\n    bVar10 = iVar5 < 0;\n    bVar9 = iVar5 == 0;\n    uVar3 = uVar6;\n    if (!bVar9 && bVar10 == bVar11) {\n      uVar2 = uVar4 << (uVar6 & 0xff);\n      uVar4 = uVar4 >> (0xcU - iVar5 & 0xff);\n      goto LAB_0005ff38;\n    }\n  }\n  if (bVar9 || bVar10 != bVar11) {\n    uVar8 = 0x20 - uVar3;\n  }\n  uVar4 = uVar4 << (uVar3 & 0xff);\n  if (bVar9 || bVar10 != bVar11) {\n    uVar4 = uVar4 | uVar2 >> (uVar8 & 0xff);\n  }\n  if (bVar9 || bVar10 != bVar11) {\n    uVar2 = uVar2 << (uVar3 & 0xff);\n  }\nLAB_0005ff38:\n  if ((int)uVar6 <= iVar7) {\n    return CONCAT44(uVar4 + (iVar7 - uVar6) * 0x100000,uVar2);\n  }\n  uVar8 = ~(iVar7 - uVar6);\n  if (0x1e < (int)uVar8) {\n    return (ulonglong)(uVar4 >> (uVar8 - 0x1f & 0xff));\n  }\n  iVar7 = uVar8 - 0x13;\n  if (iVar7 == 0 || iVar7 < 0 != SCARRY4(uVar8 - 0x1f,0xc)) {\n    uVar8 = uVar8 + 1;\n    return CONCAT44(uVar4 >> (uVar8 & 0xff),uVar2 >> (uVar8 & 0xff) | uVar4 << (0x20 - uVar8 & 0xff)\n                   );\n  }\n  return (ulonglong)(uVar2 >> (0x20 - (0xcU - iVar7) & 0xff) | uVar4 << (0xcU - iVar7 & 0xff));\n}\n\n",
    "FUN_000600c4": "\nulonglong FUN_000600c4(uint param_1,uint param_2)\n\n{\n  byte bVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  int iVar7;\n  uint uVar8;\n  uint uVar9;\n  bool bVar10;\n  bool bVar11;\n  bool bVar12;\n  \n  if ((param_1 | param_2) == 0) {\n    return CONCAT44(param_2,param_1);\n  }\n  uVar8 = param_2 & 0x80000000;\n  uVar3 = param_2;\n  if ((int)uVar8 < 0) {\n    bVar11 = param_1 != 0;\n    param_1 = -param_1;\n    uVar3 = -param_2 - (uint)bVar11;\n  }\n  iVar7 = 0x432;\n  uVar9 = uVar3 >> 0x16;\n  if (uVar9 != 0) {\n    iVar7 = 3;\n    if (uVar3 >> 0x19 != 0) {\n      iVar7 = 6;\n    }\n    if (uVar3 >> 0x1c != 0) {\n      iVar7 = iVar7 + 3;\n    }\n    uVar4 = iVar7 - ((int)uVar3 >> 0x1f);\n    uVar9 = param_1 << (0x20 - uVar4 & 0xff);\n    param_1 = param_1 >> (uVar4 & 0xff) | uVar3 << (0x20 - uVar4 & 0xff);\n    uVar3 = uVar3 >> (uVar4 & 0xff);\n    iVar7 = uVar4 + 0x432;\n  }\n  if (0xfffff < uVar3) {\n    if (0x1fffff < uVar3) {\n      uVar4 = uVar3 & 1;\n      uVar3 = uVar3 >> 1;\n      bVar1 = (byte)param_1;\n      param_1 = (uint)(uVar4 != 0) << 0x1f | param_1 >> 1;\n      uVar9 = (uint)(bVar1 & 1) << 0x1f | uVar9 >> 1;\n      iVar7 = iVar7 + 1;\n      if (0xffbfffff < (uint)(iVar7 * 0x200000)) {\n        return (ulonglong)(uVar8 | 0x7ff00000) << 0x20;\n      }\n    }\nLAB_0005fec0:\n    bVar11 = 0x7fffffff < uVar9;\n    if (uVar9 == 0x80000000) {\n      bVar11 = (param_1 & 1) != 0;\n    }\n    return CONCAT44(uVar3 + iVar7 * 0x100000 + (uint)CARRY4(param_1,(uint)bVar11) | uVar8,\n                    param_1 + bVar11);\n  }\n  bVar10 = (uVar9 & 0x80000000) != 0;\n  uVar9 = uVar9 << 1;\n  uVar4 = param_1 * 2;\n  bVar11 = CARRY4(param_1,param_1);\n  param_1 = param_1 * 2 + (uint)bVar10;\n  uVar3 = uVar3 * 2 + (uint)(bVar11 || CARRY4(uVar4,(uint)bVar10));\n  iVar7 = iVar7 + -1;\n  if ((uVar3 & 0x100000) != 0) goto LAB_0005fec0;\n  uVar2 = param_1;\n  uVar4 = uVar3;\n  if (uVar3 == 0) {\n    uVar2 = 0;\n    uVar4 = param_1;\n  }\n  iVar5 = LZCOUNT(uVar4);\n  if (uVar3 == 0) {\n    iVar5 = iVar5 + 0x20;\n  }\n  uVar6 = iVar5 - 0xb;\n  bVar12 = SBORROW4(uVar6,0x20);\n  uVar3 = iVar5 - 0x2b;\n  bVar11 = (int)uVar3 < 0;\n  bVar10 = uVar3 == 0;\n  if ((int)uVar6 < 0x20) {\n    bVar12 = SCARRY4(uVar3,0xc);\n    iVar5 = iVar5 + -0x1f;\n    bVar11 = iVar5 < 0;\n    bVar10 = iVar5 == 0;\n    uVar3 = uVar6;\n    if (!bVar10 && bVar11 == bVar12) {\n      uVar2 = uVar4 << (uVar6 & 0xff);\n      uVar4 = uVar4 >> (0xcU - iVar5 & 0xff);\n      goto LAB_0005ff38;\n    }\n  }\n  if (bVar10 || bVar11 != bVar12) {\n    uVar9 = 0x20 - uVar3;\n  }\n  uVar4 = uVar4 << (uVar3 & 0xff);\n  if (bVar10 || bVar11 != bVar12) {\n    uVar4 = uVar4 | uVar2 >> (uVar9 & 0xff);\n  }\n  if (bVar10 || bVar11 != bVar12) {\n    uVar2 = uVar2 << (uVar3 & 0xff);\n  }\nLAB_0005ff38:\n  if ((int)uVar6 <= iVar7) {\n    return CONCAT44(uVar4 + (iVar7 - uVar6) * 0x100000 | uVar8,uVar2);\n  }\n  uVar3 = ~(iVar7 - uVar6);\n  if (0x1e < (int)uVar3) {\n    return CONCAT44(param_2,uVar4 >> (uVar3 - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  iVar7 = uVar3 - 0x13;\n  if (iVar7 == 0 || iVar7 < 0 != SCARRY4(uVar3 - 0x1f,0xc)) {\n    uVar3 = uVar3 + 1;\n    return CONCAT44(uVar8 | uVar4 >> (uVar3 & 0xff),\n                    uVar2 >> (uVar3 & 0xff) | uVar4 << (0x20 - uVar3 & 0xff));\n  }\n  return CONCAT44(param_2,uVar2 >> (0x20 - (0xcU - iVar7) & 0xff) | uVar4 << (0xcU - iVar7 & 0xff))\n         & 0x80000000ffffffff;\n}\n\n",
    "FUN_00060120": "\nvoid FUN_00060120(undefined4 param_1,undefined4 param_2,int param_3,int param_4)\n\n{\n  if ((param_4 == 0) && (param_3 == 0)) {\n    raise(8);\n    return;\n  }\n  FUN_000601c0();\n  return;\n}\n\n",
    "FUN_0006015c": "\nint FUN_0006015c(undefined4 param_1,uint param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int iVar1;\n  \n  if (-1 < (int)((uint)((double)CONCAT44(param_2,param_1) < 0.0) << 0x1f)) {\n    iVar1 = FUN_00060180();\n    return iVar1;\n  }\n  iVar1 = FUN_00060180(param_1,param_2 ^ 0x80000000,param_3,param_4,param_4);\n  return -iVar1;\n}\n\n",
    "FUN_00060180": "\nundefined8 FUN_00060180(undefined4 param_1,undefined4 param_2)\n\n{\n  uint uVar1;\n  double dVar2;\n  \n  dVar2 = (double)CONCAT44(param_2,param_1) * 2.328306436538696e-10;\n  uVar1 = (uint)(0.0 < dVar2) * (int)(longlong)dVar2;\n  dVar2 = (double)CONCAT44(param_2,param_1) - (double)(ulonglong)uVar1 * 4294967296.0;\n  return CONCAT44(uVar1,(uint)(0.0 < dVar2) * (int)(longlong)dVar2);\n}\n\n",
    "FUN_000601c0": "\nundefined8 FUN_000601c0(uint param_1,uint param_2,uint param_3,uint param_4,uint *param_5)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  int iVar10;\n  uint uVar11;\n  bool bVar12;\n  \n  bVar12 = param_4 <= param_2;\n  if (param_2 == param_4) {\n    bVar12 = param_3 <= param_1;\n  }\n  if (bVar12) {\n    iVar10 = LZCOUNT(param_4);\n    if (param_4 == 0) {\n      iVar10 = LZCOUNT(param_3) + 0x20;\n    }\n    iVar3 = LZCOUNT(param_2);\n    if (param_2 == 0) {\n      iVar3 = LZCOUNT(param_1) + 0x20;\n    }\n    uVar11 = iVar10 - iVar3;\n    uVar8 = uVar11 - 0x20;\n    uVar9 = 0x20 - uVar11;\n    uVar5 = param_3 << (uVar11 & 0xff);\n    uVar6 = param_4 << (uVar11 & 0xff) | param_3 << (uVar8 & 0xff) | param_3 >> (uVar9 & 0xff);\n    bVar12 = uVar6 <= param_2;\n    if (param_2 == uVar6) {\n      bVar12 = uVar5 <= param_1;\n    }\n    if (bVar12) {\n      bVar12 = param_1 < uVar5;\n      param_1 = param_1 - uVar5;\n      uVar1 = 1 << (uVar11 & 0xff);\n      param_2 = (param_2 - uVar6) - (uint)bVar12;\n      uVar2 = 1 << (uVar8 & 0xff) | 1U >> (uVar9 & 0xff);\n    }\n    else {\n      uVar1 = 0;\n      uVar2 = uVar1;\n    }\n    if (uVar11 != 0) {\n      uVar7 = uVar6 >> 1;\n      uVar6 = (uint)((uVar6 & 1) != 0) << 0x1f | uVar5 >> 1;\n      uVar5 = uVar11;\n      do {\n        while( true ) {\n          bVar12 = uVar7 <= param_2;\n          if (param_2 == uVar7) {\n            bVar12 = uVar6 <= param_1;\n          }\n          if (bVar12) break;\n          bVar12 = CARRY4(param_1,param_1);\n          param_1 = param_1 * 2;\n          param_2 = param_2 * 2 + (uint)bVar12;\n          uVar5 = uVar5 - 1;\n          uVar4 = param_2;\n          if (uVar5 == 0) goto LAB_0006026a;\n        }\n        bVar12 = param_1 < uVar6;\n        uVar4 = param_1 - uVar6;\n        param_1 = uVar4 * 2 + 1;\n        param_2 = ((param_2 - uVar7) - (uint)bVar12) * 2 + (uint)CARRY4(uVar4,uVar4) +\n                  (uint)(0xfffffffe < uVar4 * 2);\n        uVar5 = uVar5 - 1;\n        uVar4 = param_2;\n      } while (uVar5 != 0);\nLAB_0006026a:\n      param_2 = uVar4 >> (uVar11 & 0xff);\n      bVar12 = CARRY4(uVar1,param_1);\n      uVar5 = uVar1 + param_1;\n      param_1 = param_1 >> (uVar11 & 0xff) | uVar4 << (uVar9 & 0xff) | uVar4 >> (uVar8 & 0xff);\n      uVar6 = param_1 << (uVar11 & 0xff);\n      uVar1 = uVar5 - uVar6;\n      uVar2 = ((uVar4 + uVar2 + bVar12) -\n              (param_2 << (uVar11 & 0xff) | param_1 << (uVar11 - 0x20 & 0xff) |\n              param_1 >> (0x20 - uVar11 & 0xff))) - (uint)(uVar5 < uVar6);\n    }\n  }\n  else {\n    uVar1 = 0;\n    uVar2 = uVar1;\n  }\n  if (param_5 != (uint *)0x0) {\n    *param_5 = param_1;\n    param_5[1] = param_2;\n  }\n  return CONCAT44(uVar2,uVar1);\n}\n\n",
    "FUN_000602d8": "\nvoid FUN_000602d8(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int iVar1;\n  code **ppcVar2;\n  \n  _DT_INIT();\n  iVar1 = 0;\n  ppcVar2 = (code **)&__DT_INIT_ARRAY;\n  do {\n    iVar1 = iVar1 + 1;\n    (**ppcVar2)(param_1,param_2,param_3,*ppcVar2,param_4);\n    ppcVar2 = ppcVar2 + 1;\n  } while (iVar1 != 1);\n  return;\n}\n\n",
    "FUN_00060318": "\nvoid FUN_00060318(undefined4 param_1)\n\n{\n  __cxa_atexit(param_1,0,DAT_0007e294);\n  return;\n}\n\n",
    "_DT_FINI": "\nvoid _DT_FINI(void)\n\n{\n  return;\n}\n\n",
    "_DT_INIT": "\nvoid _DT_INIT(void)\n\n{\n  FUN_00013c50();\n  return;\n}\n\n",
    "_FINI_0": "\nvoid _FINI_0(void)\n\n{\n  if (DAT_0007f7a0 == '\\0') {\n    FUN_00013c74();\n    DAT_0007f7a0 = '\\x01';\n  }\n  return;\n}\n\n",
    "_INIT_0": "\n/* WARNING: Removing unreachable block (ram,0x00013cb4) */\n/* WARNING: Removing unreachable block (ram,0x00013cbe) */\n\nvoid _INIT_0(void)\n\n{\n  return;\n}\n\n",
    "_IO_getc": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint _IO_getc(_IO_FILE *__fp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "__assert_fail": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "__ctype_b_loc": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "__ctype_tolower_loc": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__int32_t ** __ctype_tolower_loc(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "__ctype_toupper_loc": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__int32_t ** __ctype_toupper_loc(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "__cxa_atexit": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_atexit(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "__errno_location": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "__fxstat64": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __fxstat64(int __ver,int __fildes,stat64 *__stat_buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "__gmon_start__": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "__isoc99_sscanf": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __isoc99_sscanf(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "__libc_start_main": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "__lxstat64": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __lxstat64(int __ver,char *__filename,stat64 *__stat_buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "__strdup": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __strdup(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "__xstat64": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __xstat64(int __ver,char *__filename,stat64 *__stat_buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "abort": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "accept": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint accept(int __fd,sockaddr *__addr,socklen_t *__addr_len)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "access": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint access(char *__name,int __type)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "bind": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint bind(int __fd,sockaddr *__addr,socklen_t __len)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "calloc": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "clock_gettime": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint clock_gettime(clockid_t __clock_id,timespec *__tp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "clock_nanosleep": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint clock_nanosleep(clockid_t __clock_id,int __flags,timespec *__req,timespec *__rem)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "close": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint close(int __fd)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "connect": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint connect(int __fd,sockaddr *__addr,socklen_t __len)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "entry": "\nvoid entry(undefined4 param_1)\n\n{\n  undefined4 in_stack_00000000;\n  \n  __libc_start_main(FUN_00012620,in_stack_00000000,&stack0x00000004,0x602d9,&DAT_00060315,param_1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n",
    "errx": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid errx(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "exit": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "fclose": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "fcntl": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fcntl(int __fd,int __cmd,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "fflush": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "fgetc": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fgetc(FILE *__stream)\n\n{\n  int iVar1;\n  \n                    /* WARNING: Treating indirect jump as call */\n  iVar1 = (*(code *)(undefined *)0x0)();\n  return iVar1;\n}\n\n",
    "fgets": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * fgets(char *__s,int __n,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "fileno": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "fopen64": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * fopen64(char *__filename,char *__modes)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "fprintf": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fprintf(FILE *__stream,char *__format,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "fputc": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputc(int __c,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "fputs": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs(char *__s,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "fread": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fread(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "free": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)(undefined *)0x0)();\n  return;\n}\n\n",
    "fseek": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseek(FILE *__stream,long __off,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "fsync": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fsync(int __fd)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "fwrite": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "getenv": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * getenv(char *__name)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "gethostbyname": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nhostent * gethostbyname(char *__name)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "gethostname": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint gethostname(char *__name,size_t __len)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "getpid": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__pid_t getpid(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "gettimeofday": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint gettimeofday(timeval *__tv,__timezone_ptr_t __tz)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "glob64": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint glob64(char *__pattern,int __flags,__errfunc *__errfunc,glob64_t *__pglob)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "globfree64": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid globfree64(glob64_t *__pglob)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "inet_addr": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nin_addr_t inet_addr(char *__cp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "inet_ntoa": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * inet_ntoa(in_addr __in)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "ioctl": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ioctl(int __fd,ulong __request,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "isatty": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint isatty(int __fd)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "listen": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint listen(int __fd,int __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "lldiv": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nlldiv_t * lldiv(lldiv_t *__return_storage_ptr__,longlong __numer,longlong __denom)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "localeconv": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nlconv * localeconv(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "localtime": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ntm * localtime(time_t *__timer)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "localtime_r": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ntm * localtime_r(time_t *__timer,tm *__tp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "lseek64": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off64_t lseek64(int __fd,__off64_t __offset,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "malloc": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n                    /* WARNING: Treating indirect jump as call */\n  pvVar1 = (void *)(*(code *)(undefined *)0x0)();\n  return pvVar1;\n}\n\n",
    "memchr": "\nvoid * memchr(void *__s,int __c,size_t __n)\n\n{\n  byte bVar1;\n  uint *puVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  \n  if (__n == 0) {\n    return (void *)0x0;\n  }\n  uVar5 = __c & 0xff;\n  if (((uint)__s & 3) == 0) {\nLAB_0003e80c:\n    uVar4 = (__c & 0xffU) << 8 | uVar5;\n    uVar4 = uVar4 | uVar4 << 0x10;\n    if (3 < __n) {\n                    /* WARNING: Load size is inaccurate */\n      uVar3 = *__s ^ uVar4;\n      for (uVar3 = uVar3 + 0xfefefeff & ~uVar3; (uVar3 & 0x80808080) == 0;\n          uVar3 = uVar3 + 0xfefefeff & ~uVar3) {\n        __s = (void *)((int)__s + 4);\n        __n = __n - 4;\n        if (__n < 4) {\n          if (__n == 0) {\n            return (void *)0x0;\n          }\n          break;\n        }\n                    /* WARNING: Load size is inaccurate */\n        uVar3 = *__s ^ uVar4;\n      }\n    }\n                    /* WARNING: Load size is inaccurate */\n    if (*__s == uVar5) {\n      return __s;\n    }\n    puVar2 = (uint *)((int)__s + __n);\n    while( true ) {\n      __s = (void *)((int)__s + 1);\n      if ((uint *)__s == puVar2) break;\n                    /* WARNING: Load size is inaccurate */\n      if (*__s == uVar5) {\n        return (uint *)__s;\n      }\n    }\n  }\n  else {\n                    /* WARNING: Load size is inaccurate */\n    if (*__s == uVar5) {\n      return __s;\n    }\n    __s = (uint *)((int)__s + 1);\n    while( true ) {\n      __n = __n - 1;\n      puVar2 = (uint *)__s;\n      if (__n == 0) break;\n      if (((uint)__s & 3) == 0) goto LAB_0003e80c;\n                    /* WARNING: Load size is inaccurate */\n      bVar1 = *__s;\n      __s = (uint *)((int)__s + 1);\n      if (bVar1 == uVar5) {\n        return puVar2;\n      }\n    }\n  }\n  return (void *)0x0;\n}\n\n",
    "memcmp": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "memcpy": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "memmem": "\nvoid * memmem(void *__haystack,size_t __haystacklen,void *__needle,size_t __needlelen)\n\n{\n  uint uVar1;\n  void *pvVar2;\n  int iVar3;\n  uint uVar4;\n  char *pcVar5;\n  uint uVar6;\n  uint uVar7;\n  size_t sVar8;\n  uint __n;\n  uint uVar9;\n  uint uVar10;\n  int iVar11;\n  char *pcVar12;\n  int local_2c [2];\n  \n  if (__needlelen != 0) {\n    if (__needlelen <= __haystacklen) {\n      if (0x1f < __needlelen) {\n        pvVar2 = (void *)FUN_0003e9d8();\n        return pvVar2;\n      }\n                    /* WARNING: Load size is inaccurate */\n      pvVar2 = memchr(__haystack,(uint)*__needle,__haystacklen);\n      if (pvVar2 == (void *)0x0 || __needlelen == 1) {\n        return pvVar2;\n      }\n      uVar9 = __haystacklen - ((int)pvVar2 - (int)__haystack);\n      if (__needlelen <= uVar9) {\n        if (__needlelen < 3) {\n          __n = __needlelen - 1;\n          local_2c[0] = 1;\n        }\n        else {\n          __n = FUN_0003e8c8(__needle,__needlelen,local_2c);\n        }\n        iVar11 = local_2c[0];\n        iVar3 = memcmp(__needle,(void *)((int)__needle + local_2c[0]),__n);\n        if (iVar3 == 0) {\n          uVar6 = __n - 1;\n          uVar4 = 0;\n          uVar10 = 0;\n          do {\n            uVar7 = __n;\n            if (__n < uVar10) {\n              uVar7 = uVar10;\n            }\n            if (uVar7 < __needlelen) {\n              pcVar12 = (char *)((int)__needle + uVar7);\n              pcVar5 = (char *)((int)pvVar2 + uVar7 + uVar4);\n              if (*(char *)((int)__needle + uVar7) == *(char *)((int)pvVar2 + uVar7 + uVar4)) {\n                do {\n                  uVar7 = uVar7 + 1;\n                  if (__needlelen == uVar7) goto LAB_0003ee1c;\n                  pcVar12 = pcVar12 + 1;\n                  pcVar5 = pcVar5 + 1;\n                } while (*pcVar12 == *pcVar5);\n              }\n              uVar4 = (1 - __n) + uVar4 + uVar7;\n              uVar10 = 0;\n            }\n            else {\nLAB_0003ee1c:\n              uVar7 = __n;\n              if ((uVar10 < __n) &&\n                 (pcVar5 = (char *)((int)pvVar2 + uVar6 + uVar4),\n                 *(char *)((int)__needle + uVar6) == *(char *)((int)pvVar2 + uVar6 + uVar4))) {\n                pcVar12 = (char *)((int)__needle + uVar6);\n                uVar1 = uVar6;\n                do {\n                  uVar7 = uVar1;\n                  if (uVar7 - 1 == uVar10 - 1) break;\n                  pcVar12 = pcVar12 + -1;\n                  pcVar5 = pcVar5 + -1;\n                  uVar1 = uVar7 - 1;\n                } while (*pcVar12 == *pcVar5);\n              }\n              if (uVar7 < uVar10 + 1) {\n                return (void *)((int)pvVar2 + uVar4);\n              }\n              uVar4 = uVar4 + iVar11;\n              uVar10 = __needlelen - iVar11;\n            }\n          } while (uVar4 <= uVar9 - __needlelen);\n        }\n        else {\n          iVar11 = __n - 1;\n          uVar4 = __needlelen - __n;\n          if (__needlelen - __n < __n) {\n            uVar4 = __n;\n          }\n          uVar10 = 0;\n          do {\n            if (__n < __needlelen) {\n              pcVar12 = (char *)((int)pvVar2 + __n + uVar10);\n              pcVar5 = (char *)((int)__needle + __n);\n              sVar8 = __n;\n              if (*(char *)((int)pvVar2 + __n + uVar10) == *(char *)((int)__needle + __n)) {\n                do {\n                  sVar8 = sVar8 + 1;\n                  if (__needlelen == sVar8) goto LAB_0003ef48;\n                  pcVar5 = pcVar5 + 1;\n                  pcVar12 = pcVar12 + 1;\n                } while (*pcVar5 == *pcVar12);\n              }\n              uVar10 = (1 - __n) + uVar10 + sVar8;\n            }\n            else {\nLAB_0003ef48:\n              if (iVar11 == -1) {\nLAB_0003ef8c:\n                return (void *)((int)pvVar2 + uVar10);\n              }\n              pcVar12 = (char *)((int)pvVar2 + iVar11 + uVar10);\n              pcVar5 = (char *)((int)__needle + iVar11);\n              if (*(char *)((int)pvVar2 + iVar11 + uVar10) == *(char *)((int)__needle + iVar11)) {\n                do {\n                  if (pcVar5 == (char *)__needle) goto LAB_0003ef8c;\n                  pcVar5 = pcVar5 + -1;\n                  pcVar12 = pcVar12 + -1;\n                } while (*pcVar5 == *pcVar12);\n              }\n              uVar10 = uVar10 + uVar4 + 1;\n            }\n          } while (uVar10 <= uVar9 - __needlelen);\n        }\n      }\n    }\n    __haystack = (void *)0x0;\n  }\n  return __haystack;\n}\n\n",
    "memmove": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "memset": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "mkdir": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mkdir(char *__path,__mode_t __mode)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "mmap64": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * mmap64(void *__addr,size_t __len,int __prot,int __flags,int __fd,__off64_t __offset)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "munmap": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint munmap(void *__addr,size_t __len)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "open64": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint open64(char *__file,int __oflag,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "openlog": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid openlog(char *__ident,int __option,int __facility)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "pclose": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pclose(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "perror": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid perror(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "popen": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * popen(char *__command,char *__modes)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "prctl": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint prctl(int __option,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "printf": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint printf(char *__format,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "pthread_attr_init": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pthread_attr_init(pthread_attr_t *__attr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "pthread_attr_setstacksize": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pthread_attr_setstacksize(pthread_attr_t *__attr,size_t __stacksize)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "pthread_cancel": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pthread_cancel(pthread_t __th)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "pthread_cond_destroy": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pthread_cond_destroy(pthread_cond_t *__cond)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "pthread_cond_init": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pthread_cond_init(pthread_cond_t *__cond,pthread_condattr_t *__cond_attr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "pthread_cond_signal": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pthread_cond_signal(pthread_cond_t *__cond)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "pthread_cond_timedwait": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pthread_cond_timedwait(pthread_cond_t *__cond,pthread_mutex_t *__mutex,timespec *__abstime)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "pthread_cond_wait": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pthread_cond_wait(pthread_cond_t *__cond,pthread_mutex_t *__mutex)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "pthread_create": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pthread_create(pthread_t *__newthread,pthread_attr_t *__attr,__start_routine *__start_routine,\n                  void *__arg)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "pthread_detach": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pthread_detach(pthread_t __th)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "pthread_getspecific": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * pthread_getspecific(pthread_key_t __key)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "pthread_join": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pthread_join(pthread_t __th,void **__thread_return)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "pthread_key_create": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pthread_key_create(pthread_key_t *__key,__destr_function *__destr_function)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "pthread_mutex_destroy": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pthread_mutex_destroy(pthread_mutex_t *__mutex)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "pthread_mutex_init": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pthread_mutex_init(pthread_mutex_t *__mutex,pthread_mutexattr_t *__mutexattr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "pthread_mutex_lock": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pthread_mutex_lock(pthread_mutex_t *__mutex)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "pthread_mutex_trylock": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pthread_mutex_trylock(pthread_mutex_t *__mutex)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "pthread_mutex_unlock": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pthread_mutex_unlock(pthread_mutex_t *__mutex)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "pthread_rwlock_destroy": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pthread_rwlock_destroy(pthread_rwlock_t *__rwlock)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "pthread_rwlock_init": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pthread_rwlock_init(pthread_rwlock_t *__rwlock,pthread_rwlockattr_t *__attr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "pthread_rwlock_rdlock": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pthread_rwlock_rdlock(pthread_rwlock_t *__rwlock)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "pthread_rwlock_unlock": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pthread_rwlock_unlock(pthread_rwlock_t *__rwlock)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "pthread_rwlock_wrlock": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pthread_rwlock_wrlock(pthread_rwlock_t *__rwlock)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "pthread_self": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\npthread_t pthread_self(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "pthread_setcancelstate": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pthread_setcancelstate(int __state,int *__oldstate)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "pthread_setcanceltype": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pthread_setcanceltype(int __type,int *__oldtype)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "pthread_setspecific": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pthread_setspecific(pthread_key_t __key,void *__pointer)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "pthread_testcancel": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid pthread_testcancel(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "puts": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint puts(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "qsort": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid qsort(void *__base,size_t __nmemb,size_t __size,__compar_fn_t __compar)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "raise": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint raise(int __sig)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "random": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nlong random(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "read": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t read(int __fd,void *__buf,size_t __nbytes)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "realloc": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "recv": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t recv(int __fd,void *__buf,size_t __n,int __flags)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "recvfrom": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t recvfrom(int __fd,void *__buf,size_t __n,int __flags,sockaddr *__addr,socklen_t *__addr_len)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "rename": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint rename(char *__old,char *__new)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "round": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ndouble round(double __x)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "sched_yield": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sched_yield(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "sem_destroy": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sem_destroy(sem_t *__sem)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "sem_init": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sem_init(sem_t *__sem,int __pshared,uint __value)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "sem_post": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sem_post(sem_t *__sem)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "sem_timedwait": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sem_timedwait(sem_t *__sem,timespec *__abstime)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "sem_trywait": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sem_trywait(sem_t *__sem)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "sem_wait": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sem_wait(sem_t *__sem)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "send": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t send(int __fd,void *__buf,size_t __n,int __flags)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "setsockopt": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint setsockopt(int __fd,int __level,int __optname,void *__optval,socklen_t __optlen)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "sigaction": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sigaction(int __sig,sigaction *__act,sigaction *__oact)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "sigemptyset": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sigemptyset(sigset_t *__set)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "sleep": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nuint sleep(uint __seconds)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "snprintf": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint snprintf(char *__s,size_t __maxlen,char *__format,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "socket": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint socket(int __domain,int __type,int __protocol)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "sprintf": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sprintf(char *__s,char *__format,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "sqrt": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ndouble sqrt(double __x)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "srandom": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid srandom(uint __seed)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "sscanf": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sscanf(char *__s,char *__format,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "stpcpy": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * stpcpy(char *__dest,char *__src)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "strcasecmp": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strcasecmp(char *__s1,char *__s2)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "strcat": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strcat(char *__dest,char *__src)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "strchr": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "strcmp": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strcmp(char *__s1,char *__s2)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "strcpy": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strcpy(char *__dest,char *__src)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "strcspn": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strcspn(char *__s,char *__reject)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "strerror": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strerror(int __errnum)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "strftime": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strftime(char *__s,size_t __maxsize,char *__format,tm *__tp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "strlen": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "strncasecmp": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncasecmp(char *__s1,char *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "strncmp": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "strncpy": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strncpy(char *__dest,char *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "strpbrk": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strpbrk(char *__s,char *__accept)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "strrchr": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "strstr": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strstr(char *__haystack,char *__needle)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "strtod": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ndouble strtod(char *__nptr,char **__endptr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "strtof": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nfloat strtof(char *__nptr,char **__endptr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "strtok": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strtok(char *__s,char *__delim)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "strtol": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nlong strtol(char *__nptr,char **__endptr,int __base)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "strtoll": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nlonglong strtoll(char *__nptr,char **__endptr,int __base)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "strtoul": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nulong strtoul(char *__nptr,char **__endptr,int __base)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "syscall": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nlong syscall(long __sysno,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "sysinfo": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sysinfo(sysinfo *__info)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "syslog": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid syslog(int __pri,char *__fmt,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "thunk_FUN_00019ab4": "\nundefined4 thunk_FUN_00019ab4(void)\n\n{\n  return DAT_0007f8bc;\n}\n\n",
    "thunk_FUN_0004672c": "\nint thunk_FUN_0004672c(uint param_1)\n\n{\n  int iVar1;\n  char *__format;\n  int iVar2;\n  undefined4 uVar3;\n  undefined2 uStack_82c;\n  undefined4 uStack_828;\n  undefined4 uStack_824;\n  undefined4 uStack_820;\n  undefined4 uStack_81c;\n  char acStack_818 [2052];\n  \n  if (0xf < param_1) {\n    snprintf(acStack_818,0x800,\"%s: Bad pic param, input chain is %d\\n\",\"enable_dc_dc\",param_1);\n    FUN_0002e584(0,acStack_818);\n    return -0x7ffffdff;\n  }\n  if ((*(int *)(&DAT_0099ee4c + param_1 * 8) == 0) && (iVar1 = FUN_00046024(), iVar1 < 0)) {\n    snprintf(acStack_818,0x800,\"%s: auto exec open_pic, but chain %d open eeprom failed\\n\",\n             \"enable_dc_dc\",param_1);\n    FUN_0002e584(0,acStack_818,0);\n    return iVar1;\n  }\n  uVar3 = *(undefined4 *)(&DAT_0099ee48 + param_1 * 8);\n  iVar2 = 0;\n  pthread_mutex_lock((pthread_mutex_t *)&DAT_0050514c);\n  uStack_828 = 0x1505aa55;\n  uStack_820 = 0;\n  uStack_81c = 0;\n  uStack_82c = 0;\n  uStack_824 = 0x1b0001;\n  iVar1 = FUN_0004966c(uVar3);\n  if (iVar1 == 7) {\n    usleep(300000);\n    iVar1 = FUN_000495e4(uVar3,&uStack_82c,2);\n    if (iVar1 != 2) {\n      __format = \"%s read iic err\\n\";\n      goto LAB_00046864;\n    }\n    if (((byte)uStack_82c == 0x15) && (uStack_82c._1_1_ == 1)) goto LAB_00046800;\n    snprintf(acStack_818,0x800,\n             \"%s failed! read_back_data[0] = 0x%02x, read_back_data[1] = 0x%02x\\n\\n\",\n             \"_bitmain_pic_enable_dc_dc_common\",(uint)(byte)uStack_82c,(uint)uStack_82c._1_1_);\n    FUN_0002e584(0,acStack_818);\n  }\n  else {\n    __format = \"%s write iic err\\n\";\nLAB_00046864:\n    snprintf(acStack_818,0x800,__format);\n    FUN_0002e584(0,acStack_818,0);\n  }\n  iVar2 = -0x7ffffe00;\nLAB_00046800:\n  pthread_mutex_unlock((pthread_mutex_t *)&DAT_0050514c);\n  return iVar2;\n}\n\n",
    "thunk_FUN_00046900": "\nint thunk_FUN_00046900(uint param_1)\n\n{\n  int iVar1;\n  char *__format;\n  int iVar2;\n  undefined4 uVar3;\n  undefined2 uStack_82c;\n  undefined4 uStack_828;\n  undefined4 uStack_824;\n  undefined4 uStack_820;\n  undefined4 uStack_81c;\n  char acStack_818 [2052];\n  \n  if (0xf < param_1) {\n    snprintf(acStack_818,0x800,\"%s: Bad pic param, input chain is %d\\n\",\"disable_dc_dc\",param_1);\n    FUN_0002e584(0,acStack_818);\n    return -0x7ffffdff;\n  }\n  if ((*(int *)(&DAT_0099ee4c + param_1 * 8) == 0) && (iVar1 = FUN_00046024(), iVar1 < 0)) {\n    snprintf(acStack_818,0x800,\"%s: auto exec open_pic, but chain %d open eeprom failed\\n\",\n             \"disable_dc_dc\",param_1);\n    FUN_0002e584(0,acStack_818,0);\n    return iVar1;\n  }\n  uVar3 = *(undefined4 *)(&DAT_0099ee48 + param_1 * 8);\n  iVar2 = 0;\n  pthread_mutex_lock((pthread_mutex_t *)&DAT_0050514c);\n  uStack_828 = 0x1505aa55;\n  uStack_820 = 0;\n  uStack_81c = 0;\n  uStack_82c = 0;\n  uStack_824 = 0x1a0000;\n  iVar1 = FUN_0004966c(uVar3);\n  if (iVar1 == 7) {\n    usleep(300000);\n    iVar1 = FUN_000495e4(uVar3,&uStack_82c,2);\n    if (iVar1 != 2) {\n      __format = \"%s read iic err\\n\";\n      goto LAB_00046a30;\n    }\n    if (((byte)uStack_82c == 0x15) && (uStack_82c._1_1_ == 1)) goto LAB_000469cc;\n    snprintf(acStack_818,0x800,\n             \"%s failed! read_back_data[0] = 0x%02x, read_back_data[1] = 0x%02x\\n\\n\",\n             \"_bitmain_pic_disable_dc_dc_common\",(uint)(byte)uStack_82c,(uint)uStack_82c._1_1_);\n    FUN_0002e584(0,acStack_818);\n  }\n  else {\n    __format = \"%s write iic err\\n\";\nLAB_00046a30:\n    snprintf(acStack_818,0x800,__format);\n    FUN_0002e584(0,acStack_818,0);\n  }\n  iVar2 = -0x7ffffe00;\nLAB_000469cc:\n  pthread_mutex_unlock((pthread_mutex_t *)&DAT_0050514c);\n  return iVar2;\n}\n\n",
    "thunk_FUN_0004fe70": "\nundefined4 thunk_FUN_0004fe70(undefined4 param_1)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined auStack_10 [8];\n  \n  iVar1 = FUN_00051e08(auStack_10);\n  if (iVar1 == 0) {\n    uVar2 = FUN_00051e54(param_1,auStack_10,5);\n  }\n  else {\n    uVar2 = 0xffffffff;\n  }\n  return uVar2;\n}\n\n",
    "thunk_FUN_0005198c": "\nundefined4 thunk_FUN_0005198c(uint param_1)\n\n{\n  undefined *__dest;\n  undefined *puVar1;\n  uint uVar2;\n  \n  if (param_1 < 4) {\n    uVar2 = 0;\n    do {\n      if (param_1 == uVar2) {\n        __dest = &DAT_005059e0 + param_1 * 0x20000;\n        do {\n          puVar1 = __dest + 0x200;\n          memcpy(__dest,&DAT_0007f588,0x200);\n          __dest = puVar1;\n        } while (puVar1 != (undefined *)(param_1 * 0x20000 + 0x5259e0));\n        memcpy(&DAT_005051c8 + param_1 * 0x200,&DAT_0007f588,0x200);\n      }\n      uVar2 = uVar2 + 1;\n    } while (uVar2 != 4);\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
    "time": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ntime_t time(time_t *__timer)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "unlink": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint unlink(char *__name)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "usleep": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint usleep(__useconds_t __useconds)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "vfprintf": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint vfprintf(FILE *__s,char *__format,__gnuc_va_list __arg)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "vsnprintf": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint vsnprintf(char *__s,size_t __maxlen,char *__format,__gnuc_va_list __arg)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n",
    "write": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t write(int __fd,void *__buf,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n"
}
